<?xml version="1.0" encoding="ISO-8859-1"?>

<bugs>
	<bug>
		<id>2021</id>
		<title>MB-Generator利用Freemarker生成Kotlin类的常量时候报错</title>
		<body>### 当前使用版本(必须填写清楚，否则不予处理)  3.3.0  ### 该问题是怎么引起的？**([最新版](https://search.maven.org/search?q=g:com.baomidou%20a:mybatis-*)上已修复的会直接**close**掉)**    ### 重现步骤 1. 代码生成的时候，设置生成kotlin类`gc.isKotlin = true` 2. 生成字段常量：`strategy.isEntityColumnConstant=true` 3. 使用Freemarkder模板引擎`mpg.templateEngine = FreemarkerTemplateEngine()`   ### 报错信息  ``` 十二月 30, 2019 4:14:09 下午 freemarker.log._JULLoggerFactory$JULLogger error 严重: Error executing FreeMarker template FreeMarker template error: For "." left-hand operand: Expected a hash, but this has evaluated to a string (wrapper: f.t.SimpleScalar): ==&gt; field.name  [in template "templates/entity.kt.ftl" at line 88, column 21]  ---- FTL stack trace ("~" means nesting-related): - Failed at: ${field.name.toUpperCase()}  [in template "templates/entity.kt.ftl" at line 88, column 19] ----  Java stack trace (for programmers): ---- freemarker.core.NonHashException: [... Exception message was already printed; see it above ...] at freemarker.core.Dot._eval(Dot.java:48) at freemarker.core.Expression.eval(Expression.java:101) at freemarker.core.MethodCall._eval(MethodCall.java:55) at freemarker.core.Expression.eval(Expression.java:101) at freemarker.core.DollarVariable.calculateInterpolatedStringOrMarkup(DollarVariable.java:100) at freemarker.core.DollarVariable.accept(DollarVariable.java:63) at freemarker.core.Environment.visit(Environment.java:367) at freemarker.core.IteratorBlock$IterationContext.executedNestedContentForCollOrSeqListing(IteratorBlock.java:321) at freemarker.core.IteratorBlock$IterationContext.executeNestedContent(IteratorBlock.java:271) at freemarker.core.IteratorBlock$IterationContext.accept(IteratorBlock.java:244) at freemarker.core.Environment.visitIteratorBlock(Environment.java:643) at freemarker.core.IteratorBlock.acceptWithResult(IteratorBlock.java:108) at freemarker.core.IteratorBlock.accept(IteratorBlock.java:94) at freemarker.core.Environment.visit(Environment.java:331) at freemarker.core.Environment.visit(Environment.java:337) at freemarker.core.Environment.visit(Environment.java:337) at freemarker.core.Environment.process(Environment.java:310) at freemarker.template.Template.process(Template.java:383) at com.baomidou.mybatisplus.generator.engine.FreemarkerTemplateEngine.writer(FreemarkerTemplateEngine.java:52) at com.baomidou.mybatisplus.generator.engine.AbstractTemplateEngine.batchOutput(AbstractTemplateEngine.java:91) at com.baomidou.mybatisplus.generator.AutoGenerator.execute(AutoGenerator.java:103) at club.hicode.ktsp.generate.MPGenertorKt.main(MPGenertor.kt:136) at club.hicode.ktsp.generate.MPGenertorKt.main(MPGenertor.kt)  16:14:09.326 [main] ERROR com.baomidou.mybatisplus.generator.engine.AbstractTemplateEngine - 无法创建文件，请检查配置信息！ freemarker.core.NonHashException: For "." left-hand operand: Expected a hash, but this has evaluated to a string (wrapper: f.t.SimpleScalar): ==&gt; field.name  [in template "templates/entity.kt.ftl" at line 88, column 21]  ---- FTL stack trace ("~" means nesting-related): - Failed at: ${field.name.toUpperCase()}  [in template "templates/entity.kt.ftl" at line 88, column 19] ---- at freemarker.core.Dot._eval(Dot.java:48) at freemarker.core.Expression.eval(Expression.java:101) at freemarker.core.MethodCall._eval(MethodCall.java:55) at freemarker.core.Expression.eval(Expression.java:101) at freemarker.core.DollarVariable.calculateInterpolatedStringOrMarkup(DollarVariable.java:100) at freemarker.core.DollarVariable.accept(DollarVariable.java:63) at freemarker.core.Environment.visit(Environment.java:367) at freemarker.core.IteratorBlock$IterationContext.executedNestedContentForCollOrSeqListing(IteratorBlock.java:321) at freemarker.core.IteratorBlock$IterationContext.executeNestedContent(IteratorBlock.java:271) at freemarker.core.IteratorBlock$IterationContext.accept(IteratorBlock.java:244) at freemarker.core.Environment.visitIteratorBlock(Environment.java:643) at freemarker.core.IteratorBlock.acceptWithResult(IteratorBlock.java:108) at freemarker.core.IteratorBlock.accept(IteratorBlock.java:94) at freemarker.core.Environment.visit(Environment.java:331) at freemarker.core.Environment.visit(Environment.java:337) at freemarker.core.Environment.visit(Environment.java:337) at freemarker.core.Environment.process(Environment.java:310) at freemarker.template.Template.process(Template.java:383) at com.baomidou.mybatisplus.generator.engine.FreemarkerTemplateEngine.writer(FreemarkerTemplateEngine.java:52) at com.baomidou.mybatisplus.generator.engine.AbstractTemplateEngine.batchOutput(AbstractTemplateEngine.java:91) at com.baomidou.mybatisplus.generator.AutoGenerator.execute(AutoGenerator.java:103) at club.hicode.ktsp.generate.MPGenertorKt.main(MPGenertor.kt:136) at club.hicode.ktsp.generate.MPGenertorKt.main(MPGenertor.kt) ``` </body>
		<created>2019-12-30 08:15:01</created>
		<closed>2020-01-16 14:46:18</closed>
	</bug>
	<bug>
		<id>1942</id>
		<title>3.3.0版本代码生成器setExclude报空指针</title>
		<body>### 当前使用版本(必须填写清楚，否则不予处理)  &lt;dependency&gt;     &lt;groupId&gt;com.baomidou&lt;/groupId&gt;     &lt;artifactId&gt;mybatis-plus-generator&lt;/artifactId&gt;     &lt;version&gt;3.3.0&lt;/version&gt; &lt;/dependency&gt;  ### 该问题是怎么引起的？**([最新版](https://search.maven.org/search?q=g:com.baomidou%20a:mybatis-*)上已修复的会直接**close**掉)**  生成代码  ### 重现步骤  在StrategyConfig中设置排除表名： strategy.setExclude("flyway_version");  ### 报错信息  报空指针  ### 源码分析 `if (isInclude) {                     sql.append(" AND ").append(this.dbQuery.tableName()).append(" IN (").append((String)Arrays.stream(config.getInclude()).map((tb) -&gt; {                         return "'" + tb + "'";                     }).collect(Collectors.joining(","))).append(")");                 } else if (isExclude) {                     sql.append(" AND ").append(this.dbQuery.tableName()).append(" NOT IN (").append((String)Arrays.stream(config.getInclude()).map((tb) -&gt; {                         return "'" + tb + "'";                     }).collect(Collectors.joining(","))).append(")");                 }` &gt; 在exclude的判断中，config.getInclude()报空指针，是个比较明显的错误，应该为config.getExclude()。 </body>
		<created>2019-12-11 01:52:00</created>
		<closed>2020-01-16 14:46:17</closed>
	</bug>
	<bug>
		<id>1918</id>
		<title>3.3.0 对于is开头的字段判断错误，导致list查询报错</title>
		<body>### 当前使用版本(必须填写清楚，否则不予处理)  3.3.0  ### 该问题是怎么引起的？  ![TIM图片20191206201736](https://user-images.githubusercontent.com/18638322/70322611-85932d00-1865-11ea-952a-e00908d59d35.png)  3.3.0新增了这个方法来获取字段，导致is开头的字段，获取方法名和lambok对不上  ### 重现步骤  如果字段是is开头的话，list查询会报错 lambok自动编译出来的是getIsXXX，比如我的字段是isSystem，lambok生成的是getIsSystem ![TIM图片20191206201826](https://user-images.githubusercontent.com/18638322/70322638-99d72a00-1865-11ea-84e3-17cb4255d2bb.png) ![TIM图片20191206201830](https://user-images.githubusercontent.com/18638322/70322640-9a6fc080-1865-11ea-963e-f7b4844bb5aa.png)  ### 报错信息 ![TIM图片20191206201857](https://user-images.githubusercontent.com/18638322/70322655-a65b8280-1865-11ea-8781-345d3fdce417.png) </body>
		<created>2019-12-06 12:16:50</created>
		<closed>2020-01-16 14:46:15</closed>
	</bug>
	<bug>
		<id>1781</id>
		<title>updateBatchById  更新后没有将mybatis的二级缓存清除。</title>
		<body>### 当前使用版本(必须填写清楚，否则不予处理)    ### 该问题是怎么引起的？**([最新版](https://search.maven.org/search?q=g:com.baomidou%20a:mybatis-*)上已修复的会直接**close**掉)**  v3.1.2  ### 重现步骤  updateBatchById  更新后没有将mybatis的二级缓存清除。  ### 报错信息   </body>
		<created>2019-11-07 10:27:17</created>
		<closed>2019-12-06 02:36:08</closed>
	</bug>
	<bug>
		<id>1186</id>
		<title>'doTableFilter(tablename)' bug on use 'tenant_id' column</title>
		<body>### 当前使用版本(必须填写清楚，否则不予处理) 3.1.1   ### 该问题是怎么引起的？**([最新版](https://search.maven.org/search?q=g:com.baomidou%20a:mybatis-*)上已修复的会直接**close**掉)** telent_id    ### 重现步骤 如果doTableFilter(tablename)开启a表过滤 demo1: select a.id,b.name from a join b on a.id = b.id demo2: select a.id,b.name from b join a on a.id = b.id - demo1会不再给b表添加tenan_id - demo2会过滤掉a表同时也会给b表添加tenant_id 是过滤的时候break掉了吗?  ### 报错信息 无报错  </body>
		<created>2019-05-27 02:20:49</created>
		<closed>2019-08-06 06:01:51</closed>
	</bug>
	<bug>
		<id>1160</id>
		<title>3.x和2.x PaginationInterceptor.java 分页组件，当sql 里 同时存在group by 和order by，且IPage 参数中存在排序属性时，拼接出来的sql会出现两个order by</title>
		<body>### 当前使用版本(必须填写清楚，否则不予处理) 3.1.1和2.x均存在此问题  ### 该问题是怎么引起的？**([最新版](https://search.maven.org/search?q=g:com.baomidou%20a:mybatis-*)上已修复的会直接**close**掉)**  PaginationInterceptor.java 分页组件，当sql 里 同时存在group by 和order by，且IPage 参数中存在排序属性(page.ascs()有内容)时，拼接出来的sql会出现两个order by，导致语法错误 183行 String buildSql = concatOrderBy(originalSql, page, orderBy); 建议改为  String buildSql = SqlUtils.concatOrderBy(originalSql, page, !originalSql.toUpperCase().contains(" ORDER BY ")); ，当sql中存在order by ，忽略IPage 中的排序属性 ### 重现步骤    ### 报错信息   </body>
		<created>2019-05-21 10:17:22</created>
		<closed>2019-06-04 02:36:08</closed>
	</bug>
	<bug>
		<id>1131</id>
		<title>分页查询 多添加了一个order by语句</title>
		<body>### 当前使用版本(必须填写清楚，否则不予处理) &lt;mybatis.spring.boot.version&gt;1.3.0&lt;/mybatis.spring.boot.version&gt;  &lt;mybatis.plus.version&gt;2.1.9&lt;/mybatis.plus.version&gt;  &lt;mybatis.mapper.stater&gt;1.1.1&lt;/mybatis.mapper.stater&gt;   ### 该问题是怎么引起的？**([最新版](https://search.maven.org/search?q=g:com.baomidou%20a:mybatis-*)上已修复的会直接**close**掉)**    ### 重现步骤 ![image](https://user-images.githubusercontent.com/37574890/57612753-fa400a80-75a7-11e9-9745-58a45bcef2ed.png)  执行page.setRecords(baseMapper.selectPage(page, wrapper));   ### 报错信息 ### SQL: SELECT  id AS id,userId,userName,signTime,imgUrl,shopId,channelId,appendPicOne,appendPicTwo,appendPicThree,createId,createDate,updateId,updateDate,delFlag,remark,tenantId  FROM sys_sign   WHERE  (signTime &gt;= ?)  AND (signTime &lt;= ?)  AND (1 = ? AND tenantId = ? AND delFlag &lt;&gt; ?) GROUP BY userId ORDER BY createDate DESC ORDER BY createDate DESC LIMIT 0,20 ### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'ORDER BY createDate DESC LIMIT 0,20' at line 6 ; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'ORDER BY createDate DESC LIMIT 0,20' at line 6  </body>
		<created>2019-05-13 09:55:57</created>
		<closed>2019-06-07 08:33:06</closed>
	</bug>
	<bug>
		<id>1077</id>
		<title>多次调用同一个分页方法，修改分页参数。返回结果都是一样的</title>
		<body>### 当前使用版本(必须填写清楚，否则不予处理) 3.1.1   ### 该问题是怎么引起的？**([最新版](https://search.maven.org/search?q=g:com.baomidou%20a:mybatis-*)上已修复的会直接**close**掉)**  多次调用同一个分页方法，修改分页参数。返回结果都是一样的   ### 重现步骤     @PostMapping(value = "/getAdmin")     @ApiOperation(value = "mybatis-plus", notes = "测试")     @Transactional     public Object getAdmin(@RequestParam(required = false) Long id) throws Exception {         Admin admin = new Admin();         Avo  ab = new Avo ();         ab.setPage(true);         ab.setDesc("id");         ab.setSize(2);         List&lt;Admin&gt; admins = testDao.getAdminList(ab);         Avo d = new Avo ();         d.setPage(true);         d.setDesc("id");         d.setSize(3);         LyricsPage&lt;Admin&gt; adminPage=new LyricsPage&lt;&gt;();         adminPage.setSize(3);         Object a = testDao.selectPage(adminPage,new QueryWrapper&lt;&gt;(new Admin()));         LyricsPage&lt;Admin&gt; ad =new LyricsPage&lt;&gt;();         ad.setSize(10);         Object b = testDao.selectPage(ad,new QueryWrapper&lt;&gt;(new Admin()));         return admins;     }  ![image](https://user-images.githubusercontent.com/42630469/56883870-8aeff400-6a9a-11e9-8245-d8f203d5b711.png)  ### 报错信息   </body>
		<created>2019-04-29 08:19:36</created>
		<closed>2019-06-11 15:04:28</closed>
	</bug>
	<bug>
		<id>827</id>
		<title>mybatis-plus 全局模式配置kotlin模式下swagger模式无效</title>
		<body>### 当前使用版本(必须填写清楚，否则不予处理) mybatis-plus-generator 3.0.6  ### 该问题是怎么引起的？**([最新版](https://search.maven.org/search?q=mybatis-plus)上已修复的会直接**close**掉)** 在generator 全局配置中同时将配置swagger和kotlin设置为true swagger不生效  ### 重现步骤    ### 报错信息   </body>
		<created>2019-01-26 06:07:16</created>
		<closed>2019-02-21 03:19:19</closed>
	</bug>
	<bug>
		<id>772</id>
		<title>自动生成代码，实体类继承自定义baseEntity问题</title>
		<body>### 当前使用版本(必须填写清楚，否则不予处理)  3.0.6  ### 该问题是怎么引起的？**([最新版](https://search.maven.org/search?q=mybatis-plus)上已修复的会直接**close**掉)**  生成的实体类，没有导入java.io.Serializable包  ### 重现步骤 1. 配置开启gc.setActiveRecord(true); 2. 配置继承父类strategy.setSuperEntityClass("base.domain.BaseDO"); ```java public class BaseDO&lt;T extends Model&gt; extends Model&lt;T&gt;{} ``` 这样的话，生成的实体类是没有Serializable包的 是不是这个问题：查看源码 ![image](https://user-images.githubusercontent.com/19304825/50682453-d729ab00-1049-11e9-821e-e47289d2a76d.png)  ### 报错信息 ![image](https://user-images.githubusercontent.com/19304825/50682020-764da300-1048-11e9-9b07-ff3424c61654.png) </body>
		<created>2019-01-04 09:50:53</created>
		<closed>2019-02-21 02:01:18</closed>
	</bug>
	<bug>
		<id>534</id>
		<title>SpringMVC无法编译，报空指针异常</title>
		<body>### 当前使用版本 ```xml &lt;dependency&gt;       &lt;groupId&gt;com.baomidou&lt;/groupId&gt;       &lt;artifactId&gt;mybatis-plus&lt;/artifactId&gt;       &lt;version&gt;3.0.4&lt;/version&gt; &lt;/dependency&gt; ```  ### 重现步骤 由2.3更新至3.0.4后按照文档对原先代码进行部分修改，修改后，发现无法进行编译。 使用代码生成entity,service,mapper,controller,生成代码如下 ```java public class MpCodeGenerator {    public static void main(String[] args) {     String packageName = "cn.ghy";     generateByTables(packageName, "file", "user");   }    public static void generateByTables(String packageName, String... tableNames) {      final String projectPath = System.getProperty("user.dir");      GlobalConfig globalConfig = new GlobalConfig().setOutputDir(projectPath + "/src/main/java")         .setAuthor("Ziyang").setFileOverride(false).setOpen(false).setServiceName("%sService");      DataSourceConfig dataSourceConfig = new DataSourceConfig().setUrl(         "jdbc:mysql://localhost:3306/larva?useUnicode=true&amp;characterEncoding=utf-8&amp;serverTimezone=UTC&amp;useSSL=false")         .setUsername("root").setPassword("root").setDriverName("com.mysql.cj.jdbc.Driver");      StrategyConfig strategyConfig = new StrategyConfig().setCapitalMode(true)         .setRestControllerStyle(true)         .setNaming(NamingStrategy.underline_to_camel)         .setInclude(tableNames)         .setControllerMappingHyphenStyle(true);      final PackageConfig packageConfig = new PackageConfig().setParent(packageName);      TemplateConfig templateConfig = new TemplateConfig().setXml(null);      InjectionConfig injectionConfig = new InjectionConfig() {       @Override       public void initMap() {        }     };     List&lt;FileOutConfig&gt; fileOutConfigs = new ArrayList&lt;&gt;();     fileOutConfigs.add(new FileOutConfig("/templates/mapper.xml.ftl") {       @Override       public String outputFile(TableInfo tableInfo) {         // 自定义输入文件名称         return projectPath + "/src/main/resources/mapper/" + "/" + tableInfo.getEntityName()             + "Mapper.xml";       }     });     injectionConfig.setFileOutConfigList(fileOutConfigs);      AutoGenerator autoGenerator = new AutoGenerator().setGlobalConfig(globalConfig)         .setDataSource(dataSourceConfig).setStrategy(strategyConfig).setPackageInfo(packageConfig)         .setCfg(injectionConfig).setTemplate(templateConfig)         .setTemplateEngine(new FreemarkerTemplateEngine());      autoGenerator.execute();   } } ``` mybatis配置文件如下 ```xml &lt;?xml version="1.0" encoding="UTF-8"?&gt; &lt;beans xmlns="http://www.springframework.org/schema/beans"   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"   xmlns:context="http://www.springframework.org/schema/context"   xsi:schemaLocation="http://www.springframework.org/schema/beans                         http://www.springframework.org/schema/beans/spring-beans-3.1.xsd                         http://www.springframework.org/schema/context                         http://www.springframework.org/schema/context/spring-context-3.1.xsd"&gt;   &lt;!-- Spring Auto scanning components --&gt;   &lt;context:component-scan base-package="cn.ghy.service"/&gt;    &lt;!-- 引入配置文件 --&gt;   &lt;bean id="propertyConfigurer"     class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer"&gt;     &lt;property name="location" value="classpath:jdbc.properties"/&gt;   &lt;/bean&gt;   &lt;!--数据库连接池--&gt;   &lt;bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close"&gt;     &lt;property name="driverClassName" value="${jdbc.driverClass}"/&gt;     &lt;property name="url" value="${jdbc.connectionURL}"/&gt;     &lt;property name="username" value="${jdbc.username}"/&gt;     &lt;property name="password" value="${jdbc.password}"/&gt;     &lt;!-- 初始化连接大小 --&gt;     &lt;property name="initialSize" value="${jdbc.initialSize}"/&gt;     &lt;!-- 连接池最大数量 --&gt;     &lt;property name="maxActive" value="${jdbc.maxActive}"/&gt;     &lt;!-- 连接池最大空闲 --&gt;     &lt;property name="maxIdle" value="${jdbc.maxIdle}"/&gt;     &lt;!-- 连接池最小空闲 --&gt;     &lt;property name="minIdle" value="${jdbc.minIdle}"/&gt;     &lt;!-- 获取连接最大等待时间 --&gt;     &lt;property name="maxWait" value="${jdbc.maxWait}"/&gt;   &lt;/bean&gt;    &lt;!-- SqlSessionFactory --&gt;   &lt;bean id="sqlSessionFactory"     class="com.baomidou.mybatisplus.extension.spring.MybatisSqlSessionFactoryBean"&gt;     &lt;property name="dataSource" ref="dataSource"/&gt;     &lt;property name="mapperLocations" value="classpath:/mapper/*.xml"/&gt;     &lt;!--  配置实体扫描路径，多个package可以用分号; 逗号, 分隔， 支持通配符*--&gt;     &lt;property name="typeAliasesPackage" value="cn.ghy.entity"/&gt;   &lt;/bean&gt;    &lt;!-- 配置mybatis 扫描mapper接口的路径, 相当于注解@MapperScan，@MapperScan("com.baomidou.mybatisplus.test.h2.entity.mapper")--&gt;   &lt;bean class="org.mybatis.spring.mapper.MapperScannerConfigurer"&gt;     &lt;property name="basePackage" value="cn.ghy.mapper"/&gt;   &lt;/bean&gt;   &lt;!-- 事务管理 : DataSourceTransactionManager dataSource:引用上面定义的数据源 --&gt;   &lt;bean id="transactionManager"     class="org.springframework.jdbc.datasource.DataSourceTransactionManager"&gt;     &lt;property name="dataSource" ref="dataSource"/&gt;   &lt;/bean&gt;  &lt;/beans&gt; ```  ### 报错信息 ``` Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'userServiceImpl': Unsatisfied dependency expressed through field 'baseMapper'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'userMapper' defined in file [D:\Program Files\Apache Software Foundation\Tomcat 9.0\webapps\ROOT\WEB-INF\classes\cn\ghy\mapper\UserMapper.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [spring-mybatis.xml]: Invocation of init method failed; nested exception is java.lang.NullPointerException at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:598) at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90) ```</body>
		<created>2018-10-03 16:37:44</created>
		<closed>2018-10-11 06:00:43</closed>
	</bug>
	<bug>
		<id>223</id>
		<title>全局使用驼峰命名的bug</title>
		<body>mp 的 dbColumnUnderline 表示 是否使用下划线命名，如需驼峰命名，则 false mybatis 的 mapUnderscoreToCamelCase 表示 是否开启自动驼峰命名规则，如需驼峰命名，则 true  以下代码在想全局驼峰，即dbColumnUnderline设置为 false，mapUnderscoreToCamelCase设置为 true 的时候，dbColumnUnderline又会是 true，等于又变成全局下划线了 ```          /*          * 驼峰设置 PLUS 配置 &gt; 原始配置  */         GlobalConfiguration globalCache = this.getGlobalConfig();         if (!globalCache.isDbColumnUnderline()) {             globalCache.setDbColumnUnderline(configuration.isMapUnderscoreToCamelCase());         } ```</body>
		<created>2018-01-18 08:59:09</created>
		<closed>2018-01-27 08:53:46</closed>
	</bug>
	<bug>
		<id>222</id>
		<title>分页SQL生成错误</title>
		<body>下面代码会生成错误的SQL  ```java Page&lt;Audio&gt; page = new Page&lt;&gt;(); //仅值为false时发生 page.setSearchCount(false); page.setAscs(Arrays.asList("id")); Wrapper wrapper = Condition.create().gt("id", lastId); Page&lt;Audio&gt; audioPage = audioService.selectPage(page, wrapper); ``` 异常的SQL ```sql SELECT id AS id,`name`,file_id AS fileId,author,performer,chapter,`language`,age_form AS ageForm,age_to AS ageTo,duration,update_time AS updateTime,create_time AS createTime,sys_from AS sysFrom FROM audio WHERE (id &gt; ?) ORDER BY id ASC ORDER BY id ASC LIMIT 0,10 ``` SQL后半段`ORDER BY id ASC`出现了两次 </body>
		<created>2018-01-17 07:45:53</created>
		<closed>2018-01-27 14:34:02</closed>
	</bug>
	<bug>
		<id>27</id>
		<title>关于乐观锁插件的问题</title>
		<body>1. 如果@Version注解是在父类上，是不管用的 2. 如果原来的update语句里已经有 version=? 不会重置version的值（用插件默认生成的代码就有，因为要求有@Version注解，所以update的时候会有 version = ） 3. version版本号增加的时候，逻辑有问题， 0 变成 01 1变成11,（变成字符串相加了）</body>
		<created>2017-03-30 03:18:59</created>
		<closed>2017-04-16 08:32:00</closed>
	</bug>
</bugs>
