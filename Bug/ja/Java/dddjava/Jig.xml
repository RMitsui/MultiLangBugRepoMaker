<?xml version="1.0" encoding="ISO-8859-1"?>

<bugs>
	<bug>
		<id>551</id>
		<title>区分使用図で強調されたコアとマークしたenumが強調表示されない</title>
		<body>## 不具合の内容 区分使用図で強調されたコアとマークしたenumが強調表示されない  ## 環境 - JIGのバージョン: 2020.8.1 </body>
		<created>2020-08-11 04:54:53</created>
		<closed>2020-08-14 15:12:21</closed>
	</bug>
	<bug>
		<id>529</id>
		<title>一覧の数値項目が文字列で出力されている</title>
		<body>## 不具合の内容 一覧の数値項目が文字列で出力されている ![スクリーンショット 2020-06-18 18 07 38](https://user-images.githubusercontent.com/615346/85001414-9a466b00-b18e-11ea-8a34-392fe26ac86a.png)  昇順／降順にしたときに文字列順になってしまって使えない。  ## 環境 - JIGのバージョン: 2020.6.1 </body>
		<created>2020-06-18 09:08:24</created>
		<closed>2020-06-19 19:35:37</closed>
	</bug>
	<bug>
		<id>512</id>
		<title>区分使用図：他のドメインオブジェクトから参照されない区分の扱い</title>
		<body>区分オブジェクトを、サービスクラスのメソッドが使うだけの場合、区分使用図で、区分オブジェクトとサービスの関係が表示されない。  区分オブジェクトを利用するサービスクラスのメソッドと関係づけて表示させたい。 （現在の仕様では、右側に孤立した状態で表示される） </body>
		<created>2020-05-25 23:37:17</created>
		<closed>2020-05-30 01:04:33</closed>
	</bug>
	<bug>
		<id>503</id>
		<title>サービスメソッド関連図でサービスメソッドからRepositoryへの線が複数出力される</title>
		<body>## 不具合の内容 サービスメソッド関連図でサービスメソッドからRepositoryへの線が複数出力される  サービスメソッドから同一Repositoryのメソッドを複数呼んだ場合に起こる。 Repositoryをクラス単位でまとめているので冗長な出力になっている。  Repositoryのメソッドはこのダイアグラムには表示しない。  ## 環境 - JIGのバージョン: 2020.5.15 </body>
		<created>2020-05-15 03:40:09</created>
		<closed>2020-06-06 00:11:12</closed>
	</bug>
	<bug>
		<id>495</id>
		<title>booleanを返していないメソッドが真偽値サービス関連図に出力される</title>
		<body>## 不具合の内容 booleanを返していないメソッドが真偽値サービス関連図に出力される  ## 環境 - JIGのバージョン: 2020.5.1 - 実行方法: GradlePlugin - Javaのバージョン: - - OS: - </body>
		<created>2020-05-03 06:54:32</created>
		<closed>2020-05-08 20:09:02</closed>
	</bug>
	<bug>
		<id>453</id>
		<title>ビジネスルール一覧/COLLECTIONSのメソッドリストにコンストラクタが出力されている</title>
		<body>## 不具合の内容 ビジネスルール一覧/COLLECTIONSのメソッドリストにコンストラクタが出力されている  ## 環境 - JIGのバージョン: 2020.2.2 </body>
		<created>2020-03-05 13:40:31</created>
		<closed>2020-06-19 19:35:05</closed>
	</bug>
	<bug>
		<id>408</id>
		<title>enumが1つのパッケージにしかない場合にCategoryDiagramの出力に失敗する</title>
		<body>## 不具合の内容 enumが1つのパッケージにしかない場合にCategoryDiagramの出力に失敗する  ``` CategoryDiagram の出力に失敗しました。 java.lang.NullPointerException         at org.dddjava.jig.domain.model.categories.PackageStructure.from(PackageStructure.java:46)         at org.dddjava.jig.domain.model.categories.CategoryAngles.valuesDotText(CategoryAngles.java:63)         at org.dddjava.jig.presentation.view.graphvizj.CategoryDiagram.edit(CategoryDiagram.java:22)         at org.dddjava.jig.presentation.view.graphvizj.CategoryDiagram.edit(CategoryDiagram.java:10)         at org.dddjava.jig.presentation.view.graphvizj.GraphvizjView.render(GraphvizjView.java:24)         at org.dddjava.jig.presentation.view.JigModelAndView.render(JigModelAndView.java:16)         at org.dddjava.jig.presentation.view.handler.JigDocumentHandlers.handle(JigDocumentHandlers.java:78) ```  ## 環境 - JIGのバージョン: `2019.11.3` </body>
		<created>2019-11-24 08:17:36</created>
		<closed>2019-11-24 08:31:19</closed>
	</bug>
	<bug>
		<id>393</id>
		<title>GradlePluginでimplementation指定したサブプロジェクトが出力されない</title>
		<body>## 不具合の内容 compile指定すると出力されるがimplementation指定すると出力されない  ## 環境 - JIGのバージョン: [2019.10.4 - 実行方法: [jig-gradle-plugin] - Javaのバージョン: [openjdk version "11.0.4-BellSoft" 2019-07-16] - OS: [例: macOS Catalina 10.15] </body>
		<created>2019-10-28 02:35:27</created>
		<closed>2019-10-28 02:57:34</closed>
	</bug>
	<bug>
		<id>384</id>
		<title>ダイアグラムに不要な余白がある</title>
		<body>## 不具合の内容 ダイアグラム（SVG）の右および下部に不自然な余白がある。  2019.9.2までは問題なく2019.9.3以降で発生しているため、graphviz-java 0.11.0 の影響と思われる。  ## 環境 - JIGのバージョン: 2019.9.3 以降 - 実行方法: jig-gradle-plugin - CircleCIのlinux, AppVeyorのwindows, macOS Mojave 10.14.6 </body>
		<created>2019-10-16 14:49:37</created>
		<closed>2019-10-28 05:10:55</closed>
	</bug>
	<bug>
		<id>361</id>
		<title>application.xlsxの「SERVICE」シートの「メソッド別名」項目の出力内容が正しく無いように見える</title>
		<body>## 不具合の内容 application.xlsxの「SERVICE」シートで、「同一サービス内で引数・戻り値違いの同名メソッド」の「メソッド別名」がどちらか一方に寄って出力されており、正しくないように思えます。  例えば以下のようなサービスクラスがある場合に、 ``` @Service public class XxxxxQueryService {      /**      * Xxxxxを取得      */     public Xxxxx get(XxxxxNumber number) {         ....     }      /**      * Xxxxxサマリを取得      */     public XxxxxSummary get(XxxxxNumber number, Yyyyy y) {         ....     } ``` レポート上に出る２行の「メソッド別名」が両方とも「Xxxxxを取得」になってしまう、という事象です。（そもそもメソッド名の付け方それでいいの？とか、別サービスに分けるべきでは？というのはひとまず横に置いておいてください。。。）  ## 環境 - JIGのバージョン: 2019.8.3 - 実行方法: jig-gradle-plugin - Javaのバージョン: 11.0.1-open - OS: macOS Mojave 10.14.6 </body>
		<created>2019-08-28 07:54:19</created>
		<closed>2019-08-28 09:02:13</closed>
	</bug>
	<bug>
		<id>352</id>
		<title>Gradle Kotolin DSLにて変更できないPluginの設定がある</title>
		<body>## 不具合の内容 Gradle Kotlin DSL上で変更できないPluginの設定があります。 具体的には以下のoutputOmitPrefixで、package privateであるため設定ができません。 ``` jig {     modelPattern = ".+\\.domain\\.core\\..+"     outputOmitPrefix = ".+\\.(service|domain\\.(core))\\." } ```  ## 環境 - JIGのバージョン: 2019.8.1 - 実行方法:  jig-gradle-plugin - Javaのバージョン: openjdk version "11.0.4" - OS: macOS Mojave 10.14.5 </body>
		<created>2019-08-15 01:21:20</created>
		<closed>2019-08-15 02:20:58</closed>
	</bug>
	<bug>
		<id>338</id>
		<title>ドキュメント通りの設定するとエラーになる</title>
		<body>## 不具合の内容 ``` A problem occurred evaluating root project 'jig'. &gt; Could not set unknown property 'repositoryPattern' for object of type org.dddjava.jig.gradle.JigConfig. ```  ## 環境 - JIGのバージョン: [2019.7.4] - 実行方法     - [x] jig-gradle-plugin     - [ ] jig-cli     - [ ] jig-cli-kt - Javaのバージョン: 依存しない - OS: 依存しない </body>
		<created>2019-07-31 06:30:11</created>
		<closed>2019-10-17 15:11:26</closed>
	</bug>
	<bug>
		<id>299</id>
		<title>BusinessRuleNetworkDiagramのAliasをJavadocの1行目にする</title>
		<body>https://github.com/dddjava/Jig/blob/32570d6e1589b2012c8d63a0fecdf96675a146d8/jig-core/src/main/java/org/dddjava/jig/domain/model/implementation/analyzed/alias/Alias.java#L16-L21  なんか改行で区切れてない  -&gt; できてるけど、それを使ってない。  AliasのsummarySentenceを呼べてない  けどそもそもAliasがsummary以外をもってるのがおかしい感。</body>
		<created>2019-06-12 06:30:37</created>
		<closed>2019-06-13 03:17:27</closed>
	</bug>
	<bug>
		<id>273</id>
		<title>区分ダイアグラムのレコードが歯抜けになる</title>
		<body>おそらく最初から。 `2019.1.2` でも起こっている。 環境依存。  CircleCIのDockerで出力した場合に起こっている。 https://807-121230866-gh.circle-artifacts.com/0/example/category.svg  「日本語で始まるもの」が対象っぽい？</body>
		<created>2019-05-11 04:19:43</created>
		<closed>2019-05-15 10:49:46</closed>
	</bug>
	<bug>
		<id>271</id>
		<title>Java8環境でJigドキュメントの日本語が文字化けする</title>
		<body>ResourceBundleを読んでるところ。 UTF-8で書いてるため。 実行環境としてJava8を維持するなら修正する必要がある。</body>
		<created>2019-05-10 23:14:14</created>
		<closed>2019-05-15 10:49:25</closed>
	</bug>
	<bug>
		<id>220</id>
		<title>graphviz非インストール環境でパッケージツリーダイアグラムが出力できない</title>
		<body>https://circleci.com/gh/dddjava/Jig/629  シンタックスエラーになる。</body>
		<created>2018-12-17 01:04:36</created>
		<closed>2019-01-13 07:44:03</closed>
	</bug>
	<bug>
		<id>205</id>
		<title>graphviz非インストール環境でダイアグラムが出力できない</title>
		<body>GraphvizV8Engineを使って失敗している。  ``` 2018-11-14 13:57:57.343  INFO 20360 --- [           main] ConditionEvaluationReportLoggingListener :  Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled. 2018-11-14 13:57:57.345 ERROR 20360 --- [           main] o.s.boot.SpringApplication               : Application run failed  java.lang.IllegalStateException: Failed to execute CommandLineRunner     at org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:816) [spring-boot-2.1.0.RELEASE.jar!/:2.1.0.RELEASE]     at org.springframework.boot.SpringApplication.callRunners(SpringApplication.java:797) [spring-boot-2.1.0.RELEASE.jar!/:2.1.0.RELEASE]     at org.springframework.boot.SpringApplication.run(SpringApplication.java:324) [spring-boot-2.1.0.RELEASE.jar!/:2.1.0.RELEASE]     at org.springframework.boot.SpringApplication.run(SpringApplication.java:1260) [spring-boot-2.1.0.RELEASE.jar!/:2.1.0.RELEASE]     at org.springframework.boot.SpringApplication.run(SpringApplication.java:1248) [spring-boot-2.1.0.RELEASE.jar!/:2.1.0.RELEASE]     at org.dddjava.jig.cli.CommandLineApplication.main(CommandLineApplication.java:28) [classes!/:na]     at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_111]     at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_111]     at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_111]     at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_111]     at org.springframework.boot.loader.MainMethodRunner.run(MainMethodRunner.java:48) [jig-cli.jar:na]     at org.springframework.boot.loader.Launcher.launch(Launcher.java:87) [jig-cli.jar:na]     at org.springframework.boot.loader.Launcher.launch(Launcher.java:50) [jig-cli.jar:na]     at org.springframework.boot.loader.JarLauncher.main(JarLauncher.java:51) [jig-cli.jar:na] Caused by: guru.nidi.graphviz.engine.GraphvizException: TypeError: Module.print is not a function     at guru.nidi.graphviz.engine.ResultHandler.waitFor(ResultHandler.java:42) ~[graphviz-java-0.7.0.jar!/:na]     at guru.nidi.graphviz.engine.GraphvizV8Engine$Env.execute(GraphvizV8Engine.java:91) ~[graphviz-java-0.7.0.jar!/:na]     at guru.nidi.graphviz.engine.GraphvizV8Engine.jsExecute(GraphvizV8Engine.java:67) ~[graphviz-java-0.7.0.jar!/:na]     at guru.nidi.graphviz.engine.AbstractJsGraphvizEngine.execute(AbstractJsGraphvizEngine.java:28) ~[graphviz-java-0.7.0.jar!/:na]     at guru.nidi.graphviz.engine.Graphviz.execute(Graphviz.java:186) ~[graphviz-java-0.7.0.jar!/:na]     at guru.nidi.graphviz.engine.Renderer.toString(Renderer.java:46) ~[graphviz-java-0.7.0.jar!/:na]     at guru.nidi.graphviz.engine.Renderer.toOutputStream(Renderer.java:68) ~[graphviz-java-0.7.0.jar!/:na]     at org.dddjava.jig.presentation.view.graphvizj.GraphvizjView.lambda$render$0(GraphvizjView.java:30) ~[jig-core-2018.11.2.jar!/:na]     at org.dddjava.jig.presentation.view.JigDocumentWriter.writeDiagram(JigDocumentWriter.java:37) ~[jig-core-2018.11.2.jar!/:na]     at org.dddjava.jig.presentation.view.graphvizj.GraphvizjView.render(GraphvizjView.java:26) ~[jig-core-2018.11.2.jar!/:na]     at org.dddjava.jig.presentation.view.JigModelAndView.render(JigModelAndView.java:16) ~[jig-core-2018.11.2.jar!/:na]     at org.dddjava.jig.presentation.view.handler.JigDocumentHandlers.handle(JigDocumentHandlers.java:72) ~[jig-core-2018.11.2.jar!/:na]     at org.dddjava.jig.cli.CommandLineApplication.run(CommandLineApplication.java:52) [classes!/:na]     at org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:813) [spring-boot-2.1.0.RELEASE.jar!/:2.1.0.RELEASE]     ... 13 common frames omitted ```  環境依存かと思われる。  # 回避方法  実行環境に Graphviz をインストールしてください。  # 環境確認  - Mac Sierra Java8u111 （該当環境） - Mac Mojave Java8u181 -&gt; 再現せず - Debian Java8u111（DockerHub java/8u111-jdk） -&gt; 再現せず</body>
		<created>2018-11-14 07:21:03</created>
		<closed>2019-01-13 07:44:16</closed>
	</bug>
	<bug>
		<id>182</id>
		<title>pluginsの記述でapplyできない</title>
		<body>``` plugins {     id 'java'     id 'org.dddjava.jig-gradle-plugin' version '2018.9.4' apply false } apply plugin: 'org.dddjava.jig-gradle-plugin' ```  マルチプロジェクトではない場合も上記のように書く必要がある。 pluginsでapplyしてしまうと `compileJava` がなくて怒られる。  ``` plugins {     id 'java'     id 'org.dddjava.jig-gradle-plugin' version '2018.9.4' } ``` で済ませたい。  難航するならcompileJavaの依存外してもいい気はする。（build.gradleの記述で実現できるので</body>
		<created>2018-09-28 01:15:06</created>
		<closed>2018-09-29 14:22:50</closed>
	</bug>
	<bug>
		<id>175</id>
		<title>ビジネスルール一覧でドメイン以外からの利用箇所が見えなくなっている</title>
		<body></body>
		<created>2018-09-24 03:50:38</created>
		<closed>2018-09-24 07:47:31</closed>
	</bug>
	<bug>
		<id>173</id>
		<title>コントロール一覧のパスが挙動と異なる</title>
		<body>SpringMVCでメソッドに複数マッピングあのテーションを記述した場合、最初の一つが優先される挙動になる。  例えば ``` @GetMapping("a") @PostMapping("b") void hoge() {     ... ``` は両方有効になるわけではない。（エラーにもならず警告もでないが・・・）  両方がコントローラー一覧のパスに出力されるようになっている。</body>
		<created>2018-09-23 14:41:24</created>
		<closed>2018-09-23 14:42:20</closed>
	</bug>
	<bug>
		<id>160</id>
		<title>フィールド未使用メソッドにインタフェースが出力される</title>
		<body>当然ないので出力されてもノイズなだけ。  フィールド未使用よりフィールド使用率の方がよさそう。</body>
		<created>2018-09-19 07:34:31</created>
		<closed>2018-09-23 13:41:23</closed>
	</bug>
	<bug>
		<id>157</id>
		<title>ディレクトリ作成に失敗してファイル出力ができない</title>
		<body>gradle pluginでdaemonが立ち上がっている場合に起こる。 相対パスの解釈がAPIによって変わる？  `Files#createDirectories` で意図しない場所（daemonが立ち上がった場所？）にディレクトリが作成されてしまう。 https://github.com/dddjava/Jig/blob/d29360c6634b735414487a7a2dbe6abb557e3b64/jig-core/src/main/java/org/dddjava/jig/presentation/view/handler/JigDocumentHandlers.java#L64-L67  以降の `JigDocumentWriter` などでは意図通りのファイルパスに出力しようとする。 https://github.com/dddjava/Jig/blob/d29360c6634b735414487a7a2dbe6abb557e3b64/jig-core/src/main/java/org/dddjava/jig/presentation/view/JigDocumentWriter.java#L35  結果、ディレクトリがないのでエラーとなる・・・。   ``` &gt; Task :jig-core:jigReports FAILED  FAILURE: Build failed with an exception.  * What went wrong: Execution failed for task ':jig-core:jigReports'. &gt; java.nio.file.NoSuchFileException: build/jig/jig-core/service-method-call-hierarchy.svg ```</body>
		<created>2018-09-16 17:12:17</created>
		<closed>2018-09-23 13:39:26</closed>
	</bug>
	<bug>
		<id>155</id>
		<title>Java10でビルドエラー</title>
		<body>org.dddjava.jig.gradle.IntegrationTestが落ちる。 ``` java version "10.0.2" 2018-07-17 Java(TM) SE Runtime Environment 18.3 (build 10.0.2+13) Java HotSpot(TM) 64-Bit Server VM 18.3 (build 10.0.2+13, mixed mode) ```  標準出力。 ``` &gt; Task :compileJava &gt; Task :jigReports FAILED  ================================================================================ サービスクラスが見つからないため、サービス関連図やサービス一覧が空になります。 検出には org.springframework.stereotype.Service アノテーションを使用しています。 対象のサービスクラスにアノテーションを付与してください。  より詳しい情報は https://github.com/dddjava/Jig/wiki/HELP を参照してください。 ================================================================================  FAILURE: Build failed with an exception.  * What went wrong: Execution failed for task ':jigReports'. &gt; java.nio.file.NoSuchFileException: build/jig/stub/service-method-call-hierarchy.svg ```</body>
		<created>2018-09-14 18:51:14</created>
		<closed>2018-09-17 22:55:47</closed>
	</bug>
	<bug>
		<id>151</id>
		<title>GradlePluginのクラスファイルが存在しない場合の警告メッセージ表示でエラー</title>
		<body></body>
		<created>2018-09-12 02:59:18</created>
		<closed>2018-09-12 03:28:35</closed>
	</bug>
	<bug>
		<id>144</id>
		<title>アクセス権限の無いディレクトリがCLIの実行ディレクトリ配下にあるとエラーになる</title>
		<body>cliをmacのルートディレクトリなどで実行すると簡単に起こせる。  ``` 2018-08-26 12:46:01.071 ERROR 7752 --- [           main] o.s.boot.SpringApplication               : Application run failed  java.lang.IllegalStateException: Failed to execute CommandLineRunner         at org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:800) [spring-boot-2.0.2.RELEASE.jar!/:2.0.2.RELEASE]         at org.springframework.boot.SpringApplication.callRunners(SpringApplication.java:781) [spring-boot-2.0.2.RELEASE.jar!/:2.0.2.RELEASE]         at org.springframework.boot.SpringApplication.run(SpringApplication.java:335) [spring-boot-2.0.2.RELEASE.jar!/:2.0.2.RELEASE]         at org.springframework.boot.SpringApplication.run(SpringApplication.java:1255) [spring-boot-2.0.2.RELEASE.jar!/:2.0.2.RELEASE]         at org.springframework.boot.SpringApplication.run(SpringApplication.java:1243) [spring-boot-2.0.2.RELEASE.jar!/:2.0.2.RELEASE]         at org.dddjava.jig.cli.CommandLineApplication.main(CommandLineApplication.java:28) [classes!/:na]         at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_181]         at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_181]         at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_181]         at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_181]         at org.springframework.boot.loader.MainMethodRunner.run(MainMethodRunner.java:48) [jig-cli.jar:na]         at org.springframework.boot.loader.Launcher.launch(Launcher.java:87) [jig-cli.jar:na]         at org.springframework.boot.loader.Launcher.launch(Launcher.java:50) [jig-cli.jar:na]         at org.springframework.boot.loader.JarLauncher.main(JarLauncher.java:51) [jig-cli.jar:na] Caused by: java.io.UncheckedIOException: java.nio.file.AccessDeniedException: ./usr/sbin/authserver         at java.nio.file.FileTreeIterator.fetchNextIfNeeded(FileTreeIterator.java:88) ~[na:1.8.0_181]         at java.nio.file.FileTreeIterator.hasNext(FileTreeIterator.java:104) ~[na:1.8.0_181]         at java.util.Iterator.forEachRemaining(Iterator.java:115) ~[na:1.8.0_181]         at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) ~[na:1.8.0_181]         at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:481) ~[na:1.8.0_181]         at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471) ~[na:1.8.0_181]         at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:545) ~[na:1.8.0_181]         at java.util.stream.AbstractPipeline.evaluateToArrayNode(AbstractPipeline.java:260) ~[na:1.8.0_181]         at java.util.stream.ReferencePipeline.toArray(ReferencePipeline.java:438) ~[na:1.8.0_181]         at org.dddjava.jig.infrastructure.DefaultLayout.extractClassPath(DefaultLayout.java:41) ~[jig-core-2018.8.4-SNAPSHOT.jar!/:na]         at org.dddjava.jig.infrastructure.LocalProject.getByteCodeSources(LocalProject.java:39) ~[jig-core-2018.8.4-SNAPSHOT.jar!/:na]         at org.dddjava.jig.application.service.ImplementationService.readProjectData(ImplementationService.java:38) ~[jig-core-2018.8.4-SNAPSHOT.jar!/:na]         at org.dddjava.jig.cli.CommandLineApplication.run(CommandLineApplication.java:50) [classes!/:na]         at org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:797) [spring-boot-2.0.2.RELEASE.jar!/:2.0.2.RELEASE]         ... 13 common frames omitted Caused by: java.nio.file.AccessDeniedException: ./usr/sbin/authserver         at sun.nio.fs.UnixException.translateToIOException(UnixException.java:84) ~[na:1.8.0_181]         at sun.nio.fs.UnixException.rethrowAsIOException(UnixException.java:102) ~[na:1.8.0_181]         at sun.nio.fs.UnixException.rethrowAsIOException(UnixException.java:107) ~[na:1.8.0_181]         at sun.nio.fs.UnixFileSystemProvider.newDirectoryStream(UnixFileSystemProvider.java:407) ~[na:1.8.0_181]         at java.nio.file.Files.newDirectoryStream(Files.java:457) ~[na:1.8.0_181]         at java.nio.file.FileTreeWalker.visit(FileTreeWalker.java:300) ~[na:1.8.0_181]         at java.nio.file.FileTreeWalker.next(FileTreeWalker.java:372) ~[na:1.8.0_181]         at java.nio.file.FileTreeIterator.fetchNextIfNeeded(FileTreeIterator.java:84) ~[na:1.8.0_181]         ... 26 common frames omitted ```</body>
		<created>2018-08-26 03:51:21</created>
		<closed>2018-09-11 07:24:53</closed>
	</bug>
	<bug>
		<id>140</id>
		<title>GradlePlugin側で設定できないプロパティがある</title>
		<body>jig.model.pattern jig.repository.pattern  デフォルト値は設定されているにもかかわらず取得できないという警告メッセージとなる</body>
		<created>2018-08-05 22:36:57</created>
		<closed>2018-08-09 11:05:50</closed>
	</bug>
	<bug>
		<id>138</id>
		<title>パッケージ依存関係図で出力されない関連がある</title>
		<body>少なくとも今わかっているのは次の関連 - static final なプリミティブフィールドへの参照 </body>
		<created>2018-08-03 14:24:00</created>
		<closed>2018-08-07 00:39:56</closed>
	</bug>
	<bug>
		<id>129</id>
		<title>enumの定数宣言にenumの列挙以外が出力される</title>
		<body>staticフィールドを出力しているため、列挙以外でもenumにstaticフィールドがあると出力されてしまう。 enumにstaticフィールドがあるのもどうよってのはあるが・・・それはそれとして。  enumの型の定数宣言だけにする。</body>
		<created>2018-06-19 15:09:43</created>
		<closed>2018-07-29 16:39:40</closed>
	</bug>
	<bug>
		<id>121</id>
		<title>メソッドの利用箇所がメソッド以外である場合に検出が漏れる</title>
		<body></body>
		<created>2018-06-07 09:13:58</created>
		<closed>2018-06-16 16:40:55</closed>
	</bug>
	<bug>
		<id>102</id>
		<title>サービスメソッド関連図の和名表示時にメソッド名が完全修飾になる</title>
		<body>`和名 + method(ArgumentTypes) : ReturnType` となるべきところ。</body>
		<created>2018-05-23 08:55:18</created>
		<closed>2018-05-23 08:56:37</closed>
	</bug>
	<bug>
		<id>91</id>
		<title>enumの和名が表示されない</title>
		<body></body>
		<created>2018-05-07 13:51:48</created>
		<closed>2018-05-07 13:52:39</closed>
	</bug>
	<bug>
		<id>77</id>
		<title>ENUMの使用箇所に他のコンストラクタやstaticメソッドで使用されているものが出力されない</title>
		<body>これは必要。  一覧（domain）、ダイアグラム（enum-usage）の双方。</body>
		<created>2018-04-21 18:52:19</created>
		<closed>2018-05-24 13:31:00</closed>
	</bug>
	<bug>
		<id>71</id>
		<title>MapperのCRUD出力で依存jarがクラスパスにないと読み取れない</title>
		<body>"Mapperが未知のクラスに依存しているため読み取れませんでした。" </body>
		<created>2018-04-18 04:01:23</created>
		<closed>2018-06-04 01:11:17</closed>
	</bug>
	<bug>
		<id>56</id>
		<title>Windowsでテストに失敗する</title>
		<body>``` Illegal char &lt;:&gt; at index 2: /C:/Users/haljik/Jig/jig-core/build/classes/java/test/DefaultPackageClass.class java.nio.file.InvalidPathException: Illegal char &lt;:&gt; at index 2: /C:/Users/haljik/Jig/jig-core/build/classes/java/test/DefaultPackageClass.class at sun.nio.fs.WindowsPathParser.normalize(WindowsPathParser.java:182) at sun.nio.fs.WindowsPathParser.parse(WindowsPathParser.java:153) at sun.nio.fs.WindowsPathParser.parse(WindowsPathParser.java:77) at sun.nio.fs.WindowsPath.parse(WindowsPath.java:94) at sun.nio.fs.WindowsFileSystem.getPath(WindowsFileSystem.java:255) at java.nio.file.Paths.get(Paths.java:84) at testing.TestSupport.getModuleRootPath(TestSupport.java:22) at jig.infrastructure.javaparser.JavaparserJapaneseReaderTest.パッケージ和名取得(JavaparserJapaneseReaderTest.java:30)         ... ``` </body>
		<created>2018-04-12 06:13:46</created>
		<closed>2018-04-16 08:34:49</closed>
	</bug>
	<bug>
		<id>34</id>
		<title>shellでクラス図とパッケージ図を連続で出力すると正常に動かない</title>
		<body>パッケージ図にクラス図が混ざって表示される。どこかの状態管理が変。</body>
		<created>2018-03-06 13:33:10</created>
		<closed>2018-03-24 07:32:06</closed>
	</bug>
	<bug>
		<id>19</id>
		<title>日本語名テキストに改行が入るとエラーになる</title>
		<body>改行をどう扱うかは出力都合なので PlantUmlModelNameFormatter とかその辺で対応。</body>
		<created>2018-02-18 10:16:06</created>
		<closed>2018-02-19 05:40:51</closed>
	</bug>
</bugs>
