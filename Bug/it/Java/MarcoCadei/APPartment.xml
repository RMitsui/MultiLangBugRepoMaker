<?xml version="1.0" encoding="ISO-8859-1"?>

<bugs>
	<bug>
		<id>194</id>
		<title>Problema con servizio Emilia Romagna</title>
		<body>All'apertura della pagina può capitare (mio telefono) che il numero non venga visualizzato (per via delle dimensioni dello schermo); solo che allo stato attuale non si può scrollare, perché al primo tocco la pagina si chiude</body>
		<created>2019-06-13 07:04:14</created>
		<closed>2019-06-23 13:11:52</closed>
	</bug>
	<bug>
		<id>163</id>
		<title>Gestione stati particolari task/premi dopo upgrade utente</title>
		<body>Copia del messaggio di slack in cui è stato descritto il problema: &gt; noi lo stato di task/premi l'abbiamo sempre gestito come se il ruolo di un utente fosse statico quando in realtà non lo è perché si possono fare upgrade se io ero uno slave e avevo prenotato un premio, quando mi upgradano a master succede che c'è un premio che è prenotato da un master che è una situazione che nell'app non avevamo previsto, perchè avevamo pensato che se uno è master il premio se lo piglia da solo e basta in ogni caso dobbiamo modificare l'applicazione, quindi bisogna solo decidere che strada seguire: &gt; a) quando viene fatto l'upgrade tutti i task in attesa di conferma e i premi in attesa di conferma vengono confermati automaticamente e rimossi dalle rispettive liste &gt; b) introduciamo i casi particolari in cui ad es ci possono essere premi prenotati ma non ritirati anche per i master (che può comunque succedere solo subito dopo l'upgrade); in questo caso bisogna decidere come avviene la conferma (chi può fare la conferma? solo gli altri master? solo l'utente stesso che è appena stato upgradato? entrambe, cioè tutti i quanti master?)  Ancora da decidere quale strada seguire</body>
		<created>2019-06-05 17:59:20</created>
		<closed>2019-06-06 13:39:12</closed>
	</bug>
	<bug>
		<id>162</id>
		<title>Controllo punti in fase di richiesta premi</title>
		<body>Copia del messaggio di slack in cui è stato descritto il problema: &gt;noi i punti degli slave li controlliamo quando lo slave fa la richiesta del premio, ma quindi per es se uno ha 100 punti può richiedere quanti premi vuole da 90 perché i punti non vengono veramente scalati finché un master non ne conferma uno bisogna decidere che approccio vogliamo adottare per risolvere. possibili alternative che mi vengono in mente: &gt; - ogni utente può richiedere un solo premio alla volta e finché quello non gli viene confermato non ne può richiedere un altro &gt; - si usa un meccanismo tipo quello dei conti in banca, esiste un totale di punti "veri" e un altro totale che tiene conto delle prenotazioni che viene usato per fare il controllo (così per es dopo aver prenotato un premio da 90 avrei 100 punti "veri" ma 10 punti "spendibili") &gt; - le richieste si lasciano come sono ora ma si aggiunge il controllo anche quando il master fa la conferma (in quel caso però se lo slave non ha più abbastanza punti si dovrebbe liberare il premio così che qualcun altro lo possa prenotare)  Ancora da decidere quale strada seguire fra le tre Nell'implementazione tenere conto anche di #163 </body>
		<created>2019-06-05 17:58:10</created>
		<closed>2019-06-06 14:12:54</closed>
	</bug>
	<bug>
		<id>122</id>
		<title>Apertura immagine di profilo in UserProfileActivity</title>
		<body>L'apertura dell'immagine di profilo taglia un po' l'immagine</body>
		<created>2019-05-30 08:30:46</created>
		<closed>2019-06-08 13:07:20</closed>
	</bug>
</bugs>
