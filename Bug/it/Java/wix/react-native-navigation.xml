<?xml version="1.0" encoding="ISO-8859-1"?>

<bugs>
	<bug>
		<id>6568</id>
		<title>Shared Element Transition crashes when navigating from &lt;Text&gt; to &lt;TextInput&gt;</title>
		<body>### Issue Description  The Shared Element Transition hard-crashes when trying to transition from a `&lt;Text&gt;` view to a `&lt;TextInput&gt;`.  Xcode error:  ```diff - Thread 1: Exception: "[&lt;RCTMultilineTextInputView 0x7fa12353ccd0&gt; valueForUndefinedKey:]: this class is not key value coding-compliant for the key textStorage." ```  ### Steps to Reproduce / Code Snippets / Screenshots  1. Create Screen A with `&lt;Text&gt;` component and set `nativeID` 2. Create Screen B with `&lt;TextInput&gt;` component and set `nativeID` 3. Create Shared Element Transition between those two Screens (and Views) 4. See crash  --- ### Environment * React Native Navigation version: 7.0.0 * React Native version: 0.63.2 * Platform(s) (iOS, Android, or both?): iOS </body>
		<created>2020-09-10 10:23:10</created>
		<closed>2020-09-11 08:31:55</closed>
	</bug>
	<bug>
		<id>6559</id>
		<title>[V2] Accessibility TopBar, Content, Tab Icons</title>
		<body>[V2] Accessibility TopBar, Content, Tab Icons Accessibility problem with native buttons and title bar. I do not have any way to modify or configure accesibility labels of topbar, tab icons and content  Even some weird wrapper around main content is used and TalkBack says "stacklayout" this is some internal accessibility label within android code.  ![image](https://user-images.githubusercontent.com/6625593/92608169-ef38df80-f2ac-11ea-8223-b87702a53be4.png)  So I have 4 accessibility problems:  Default top bar does not provide way to modify accessibility labels With custom top bar it says "titlebar" so problem prevails. Content is wrapped with some "stacklayout" accessibility label Configuring Tab buttons accessibility labels Suggested solution: Make layouts configurable with accessible parameters so I can pass accesiblity labels within.  Positives: On IOS platform we do not notice these problems.  Environment React Native Navigation version: 2.16.0 React Native version: 0.59.8 Platform(s) (iOS, Android, or both?): Android Device info (Simulator/Device? OS version? Debug/Release?): Samsung / Android 9.0 / Release and Debug </body>
		<created>2020-09-09 14:02:01</created>
		<closed>2020-09-10 06:47:32</closed>
	</bug>
	<bug>
		<id>6521</id>
		<title>TranslateY/TranslateX Screen push/pop Animations don't go all the way</title>
		<body>### Issue Description  When pushing a screen with translate animations (e.g. translateY from bottom to top, so `SCREEN_HEIGHT` to `0`), the screen doesn't always go all the way to the top.  ![ezgif com-video-to-gif](https://user-images.githubusercontent.com/15199031/91634323-d64c4680-e9ef-11ea-8c74-07890dd6b645.gif)  As there is a white background on GitHub, you can't really see it here. Download the GIF and watch it with a dark background. There's a small ~1 pixel spacing at the very top of the screen, so the animation doesn't fully go from `SCREEN_HEIGHT` -&gt; `0`, but rather from `SCREEN_HEIGHT` -&gt; `1` or something.   ### Steps to Reproduce / Code Snippets / Screenshots  ```ts Navigation.push(props.componentId, { component: { name: 'ProfileScreen', passProps: { user: postCreator }, options: { animations: { push: { waitForRender: true, content: { translationY: { from: Dimensions.get('window').height, to: 0, interpolation: 'decelerate', }, }, }, }, }, }, }); ```  --- ### Environment * React Native Navigation version: 6.12.2 * React Native version: 0.63.2 * Platform(s) (iOS, Android, or both?): iOS, not yet tested on Android * Device info (Simulator/Device? OS version? Debug/Release?): Simulator &amp; Device </body>
		<created>2020-08-29 10:08:42</created>
		<closed>2020-09-10 18:39:52</closed>
	</bug>
	<bug>
		<id>6506</id>
		<title>Bicolor Status Bar Bug</title>
		<body>### Issue Description  Multiple calls to `Navigation.setRoot` lead to the status bar becoming bicolor (text white, icons black).  Before             |  After :-------------------------:|:-------------------------: ![Simulator Screen Shot - iPhone SE (2nd generation) - 2020-08-24 at 15 59 16](https://user-images.githubusercontent.com/996231/91053214-cbc23380-e622-11ea-8612-1d28649c2a94.png)  |  ![Simulator Screen Shot - iPhone SE (2nd generation) - 2020-08-24 at 15 59 08](https://user-images.githubusercontent.com/996231/91053235-d1b81480-e622-11ea-9049-3321083688b3.png)  ### Steps to Reproduce / Code Snippets / Screenshots  Easily reproducible with current playground (https://github.com/wix/react-native-navigation/tree/6022f434a8b4cd4a1b03f1f9f2a13e6912b7e07e):  ```diff diff --git a/playground/src/app.ts b/playground/src/app.ts index dbe0ce1a7..4907ee482 100644 --- a/playground/src/app.ts +++ b/playground/src/app.ts @@ -26,10 +26,17 @@ function start() {    setDefaultOptions();    Navigation.events().registerAppLaunchedListener(async () =&gt; {      Navigation.dismissAllModals(); -    setRoot(); +    repeatedlyCallSetRoot();    });  }   +function repeatedlyCallSetRoot() { +  setRoot(); +  setTimeout(() =&gt; { +    repeatedlyCallSetRoot(); +  }, 5000); +} +  function setRoot() {    Navigation.setRoot({      root: {  ```  Now `Navigation.setRoot` is called every 5 seconds in the playground app, leading to the bicolor status bar.  --- ### Environment * React Native Navigation version: https://github.com/wix/react-native-navigation/tree/6022f434a8b4cd4a1b03f1f9f2a13e6912b7e07e * React Native version: 0.61.4, 0.62.2, 0.63.2 * Platform(s) (iOS, Android, or both?): iOS * Device info (Simulator/Device? OS version? Debug/Release?): iOS Simulator (iOS 13.6, XCode 11.6). Also iPhone SE 2nd (iOS 13.6, XCode 11.6, release) </body>
		<created>2020-08-24 14:04:30</created>
		<closed>2020-09-01 16:47:09</closed>
	</bug>
	<bug>
		<id>6458</id>
		<title>[Android] Difference in right/left topbar button size using the same image.</title>
		<body>### Issue Description  It seems there is a difference in how the left and right topbar buttons calculate the size of the button.  ![topbar](https://user-images.githubusercontent.com/4223434/89545531-c469f000-d803-11ea-93c4-21e215e1d8f7.png)   ### Steps to Reproduce / Code Snippets / Screenshots  PNG is 512 x 512  ```js   static options(): Options {     return {       topBar: {         leftButtons: [           {             id: 'user-cog-left',             color: 'white',             icon: require('images/user_cog.png'),           },         ],         rightButtons: [           {             id: 'user-cog-right',             color: 'white',             icon: require('images/user_cog.png'),           },         ],       },     };   } ```  --- ### Environment * React Native Navigation version: 6.9.0 * React Native version: 0.61.5 * Platform(s) (iOS, Android, or both?): Android * Device info (Simulator/Device? OS version? Debug/Release?): Simulator + Device, Android 10, Debug </body>
		<created>2020-08-06 14:47:44</created>
		<closed>2020-08-12 12:04:18</closed>
	</bug>
	<bug>
		<id>6456</id>
		<title>Custom topbar title does not take the whole space and looks shifted (iOS + Android)</title>
		<body>### Issue Description  I've seen some issues related to the ```alignment``` value for the title in the topbar options, but I'm having trouble with this.  I'm trying to render a custom title component in a topbar with "alignment fill", but the custom component does not take the whole space.  Here's how it looks on both platforms:   iOS: &lt;img width="400" alt="Screenshot 2020-08-05 at 13 53 28" src="https://user-images.githubusercontent.com/42766924/89409869-0b33e900-d723-11ea-8d03-c07865bb9aa9.png"&gt;  Android: &lt;img width="554" alt="Screenshot 2020-08-05 at 13 55 12" src="https://user-images.githubusercontent.com/42766924/89410027-49c9a380-d723-11ea-8039-85d64a904fb7.png"&gt;  ### Steps to Reproduce / Code Snippets / Screenshots  I looked to see if I had some weird style but after reducing it to the minimum I still observe this.  Here are the topbar options: ``` topBar: {         visible: true,         title: {           component: {             name: 'app.CustomTopBar',             aligment: 'fill',           },           aligment: 'fill',         },         backButton: {           visible: false,         }, }, ```  And the view in the custom component (aka app.CustomTopBar) ``` &lt;View style={{     flex: 1,     margin: 0,     padding: 0,     height: 80,     flexDirection: 'row',     justifyContent: 'space-between',     backgroundColor: 'pink' }}&gt;         &lt;Text&gt;A&lt;/Text&gt;         &lt;Text&gt;B&lt;/Text&gt;         &lt;Text&gt;C&lt;/Text&gt; &lt;/View&gt; ```  Where does this left shifting come from? Is there anything I could do to make this occupy the whole space?  Even after giving it width: '100%' or width the size of the screen this space is still there  --- ### Environment * React Native Navigation version: 6.11 * React Native version: 0.62.2 * Platform(s) (iOS, Android, or both?): Both * Device info (Simulator/Device? OS version? Debug/Release?): iOS 13.6 in an iPhoneSE Simulator, Android 9 Xiaomi Mi A1 </body>
		<created>2020-08-05 12:00:07</created>
		<closed>2020-08-06 06:49:46</closed>
	</bug>
	<bug>
		<id>6421</id>
		<title>[v6][iOS] Crash when using back button after calling setStackRoot with multiple screens</title>
		<body>### Issue Description  After using `setStackRoot` with multiple screens and using the back button the app will crash with the following exception: `Exception NSException * "-[_UIBackButtonContainerView titleLabel]: unrecognized selector sent to instance`  I have tested this on iOS 10-13 and it occurs on iOS 11 and 12 only. iOS 10 and 13 were both fine.  ### Steps to Reproduce / Code Snippets / Screenshots  Call `setStackRoot` with multiple screens, then use the back button on the screen at the top of the stack.  I have created a simple reproducible example here: https://github.com/mattmcdonald-uk/RNNDebug  --- ### Environment * React Native Navigation version: 6.9.1 * React Native version: 0.63.2 * Platform(s) (iOS, Android, or both?): iOS 11; iOS 12 * Device info (Simulator/Device? OS version? Debug/Release?): Simulator and physical, debug and release </body>
		<created>2020-07-23 08:23:37</created>
		<closed>2020-08-20 14:21:34</closed>
	</bug>
	<bug>
		<id>6405</id>
		<title>Support 'fontSize' on OptionsTopBarButton</title>
		<body>font family and font weight are supported, is there a reason why font size is not?  Thank you!</body>
		<created>2020-07-19 11:55:05</created>
		<closed>2020-07-30 12:18:51</closed>
	</bug>
	<bug>
		<id>6389</id>
		<title>Shared Element Transition doesn't work with Images</title>
		<body>### Issue Description  The Shared Element transition doesn't work with Images, as it first stretches the Image and then snaps it in place.  ![Screen Recording 2020-07-12 at 18 39 27 mov](https://user-images.githubusercontent.com/15199031/87252321-58999f00-c472-11ea-8f22-34896e7e039b.gif)   ### Steps to Reproduce / Code Snippets / Screenshots  1. Create 2 Screens 2. Set `nativeID` on both images, make sure they have the same `resizeMode`:  **First**: ```jsx &lt;Image style={{ position: 'absolute', top: 0, left: 0, width: '100%', height: HEADER_IMAGE_HEIGHT }} source={{ uri: post.images[0] }} resizeMode="cover" nativeID={'someId.to'} /&gt; ```  **Second**: ```jsx &lt;Image nativeID={'someId.from'} resizeMode="cover" source={imageSource} style={{ width: '100%', height: '100%', borderRadius: 20 }} /&gt; ```  3. Navigate:  ```js Navigation.push(props.componentId, { component: { name: 'PostDetailsScreen', options: { topBar: { visible: false, }, animations: { push: { sharedElementTransitions: [ { fromId: `someId.from`, toId: `someId.to`, interpolation: 'accelerateDecelerate', duration: 350, }, ], }, ... ```  --- ### Environment * React Native Navigation version: ^6.9.1 * React Native version: 0.63.0 * Platform(s) (iOS, Android, or both?): iOS (Android not tested) * Device info (Simulator/Device? OS version? Debug/Release?): Simulator and device, iOS 13.5.1, Debug </body>
		<created>2020-07-12 17:03:37</created>
		<closed>2020-09-17 14:17:21</closed>
	</bug>
	<bug>
		<id>6381</id>
		<title>BottomTabs flicker when push new screen using waitForRender (ANDROID) - (IOS Works well)</title>
		<body>### Issue Description  When I'm going to open a new screen using waitForRender with true in the layout options the problem happens, but when I add waitForRender as false it opens normally, I need to use the waitForRender option as true because wait data load, does anyone know the reason for the problem?  ### Steps to Reproduce / Code Snippets / Screenshots  waitForRender: true =&gt; ![wait-true](https://user-images.githubusercontent.com/18573931/87103995-0156bd00-c22d-11ea-988b-1fae720accde.gif)  watForRender: false =&gt; ![wait-false](https://user-images.githubusercontent.com/18573931/87103917-c3f22f80-c22c-11ea-989d-1c5a4d4c1122.gif)  Code:   `  ...options: {         topBar:...,         animations:{           push: {             waitForRender:true           }         }       } ` --- ### Environment * React Native Navigation version: 6.9.0 * React Native version: 0.62.2 * Platform(s) (iOS, Android, or both?):ANDROID * Device info (Simulator/Device? OS version? Debug/Release?):both / all / both </body>
		<created>2020-07-10 00:49:07</created>
		<closed>2020-07-15 08:15:22</closed>
	</bug>
	<bug>
		<id>6373</id>
		<title>mergeoption missing properties inherit from superclass</title>
		<body>### Issue Description  while merge options  properties of class ElementTransitionOptions inherit from TransitionOptions cannot merge  just the `elementId` can be merged, other properties cannot list by objectProperties  because the class_copyPropertyList cannot get the properties of supper class  ### Steps to Reproduce / Code Snippets / Screenshots  &lt;!-- Note: When embedding code, please format it and use syntax highlighting to improve readability --&gt; &lt;!-- ```js                                                         --&gt; &lt;!-- [ THIS CODE BLOCK WILL USE JAVASCRIPT SYNTAX HIGHLIGHTING ]   --&gt; &lt;!-- ```                                                           --&gt;  ```objective-c - (NSArray *)objectProperties:(NSObject *)object { NSMutableArray* properties = [NSMutableArray new]; unsigned int count; objc_property_t* props = class_copyPropertyList([object class], &amp;count); for (int i = 0; i &lt; count; i++) { objc_property_t property = props[i]; NSString *propertyName = [NSString stringWithCString:property_getName(property) encoding:NSUTF8StringEncoding]; [properties addObject:propertyName]; }  free(props); return properties; } ```  change to below code will resolve the problem  ```objective-c - (NSArray *)objectProperties2:(NSObject *)object {   NSMutableArray* properties = [NSMutableArray new];   unsigned int count;   Class cls = [object class];   do {     objc_property_t* props = class_copyPropertyList(cls, &amp;count);     for (int i = 0; i &lt; count; i++) {       objc_property_t property = props[i];       NSString *propertyName = [NSString stringWithCString:property_getName(property) encoding:NSUTF8StringEncoding];       [properties addObject:propertyName];     }     free(props);     cls = [cls superclass];   } while ([cls isSubclassOfClass:[RNNOptions class]] &amp;&amp; cls != nil);   return properties; } ```  --- ### Environment * React Native Navigation version: 6.8.0 * React Native version: 0.62.2 * Platform(s) (iOS, Android, or both?): iOS * Device info (Simulator/Device? OS version? Debug/Release?): ALL </body>
		<created>2020-07-08 01:38:06</created>
		<closed>2020-07-27 12:00:28</closed>
	</bug>
	<bug>
		<id>6369</id>
		<title>[Android] Fab Button options</title>
		<body>### Issue Description I've found that some of the FAB button options are not working or displaying unexpected behaviour including: - `alignVertically` does not affect the vertical position. - `size` does not affect the size of the Fab button. - `Fab` defined in `actions` emit the root `Fab id` not its `id`.  ### Steps to Reproduce / Code Snippets / Screenshots  ```ts // playground/src/screens/ScrollViewScreen.tsx fab: {   id: 'FAB 1',   // ...other configs   alignVertically: 'top',    size: 300,    actions: [     {       id: 'FAB 2',     }   ] },  navigationButtonPressed({ buttonId }) {   // Clicking `FAB 2` button will emit `FAB 1` not `FAB 2`.    console.log(buttonId) } ```  --- ### Environment * React Native Navigation version: 6.8.0 * React Native version: 0.62.2 * Platform(s) (iOS, Android, or both?): Android * Device info (Simulator/Device? OS version? Debug/Release?): All </body>
		<created>2020-07-06 11:17:28</created>
		<closed>2020-07-09 07:38:06</closed>
	</bug>
	<bug>
		<id>6343</id>
		<title>Export LayoutOrientation in Options.ts</title>
		<body>### LayoutOrientation type isn't exported in Options.ts  Converting the Playground app to TypeScript revealed a types and interfaces which are mistakenly not exported in the Options.ts file.  ### Steps to Reproduce / Code Snippets / Screenshots  &lt;!-- Note: When embedding code, please format it and use syntax highlighting to improve readability --&gt; &lt;!-- ```js                                                         --&gt; &lt;!-- [ THIS CODE BLOCK WILL USE JAVASCRIPT SYNTAX HIGHLIGHTING ]   --&gt; &lt;!-- ```                                                           --&gt; In the playground app, try to change orientation. TS compiler throws an error  --- ### Environment * Platform(s) (iOS, Android, or both?): TS </body>
		<created>2020-06-28 12:19:26</created>
		<closed>2020-06-29 07:44:02</closed>
	</bug>
	<bug>
		<id>6337</id>
		<title>[iOS] LargeTitle is broken </title>
		<body>### Issue Description  It's not possible to apply styles to largeTitle  ### Steps to Reproduce / Code Snippets / Screenshots  You can reproduce it in the playground app, try to apply tobBar styles in to SearchScreen largeTitle.  ![out](https://user-images.githubusercontent.com/7118451/85776087-fc9af080-b6e5-11ea-86f3-190f8a834ac0.gif)  styles applied:  ```js static options() {     return {       topBar: {         noBorder: true, // it doesn't work          title: {           text: "Search2",           color: "green",  // it doesn't work          },         largeTitle: {           visible: true,           color: "red",  // it doesn't work          },         searchBar: true,         background: {           translucent: true,         },         searchBarPlaceholder: "Start Typing",         hideNavBarOnFocusSearchBar: false,       },     }; } ```  you can see noBorder works only when largeTitle is not visible fontFamily  it doesn't work either --- ### Environment * React Native Navigation version: 6.8.0 * React Native version: 0.62.2 * Platform(s) (iOS, Android, or both?): iOS * Device info (Simulator/Device? OS version? Debug/Release?): Iphone 11 Pro (13.5) Simulator </body>
		<created>2020-06-25 18:24:03</created>
		<closed>2020-08-20 11:54:51</closed>
	</bug>
	<bug>
		<id>6319</id>
		<title>`rnn-link` does not appear to exist as npm package</title>
		<body>### npx rnn-link fails to find existing npm package  Attempts to access `rnn-link` package [described in documentation](https://wix.github.io/react-native-navigation/docs/installing#installing-with-npx-rnn-link) result in 404s.  ### Steps to Reproduce / Code Snippets / Screenshots  ```bash $ npx rnn-link  #  -- or --  $ npm i rnn-link  # -- or --  $ curl https://registry.npmjs.org/rnn-link  ```  result in:  ```bash npm ERR! code E404 npm ERR! 404 Not Found - GET https://registry.npmjs.org/rnn-link - Not found npm ERR! 404 npm ERR! 404  'rnn-link@latest' is not in the npm registry. npm ERR! 404 You should bug the author to publish it (or use the name yourself!) npm ERR! 404 npm ERR! 404 Note that you can also install from a npm ERR! 404 tarball, folder, http url, or git url.  # -- or if curl --- {"error":"Not found"}  ```  --- ### Environment * React Native Navigation version: 6.7.5 * React Native version: 0.62.2 * Platform(s) (iOS, Android, or both?): both * Device info (Simulator/Device? OS version? Debug/Release?): n/a </body>
		<created>2020-06-18 13:39:53</created>
		<closed>2020-06-19 14:31:51</closed>
	</bug>
	<bug>
		<id>6318</id>
		<title>registerBottomTabSelectedListener returns incorrect unselectedTabIndex value</title>
		<body>### registerBottomTabSelectedListener returns incorrect unselectedTabIndex  As of RNN 6.7.5, the `registerBottomTabSelectedListener` callback is now passed the correct value for `selectedTabIndex`, but  `unselectedTabIndex` is not correct; it's always just the same as `selectedTabIndex`.  Note that _both_ callback params were broken (always 0,0) in 6.7.4 -- here's that issue: https://github.com/wix/react-native-navigation/issues/6254  ### Steps to Reproduce / Code Snippets / Screenshots ```js  this.bottomTabEventListener = RNN.events().registerBottomTabSelectedListener( ({ selectedTabIndex, unselectedTabIndex }) =&gt; { console.tron.log(selectedTabIndex, unselectedTabIndex); } ); ```   Will always log an identical pair, e.g. [0,0], [2,2] etc.  --- ### Environment * React Native Navigation version: 6.7.5 * React Native version: 0.61.5 * Platform(s) (iOS, Android, or both?): iOS * Device info (Simulator/Device? OS version? Debug/Release?): Simulator (did not test on device) </body>
		<created>2020-06-17 22:21:44</created>
		<closed>2020-06-22 05:05:20</closed>
	</bug>
	<bug>
		<id>6316</id>
		<title>Android app crashes when options.bottomTabs has currentTabIndex and titleDisplayMode set</title>
		<body>### Issue Description  If I add to `options.bottomTabs` both `currentTabIndex` AND  `titleDisplayMode: "alwaysShow"`  app crashes on Android (I get _App has stopped working alert_). If it has only one of defined/added, everything works fine.  Here is stacktrace from Bugsnag:  ``` java.lang.NullPointerException Attempt to invoke virtual method 'void android.widget.ImageView.setSelected(boolean)' on a null object reference      AHBottomNavigation.java:720 com.aurelhubert.ahbottomnavigation.AHBottomNavigation.updateItems     AHBottomNavigation.java:1299 com.aurelhubert.ahbottomnavigation.AHBottomNavigation.setCurrentItem     BottomTabsController.java:211 com.reactnativenavigation.viewcontrollers.bottomtabs.BottomTabsController.selectTab     BottomTabsPresenter.java:129 com.reactnativenavigation.presentation.BottomTabsPresenter.applyBottomTabsOptions     BottomTabsPresenter.java:51 com.reactnativenavigation.presentation.BottomTabsPresenter.applyOptions     BottomTabsController.java:93 com.reactnativenavigation.viewcontrollers.bottomtabs.BottomTabsController.applyOptions     ViewController.java:241 com.reactnativenavigation.viewcontrollers.ViewController.onViewAppeared     ChildController.java:50 com.reactnativenavigation.viewcontrollers.ChildController.onViewAppeared     ViewController.java:294 com.reactnativenavigation.viewcontrollers.ViewController.onGlobalLayout     ViewTreeObserver.java:945 android.view.ViewTreeObserver.dispatchOnGlobalLayout     ViewRootImpl.java:2250 android.view.ViewRootImpl.performTraversals     ViewRootImpl.java:1392 android.view.ViewRootImpl.doTraversal     ViewRootImpl.java:6752 android.view.ViewRootImpl$TraversalRunnable.run     Choreographer.java:911 android.view.Choreographer$CallbackRecord.run     Choreographer.java:723 android.view.Choreographer.doCallbacks     Choreographer.java:658 android.view.Choreographer.doFrame     Choreographer.java:897 android.view.Choreographer$FrameDisplayEventReceiver.run     Handler.java:790 android.os.Handler.handleCallback     Handler.java:99 android.os.Handler.dispatchMessage     Looper.java:164 android.os.Looper.loop     ActivityThread.java:6494 android.app.ActivityThread.main     Method.java:-2 java.lang.reflect.Method.invoke     RuntimeInit.java:438 com.android.internal.os.RuntimeInit$MethodAndArgsCaller.run     ZygoteInit.java:807 com.android.internal.os.ZygoteInit.main ```   ### Steps to Reproduce / Code Snippets / Screenshots  Here is our `setRoot` code:  ```   await Navigation.setRoot({     root: {       bottomTabs: {         id: testID.menu.root,         children: generateMainMenu(),         options: {           bottomTabs: {             currentTabIndex: 2,             backgroundColor: theme.COLOR_BOTTOM_NAV_BACKGROUND           }         }       }     }   }); ```  As said above if `bottomTabs` looks like this:  ```   bottomTabs: {             currentTabIndex: 2,             backgroundColor: theme.COLOR_BOTTOM_NAV_BACKGROUND,             titleDisplayMode: "alwaysShow"           } ```  app crashes on Android.  For completeness sake, here is code for `generateMainMenu()` which generates _main app layout_  &lt;details&gt;  &lt;summary&gt; generateMainMenu() code: &lt;/summary&gt;  ```js export function generateMainMenu(): LayoutTabsChildren[] {   const ICON_PADDING = 1;   const bottomTabIconOptions: OptionsBottomTab = {     iconColor: theme.COLOR_BOTTOM_NAV_ICON,     selectedIconColor: theme.COLOR_BOTTOM_NAV_ICON_ACTIVE,     textColor: theme.COLOR_BOTTOM_NAV_TEXT,     selectedTextColor: theme.COLOR_BOTTOM_NAV_TEXT_ACTIVE,     iconInsets: {       top: ICON_PADDING,       bottom: ICON_PADDING,       right: ICON_PADDING,       left: ICON_PADDING     }   };    return [     {       stack: {         children: [           {             component: {               name: screenName.FEED_SCREEN             }           }         ],         options: {           bottomTab: {             text: getLocalisedValue("common.menu.feed"),             icon: iconsList.bottomTabsFeed,             testID: testID.menu.feed,             ...bottomTabIconOptions           }         }       }     },     {       stack: {         children: [           {             component: {               name: screenName.QUICK_WORKOUTS_SCREEN             }           }         ],         options: {           bottomTab: {             text: getLocalisedValue("common.menu.workouts"),             icon: iconsList.bottomTabsQworkouts,             testID: testID.menu.workouts,             ...bottomTabIconOptions           }         }       }     },     {       stack: {         children: [           {             component: {               name: screenName.WORKOUT_PLANS_SCREEN,               options: {                 statusBar: {                   style: "light" as OptionsStatusBar["style"]                 },                 topBar: {                   ...hiddenTopBarProperties,                   animate: false                 }               }             }           }         ],         options: {           bottomTab: {             text: getLocalisedValue("common.menu.plans"),             icon: iconsList.bottomTabsPlans,             testID: testID.menu.plans,             ...bottomTabIconOptions           }         }       }     },     {       stack: {         children: [           {             component: {               name: screenName.NOTIFICATIONS_SCREEN,               options: {                 topBar: {                   title: {                     text: getLocalisedValue("common.menu.notifications")                   }                 }               }             }           }         ],         options: {           bottomTab: {             text: getLocalisedValue("common.menu.notifications"),             icon: iconsList.bottomTabsNotifications,             testID: testID.menu.notifications,             ...bottomTabIconOptions           }         }       }     },     {       stack: {         children: [           {             component: {               name: screenName.PROFILE_SCREEN             }           }         ],         options: {           bottomTab: {             text: getLocalisedValue("common.menu.profile"),             icon: iconsList.bottomTabsProfile,             testID: testID.menu.profile,             ...bottomTabIconOptions           }         }       }     }   ]; }  ``` &lt;/details&gt;     --- ### Environment * React Native Navigation version: 6.7.5 * React Native version: 0.62.2 * Platform(s) (iOS, Android, or both?): Android * Device info (Simulator/Device? OS version? Debug/Release?): Release, multiple Android devices and OS versions </body>
		<created>2020-06-17 06:27:03</created>
		<closed>2020-06-24 10:35:36</closed>
	</bug>
	<bug>
		<id>6312</id>
		<title>Backbutton color is not working on iOS 10</title>
		<body>### Issue Description  I am working on a project, and I using RNN, a great lib, so trying to change the `backButton` color I realize that is not working on iOS 10, please can you help me how to work around this ?  ### Steps to Reproduce / Code Snippets / Screenshots  Just set the code below for any pushed route, and you will see that backButton color is not taking into account for iOS 10. &lt;!-- Note: When embedding code, please format it and use syntax highlighting to improve readability --&gt; ```js // this is my code for change the backButton color, is not working on iOS 10 backButton: {     color: 'white',     showTitle: false, }, ```  --- ### Environment * React Native Navigation version: ^6.7.1 * React Native version: 0.61.2 * Platform(s) (iOS, Android, or both?): iOS * Device info (Simulator/Device? OS version? Debug/Release?): 10.3.1  ## Screenshots  | iPhone 5s  | iPhone 7  | iPhone 11  | |---|---|---| | &lt;img width="370" alt="Captura de Pantalla 2020-06-15 a la(s) 21 25 21" src="https://user-images.githubusercontent.com/12078950/84722261-afce5180-af50-11ea-9143-e0457a451475.png"&gt; | &lt;img width="404" alt="Captura de Pantalla 2020-06-15 a la(s) 21 25 37" src="https://user-images.githubusercontent.com/12078950/84722245-a5ac5300-af50-11ea-9a66-e83bfdf04a64.png"&gt;  | &lt;img width="353" alt="Captura de Pantalla 2020-06-15 a la(s) 21 25 29" src="https://user-images.githubusercontent.com/12078950/84722279-ba88e680-af50-11ea-9acd-377dfd069101.png"&gt; | </body>
		<created>2020-06-16 01:40:42</created>
		<closed>2020-09-11 08:51:20</closed>
	</bug>
	<bug>
		<id>6310</id>
		<title>bottomTabs visibility change only working from mergeOptions on iOS</title>
		<body>### Issue Description  I have a `bottomTabs` layout with a `stack` component on one of the tabs. When I push something on to that stack, I want to hide the bottom tabs. Doing so only appears to work if the visibility is changed from a `Navigation.mergeOptions` call. If I do so from the component's `static options`, or as part of the `Navigation.push` command, the bottom tabs are still present.  ### Steps to Reproduce / Code Snippets / Screenshots  I have a minimal example reproducing this issue here: https://github.com/ahwatts/NavTest  The `OptionDetailScreen` which is linked to from the `OptionsScreen` hides the bottom tabs via `Navigation.mergeOptions`. The other ways to do so are commented out, either in the `static options` method, or in the `Navigation.push` call on the `OptionsScreen`.  --- ### Environment * React Native Navigation version: 6.7.3 * React Native version: 0.62.2 * Platform(s): iOS * Device info: iOS 13.5 Simulator / iPhone X with iOS 13.5, debug mode </body>
		<created>2020-06-15 14:49:51</created>
		<closed>2020-06-16 10:06:15</closed>
	</bug>
	<bug>
		<id>6305</id>
		<title>changing bottomTab badge with mergeOptions causes a change of the index assigned to that tab</title>
		<body>### Issue Description  I am listening for long press events for a specific tab w/ index 2. Anytime I call mergeOptions to update the 2nd tab's badge then the event callback starts returning index 5 instead of 2 for `selectedTabIndex`.   ### Steps to Reproduce / Code Snippets / Screenshots  &lt;!-- Note: When embedding code, please format it and use syntax highlighting to improve readability --&gt; &lt;!-- ```js                                                         --&gt; &lt;!-- [ THIS CODE BLOCK WILL USE JAVASCRIPT SYNTAX HIGHLIGHTING ]   --&gt; &lt;!-- ```                                                           --&gt; Event listener: ```     const listener = Navigation.events().registerBottomTabLongPressedListener(       async ({selectedTabIndex}) =&gt; {         // selectedTabIndex is 2 until I update badge then it starts returning 5 for same tab.       },     ); ``` Updating badge count like: ```       Navigation.mergeOptions('ALERTS_TAB', {         bottomTab: {           badge: newBadgeCount,         },       }); ``` --- ### Environment * React Native Navigation version: 6.7.2 * React Native version: 6.7.2 * Platform(s) (iOS, Android, or both?): iOS * Device info (Simulator/Device? OS version? Debug/Release?): iPhone 11 simulator / 13.3 / Debug  Thank you!</body>
		<created>2020-06-13 19:47:59</created>
		<closed>2020-06-22 13:49:55</closed>
	</bug>
	<bug>
		<id>6282</id>
		<title>not hidding bottomTabs after navigate to child</title>
		<body>### Issue Description  1. Set default options bottomTabs: {       animate: true,       drawBehind: false,       visible: false,     },  2. Create root bottom tabs screen bottomTabs: {           visible: true,           animate: true,           drawBehind: true,           currentTabIndex: 0,           titleDisplayMode: 'alwaysShow',         },  3. Navigate to child screen (with settings) bottomTabs: {           visible: false,           animate: true,           drawBehind: true,         },  Result: bottom tabs not hidding (working on 6.4 and 6.5)  --- ### Environment * React Native Navigation version: 0.62.2 * React Native version: 6.7.2 * Platform(s) (iOS, Android, or both?): iOS * Device info (Simulator/Device? OS version? Debug/Release?): debug </body>
		<created>2020-06-09 08:06:21</created>
		<closed>2020-06-14 10:38:36</closed>
	</bug>
	<bug>
		<id>6261</id>
		<title>[v6][Android] componentDidAppear is invoked before the animation completes on Android</title>
		<body>### Issue Description  Sorry if this is the intended behaviour but I just noticed `componentDidAppear` is invoked before the animation completes. This is only happening on Android, works as expected on iOS. If it doesn't wait for the animation, how is it different from `componentDidMount`?  ### Steps to Reproduce / Code Snippets / Screenshots  Could reproduce this in the playground app:  ```js componentDidAppear() {   console.log('appear'); // this is shown immediately, instead of waiting for the 3500 animation delay  }  push = () =&gt; Navigation.push(this, {   component: {     name: Screens.Pushed,     passProps: this.createPassProps(),     options: {       topBar: {         title: {           text: `Pushed ${this.getStackPosition() + 1}`         }       },       animations: {         push: {           content: {             translationY: {                 from: getDimensions('screen').height,                 to: 0,                 duration: 3500,             },           },         },       },     },   }, }); ```  --- ### Environment * React Native Navigation version: 6.7.1 * React Native version: 0.61.5 * Platform(s) (iOS, Android, or both?): Android * Device info (Simulator/Device? OS version? Debug/Release?): Simulator, Pixel_2_API_28 </body>
		<created>2020-06-02 12:47:20</created>
		<closed>2020-07-01 07:18:48</closed>
	</bug>
	<bug>
		<id>6254</id>
		<title>[v6] [iOS] registerBottomTabSelectedListener returns (0, 0) indexes</title>
		<body>### Issue Description  The registerBottomTabSelectedListener is not returning the correct indexes. Both selectedTabIndex and unselectedTabIndex are 0 on iOS. On the other hand, it's working perfectly on Android.  bottomsTabs are set up using Navigation.setRoot(...).  I assume my implementation is stable : the tabs are there since v2, the listener since v2 or v3.  ### Steps to Reproduce / Code Snippets / Screenshots  &lt;!-- Note: When embedding code, please format it and use syntax highlighting to improve readability --&gt; ```js  const bottomTabEventListener = Navigation.events().registerBottomTabSelectedListener(({ selectedTabIndex, unselectedTabIndex }) =&gt; {   console.log("registerBottomTabSelectedListener:");   console.log(selectedTabIndex);   console.log(unselectedTabIndex); });  /* registerBottomTabSelectedListener: 0 0 */  ```  Tap from any tab to any tab, it will always be selectedTabIndex = 0, unselectedTabIndex = 0.  --- ### Environment * React Native Navigation version: 6.7.1 * React Native version: 0.62.2 * Platform(s) (iOS, Android, or both?): iOS * Device info (Simulator/Device? OS version? Debug/Release?): Device (13.5), Simulator (13.5), Debug </body>
		<created>2020-05-28 18:06:35</created>
		<closed>2020-06-17 03:51:12</closed>
	</bug>
	<bug>
		<id>6236</id>
		<title>Regression &gt;=6.5.0: Setting topBar rightButtonColor also changes Android dropDown item text color</title>
		<body>### Issue Description  When setting `rightButtonColor` on the topBar, I expect only the "..." button on Android to change its color. Instead, also the text color of all dropDown menu items change. This regression was introduced in 6.5.0, most likely with this commit: https://github.com/wix/react-native-navigation/commit/42a6917eeee149f7348a4eaf524ba76bac1240cf  Currently, I still use 6.4.0 because of this. This bug still persists in 6.6.2  ### Steps to Reproduce / Code Snippets / Screenshots  ```js     Navigation.push(componentId, {         component: {           name: 'screen.someScreen',           id:'screen.someScreen',           passProps: {             someId: someId           },           options:{               topBar:{                 backButton: {                   color: "white"                 },                 buttonColor: "white",                 leftButtonColor: '#FFF',                 rightButtonColor: '#FFF',                 animate: false,                 title: {                     text: "someTitle",                     color: 'white',                 },                 background:{                     color: colors.primaryColor,                 },                 ...Platform.select({                   android:{                     rightButtons: [                       {                         id: 'report',                         text: I18n.t('dropMenu_report'),                         showAsAction: 'never',                       },                       {                         id: 'add',                         text: I18n.t('dropMenu_add'),                         showAsAction: 'never',                       }                     ]                   },                   ios:{                     rightButtons: [                         {                           id: 'more',                           icon: moreiOSIcon                         }                       ]                   }                 }),               }, ... ```  --- ### Environment * React Native Navigation version: &gt;= 6.5.0 * React Native version: 0.61.5 * Platform(s) (iOS, Android, or both?): Android * Device info (Simulator/Device? OS version? Debug/Release?): Simulator, Pixel 2 XL, Android 10, Debug Build</body>
		<created>2020-05-21 14:18:37</created>
		<closed>2020-06-25 12:55:17</closed>
	</bug>
	<bug>
		<id>6232</id>
		<title>The callback passed to Navigation.registerComponent is called four times.</title>
		<body>### Issue Description  The callback passed as second parameter to Navigation.registerComponent() is called four times.  ### Steps to Reproduce / Code Snippets / Screenshots  Using the steps found on the installation guide of react-native-navigation:  1. Create a new react-native project with `npx react-native init rnnbugdemo`. 2. Run `npm install react-native-navigation`. 3. Run `npx react-native link react-native-navigation`. 4. Change index.js such that it is: ```js import {Navigation} from 'react-native-navigation';  import App from './App';  Navigation.registerComponent('com.myApp.WelcomeScreen', () =&gt; {   console.log('This will be printed 4 times');   return App; });  Navigation.events().registerAppLaunchedListener(() =&gt; {   Navigation.setRoot({     root: {       stack: {         children: [           {             component: {               name: 'com.myApp.WelcomeScreen',             },           },         ],       },     },   }); }); ``` 5. Run the application. I ran it on Android `npx react-native run-android`.  **Expected output:** One line in the logs that say "This will be printed 4 times" **Actual output:** Four lines in the logs that say "This will be printed 4 times".  Link to github repo: [https://github.com/HectorRicardo/rnnbugdemo.git](https://github.com/HectorRicardo/rnnbugdemo.git)  --- ### Environment * React Native Navigation version: 6.6.2 * React Native version: 0.62.2 * Platform(s) (iOS, Android, or both?): Android * Device info (Simulator/Device? OS version? Debug/Release?): Simulator Nexus 5X API 29 x86. Android 10.0 (Google Apis) x86 </body>
		<created>2020-05-20 02:12:06</created>
		<closed>2020-05-25 14:58:56</closed>
	</bug>
	<bug>
		<id>6228</id>
		<title>[V6] Shared element transition breaks with different resizeModes</title>
		<body>When fromId image has resizeMode cover and toId has resizeMode contain, the image does not change shape in the transition animation like it did in previous versions.   </body>
		<created>2020-05-19 16:51:02</created>
		<closed>2020-09-17 15:49:33</closed>
	</bug>
	<bug>
		<id>6191</id>
		<title>Can't change badgeColor for bottomTab on iOS (v6.5.0)</title>
		<body>### Issue Description  In RNN 6.5.0 badge color is not changing on iOS. Works fine on Android.  I've tried different ways to set badge color: 1) with `mergeOptions`: ``` Navigation.mergeOptions('Tab.Inbox', {     bottomTab: {         badge: newMessagesCount ? String(newMessagesCount) : '',         badgeColor: colors.pink     } }); ``` 2) with `setDefaultOptions`: ``` Navigation.setDefaultOptions({     bottomTab: {  badgeColor: colors.pink,     } }); ``` 3) setting color directly in the `bottomTabs` children: ``` {     stack: { id: 'Tab.Inbox', children: [{     component: { id: 'Inbox.Main', name: Screens.Inbox,     } }], options: {     bottomTab: { icon: IMG_INBOX, text: 'Inbox', iconColor: colors.grayBlue, textColor: colors.grayBlue, selectedIconColor: colors.orange, selectedTextColor: colors.orange, fontFamily: FONT_OPENSANS_BOLD, badgeColor: colors.pink,     } }     } }, ```  But none of these ways worked and badge is always displayed with default orange color: ![iPhone 11 — 13 2 2 2020-05-04 18-34-50](https://user-images.githubusercontent.com/32789351/80984090-1599ca80-8e36-11ea-9303-c7bbd92ed03f.png) Compare to Android: ![httpsmonosnap comdirectfbAfLRdFgalk5B5njoqdmdOLa9WIFg 2020-05-04 18-58-15](https://user-images.githubusercontent.com/32789351/80986486-4b8c7e00-8e39-11ea-8587-376b12c07e7c.png)  Note: If RNN is downgraded to `6.0.0` everything works fine on both platforms.  --- ### Environment * React Native Navigation version: 6.5.0 * React Native version: 0.61.5 * Platform(s) (iOS, Android, or both?): iOS * Device info (Simulator/Device? OS version? Debug/Release?): iOS Simulator 13.2.2 Debug and Release </body>
		<created>2020-05-04 16:06:41</created>
		<closed>2020-05-31 12:09:02</closed>
	</bug>
	<bug>
		<id>6181</id>
		<title>Incorrect typings for functional component event binding</title>
		<body>### Issue Description  Typescript checks fail when using `Navigation.events().bindComponent()` on a non-react component.  ### Steps to Reproduce / Code Snippets / Screenshots  &lt;!-- Note: When embeding code, please format it and use syntax highlighting to improve readability --&gt; &lt;!-- ```js                                                         --&gt; &lt;!-- [ THIS CODE BLOCK WILL USE JAVASCRIPT SYNTAX HIGHLIGHTING ]   --&gt; &lt;!-- ```                                                           --&gt; From [the documentation](https://wix.github.io/react-native-navigation/docs/functionalComponents#listening-to-navigation-events), we have ```js     const listener = {       componentDidAppear: () =&gt; {         console.log('RNN', `componentDidAppear`);       },       componentDidDisappear: () =&gt; {         console.log('RNN', `componentDidDisappear`);       }     };     // Register the listener to all events related to our component     const unsubscribe = Navigation.events().bindComponent(listener, props.componentId);     //                                                    ~~~~~~~~     //                                                   error here ``` However, this fails checks, since `listener` is not a react component.  --- ### Environment * React Native Navigation version: 3.2.0 * React Native version: N/A * Platform(s) (iOS, Android, or both?): N/A * Device info (Simulator/Device? OS version? Debug/Release?): N/A </body>
		<created>2020-04-30 18:33:04</created>
		<closed>2020-05-27 12:11:55</closed>
	</bug>
	<bug>
		<id>6158</id>
		<title>iOS - Cannot set title color and size</title>
		<body>### Issue Description  largeTitle - color property not working title - color property not working properly and style   [Video Link](https://i.imgur.com/I8k7gbl.mp4) Video Link: https://i.imgur.com/I8k7gbl.mp4  ### Steps to Reproduce / Code Snippets / Screenshots My default options and stack options object is below.   ``` {    "layout":{       "orientation":[          "portrait"       ],       "backgroundColor":"#f6f7f6"    },    "statusBar":{       "backgroundColor":"#f6f7f6"    },    "topBar":{       "barStyle":"default",       "largeTitle":{          "visible":true,          "color":"#f6f7f6"       },       "visible":true,       "drawBehind":true,       "animate":true,       "transparent":false,       "translucent":false,       "title":{          "fontSize":22,          "fontWeight":"regular",          "color":"#f6f7f6"       },       "background":{          "color":"#1864C0"       },       "backButton":{          "color":"#f6f7f6"       }    } } ```  --- ### Environment * React Native Navigation version: 6.4.0 * React Native version: 0.61.5 * Platform(s) (iOS, Android, or both?): iOS * Device info (Simulator/Device? OS version? Debug/Release?): Simulator and Device, OS: 13.4.1 Debug </body>
		<created>2020-04-24 02:09:07</created>
		<closed>2020-08-20 10:53:40</closed>
	</bug>
	<bug>
		<id>6122</id>
		<title>[V6] Drawer height stuck in landscape height even if changes to portrait.</title>
		<body>### Issue Description If app starts in Landscape mode, then changes to portrait, the drawer "touchable" height remains the same as if it were in landscape.  Content will render though IF you set a height.  ### Steps to Reproduce / Code Snippets / Screenshots  &lt;!-- Note: When embeding code, please format it and use syntax highlighting to improve readability --&gt;  Create app with scroll view in drawer -&gt; start app in landscape mode -&gt; rotate to portrait -&gt; try and scroll/touch press bottom portion of menu.    --- ### Environment * React Native Navigation version: 6.4.0-snapshot.928 * React Native version: 0.62.1 * Platform(s) (iOS, Android, or both?): iOS * Device info (Simulator/Device? OS version? Debug/Release?): Simulator and real device production build </body>
		<created>2020-04-12 23:22:45</created>
		<closed>2020-06-25 13:06:22</closed>
	</bug>
	<bug>
		<id>6121</id>
		<title>[v4] -&gt; [v6] [Android] Still getting UNAUTHORIZED_OVERLAY error while we use react-native-youtube.</title>
		<body>### Issue Description Hi, this issue is probably duplicated but my app is totally dependant on your lib, please help me. I always get UNAUTHORIZED_OVERLAY error when playing the video inline.  I tried all versions from v4 to v6 but no luck. I also see all changes of commits and PRs below. Please take a look. Thank you so much!!  Related issues #4256, PR #5999, PR #5903   --- ### Environment * React Native Navigation version: Have tried 4.0.4, 4.8.0, 6.1.0, 6.4.0 * React Native version: 0.61.5 (Sorry I cant downgrade to 0.59) * React Native Youtube version: 2.0.0 * Platform(s) (iOS, Android, or both?): Just Android * Device info (Simulator/Device? OS version? Debug/Release?): Both of simulator and device </body>
		<created>2020-04-12 14:05:59</created>
		<closed>2020-06-16 17:53:05</closed>
	</bug>
	<bug>
		<id>6114</id>
		<title>[v6] iOS mergeOptions topbar backButton color</title>
		<body>### Issue Description Hi @yogevbd,  Since V6 mergeOptions on topbar backButton color is not working as expected anymore. The first call to mergeOptions has no effect. It was working correctly on RNN &lt; V6 and it's fine on android.  ### Steps to Reproduce / Code Snippets / Screenshots  ``` Navigation.mergeOptions(componentId, {             topBar: {               backButton: {                 color: 'red',               },             },           }); ```  No effect at all. If I call a second time mergeOptions but with a different color :  ``` Navigation.mergeOptions(componentId, {             topBar: {               backButton: {                 color: 'green',               },             },           }); ```  The backButton is now becoming "red". If I make a third call, it will become "green".  --- ### Environment * React Native Navigation version: 6.4.0 * React Native version: 61.5 * Platform(s) (iOS, Android, or both?): iOS * Device info (Simulator/Device? OS version? Debug/Release?): Simulator &amp; Device on Debug &amp; Release </body>
		<created>2020-04-09 07:10:54</created>
		<closed>2020-04-21 12:35:39</closed>
	</bug>
	<bug>
		<id>6111</id>
		<title>[v6] Bottom Tab Color reverts to blue when rotating to landscape mode.</title>
		<body>### Issue Description  When changing orientation, selected tab text color reverts to default blue color.  ### Steps to Reproduce / Code Snippets / Screenshots Reproduce: Set tabs correctly -&gt; rotate to landscape mode -&gt; selected tab color will be blue.   ```   Navigation.setDefaultOptions({     bottomTabs: {         titleDisplayMode: "alwaysShow",         backgroundColor: theme.PRIMARY_COLOR,         hideShadow: false,         drawBehind: false     },     bottomTab: {         textColor: defaultColor,         iconColor: defaultColor,         selectedTextColor: defaultSelectedColor,         selectedIconColor: defaultSelectedColor     } }) ``` --- ### Environment * React Native Navigation version: 6.4.0-snapshot.924 * React Native version: 0.61.5 * Platform(s) (iOS, Android, or both?): iOS (Haven't checked android) * Device info (Simulator/Device? OS version? Debug/Release?): iPhone 8, iOS 13.4 (Debug) </body>
		<created>2020-04-08 13:07:16</created>
		<closed>2020-04-22 12:28:42</closed>
	</bug>
	<bug>
		<id>6097</id>
		<title>[v6][Android] Crashes when using mergeOptions to update bottomTab when topBar is present.</title>
		<body>### Issue Description   I have 5 `bottomTabs` in my application, where we support multiple languages. When changing to another language in the app, the bottom tabs text has to change accordingly. I have therefore tried to update all five tabs using `mergeOptions`, which works fine for iOS.   _Worth mentioning:_  Only 3 of the 5 `bottomTabs` has a topBar. Android won't crash if I only update these two tabs.  Error logged: ``` E/AndroidRuntime: FATAL EXCEPTION: main     Process: no.entur.debug, PID: 9573     java.lang.NullPointerException: Attempt to invoke virtual method 'int com.reactnativenavigation.viewcontrollers.topbar.TopBarController.getHeight()' on a null object reference         at com.reactnativenavigation.presentation.StackPresenter.getTopInset(StackPresenter.java:548)         at com.reactnativenavigation.viewcontrollers.stack.StackController.getTopInset(StackController.java:407)         at com.reactnativenavigation.viewcontrollers.ComponentViewController.lambda$getTopInset$0$ComponentViewController(ComponentViewController.java:106)         at com.reactnativenavigation.viewcontrollers.-$$Lambda$ComponentViewController$kPCPbxWkUW2nnI8TIQgM0jqvgY4.run(Unknown Source:4)         at com.reactnativenavigation.utils.ObjectUtils.perform(ObjectUtils.java:15)         at com.reactnativenavigation.viewcontrollers.ComponentViewController.getTopInset(ComponentViewController.java:106)         at com.reactnativenavigation.viewcontrollers.ComponentViewController.applyTopInset(ComponentViewController.java:100)         at com.reactnativenavigation.viewcontrollers.-$$Lambda$wlwFhgHcAClBnwsp5rN0pxte4i4.on(Unknown Source:2)         at com.reactnativenavigation.utils.CollectionUtils.forEach(CollectionUtils.java:93)         at com.reactnativenavigation.utils.CollectionUtils.forEach(CollectionUtils.java:76)         at com.reactnativenavigation.viewcontrollers.ParentController.applyTopInset(ParentController.java:159)         at com.reactnativenavigation.viewcontrollers.-$$Lambda$wlwFhgHcAClBnwsp5rN0pxte4i4.on(Unknown Source:2)         at com.reactnativenavigation.utils.CollectionUtils.forEach(CollectionUtils.java:93)         at com.reactnativenavigation.utils.CollectionUtils.forEach(CollectionUtils.java:76)         at com.reactnativenavigation.viewcontrollers.ParentController.applyTopInset(ParentController.java:159)         at com.reactnativenavigation.viewcontrollers.-$$Lambda$vVglzgYrWmnbpKcV_M9VjZiqrVQ.run(Unknown Source:2)         at com.reactnativenavigation.utils.ObjectUtils.perform(ObjectUtils.java:11)         at com.reactnativenavigation.viewcontrollers.ViewController.onMeasureChild(ViewController.java:348)         at com.reactnativenavigation.viewcontrollers.bottomtabs.BottomTabsController.onMeasureChild(BottomTabsController.java:181)         at com.reactnativenavigation.views.BehaviourDelegate.onMeasureChild(BehaviourDelegate.java:24)         at com.reactnativenavigation.views.BehaviourDelegate.onMeasureChild(BehaviourDelegate.java:9)         at androidx.coordinatorlayout.widget.CoordinatorLayout.onMeasure(CoordinatorLayout.java:831) ```  ### Steps to Reproduce / Code Snippets / Screenshots  I've used the following recommended code, as per the documentation, to update a a `bottomTab`:   ``` Navigation.mergeOptions('BottomTabsId', {   bottomTab: {     ...   } }); ``` Since I have to update all five tabs, I've assumed I had to run this `mergeOptions` for each tab. Seems kind of suboptimal to do this, but.. This works great on iOS, but crashes on Android. It works for a tab that doesn't have a topBar, but crashes if one does exist for that tab.  ### Environment * React Native Navigation version: v6.0.1 * React Native version: v0.61.4 * Platform(s) (iOS, Android, or both?): Android * Device info (Simulator/Device? OS version? Debug/Release?): Simulator (Debug) </body>
		<created>2020-04-01 11:28:17</created>
		<closed>2020-04-05 13:50:33</closed>
	</bug>
	<bug>
		<id>6075</id>
		<title>[v6][iOS13.4][debug] Bottom Tab Icons are not visible</title>
		<body>### Issue Description  After XCode and iOS version update In debug mode both bottom tab icons and text are not visible.  ![image](https://user-images.githubusercontent.com/60673142/77598435-0763a080-6ebf-11ea-8892-de77c76d2f4c.png)  ![image](https://user-images.githubusercontent.com/60673142/77598633-97094f00-6ebf-11ea-827f-145f6579a1f1.png)   ### Steps to Reproduce / Code Snippets / Screenshots  Reproduced on the Playground app as well.  --- ### Environment * React Native Navigation version: 6.3.1 * React Native version: 0.61.5 * Platform(s) (iOS, Android, or both?): iOS 13.4 * Device info (Simulator/Device? OS version? Debug/Release?): debug, device and simulator </body>
		<created>2020-03-26 00:40:29</created>
		<closed>2020-03-30 13:25:43</closed>
	</bug>
	<bug>
		<id>6049</id>
		<title>Pushing a screen with animated change of bottomTab visibility leads to wrong layout on iOS</title>
		<body>### Issue Description  From a view with bottomTabs, when I push a new screen that hides the bottomTabs animated (with animate=true in the bottomTabs options), in the pushed screen, views within a SafeAreaView do not layout correctly, i.e. Layout is not triggered during/after the hide animation.  ### Steps to Reproduce / Code Snippets / Screenshots  From a view with bottomTabs, when I push a new screen like this:  ```js Navigation.push(componentId, {     component: {         name: name,         passProps: props,         options: {              bottomTabs: {                 visible: false,                 drawBehind: true,                 animate: true              }         }     } }); ``` the pushed screen does not layout correct:  Parent screen: ![Bildschirmfoto 2020-03-16 um 15 06 18](https://user-images.githubusercontent.com/1336497/76766574-7f7fe700-6798-11ea-8016-3dadb0723c42.png)  iPhone 11, with animate: true ![Bildschirmfoto 2020-03-16 um 15 06 25](https://user-images.githubusercontent.com/1336497/76766577-8149aa80-6798-11ea-9977-379f044197c1.png)  iPhone 11, with animate: false ![Bildschirmfoto 2020-03-16 um 15 06 34](https://user-images.githubusercontent.com/1336497/76766580-81e24100-6798-11ea-9a5f-31deff1d4186.png)  iPhone 8, with animate: true ![Bildschirmfoto 2020-03-16 um 15 13 25](https://user-images.githubusercontent.com/1336497/76766725-b950ed80-6798-11ea-980b-95894fccdbc6.png)  iPhone 8, with animate: false ![Bildschirmfoto 2020-03-16 um 15 13 33](https://user-images.githubusercontent.com/1336497/76766729-b9e98400-6798-11ea-8755-e4cde96252c8.png)   This is how the pushed screen renders: ```js return (             &lt;SafeAreaView style={{ flex: 1, backgroundColor: '#00f'}}&gt;                 &lt;View style={{ flex: 1, backgroundColor: '#f00'}} /&gt;             &lt;/SafeAreaView&gt;         ); ```  --- ### Environment * React Native Navigation version: 6.2.0 * React Native version: 0.61.5 * Platform(s) (iOS, Android, or both?): iOS * Device info (Simulator/Device? OS version? Debug/Release?): Simulator, iPhone 11, iPhone 8 </body>
		<created>2020-03-16 14:18:32</created>
		<closed>2020-04-02 10:24:18</closed>
	</bug>
	<bug>
		<id>6039</id>
		<title>bottomTab changes icon on merge badge options</title>
		<body>on merge options with badge and badge color options changes bottom tab icon on first of tab navigation</body>
		<created>2020-03-14 06:27:37</created>
		<closed>2020-03-16 06:56:09</closed>
	</bug>
	<bug>
		<id>6022</id>
		<title> Issues 2 duplicate symbols for architecture x86_64 Incompatibility with React-Native-Keyboard-Input</title>
		<body>### Incompatibility with React-Native-Keyboard-Input  I am upgrading to the latest version of `react-native-navigation` [6.1.1] with the latest version of `react-native-keyboard-input` [6.0.0], the problem happens on iOS when I am trying to build.  ### Steps to Reproduce / Code Snippets / Screenshots  &lt;!-- Note: When embeding code, please format it and use syntax highlighting to improve readability --&gt; &lt;!-- ```js                                                         --&gt; &lt;!-- [ THIS CODE BLOCK WILL USE JAVASCRIPT SYNTAX HIGHLIGHTING ]   --&gt; &lt;!-- ```                                                           --&gt; Install the latest version of `react-native-navigation` with `react-native-keyboard-input` and then just run with `react-native run-ios`  --- ### Environment * React Native Navigation version: 6.1.1 * React Native version: 0.61.5 * Platform(s) (iOS, Android, or both?): iOS * Device info (Simulator/Device? OS version? Debug/Release?): Simulator  This is the trace in XCode:  ``` duplicate symbol '_LNInterpolationBehaviorUseRGBColorSpace' in:     /Users/myuser/Library/Developer/Xcode/DerivedData/RocketChatRN-eherffeomkuvbtbrkwpnkcongycw/Build/Products/Debug-iphonesimulator/ReactNativeKeyboardInput/libReactNativeKeyboardInput.a(Color+Interpolation.o)     /Users/myuser/Library/Developer/Xcode/DerivedData/RocketChatRN-eherffeomkuvbtbrkwpnkcongycw/Build/Products/Debug-iphonesimulator/ReactNativeNavigation/libReactNativeNavigation.a(Color+Interpolation.o) duplicate symbol '_LNInterpolationBehaviorUseLABColorSpace' in:     /Users/myuser/Library/Developer/Xcode/DerivedData/RocketChatRN-eherffeomkuvbtbrkwpnkcongycw/Build/Products/Debug-iphonesimulator/ReactNativeKeyboardInput/libReactNativeKeyboardInput.a(Color+Interpolation.o)     /Users/myuser/Library/Developer/Xcode/DerivedData/RocketChatRN-eherffeomkuvbtbrkwpnkcongycw/Build/Products/Debug-iphonesimulator/ReactNativeNavigation/libReactNativeNavigation.a(Color+Interpolation.o) ld: 2 duplicate symbols for architecture x86_64 clang: error: linker command failed with exit code 1 (use -v to see invocation) ```</body>
		<created>2020-03-09 21:05:54</created>
		<closed>2020-03-11 18:21:50</closed>
	</bug>
	<bug>
		<id>6010</id>
		<title>Providing fontWeight and fontFamily breaks custom font family in titles (And possibly other places)</title>
		<body>### Issue Description  If you provide both a `fontWeight` and `fontFamily` in styling objects for `topBar.title` and `topBar.largeTitle` then on iOS the system font is used.  ### Steps to Reproduce / Code Snippets / Screenshots  - Add a custom font into your application - Add `fontWeight` and `fontFamily` values to your RNN styling - Observe custom font face is ignored  &lt;!-- Note: When embeding code, please format it and use syntax highlighting to improve readability --&gt; &lt;!-- ```js                                                         --&gt; &lt;!-- [ THIS CODE BLOCK WILL USE JAVASCRIPT SYNTAX HIGHLIGHTING ]   --&gt; &lt;!-- ```                                                           --&gt;  The issue lies with this `if` statement in `RNNFontAttributesCreator`  ```objc CGFloat resolvedFontSize = [self resolveFontSize:currentFont fontSize:fontSize];          titleTextAttributes[NSForegroundColorAttributeName] = color;         // If font weight is provided, all other attributes are ignored!     if (fontWeight) {         titleTextAttributes[NSFontAttributeName] = [UIFont systemFontOfSize:resolvedFontSize weight:[RCTConvert UIFontWeight:fontWeight]];     } else if (fontFamily){         titleTextAttributes[NSFontAttributeName] = [UIFont fontWithName:fontFamily size:resolvedFontSize];     } else if (fontSize &amp;&amp; currentFont) {         titleTextAttributes[NSFontAttributeName] = [UIFont fontWithDescriptor:currentFont.fontDescriptor size:resolvedFontSize];     } else if (fontSize) {         titleTextAttributes[NSFontAttributeName] = [UIFont systemFontOfSize:resolvedFontSize];     } ```  --- ### Environment * React Native Navigation version: 6.0.1 * React Native version: 0.61.5 * Platform(s) (iOS, Android, or both?): iOS (Unsure about Android) * Device info (Simulator/Device? OS version? Debug/Release?): Simulator iOS 13.0, Debug </body>
		<created>2020-03-06 10:53:25</created>
		<closed>2020-09-09 09:33:02</closed>
	</bug>
	<bug>
		<id>6006</id>
		<title>translucent bottomTab does not work after upgrading to 6.1.0</title>
		<body>After upgrading to 6.1.0 the translucent bottomTab does not work.  ### Steps to Reproduce / Code Snippets / Screenshots  ```js   bottomTabs: {       tabsAttachMode: 'onSwitchToTab',       hideShadow: false,       translucent: true,       drawBehind: false,     }  ``` --- ### Environment * React Native Navigation version: 6.1.0 * React Native version: 0.61.5 * Platform(s) (iOS, Android, or both?): iOS * Device info (Simulator/Device? OS version? Debug/Release?): Debug </body>
		<created>2020-03-05 20:44:53</created>
		<closed>2020-08-17 15:33:46</closed>
	</bug>
	<bug>
		<id>6005</id>
		<title>Bottom tab text cut off/truncated after changing fontWeight to semibold or bold.</title>
		<body>### Issue Description  After upgrading to 6.1.0 , bottom text is cut off after changing the fontWeight to 'semibold' or 'bold' on the bottomTab property.  'light' or 'regular' doesn't affect the truncation.  ### Steps to Reproduce / Code Snippets / Screenshots  ![Screen Shot 2020-03-05 at 3 33 49 PM](https://user-images.githubusercontent.com/1056587/76023645-86d10600-5ef7-11ea-9f70-a381b25843be.png)  ```js  bottomTab: {       fontWeight: 'semibold', } ``` --- ### Environment * React Native Navigation version: 6.1.0 * React Native version: 0.61.5 * Platform(s) (iOS, Android, or both?): iOS * Device info (Simulator/Device? OS version? Debug/Release?): Debug </body>
		<created>2020-03-05 20:41:23</created>
		<closed>2020-03-10 14:09:46</closed>
	</bug>
	<bug>
		<id>6004</id>
		<title>[V6] Can't use modalPresentationStyle popOver</title>
		<body>### Issue Description  If you use the option  ``` modalPresentationStyle: OptionsModalPresentationStyle.popOver ```  You get the error: ![2020-03-05 17 44 59](https://user-images.githubusercontent.com/5363277/76003992-1cc15c80-5f09-11ea-8335-560dc98bb99b.png)  So then you do not use the provided enum: ```js export enum OptionsModalPresentationStyle {   formSheet = 'formSheet',   pageSheet = 'pageSheet',   overFullScreen = 'overFullScreen',   overCurrentContext = 'overCurrentContext',   currentContext = 'currentContext',   popOver = 'popOver',   fullScreen = 'fullScreen',   none = 'none' } ```  but just type "popover".  The problem at that point is, typescript keeps reporting an error.  --- ### Environment * React Native Navigation version: 6.0.1 * React Native version: 0.61.5 * Platform(s) (iOS, Android, or both?): ios * Device info (Simulator/Device? OS version? Debug/Release?): iphone x </body>
		<created>2020-03-05 16:46:42</created>
		<closed>2020-04-19 06:01:00</closed>
	</bug>
	<bug>
		<id>6003</id>
		<title>[V6] modalPresentationStyle does not do anything if the modal is a stack</title>
		<body>### Issue Description  If I use a component modal it works fine, but if the modal is a stack, the modalPresentationStyle does not have effect. I would like to have the option to have the same modals as we had with RNN2.20.2.  Here is a reproduction in the playground: https://github.com/AlexDM0/react-native-navigation  Ironically, while doing the reproduction, I found that by setting  ``` modalPresentationStyle: 'fullScreen' ``` in the default options it actually DOES work! However, it should respect the option in the showModal method.  This does *not* respect the modalPresentationStyle: ```js                                        Navigation.showModal({       stack:{         children: [           { component: { name: target, passProps: props }}         ],         options: {           modalPresentationStyle: OptionsModalPresentationStyle.fullScreen,           modal: {             swipeToDismiss: false,           }         }       }     })   ```  This *does* respect the modalPresentationStyle: ```js                                        Navigation.showModal({   component: {       name: target,      passProps: props,     options: {       modalPresentationStyle: OptionsModalPresentationStyle.fullScreen     }   } })   ```  --- ### Environment * React Native Navigation version: 6.0.1 * React Native version: 0.61.5 * Platform(s) (iOS, Android, or both?): iOS 13.3.1 * Device info (Simulator/Device? OS version? Debug/Release?): iPhone X </body>
		<created>2020-03-05 16:35:05</created>
		<closed>2020-03-10 07:24:33</closed>
	</bug>
	<bug>
		<id>5996</id>
		<title>Fatal Exception: java.lang.NullPointerException: getNavigator()' on a null object reference</title>
		<body>### Issue Description  From Firebase Crashlytics  ``` Fatal Exception: java.lang.NullPointerException: Attempt to invoke virtual method 'com.reactnativenavigation.viewcontrollers.navigator.Navigator com.reactnativenavigation.NavigationActivity.getNavigator()' on a null object reference        at com.reactnativenavigation.react.NavigationModule.navigator(NavigationModule.java:189)        at com.reactnativenavigation.react.NavigationModule.lambda$mergeOptions$2$NavigationModule(NavigationModule.java:113)        at com.reactnativenavigation.react.-$$Lambda$NavigationModule$Kz75rfJiWxNOhqKQxoQpIgp5gvE.run(:6)        at android.os.Handler.handleCallback(Handler.java:809)        at android.os.Handler.dispatchMessage(Handler.java:102)        at android.os.Looper.loop(Looper.java:166)        at android.app.ActivityThread.main(ActivityThread.java:7555)        at java.lang.reflect.Method.invoke(Method.java)        at com.android.internal.os.RuntimeInit$MethodAndArgsCaller.run(RuntimeInit.java:469)        at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:963) ```  ### Steps to Reproduce / Code Snippets / Screenshots  &lt;!-- Note: When embeding code, please format it and use syntax highlighting to improve readability --&gt; &lt;!-- ```js                                                         --&gt; &lt;!-- [ THIS CODE BLOCK WILL USE JAVASCRIPT SYNTAX HIGHLIGHTING ]   --&gt; &lt;!-- ```                                                           --&gt; No idea  --- ### Environment * React Native Navigation version: 4.8.4 * React Native version: 0.61.5 * Platform(s) (iOS, Android, or both?): Android * Device info (Simulator/Device? OS version? Debug/Release?): Release ![image](https://user-images.githubusercontent.com/3540152/75856426-64f75680-5e05-11ea-90bf-de4a26b52ff5.png) ![image](https://user-images.githubusercontent.com/3540152/75856453-6f195500-5e05-11ea-8a9b-e74a241cf627.png)  From Play Google Console: ![image](https://user-images.githubusercontent.com/3540152/75856939-6aa16c00-5e06-11ea-803d-d11410b6a208.png)  `java.lang.NullPointerException:    at com.reactnativenavigation.react.NavigationModule.navigator (NavigationModule.java:189)   at com.reactnativenavigation.react.NavigationModule.lambda$mergeOptions$2$NavigationModule (NavigationModule.java:113)   at com.reactnativenavigation.react.-$$Lambda$NavigationModule$Kz75rfJiWxNOhqKQxoQpIgp5gvE.run (Unknown Source:6)   at android.os.Handler.handleCallback (Handler.java:809)   at android.os.Handler.dispatchMessage (Handler.java:102)   at android.os.Looper.loop (Looper.java:166)   at android.app.ActivityThread.main (ActivityThread.java:7555)   at java.lang.reflect.Method.invoke (Native Method)   at com.android.internal.os.RuntimeInit$MethodAndArgsCaller.run (RuntimeInit.java:469)   at com.android.internal.os.ZygoteInit.main (ZygoteInit.java:963)`   According to the Firebase: **99% devices in background mode**  </body>
		<created>2020-03-04 07:55:49</created>
		<closed>2020-03-05 09:08:42</closed>
	</bug>
	<bug>
		<id>5976</id>
		<title>[v6 Android] bottomTabs elevation blocks any overlayed components</title>
		<body>### Issue Description  Seems that in v6, the bottomTabs take a higher elevation preference on android.  Essentially this breaks the ability to have an overlay (bespoke FAB in my case) positioned over the bottomTabs  ### Steps to Reproduce / Code Snippets / Screenshots ![image](https://user-images.githubusercontent.com/4627728/75531507-ecd5fe80-59c8-11ea-8d99-21902ed7c28c.png)  I essentially can't press the big plus button (its an overlay).    Perhaps this is an unintended regression caused by operator error, in which case I would love to know how to accomplish my goal.  Nonetheless, it only started with v6.  --- ### Environment * React Native Navigation version: v6.0.1 * React Native version: 0.61.5 * Platform(s) (iOS, Android, or both?): Android * Device info (Simulator/Device? OS version? Debug/Release?): Pixel 3 API 29 </body>
		<created>2020-02-28 09:27:01</created>
		<closed>2020-07-08 07:50:49</closed>
	</bug>
	<bug>
		<id>5968</id>
		<title>6.0 Regression, topbar animated has wrong colors and no opacity animation</title>
		<body>![2020-02-26 09 51 22](https://user-images.githubusercontent.com/579279/75304230-c8214000-587d-11ea-8e85-a4b74ab0b867.gif)  </body>
		<created>2020-02-26 01:53:31</created>
		<closed>2020-03-04 12:34:55</closed>
	</bug>
	<bug>
		<id>5950</id>
		<title>[v5.1.1] iOS: BottomTabs: tab gets initialised after switching to it by default, tabsAttachMode: 'together' not working</title>
		<body>### Issue Description  On iOS the new tabsAttachMode is not working. By default it uses `onSwitchToTab` and even when explicitly setting it to 'together', it still initialises only when switching to the tab  ### Steps to Reproduce / Code Snippets / Screenshots  &lt;!-- Note: When embeding code, please format it and use syntax highlighting to improve readability --&gt; &lt;!-- ```js                                                         --&gt; &lt;!-- [ THIS CODE BLOCK WILL USE JAVASCRIPT SYNTAX HIGHLIGHTING ]   --&gt; &lt;!-- ```                                                           --&gt;  - Add bottomTabs - Only the first tab will initialise, the others will initialise after switching to them - Android works fine 👍   I tried to add a reproducible example but I can't run the iOS playground.  I get this: ``` error: ~/Projects/react-native-navigation/lib/ios/RNNAnimationConfigurationOptions.h: No such file or directory ```  Also, running pod install does not work because of this:  ``` [!] CocoaPods could not find compatible versions for pod "OCMock":   In snapshot (Podfile.lock):     OCMock (= 3.5)    In Podfile:     OCMock  None of your spec sources contain a spec satisfying the dependencies: `OCMock, OCMock (= 3.5)`.  You have either:  * mistyped the name or version.  * not added the source repo that hosts the Podspec to your Podfile. ```  --- ### Environment * React Native Navigation version: 5.1.1 * React Native version: 0.60 * Platform(s) (iOS, Android, or both?): iOS * Device info (Simulator/Device? OS version? Debug/Release?): iOS Simulator </body>
		<created>2020-02-20 15:43:55</created>
		<closed>2020-03-11 08:30:38</closed>
	</bug>
	<bug>
		<id>5900</id>
		<title>V4: top bar title color is not reverting back when pop screen</title>
		<body>### Issue Description On pushed screen: ``` static options() {     return {       topBar: {         title: {           text: 'Pushed Screen',           color: 'red',         },       }     };   } ``` ![ezgif-3-1a601cf902e8](https://user-images.githubusercontent.com/7337535/73713749-1345a880-4741-11ea-95f3-59a99c31342f.gif) After pop, the top bar title color should back to black.  ### Environment * React Native Navigation version: 4.7.1 * React Native version: 0.61.5 * Platform(s) (iOS, Android, or both?): iOS * Device info (Simulator/Device? OS version? Debug/Release?): iOS 13. </body>
		<created>2020-02-04 04:33:59</created>
		<closed>2020-02-09 11:30:57</closed>
	</bug>
	<bug>
		<id>5890</id>
		<title>Calling setRoot after having bottom tabs</title>
		<body>### Issue Description  Hello,   my application has an authentication flow (1. root) -&gt; after which the user is logged in and directed to a root with bottom tabs (2. root).  Now, this root with bottom tabs has a prop tabsAttachMode set to "onSwitchToTab", which means it will render the tabs only when the user clicks on them and it works fine.  The issue is when the user wants to log out of the application and we need to use the setRoot again to bring him back to the authentication flow (1. root).  On the call of setRoot and closure of the main root with bottom tabs (2. root), the navigation first does the setRoot (OK) -&gt; calls the render methods for the other tabs that were never shown (not OK). In our case, we have functions hooked to the rendering of the screen, which call the API and the navigation should never run these render methods when changing the root.  ### Steps to reproduce  1. Create root with one screen, which calls setRoot which has bottom tabs with more than 1 tab.  2. Set tabsAttachMode: "onSwitchToTab" on the bottom tabs options. 3. Without navigating to other tabs, call setRoot back to the first screen (or even to some new root) and check the console for calls on the other screens in the main stack (or console log something in the screen componentDidMount in other tabs)  ### Environment * React Native Navigation version: ^4.6.0 * React Native version: 0.59.10 * Platform(s) (iOS, Android, or both?): Android * Device info (Simulator/Device? OS version? Debug/Release?): Device - Android 6.0.1, Debug and release </body>
		<created>2020-01-29 13:54:30</created>
		<closed>2020-08-09 08:10:06</closed>
	</bug>
	<bug>
		<id>5889</id>
		<title>[iOS 13] Overlays intercept touch on iPad Pro + iPad Air</title>
		<body>### Issue Description  On iPad Pro and iPad Air models, overlays with ``` interceptTouchOutside: false ``` do not work as expected as they actually absorb all the touch events. This is strange because it does not happen on normal iPhones or even the standard iPad's (6th generation).  Similar closed issues: - https://github.com/wix/react-native-navigation/issues/5661 - https://github.com/wix/react-native-navigation/issues/5579  ### Steps to Reproduce / Code Snippets / Screenshots  Fork with reproducible example: https://github.com/ItsNoHax/react-native-navigation/tree/reproduce-invisible-overlay  Steps: - Open a simulator of type: iPad Pro 3rd generation 12 inch. - Open the playground project and navigate to the 3rd tab: Navigation - Click on the Overlay button to open OverlayScreen - Click on Show invisible overlay - Try to click any buttons and notice how it's not possible - Re-do the steps above with a simulator of type: iPhone 11 and note how it does work  --- ### Environment * React Native Navigation version: 4.6.0 * React Native version: 0.61.5 * Platform(s) (iOS, Android, or both?): iOS 13 * Device info (Simulator/Device? OS version? Debug/Release?): All </body>
		<created>2020-01-29 13:47:31</created>
		<closed>2020-03-15 15:39:14</closed>
	</bug>
	<bug>
		<id>5871</id>
		<title>[V4] Regression "Flash" on launch after Splash screen.</title>
		<body>### Issue Description  In 4.0.5 a regression is introduced that causes a noticeable flash of the background before showing the component (right after the splash screen disappears). I tried many different versions and it was introduced in 4.0.5 while still working in 4.0.4.  ### Steps to Reproduce / Code Snippets / Screenshots  See  above  --- ### Environment * React Native Navigation version: between 4.0.5 * React Native version: 0.61.5 * Platform(s) (iOS, Android, or both?): iOS * Device info (Simulator/Device? OS version? Debug/Release?): Any </body>
		<created>2020-01-24 02:12:30</created>
		<closed>2020-02-12 07:56:46</closed>
	</bug>
	<bug>
		<id>5854</id>
		<title>[V4][Android] White screen on pop after setStackRoot</title>
		<body>### Issue Description  White screen appears for a moment on pop after setStackRoot, even with waitForRender  ![Screen Recording 2020-01-18 at 14 48 32](https://user-images.githubusercontent.com/12295016/72663846-197d1a80-3a08-11ea-8939-2f9ca0bbe82b.gif)  ### Steps to Reproduce / Code Snippets / Screenshots  Add waitForRender then use setStackRoot with two screens then pop to first screen and you will see white screen for a moment. Reproducible in playground app - https://github.com/sintylapse/react-native-navigation/tree/white-screen-on-pop-after-setstackroot . The only changes are: added green background to root component, added waitForRender for setStackRoot  --- ### Environment * React Native Navigation version: 4.4.0 * React Native version: 0.61.4 * Platform(s) (iOS, Android, or both?): Android * Device info (Simulator/Device? OS version? Debug/Release?): Simulator/Device, Debug/Release </body>
		<created>2020-01-18 12:32:25</created>
		<closed>2020-07-14 11:56:32</closed>
	</bug>
	<bug>
		<id>5816</id>
		<title>Fab position under the bottomtab when change tab.</title>
		<body>### Issue Description  [ENTER DESCRIPTION HERE]  ### Steps to Reproduce / Code Snippets / Screenshots  &lt;!-- Note: When embeding code, please format it and use syntax highlighting to improve readability --&gt; &lt;!-- ```js                                                         --&gt; &lt;!-- [ THIS CODE BLOCK WILL USE JAVASCRIPT SYNTAX HIGHLIGHTING ]   --&gt; &lt;!-- ```                                                           --&gt; [FILL THIS OUT]  --- ### Environment * React Native Navigation version: ^4.0.9 * React Native version: 0.61.5 * Platform(s) (iOS, Android, or both?): not show on IOS and incorrect position on android when change tab. * Device info (Simulator/Device? OS version? Debug/Release?):  ![Screenshot_1577723152](https://user-images.githubusercontent.com/28852565/71590748-43a39100-2b5c-11ea-8ff8-656858ade215.png) ![Screenshot_1577723147](https://user-images.githubusercontent.com/28852565/71590749-43a39100-2b5c-11ea-8d6b-04018c05c32e.png)  FILL THIS OUT </body>
		<created>2019-12-30 16:31:34</created>
		<closed>2020-05-20 07:23:30</closed>
	</bug>
	<bug>
		<id>5797</id>
		<title>Status bar colour cannot be set for certain modal types</title>
		<body>### Issue Description  With certain modal presentation styles it is not possible to set the status bar colour. One example is `currentContext`, (the default mode?).  When commenting out the default modalPresentationStyle in the playground app you will see that the status bar colour for StatusBarOptionsScreen and FullScreenmodalScreen are dark, even though they were set to light. If the line in options is uncommented it works again.  ### Steps to Reproduce / Code Snippets / Screenshots  To reproduce in the playground app, apply the following diff:  ```diff ──────────────────────────────────────────────────────────────────── modified: playground/src/commons/Options.js ──────────────────────────────────────────────────────────────────── @ Options.js:25 @ const setDefaultOptions = () =&gt; Navigation.setDefaultOptions({   animations: {     ...useSlowOpenScreenAnimations ? slowOpenScreenAnimations : {}   },   modalPresentationStyle: 'fullScreen'   // modalPresentationStyle: 'fullScreen' });  const slowOpenScreenAnimations = { ──────────────────────────────────────────────────────────────────── modified: playground/src/screens/FullScreenModalScreen.js ──────────────────────────────────────────────────────────────────── @ FullScreenModalScreen.js:19 @ class FullScreenModalScreen extends React.Component {   static options() {     return {       statusBar: {         visible: false         style: 'light'         // visible: false       },         topBar: {         testID: MODAL_SCREEN_HEADER, @ FullScreenModalScreen.js:37 @ class FullScreenModalScreen extends React.Component {         &lt;Button label='Show Modal' testID={MODAL_BTN} onPress={this.showModal} /&gt;         &lt;Button label='Dismiss Modal' testID={DISMISS_MODAL_BTN} onPress={this.dismissModal} /&gt;         &lt;Button label='Push' testID={PUSH_BTN} onPress={this.push} /&gt;         &lt;Button label='Dismiss Modal' testID={DISMISS_MODAL_BTN} onPress={this.dismissModal} /&gt;       &lt;/Root&gt;     );   } ──────────────────────────────────────────────────────────────────── modified: playground/src/screens/StatusBarOptionsScreen.js ──────────────────────────────────────────────────────────────────── @ StatusBarOptionsScreen.js:12 @ class StatusBarOptions extends React.Component {   static options() {     return ({       statusBar: {         translucent: true,         drawBehind: true         // translucent: true,         // drawBehind: true,         style: 'light'       },       topBar: {         elevation: 0, @ StatusBarOptionsScreen.js:47 @ class StatusBarOptions extends React.Component {           &lt;Button label='BottomTabs' onPress={this.bottomTabs} /&gt;           &lt;Button label='Open Left' onPress={() =&gt; this.open('left')} /&gt;           &lt;Button label='Open Right' onPress={() =&gt; this.open('right')} /&gt;           &lt;Button label='Dismiss modal' onPress={() =&gt; this.dismissModal()} /&gt;         &lt;/Root&gt;       &lt;/View&gt;     ); @ StatusBarOptionsScreen.js:81 @ const style = StyleSheet.create({   } }); ```  --- ### Environment * N.b. reproducible in playground app * React Native Navigation version: 4.0.5 * React Native version: 0.60.4 * Platform(s) (iOS, Android, or both?): Both * Device info (Simulator/Device? OS version? Debug/Release?): iOS 12 (possibly 13 too but I didn't test fullscreen modals there) </body>
		<created>2019-12-19 15:42:12</created>
		<closed>2020-03-03 12:45:04</closed>
	</bug>
	<bug>
		<id>5785</id>
		<title>Background color of topBar is dark grey, even though it's set to 'transparent' (iOS 12)</title>
		<body>### Issue Description  Background color of topBar is dark grey, even though it's set to 'transparent' (iOS 12)  ### Steps to Reproduce / Code Snippets / Screenshots  ``` options: {     ...     topBar: {       drawBehind: true,       noBorder: true,       borderHeight: 0,       elevation: 0,       background: {         color: 'transparent',       },       leftButtonColor: '#000',       rightButtonColor: '#000',       backButton: {         color: '#000',       },     },     ...   }, ```  ![Simulator Screen Shot - iPhone 5s - 2019-12-17 at 16 58 41](https://user-images.githubusercontent.com/14848797/71011898-82623180-20ee-11ea-941f-ae00a2690724.png)   --- ### Environment * React Native Navigation version: 4.0.6 * React Native version: 0.61.5 * Platform(s) (iOS, Android, or both?): iOS 12.4 * Device info (Simulator/Device? OS version? Debug/Release?): On iPhone 5S with iOS 12.4 </body>
		<created>2019-12-17 15:56:20</created>
		<closed>2019-12-23 12:40:09</closed>
	</bug>
	<bug>
		<id>5782</id>
		<title>BottomTab selectedTextColor changes to blue when Navigation.showModal is called. </title>
		<body>### Issue Description  Hello, I am working on an app that has Cyan as the bottomTab selectedTextColor and selectedIconColor. We noticed that sometimes randomly two of the three bottomTabs had their selectedTextColor changed to a darker blue color. (I think the IOS default blue color). After some looking around, I noticed that this happened whenever we call a screen with `Navgiation.showModal`. When we then come back to a screen that has bottomTabs, the non-selected two bottom tabs have their selected color changed.   ### Steps to Reproduce / Code Snippets / Screenshots  We set the default options like this in app.js: ```js   Navigation.setDefaultOptions({     bottomTab: {       iconColor: Color.DarkGreen, //#1c4448       selectedIconColor: Color.Cyan, //#3BF3DC       textColor: Color.DarkGreen,       selectedTextColor: Color.Cyan,       fontFamily: 'Roboto',       fontSize: 10,       overrideBackPress: true,       translucent: true,       visible: false,       drawBehind: true,     } }) ``` Then whenever we show a modal, we do:  ```js Navigation.showModal({     component: {       name: 'Login',     },   }), ```  If we then come back to a screen with bottomTabs where, for instance, the right tab is selected, that one looks fine, but the middle and left tabs have their selected color changed to blue.  How it should look: &lt;img width="36" alt="Schermafbeelding 2019-12-17 om 12 23 18" src="https://user-images.githubusercontent.com/32323786/70991612-1a005980-20c8-11ea-87ce-dcad8bb69c4c.png"&gt;  How it looks after Navigation.showModal gets called: &lt;img width="38" alt="Schermafbeelding 2019-12-17 om 12 19 57" src="https://user-images.githubusercontent.com/32323786/70991626-21276780-20c8-11ea-9c15-aa66cae7232b.png"&gt;   --- ### Environment * React Native Navigation version: 2.27.9 * React Native version: 0.59.9 * Platform: iOS * Device info: It seems to happen on all iPhone devices I tested. Simulator and Real Device. </body>
		<created>2019-12-17 11:31:58</created>
		<closed>2020-03-31 14:08:06</closed>
	</bug>
	<bug>
		<id>5766</id>
		<title>[iOS] Topbar/BottomTab defaultOptions' fontSize no longer works</title>
		<body>### Issue Description  While updating our production app from 4.0.3 to 4.05 we are seeing some regression in bottomTab/topBar default options' fontSize. It seems that regardless of what fontSize we put in 4.0.5 it doesn't change at all. (Easiest to download the images and compare side by side)  EDIT: Seems like the same goes for topBar's subtitle size.  On 4.0.3: &lt;img src="https://user-images.githubusercontent.com/4223434/70791139-c673d000-1d96-11ea-81d8-42b2e0cd0a58.png" width="300"&gt;  On 4.0.5 &lt;img src="https://user-images.githubusercontent.com/4223434/70791151-cc69b100-1d96-11ea-90c8-d647e9cb750c.png" width="300"&gt;   ### Steps to Reproduce / Code Snippets / Screenshots  ```js export const DEFAULT_OPTIONS: Options = {   bottomTab: {     ...,     fontSize: 11,   },   topBar: {     ...,     title: {       fontSize: 18,     },   }, }; ```  --- ### Environment * React Native Navigation version: 4.0.5 * React Native version: 0.61.5 * Platform(s) (iOS, Android, or both?): iOS * Device info (Simulator/Device? OS version? Debug/Release?): All </body>
		<created>2019-12-13 10:01:29</created>
		<closed>2019-12-15 09:37:41</closed>
	</bug>
	<bug>
		<id>5765</id>
		<title>[v4.0.5] Topbar not showing if set custom fontFamily</title>
		<body>### Issue Description  In v4.0.5, if topBar title is set with fontFamily, it will be disappear on iOS. Workaround fix: specify fontSize to title. v4.0.3 working fine.  --- ### Environment * React Native Navigation version: FILL THIS OUT * React Native version: FILL THIS OUT * Platform(s) (iOS, Android, or both?): FILL THIS OUT * Device info (Simulator/Device? OS version? Debug/Release?): FILL THIS OUT </body>
		<created>2019-12-13 09:46:04</created>
		<closed>2019-12-15 09:37:41</closed>
	</bug>
	<bug>
		<id>5763</id>
		<title>[v4][iOS] Stack modal swipe-dismiss emits stack id</title>
		<body>### Issue Description This PR 4cb0e98a6756317f8f61f5ee2b3d7530cd180f61 has fixed the modal dismissal event not emitting when the iOS 13 modal is swiped down to be dismissed. However it's emitting the stack id when stacked modal is used.  ### Steps to Reproduce / Code Snippets / Screenshots I've created a reproduction [here](https://github.com/jinshin1013/rnn-boilerplate), checkout repro/ios-13-modal branch.   But tl;dr  ```tsx // Opening the modal Navigation.showModal({   stack: {     id: 'MODAL_STACK_ID', // Stack modal id     children: [       {         component: {           id: 'MODAL_COMPONENT_ID', // Modal component id           name: publicRoute.exampleModal,         },       },     ],   }, })  // Modal dismissed event useEffect(() =&gt; {   const modalDismissEvent = Navigation.events().registerModalDismissedListener(({ componentId }) =&gt; {   // When dismissed from swiping down gesture   // componentId === 'MODAL_STACK_ID'    // When dismissed from calling Navigation.dismissModal()   // componentId === 'MODAL_COMPONENT_ID'   })  return () =&gt; modalDismissEvent.remove() }, []) ```   --- ### Environment * React Native Navigation version: 4.0.5 * React Native version: 0.60.5 * Platform(s) (iOS, Android, or both?): iOS 13 * Device info (Simulator/Device? OS version? Debug/Release?): All </body>
		<created>2019-12-12 20:27:07</created>
		<closed>2019-12-15 12:55:38</closed>
	</bug>
	<bug>
		<id>5762</id>
		<title>In version `4.0.5`, the rendering of the title component in TopBar gets delayed.</title>
		<body>### Issue Description  TopBar gets buggier with each new version... I started using a component with `alignment: 'fill'` to display a title, because of various issues with simple text title. (e.g. https://github.com/wix/react-native-navigation/issues/5739) But now, in version `4.0.5`, the rendering of the title component in TopBar gets delayed significantly (probably until `componentDidMount` of the screen component finishes). It is OK in version 4.0.4 to which I reverted.  ### Steps to Reproduce / Code Snippets / Screenshots  &lt;!-- Note: When embeding code, please format it and use syntax highlighting to improve readability --&gt; &lt;!-- ```js                                                         --&gt; &lt;!-- [ THIS CODE BLOCK WILL USE JAVASCRIPT SYNTAX HIGHLIGHTING ]   --&gt; &lt;!-- ```                                                           --&gt; [FILL THIS OUT]  --- ### Environment * React Native Navigation version: 4.0.5 (OK in 4.0.4) * React Native version: 0.61.5 * Platform(s) (iOS, Android, or both?): iOS * Device info (Simulator/Device? OS version? Debug/Release?): Both, iOS 13.3, Both </body>
		<created>2019-12-12 18:36:07</created>
		<closed>2020-01-24 16:59:34</closed>
	</bug>
	<bug>
		<id>5761</id>
		<title>[V4] iOS crash when reload if you have overlays</title>
		<body>If your app have overlay, after reload, app will be crashed The problem is in RNNOverlayManager.m `- (void)dismissAllOverlays {     for (RNNOverlayWindow* overlayWindow  in _overlayWindows) {         [self detachOverlayWindow:overlayWindow];     } }` When app receive notify reload, it will dismiss all overlay, but, the code is running loop in "enumerate" the "mutable array" We should fix to this `- (void)dismissAllOverlays {     NSArray *_immutableArray=[NSArray arrayWithArray:_overlayWindows];     for (RNNOverlayWindow* overlayWindow  in _immutableArray) {         [self detachOverlayWindow:overlayWindow];     } }`  * React Native Navigation version: 4.0.4 * React Native version: 0.60.5 * Platform(s) (iOS, Android, or both?): iOS </body>
		<created>2019-12-12 03:57:05</created>
		<closed>2019-12-15 10:28:32</closed>
	</bug>
	<bug>
		<id>5759</id>
		<title>[V3] Typescript warning when setting custom bottom tab icon</title>
		<body>### Issue Description The documentation says we can specify a custom bottom tab icon with a source uri string, however typescript throws an error which expects icon to be a number.  https://wix.github.io/react-native-navigation/#/docs/styling?id=custom-tab-icons  ### Steps to Reproduce / Code Snippets / Screenshots   ```js const ComponentWithBottomTab : { component: LayoutComponent } = {   component: {     name: 'foo',     options: {       bottomTab: {         icon: {           uri: 'icon_name',         }       }     }   } } ```  This code snippet generates the following typescript warning ``` Type '{ bottomTab: { icon: { uri: string; }; }; }' is not assignable to type 'Options'.   Types of property 'bottomTab' are incompatible.     Type '{ icon: { uri: string; }; }' is not assignable to type 'OptionsBottomTab'.       Types of property 'icon' are incompatible.         Type '{ uri: string; }' is not assignable to type 'number'.ts(2322)   Layout.d.ts(14, 5): The expected type comes from property 'options' which is declared here on type 'LayoutComponent&lt;{}&gt;' ```  This is because the type for icon as defined in `OptionsBottomTab` is  `ImageRequireSource = number` ```js export interface OptionsBottomTab {     ...     /**      * Set the tab icon      */     icon: ImageRequireSource;     ... } ```  --- ### Environment * React Native Navigation version: 3.2.0 * React Native version: 0.61.1 * Platform(s) (iOS, Android, or both?): Android * Device info (Simulator/Device? OS version? Debug/Release?): Pixel 3, Android 10, Debug </body>
		<created>2019-12-11 22:23:21</created>
		<closed>2019-12-15 12:56:11</closed>
	</bug>
	<bug>
		<id>5743</id>
		<title>Android - Topbar valishes immediately when popping</title>
		<body>### Issue Description When popping from a route with a navbar to a route without, the navbar immediately vanishes.  &lt;img src="http://g.recordit.co/dg7C1M4lwH.gif"/&gt;  ### Steps to Reproduce / Code Snippets / Screenshots  ```js    // The initial screen     screenA: () =&gt; ({         component: {             name: '/',             options: {                 topBar:                     {                         drawBehind: true,                         visible: false,                         background: {                             color: 'translucent',                             translucent: true,                         },                     }             },         },     }),      screenB: () =&gt; ({         component: {             name: '/profile/LoginScreen',             options: {                 topBar: {                     title: {                         text: 'Login',                         color: "white"                     },                     visible: true,                     drawBehind: false,                     background: {                         color: "#00a1de",                         translucent: false,                     },                     backButton: {                         color: "white"                     },                 },             },         },     }) ``` --- ### Environment * React Native Navigation version: 4.0.4 (happens also on 3.1.0) * React Native version: 0.61.5 * Platform(s) (iOS, Android, or both?): ANDROID * Device info (Simulator/Device? OS version? Debug/Release?): Pixel XL API 29  </body>
		<created>2019-12-06 18:40:35</created>
		<closed>2020-01-16 22:26:58</closed>
	</bug>
	<bug>
		<id>5742</id>
		<title>[V3/V4] Android &lt;= 8.X show/hide overlay causes abnormal screen behavior</title>
		<body>### Issue Description  This issue only is occurring on Android &lt;= version 8.x both in the simulator and on an app both in debug and release.  After showing/hiding an overlay, pushed screens no longer render correctly. The component exists and fetches it's data, but it doesn't get pushed visually over the correct tab. The screens reappear after pushing the app to the background, then reopening from the background. The code works on future versions of Android, and on IOS.   Still working on making a smaller repro. We are using tab based navigation.   ### Steps to Reproduce / Code Snippets / Screenshots  ```js Navigation.showOverlay({ component: { name: 'example_overlay' } }); ... later from the overlay Navigation.dismissOverlay(componentId); Navigation.push('STACK_ID', { component: { name: 'component_name' } }); ```   --- ### Environment * React Native Navigation version: "^3.2.0", * React Native version: "0.61.3" * Platform(s) (iOS, Android, or both?): Android &lt;= 8.x * Device info (Simulator/Device? OS version? Debug/Release?): Simulator &amp; Device. Release &amp; Debug. Android &lt;= 8.x.</body>
		<created>2019-12-06 18:37:04</created>
		<closed>2019-12-26 14:12:48</closed>
	</bug>
	<bug>
		<id>5739</id>
		<title>Title becomes very small if I specify 'fontWeight'</title>
		<body>### Issue Description  Hi, After some recent updates, the title on iOS becomes very small if fontWeight is specified. (I have it set to 'bold', but the title gets small for any value of fontWeight, even 'Regular'.) Without fontWeight, size is OK.  ### Steps to Reproduce / Code Snippets / Screenshots  ```     topBar: {       visible: true,       title: {         color: '#ffffff',         fontWeight: 'bold',       },      ...      } ```  --- ### Environment * React Native Navigation version: 4.0.4 * React Native version: 0.61.5 * Platform(s) (iOS, Android, or both?): iOS * Device info (Simulator/Device? OS version? Debug/Release?): Simulator, for now </body>
		<created>2019-12-06 14:30:59</created>
		<closed>2019-12-16 07:10:18</closed>
	</bug>
	<bug>
		<id>5738</id>
		<title>drawBehind is not reset to default value after pushing or popping a screen</title>
		<body>### Issue Description I don't display the bottom tabs on most of my screen. So, I have set the `visible` to false and `drawBehind` to true for `bottomTabs`  by default using the `setDefaultOptions`. On some screens where I show the bottom tabs, I set `visible` to true and `drawBehind` to false. When I push a new screen that doesn't display bottom tabs from a screen on which the bottom tabs are visible, there is an empty bar at the bottom which is because the `drawBehind` value for bottom tabs is not set to false which is the default value. If I set the `drawBehind` to true explicitly on the new screen, the empty bar at the bottom is not shown.  **I started to see this issue after migrating from v2 to v4. On v2, the screen correctly inherits the default options but in v4, it is not inheriting the `drawBehind` value for `bottomTabs` from the default values.**  ### Steps to Reproduce / Code Snippets / Screenshots  I am not able to run the playground app on my machine. I keep getting one error after another as I continue to fix problem in order to run the app. I am listing the steps to reproduce here:  1. Set the default value of `drawBehind` for `bottomTabs` to true as shown below:  ```js  Navigation.setDefaultOptions({       bottomTabs: {         visible: false,         drawBehind: true,       } }) ```  2. Push a screen where it is set to false by setting below on the screen  ```js static options(passProps) {     return {       bottomTabs: {         visible: true,         drawBehind: false       }     }   } ```  Bottom tabs visible &lt;img width="379" alt="Screenshot 2019-12-09 at 7 22 24 AM" src="https://user-images.githubusercontent.com/7475133/70401232-bf765600-1a54-11ea-97f9-dcdf2cba0dff.png"&gt;  3. Push a screen where no static options are defined such that it should use the defaults which is bottom tabs are not visible and draw behind is set to true. Observe that the area where bottom tabs would have been displayed is left blank.  Bottom tabs not visible. Observe the empty grey bar at bottom. &lt;img width="379" alt="Screenshot 2019-12-09 at 7 22 45 AM" src="https://user-images.githubusercontent.com/7475133/70401246-d0bf6280-1a54-11ea-9148-017b77292c00.png"&gt;  4. Set the `drawBehind` to true explicitly  ```js static options(passProps) {     return {       bottomTabs: {         drawBehind: true       }     }   } ```  Empty grey bar at bottom not seen &lt;img width="379" alt="Screenshot 2019-12-09 at 7 30 57 AM" src="https://user-images.githubusercontent.com/7475133/70401516-f39e4680-1a55-11ea-9fb7-1da1d9c193a2.png"&gt;    --- ### Environment * React Native Navigation version:4.0.3 * React Native version: 0.61.5 * Platform(s) (iOS, Android, or both?): Android * Device info (Simulator/Device? OS version? Debug/Release?): All </body>
		<created>2019-12-06 07:03:01</created>
		<closed>2019-12-17 09:32:33</closed>
	</bug>
	<bug>
		<id>5736</id>
		<title>Android bottomTabs rendering blank on Android API 18/19</title>
		<body>### Issue Description  I did some recent upgrades of dependencies and have noticed that old versions of Android are getting blank bottom tabs. The tabs are still functional (i.e. I can tap the blank space where a button should be, and it transitions to the tab), but there's just no visuals rendered.  ![image](https://user-images.githubusercontent.com/1091291/70263386-33b6ae00-1764-11ea-826a-bf602cf1c233.png)  Trying different simulators, this seems to only be happening on API versions &lt; 21.  I've confirmed the behavior on both Jellybean (18) and KitKat(19).  JellyBean is basically dead, but KitKat still has 7% market share so would prefer not to lose these users.  ### Steps to Reproduce / Code Snippets / Screenshots Here's sample code, the icons are coming from 'react-native-svg-icons' (but converted to bitmaps before running this code and stored, as per the guide).  I'm seeing icons from the same font rendering elsewhere in the app, so I hope that is working.  ``` const tabs = [{       stack: {         children: [browseCards],         options: {           bottomTab: {             text: t`Cards`,             icon: iconsMap.cards,           },         },       },     }, { ... }]; Navigation.setDefaultOptions({       topBar: {         buttonColor: COLORS.lightBlue,         background: {           color: 'white',         },       },       layout: {         backgroundColor: 'white',       },       bottomsTabs: {         elevation: 8,       },       bottomTab: {         textColor: COLORS.darkGray,         iconColor: COLORS.darkGray,         selectedIconColor: COLORS.lightBlue,         selectedTextColor: COLORS.lightBlue,       },     });     Navigation.setRoot({       root: {         bottomTabs: {           children: tabs,         },       },     }); ```  --- ### Environment * React Native Navigation version: 4.0.3 * React Native version: 0.61.5 * Platform(s)): Android * Device info (Simulator/Device? OS version? Debug/Release?): Simulator, confirmed to be broken on Android API 18/19 but working on API 21.</body>
		<created>2019-12-05 18:40:34</created>
		<closed>2019-12-09 10:57:47</closed>
	</bug>
	<bug>
		<id>5730</id>
		<title>Wrong topBarHeight with UIModalPresentationPageSheet</title>
		<body>### Issue Description  Starting from iOS 13, `UIModalPresentationPageSheet` is not covering the entire screen, and therefore, the navigation bar doesn't have the same size.  &lt;div&gt;   &lt;img height="500" src="https://user-images.githubusercontent.com/7189823/70196686-9150e900-16d7-11ea-88ef-44d1ba516e6e.png" /&gt;   &lt;img height="500" src="https://user-images.githubusercontent.com/7189823/70196672-826a3680-16d7-11ea-9fbe-831d65b6a968.png" /&gt; &lt;/div&gt;  But, when we call `Navigation.constants().topBarHeight`, is still returning `44`.  If we look at the View Hierarchy, it should be `56`.  | iOS 12 | iOS 13 | | - | - | | &lt;img height="250" src="https://user-images.githubusercontent.com/7189823/70196907-2358f180-16d8-11ea-979d-bee65d47f8c8.png" /&gt; | &lt;img height="250" src="https://user-images.githubusercontent.com/7189823/70196938-44b9dd80-16d8-11ea-9f7c-47f2ca22b83c.png" /&gt; |  https://github.com/wix/react-native-navigation/blob/65118b1ed28dd5a4636dabd5952c515d18a0b802/lib/ios/RNNStackController.m#L21-L23  is still returning `44`, while  https://github.com/wix/react-native-navigation/blob/65118b1ed28dd5a4636dabd5952c515d18a0b802/lib/ios/RNNStackController.m#L33-L35  is returning `UIModalPresentationPageSheet`. 🤔   --- ### Environment * React Native Navigation version: 4.0.3 * React Native version: 0.61.5 * Platform(s) (iOS, Android, or both?): iOS * Device info (Simulator/Device? OS version? Debug/Release?): Simulator, iPhone 11 iOS 13.2.1, Debug. </body>
		<created>2019-12-05 01:57:06</created>
		<closed>2019-12-09 15:34:04</closed>
	</bug>
	<bug>
		<id>5724</id>
		<title>[v4] [v3] [android] currentTabIndex doesn't allow switching tabs</title>
		<body>### Issue Description  With `currentTabIndex` set, Android does not allow changing tabs  ### Steps to Reproduce / Code Snippets / Screenshots  ```js     // NOTE: Needs to be set via setDefaultOptions method, due to this issue:     // https://github.com/wix/react-native-navigation/issues/5679     Navigation.setDefaultOptions({       bottomTabs: {         currentTabIndex: 2,       }     }) ```  For an example of the issue in playground: https://github.com/GioLogist/react-native-navigation/tree/android-switching-currentTabIndex-enabled  --- ### Environment * React Native Navigation version: 4.0.3 * React Native version: 0.61.4 * Platform(s) (iOS, Android, or both?): Android * Device info (Simulator/Device? OS version? Debug/Release?): All of the above </body>
		<created>2019-12-03 18:30:37</created>
		<closed>2020-04-28 07:39:38</closed>
	</bug>
	<bug>
		<id>5723</id>
		<title>Small button area in navbar on ios</title>
		<body>### Issue Description  Small button area in navbar on ios. With real use cases, it’s very difficult to hit the button.  ### Steps to Reproduce / Code Snippets / Screenshots  &lt;img width="361" alt="Снимок экрана 2019-12-03 в 16 44 15" src="https://user-images.githubusercontent.com/3092044/70056538-af8dea80-15ec-11ea-9e24-137b9f8ca14f.png"&gt;   --- ### Environment * React Native Navigation version: 4.0.3 * React Native version: 0.61.5 * Platform(s) (iOS, Android, or both?): iOS * Device info (Simulator/Device? OS version? Debug/Release?): All ios devices Debug, Release </body>
		<created>2019-12-03 13:49:18</created>
		<closed>2020-09-16 19:57:03</closed>
	</bug>
	<bug>
		<id>5701</id>
		<title>[v3] iOS Dark/Light Mode - Bottom Tabs w/Background Color</title>
		<body>### Issue Description  iOS's Dark/Light mode effects styling in unpredictable ways.  ### Steps to Reproduce / Code Snippets / Screenshots  Start a tab app, with the following style options.  ```js {     bottomTab: {       backgroundColor: '#fff',       textColor: '#222',       iconColor: '#222',       selectedTextColor: '#251a7c',       selectedIconColor: '#251a7c',       fontFamily: 'Roboto',     } } ```  Dark mode enabled:  ![image](https://user-images.githubusercontent.com/4120754/69907514-3479c980-138b-11ea-8f57-0948b681624a.png)  Dark mode disabled:  ![image](https://user-images.githubusercontent.com/4120754/69907515-3d6a9b00-138b-11ea-8e0d-7802f2756c0d.png)  A couple of unexpected things happening here. First off, it seems to attempt to invert the background color, without doing so to the icon and text color. Which is inconsistent and makes for a rather unreadable UI.   Also, imo, it would make more sense if we were able to explicitly define secondary colors for dark/light mode, as oppose to everything being arbitrarily inverted. Is this possible?  All around, I do think that the dark/light mode can be documented a bit better. Glad to help and make a PR, once i can get a better understanding myself.  --- ### Environment React Native Navigation version: 3.7.0 React Native version: 0.61.4 Platform(s) (iOS, Android, or both?): iOS Device info (Simulator/Device? OS version? Debug/Release?): Simulator/Debug </body>
		<created>2019-12-01 00:08:47</created>
		<closed>2020-02-26 10:05:05</closed>
	</bug>
	<bug>
		<id>5697</id>
		<title>[V4] Setting backButton icon wont hide the native back arrow </title>
		<body>### Issue Description  Setting an `icon` to `backButton` doesn't hide the native back arrow  ### Steps to Reproduce / Code Snippets / Screenshots  &lt;!-- Note: When embeding code, please format it and use syntax highlighting to improve readability --&gt; ```js  backButton: {      color:'#758698',      icon:require('./src/assets/icons/back.png') }, ``` &lt;img width="363" alt="Screenshot 2019-11-29 at 10 06 38" src="https://user-images.githubusercontent.com/1925966/69853610-019edb00-1290-11ea-8de8-fcf6c7d722fa.png"&gt;  As you can see, it adds the image but does not hide the native one.  ### Environment * React Native Navigation version: 4.0.0 * React Native version: 0.61.5 * Platform(s) (iOS, Android, or both?): iOS * Device info (Simulator/Device? OS version? Debug/Release?): Simulator &amp; Device </body>
		<created>2019-11-29 08:08:56</created>
		<closed>2019-12-01 09:16:27</closed>
	</bug>
	<bug>
		<id>5696</id>
		<title>[V4] iOS TopBar noBorder and largeTitle color issue</title>
		<body>### Issue Description iOS TopBar `noBorder: true` and `largeTItle.color` options are no longer applied.  ### Steps to Reproduce / Code Snippets / Screenshots I've created a reproduction [here](https://github.com/jinshin1013/rnn-boilerplate), checkout `repro/ios-topbar-border` branch.  --- ### Environment * React Native Navigation version: 4.0.0 * React Native version: 0.61.5 * Platform(s) (iOS, Android, or both?): iOS * Device info (Simulator/Device? OS version? Debug/Release?): Both </body>
		<created>2019-11-28 22:46:59</created>
		<closed>2019-12-06 21:01:03</closed>
	</bug>
	<bug>
		<id>5691</id>
		<title>[V4] Can't set top bar's background color to transparent </title>
		<body>### Issue Description  Can't set top bar's background color to transparent after updating to 4.0.0  ### Steps to Reproduce / Code Snippets / Screenshots  &lt;!-- Note: When embeding code, please format it and use syntax highlighting to improve readability --&gt; &lt;!-- ```js                                                         --&gt; &lt;!-- [ THIS CODE BLOCK WILL USE JAVASCRIPT SYNTAX HIGHLIGHTING ]   --&gt; &lt;!-- ```                                                           --&gt; [FILL THIS OUT]  --- ### Environment * React Native Navigation version: 4.0.0 * React Native version: 0.61.1 * Platform(s) (iOS, Android, or both?): IOS * Device info (Simulator/Device? OS version? Debug/Release?): Simulator IOS13 Debug </body>
		<created>2019-11-27 17:36:48</created>
		<closed>2019-12-18 16:20:07</closed>
	</bug>
	<bug>
		<id>5689</id>
		<title>RuntimeException Tried to create view after it has already been destroyed</title>
		<body>version 3.2.0. i see the exception what would cause it? it is in getView()  src/main/java/com/reactnativenavigation/viewcontrollers/ViewController.java  ```java     public T getView() {         if (view == null) {             if (isDestroyed) {                 throw new RuntimeException("Tried to create view after it has already been destroyed");             }             view = createView();             view.setOnHierarchyChangeListener(this);             view.getViewTreeObserver().addOnGlobalLayoutListener(this);         }         return view;     } ```  ``` java.lang.RuntimeException: Tried to create view after it has already been destroyed     at com.reactnativenavigation.viewcontrollers.ViewController.getView(ViewController.java:173)     at com.reactnativenavigation.viewcontrollers.ChildController.getView(ChildController.java:33)     at com.reactnativenavigation.viewcontrollers.ParentController.getView(ParentController.java:75)     at com.reactnativenavigation.viewcontrollers.stack.StackController.lambda$push$4$StackController(StackController.java:164)     at com.reactnativenavigation.viewcontrollers.stack.-$$Lambda$StackController$06hFigyLWXXMellTVVP0d0y7blk.run     at com.reactnativenavigation.anim.NavigationAnimator$1.onAnimationEnd(NavigationAnimator.java:65)     at android.animation.Animator$AnimatorListener.onAnimationEnd(Animator.java:552)     at android.animation.AnimatorSet.endAnimation(AnimatorSet.java:1294)     at android.animation.AnimatorSet.doAnimationFrame(AnimatorSet.java:1079)     at android.animation.AnimationHandler.doAnimationFrame(AnimationHandler.java:146)     at android.animation.AnimationHandler.access$100(AnimationHandler.java:37)     at android.animation.AnimationHandler$1.doFrame(AnimationHandler.java:54)     at android.view.Choreographer$CallbackRecord.run(Choreographer.java:947)     at android.view.Choreographer.doCallbacks(Choreographer.java:761)     at android.view.Choreographer.doFrame(Choreographer.java:693)     at android.view.Choreographer$FrameDisplayEventReceiver.run(Choreographer.java:935)     at android.os.Handler.handleCallback(Handler.java:873)     at android.os.Handler.dispatchMessage(Handler.java:99)     at android.os.Looper.loop(Looper.java:193)     at android.app.ActivityThread.main(ActivityThread.java:6912)     at java.lang.reflect.Method.invoke(Method.java)     at com.android.internal.os.RuntimeInit$MethodAndArgsCaller.run(RuntimeInit.java:493)     at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:860) USER ```</body>
		<created>2019-11-27 01:53:05</created>
		<closed>2020-01-20 13:19:54</closed>
	</bug>
	<bug>
		<id>5688</id>
		<title>Android popTo() NullPointerException</title>
		<body>don't know how to reproduce concretely - comes into Sentry a lot never any helpful info other than native call stack seems to be a fatal error :(  "react-native-navigation": "3.2.0",  ``` java.lang.NullPointerException: Attempt to invoke virtual method 'java.lang.String com.reactnativenavigation.viewcontrollers.ViewController.getId()' on a null object reference     at com.reactnativenavigation.viewcontrollers.stack.StackController.popTo(StackController.java:287)     at com.reactnativenavigation.viewcontrollers.navigator.Navigator.lambda$popTo$4(Navigator.java:181)     at com.reactnativenavigation.viewcontrollers.navigator.-$$Lambda$Navigator$6Dbpov-DtFHLKxms2Mpj62NzD-8.run(lambda)     at com.reactnativenavigation.viewcontrollers.ViewController.performOnParentStack(ViewController.java:164)     at com.reactnativenavigation.viewcontrollers.navigator.Navigator.popTo(Navigator.java:181)     at com.reactnativenavigation.react.NavigationModule.lambda$popTo$6$NavigationModule(NavigationModule.java:137)     at com.reactnativenavigation.react.-$$Lambda$NavigationModule$8x2wy4PLlSbyjyfHtJeZ_V7TPts.run(lambda)     at android.os.Handler.handleCallback(Handler.java:739)     at android.os.Handler.dispatchMessage(Handler.java:95)     at android.os.Looper.loop(Looper.java:135)     at android.app.ActivityThread.main(ActivityThread.java:5910)     at java.lang.reflect.Method.invoke(Method.java)     at java.lang.reflect.Method.invoke(Method.java:372)     at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:1405)     at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:1200) ```  ``` Family | SM-G531M -- | -- Model | SM-G531M (LMY48B) Architecture | armeabi-v7a Battery Level | 57% Orientation | portrait Memory | Total: 902.4 MB / Free: 166.7 MB Capacity | Total: 4.8 GB / Free: 422.8 MB Simulator | False brand | samsung charging | False low_memory | False manufacturer | samsung online | True screen_density | 1.5 screen_dpi | 240 screen_resolution | 960x540 ```</body>
		<created>2019-11-27 01:47:59</created>
		<closed>2020-04-07 05:20:23</closed>
	</bug>
	<bug>
		<id>5662</id>
		<title>[Android 9, 3.6.0]After hiding StatusBar container does not get resized</title>
		<body>### Issue Description  When I hide the `StatusBar` on Android 9.0 container does not get resized and a (white) stripe remains at the top of the screen. Without `react-native-navigation` it works fine!  ### Steps to Reproduce / Code Snippets / Screenshots  | With react-native-navigation               | Without react-native-navigation               | | -------------------- | ------------------- | |![statusbar_bug_with_react-native-navigation](https://user-images.githubusercontent.com/2664424/69136801-c9dbaa80-0abb-11ea-882d-08042a77c848.gif)|![statusbar_bug_without_react-native-navigation](https://user-images.githubusercontent.com/2664424/69136813-d4963f80-0abb-11ea-9f8f-b15f46eca346.gif)|  Let me attach a sample projects of the videos above:  [StatusBarBug_Without_react-native-navigation.zip](https://github.com/wix/react-native-navigation/files/3863190/StatusBarBug_Without_react-native-navigation.zip)  [StatusBarBug_With_react-native-navigation.zip](https://github.com/wix/react-native-navigation/files/3863192/StatusBarBug_With_react-native-navigation.zip)  --- ### Environment * React Native Navigation version: 3.6.0 * React Native version: 0.61.4 * Platform: Android * Device info: Reproducible both in Emulator/Device, Debug/Release </body>
		<created>2019-11-19 10:15:51</created>
		<closed>2020-03-16 07:26:43</closed>
	</bug>
	<bug>
		<id>5651</id>
		<title>[V3] TopBar Icon color is always blue on iOS 13</title>
		<body>### Issue Description  I'm trying to set topBar icons with custom colors, but they're always defaulting to blue on iOS 13.  ### Steps to Reproduce / Code Snippets / Screenshots  ![image](https://user-images.githubusercontent.com/768052/68719143-f40d0400-05b3-11ea-9699-5dc7cd28fcdb.png)  Same thing happens in playground:  ![image](https://user-images.githubusercontent.com/768052/68719159-fcfdd580-05b3-11ea-8726-57437ee573f3.png)  in both instances the icons are supposed to be red. If I remove the color from config, the image color will be used (black).  ```js     rightButtons: [       {         id: 'add-shelf',         icon: require('../../../assets/ui/book-library.png'),         color: 'red',       }, ```  --- ### Environment * React Native Navigation version: `3.5.1` * React Native version: `0.61.4` * Platform(s) (iOS, Android, or both?): `iOS` * Device info (Simulator/Device? OS version? Debug/Release?): `13.2 Simulator` </body>
		<created>2019-11-12 23:23:57</created>
		<closed>2019-11-26 13:54:41</closed>
	</bug>
	<bug>
		<id>5648</id>
		<title>[V3][iOS] UI API called on a background thread</title>
		<body>### Issue Description  I'm currently updating an existing project from RN 0.59 to RN 0.61 and RNN 2 to RNN 3.  Most of the other react libraries are also being updated (Firebase, etc...).  I'm now experiencing errors (not blocking apparently) that I was not experiencing before:      2019-11-12 10:49:30.619184+0100 My App                [904:575840] Sentry Started -- Version: 4.4.1     =================================================================     Main Thread Checker: UI API called on a background thread: -[UIViewController childViewControllers]     PID: 904, TID: 576061, Thread name: (none), Queue name: com.apple.root.user-initiated-qos, QoS: 25     Backtrace:     4   My App                              0x0000000102aa04f8 __62-[UIViewController(LayoutProtocol) renderTreeAndWait:perform:]_block_invoke + 136     5   libdispatch.dylib                   0x00000001041757fc _dispatch_call_block_and_release + 24     6   libdispatch.dylib                   0x0000000104176bd8 _dispatch_client_callout + 16     7   libdispatch.dylib                   0x00000001041882b4 _dispatch_root_queue_drain + 716     8   libdispatch.dylib                   0x0000000104188a88 _dispatch_worker_thread2 + 156     9   libsystem_pthread.dylib             0x00000001c537ef48 _pthread_wqthread + 212     10  libsystem_pthread.dylib             0x00000001c5381ad4 start_wqthread + 8     2019-11-12 10:49:31.569532+0100 My App                [904:576061] [reports] Main Thread Checker: UI API called on a background thread: -[UIViewController childViewControllers]     PID: 904, TID: 576061, Thread name: (none), Queue name: com.apple.root.user-initiated-qos, QoS: 25     Backtrace:     4   My App                              0x0000000102aa04f8 __62-[UIViewController(LayoutProtocol) renderTreeAndWait:perform:]_block_invoke + 136     5   libdispatch.dylib                   0x00000001041757fc _dispatch_call_block_and_release + 24     6   libdispatch.dylib                   0x0000000104176bd8 _dispatch_client_callout + 16     7   libdispatch.dylib                   0x00000001041882b4 _dispatch_root_queue_drain + 716     8   libdispatch.dylib                   0x0000000104188a88 _dispatch_worker_thread2 + 156     9   libsystem_pthread.dylib             0x00000001c537ef48 _pthread_wqthread + 212     10  libsystem_pthread.dylib             0x00000001c5381ad4 start_wqthread + 8     =================================================================     Main Thread Checker: UI API called on a background thread: -[UINavigationController topViewController]     PID: 904, TID: 576061, Thread name: (none), Queue name: com.apple.root.user-initiated-qos, QoS: 25     Backtrace:     4   My App                              0x0000000102a89504 -[RNNStackController getCurrentChild] + 40     5   My App                              0x0000000102aa0000 -[UIViewController(LayoutProtocol) resolveOptions] + 72     6   My App                              0x0000000102aa0018 -[UIViewController(LayoutProtocol) resolveOptions] + 96     7   My App                              0x0000000102aa0018 -[UIViewController(LayoutProtocol) resolveOptions] + 96     8   My App                              0x0000000102a83700 -[RNNSideMenuController resolveOptions] + 64     9   My App                              0x0000000102aa0734 __62-[UIViewController(LayoutProtocol) renderTreeAndWait:perform:]_block_invoke + 708     10  libdispatch.dylib                   0x00000001041757fc _dispatch_call_block_and_release + 24     11  libdispatch.dylib                   0x0000000104176bd8 _dispatch_client_callout + 16     12  libdispatch.dylib                   0x00000001041882b4 _dispatch_root_queue_drain + 716     13  libdispatch.dylib                   0x0000000104188a88 _dispatch_worker_thread2 + 156     14  libsystem_pthread.dylib             0x00000001c537ef48 _pthread_wqthread + 212     15  libsystem_pthread.dylib             0x00000001c5381ad4 start_wqthread + 8     2019-11-12 10:49:41.729047+0100 My App                [904:576061] [reports] Main Thread Checker: UI API called on a background thread: -[UINavigationController topViewController]     PID: 904, TID: 576061, Thread name: (none), Queue name: com.apple.root.user-initiated-qos, QoS: 25     Backtrace:     4   My App                              0x0000000102a89504 -[RNNStackController getCurrentChild] + 40     5   My App                              0x0000000102aa0000 -[UIViewController(LayoutProtocol) resolveOptions] + 72     6   My App                              0x0000000102aa0018 -[UIViewController(LayoutProtocol) resolveOptions] + 96     7   My App                              0x0000000102aa0018 -[UIViewController(LayoutProtocol) resolveOptions] + 96     8   My App                              0x0000000102a83700 -[RNNSideMenuController resolveOptions] + 64     9   My App                              0x0000000102aa0734 __62-[UIViewController(LayoutProtocol) renderTreeAndWait:perform:]_block_invoke + 708     10  libdispatch.dylib                   0x00000001041757fc _dispatch_call_block_and_release + 24     11  libdispatch.dylib                   0x0000000104176bd8 _dispatch_client_callout + 16     12  libdispatch.dylib                   0x00000001041882b4 _dispatch_root_queue_drain + 716     13  libdispatch.dylib                   0x0000000104188a88 _dispatch_worker_thread2 + 156     14  libsystem_pthread.dylib             0x00000001c537ef48 _pthread_wqthread + 212     15  libsystem_pthread.dylib             0x00000001c5381ad4 start_wqthread + 8  **Does anybody have any hint on what could cause those errors? If yes, I would be glad to give it a try...**  --- ### Environment * React Native Navigation version: 3.5.1 * React Native version: 0.61.4 * Platform(s) iOS * Device info (Simulator/Device? OS version? Debug/Release?): Debug, iPhone SE, iOS 13 </body>
		<created>2019-11-12 10:07:41</created>
		<closed>2019-12-11 10:17:19</closed>
	</bug>
	<bug>
		<id>5633</id>
		<title>Custom topBar not working in combination with bottomTabs on iOS</title>
		<body>### Issue Description  In my app I have a centered stack where each component (view) should have a custom topBar and a sideMenu. Everything works fine with simple views (without bottomTabs). Views with bottomTabs are working on android but on iOS I am missing my custom topBar and rightButtons (rightButtons and component: TopMenu). They will not appear.  ### Steps to Reproduce / Code Snippets / Screenshots  see: reproducable and reduced use case in forked playground repo: [forked playground with reproducable bug](https://github.com/francbelak/react-native-navigation/commit/916eb3b719fc2f029de3ff37adc6de77cca92e11)  Expected behavior:  - push simple: should show component with topbar (centered icon and right button)  - push complex: should show component with topbar (centered icon and right button) --&gt; not working as expected  **topBar** ``` {   buttonColor: PROJECT_COLOR['white-light'],   backButton: {     color: PROJECT_COLOR['white-light']   },   background: {     color: PROJECT_COLOR['primary'],   },   title: {     component: {       name: 'TopMenu',       alignment: 'center',     },   },   rightButtons: [{     id: menuConfig['TOP_BAR_BURGER_ID'],     icon: require('../../assets/Burger.png')   }] }; ```  **root**  ``` {   sideMenu: {     id: 'sideMenu',     right: {       component: {         id: menuConfig['SIDE_MENU_ID'],         name: 'Menu'       }     },     center: {       stack: {         id: 'AppRoot',         children: [{           component: {             name: screen,             passProps: passProps || {},             options: {               topBar: this.topBar,               sideMenu: this.sideMenu             }           }         }]       }     }   } } ```  **bottomTabs** ``` {   options: {     bottomTabs: {       animate: true,       backgroundColor: PROJECT_COLOR['white-ultradark'],       titleDisplayMode: 'alwaysShow',       currentTabIndex: 0     }   },   children: [{     component: {       name: 'view 1',       passProps: passProps,       options: {         topBar: this.topBar,         sideMenu: this.sideMenu,         bottomTab: {           text: 'view 1',           icon: require('../../assets/icon.png'),           testID: 'VIEW_1_TAB_BAR_BUTTON',           selectedIconColor: PROJECT_COLOR['primary'],           selectedTextColor: PROJECT_COLOR['primary']         }       }     }   }, {     component: {       name: 'view 2',       passProps: passProps,       options: {         topBar: this.topBar,         sideMenu: this.sideMenu,         bottomTab: {           text: 'view 2',           icon: require('../../assets/icon.png'),           testID: 'VIEW_2_TAB_BAR_BUTTON',           selectedIconColor: PROJECT_COLOR['primary'],           selectedTextColor: PROJECT_COLOR['primary']         }       }     }   }, {     component: {       name: 'view 3',       passProps: passProps,       options: {         topBar: this.topBar,         sideMenu: this.sideMenu,         bottomTab: {           text: 'view 3',           icon: require('../../assets/icon.png'),           testID: 'VIEW_3_TAB_BAR_BUTTON',           selectedIconColor: PROJECT_COLOR['primary'],           selectedTextColor: PROJECT_COLOR['primary']         }       }     }   }] } ```  ![bug](https://user-images.githubusercontent.com/7560903/68307430-83de1a00-00ab-11ea-816c-5bb9e5ea456b.png)   &lt;!-- Note: When embeding code, please format it and use syntax highlighting to improve readability --&gt; &lt;!-- ```js                                                         --&gt; &lt;!-- [ THIS CODE BLOCK WILL USE JAVASCRIPT SYNTAX HIGHLIGHTING ]   --&gt; &lt;!-- ```                                                           --&gt;  --- ### Environment * React Native Navigation version: ^2.27.9 &amp; ^3.5.0 * React Native version: 0.59.9 * Platform(s) (iOS, Android, or both?): iOS * Device info (Simulator/Device? OS version? Debug/Release?): Simulator e.g. iphone 8 (13.1) </body>
		<created>2019-11-06 14:44:06</created>
		<closed>2020-02-04 19:10:51</closed>
	</bug>
	<bug>
		<id>5628</id>
		<title>[V3.4] Set bottom tabs visible affects custom top bar</title>
		<body>### Issue Description  Set bottom tabs visible affects custom component top bar.  ### Steps to Reproduce / Code Snippets / Screenshots  Example:  1. I have custom top bar  ``` Navigation.mergeOptions(this, {     topBar: {       title: {         component: {           name: Screens.ReactTitleView,           alignment: 'center',           passProps: {             text: 'Press Me'           }         }       }     } }); ``` 2. Hide bottom tabs ``` Navigation.mergeOptions(this, {       bottomTabs: {         visible: false       }     }) ``` The top bar component disappear, it will show the default top bar or empty if you're not set. --- ### Environment * React Native Navigation version: 3.4 * React Native version: 0.61.4 * Platform(s) (iOS, Android, or both?): iOS * Device info (Simulator/Device? OS version? Debug/Release?): All, iOS 13.2 </body>
		<created>2019-11-05 06:56:20</created>
		<closed>2019-11-07 11:37:40</closed>
	</bug>
	<bug>
		<id>5622</id>
		<title>[v3][iOS] topBar component not mounted or setDefaultOptions issue?</title>
		<body>### Issue Description  I'm upgrading a project from RN 0.59.10 and RNN 2.26.5 to RN 0.61.3 and RNN 3.3.0. I'm doing that with a fresh `npx react-native init ...` project.  On iOS, I lost my topbar component.  My app does this at startup:  ```js Navigation.setDefaultOptions(     {         layout: { componentBackgroundColor: "white", backgroundColor: "white", orientation: ["portrait"]},         popGesture: true,          topBar: { drawBehind: false, backButton: { visible: false, showTitle: false}, buttonColor: "black", hideOnScroll: false, title: { component: { name: "HeaderToolbar", alignment: "center"}}},          sideMenu: { openGestureMode: "bezel"},          animations: { setStackRoot: { enabled: true}}     }; ); ```  And no topbar component gets mounted on iOS (it is working on Android). I get a blank topbar.  Is anyone else experiencing the same thing?   Side question: is there any piece of documentation, changelog, etc... regarding the V3 version? It could be good to gather them all at the same place.   --- ### Environment * React Native Navigation version: 3.3.0 * React Native version: 0.61.3 * Platform(s) (iOS, Android, or both?): iOS * Device info (Simulator/Device? OS version? Debug/Release?): iOS 12.3.1 iphone (device), debug </body>
		<created>2019-11-01 20:35:30</created>
		<closed>2019-12-02 12:16:32</closed>
	</bug>
	<bug>
		<id>5605</id>
		<title>V3: BottomTab's visibility doesn't work</title>
		<body>### Issue Description  hiding bottom tab doesn't work. on **iOS** it just remains on the bottom on the screen. on Android results in a black space on the bottom of the screen  ### Steps to Reproduce / Code Snippets / Screenshots  &lt;!-- Note: When embeding code, please format it and use syntax highlighting to improve readability --&gt; ```js Navigation.setDefaultOptions({             bottomTabs: {                 visible: false,             }         }); ```  --- ### Environment * React Native Navigation version: 3.2.0, 3.1.1, 3.1.2 * React Native version: 0.61.2 * Platform(s) (iOS, Android, or both?): iOS and Android * Device info (Simulator/Device? OS version? Debug/Release?): simulator and device. iOS 12.4.2. Android 9</body>
		<created>2019-10-23 11:07:49</created>
		<closed>2020-02-08 14:39:02</closed>
	</bug>
	<bug>
		<id>5592</id>
		<title>Sidemenu in showmodal</title>
		<body>### Issue Description  Is it possible to open a fullscreen sidemenu in a modal ? its possible to open a sidemenu in a modal, but overFullscreen options is not working.  This is a problem since iOS13. "react-native-navigation": "^2.26.0"  ![Screenshot 2019-10-17 at 10 34 15](https://user-images.githubusercontent.com/4542567/66992301-de4a1300-f0c9-11e9-9904-6311e689e5dd.png)   ### Steps to Reproduce / Code Snippets / Screenshots `export async function pushTicket(sideMenuProps, componentProps) {   await Navigation.showModal({     sideMenu: {       id: SCREENS.TICKET,       right: {         component: {           name: SCREENS.DRAWERS.CHAT_DRAWER,           passProps: sideMenuProps,           options: {             animations: {               showModal: {                 waitForRender: true,               },             },           },         },       },       center: {         stack: {           children: [             {               component: {                 name: SCREENS.TICKET,                 passProps: componentProps,               },             },           ],           options: {             animations: {               showModal: {                 waitForRender: true,               },             },           },         },       },     },   }); }   `   </body>
		<created>2019-10-17 08:37:16</created>
		<closed>2019-12-20 06:55:20</closed>
	</bug>
	<bug>
		<id>5570</id>
		<title>TopTabs.children type is any[]</title>
		<body>https://github.com/wix/react-native-navigation/blob/d6e228128b72c83907f131be3abcf823a5cf0740/lib/src/interfaces/Layout.ts#L132</body>
		<created>2019-10-12 00:24:56</created>
		<closed>2019-12-26 07:36:46</closed>
	</bug>
	<bug>
		<id>5515</id>
		<title>[V3] largeTitle breaks title transitions and render title twice</title>
		<body>### Issue Description  If largeTitle is enabled on version 3.2.0 then: 1. Title is rendered twice 2. Title on next screen in stack is positioned wrong if it's not largeTitle 3. When going back to screen with largeTitle second(not right rendered) title is repositioned unexpectedly   On version 2.21.0(before update to latest v3 release) everything was OK  ### Steps to Reproduce / Code Snippets / Screenshots  ```js static options() {   return {     topBar: {       title: {         text: 'Test',       },       largeTitle: {         visible: true,       },     } } ```  Now: ![Simulator Screen Shot - iPhone X 11 4 - 2019-09-25 at 00 50 39](https://user-images.githubusercontent.com/16151675/65553405-7a4f8700-df2f-11e9-9682-6276f03a874a.png) ![Simulator Screen Shot - iPhone X 11 4 - 2019-09-25 at 00 50 45](https://user-images.githubusercontent.com/16151675/65553406-7a4f8700-df2f-11e9-90c5-c2524f7cde21.png) ![Simulator Screen Shot - iPhone X 11 4 - 2019-09-25 at 00 50 47](https://user-images.githubusercontent.com/16151675/65553407-7a4f8700-df2f-11e9-86a1-fadb1173a8b2.png)   Expected:  ![Simulator Screen Shot - iPhone X 11 4 - 2019-09-25 at 00 42 20](https://user-images.githubusercontent.com/16151675/65553387-702d8880-df2f-11e9-82ae-bf9096a25a28.png) ![Simulator Screen Shot - iPhone X 11 4 - 2019-09-25 at 00 46 18](https://user-images.githubusercontent.com/16151675/65553388-70c61f00-df2f-11e9-9b9e-3a5f713a20fc.png)  --- ### Environment * React Native Navigation version: 2.21.0 -&gt; 3.2.0 * React Native version: 0.59.10 * Platform(s) (iOS, Android, or both?): iOS 12.2 * Device info (Simulator/Device? OS version? Debug/Release?): All </body>
		<created>2019-09-24 21:58:22</created>
		<closed>2019-12-08 12:51:28</closed>
	</bug>
	<bug>
		<id>5502</id>
		<title>popGesture: false causes bugs for using the pop gesture on children screens</title>
		<body>### Issue Description on iOS when using the `popGesture: false` option on a screen it works as intended but then after pushing a new screen with popGesture enabled it doesn't work and then the screen doesn't respond to anything - scrollviews and touchables don't respond, after reopening the app (without removing it from recents) it will go back.  ### Steps to Reproduce / Code Snippets / Screenshots Create a stack layout, push a screen with the option `popGesture: false`, then push another screen without options and see that you cannot use the pop gesture - the app will be stuck.  ### Environment * React Native Navigation version: 3.2.0 * React Native version: 0.60.5 * Platform(s) (iOS, Android, or both?): iOS * Device info (Simulator/Device? OS version? Debug/Release?): iPhone 11 Simulator </body>
		<created>2019-09-21 12:47:00</created>
		<closed>2020-01-21 14:14:05</closed>
	</bug>
	<bug>
		<id>5468</id>
		<title>Top bar options not working on iOS 13</title>
		<body>### Issue Description  Top bar options not working on iOS 13(background color, large title etc.) On version 3.2.0 its even get's worse(screenshot #3, all top bar titles are mess). This also happens on iOS 12.  My guess it's somehow related to [Main Thread Checker](https://developer.apple.com/documentation/code_diagnostics/main_thread_checker) as on iOS 13 there are some exceptions on application start in console:  Main Thread Checker: UI API called on a background thread: -[UIViewController childViewControllers] PID: 76500, TID: 951449, Thread name: (none), Queue name: com.apple.root.user-initiated-qos, QoS: 25 Backtrace: 4   Busfor                              0x000000010be90a05 __62-[UIViewController(LayoutProtocol) renderTreeAndWait:perform:]_block_invoke + 117 5   libdispatch.dylib                   0x000000010ddf7df0 _dispatch_call_block_and_release + 12 6   libdispatch.dylib                   0x000000010ddf8d64 _dispatch_client_callout + 8 7   libdispatch.dylib                   0x000000010de0a46e _dispatch_root_queue_drain + 819 8   libdispatch.dylib                   0x000000010de0aba4 _dispatch_worker_thread2 + 132 9   libsystem_pthread.dylib             0x00007fff511c671d _pthread_wqthread + 220 10  libsystem_pthread.dylib             0x00007fff511c65bf start_wqthread + 15  Main Thread Checker: UI API called on a background thread: -[UITabBarController selectedViewController] PID: 76500, TID: 951449, Thread name: (none), Queue name: com.apple.root.user-initiated-qos, QoS: 25 Backtrace: 4   Busfor                              0x000000010be42b3c -[RNNBottomTabsController getCurrentChild] + 44 5   Busfor                              0x000000010be90695 -[UIViewController(LayoutProtocol) resolveOptions] + 69 6   Busfor                              0x000000010be90cf5 __62-[UIViewController(LayoutProtocol) renderTreeAndWait:perform:]_block_invoke + 869 7   libdispatch.dylib                   0x000000010ddf7df0 _dispatch_call_block_and_release + 12 8   libdispatch.dylib                   0x000000010ddf8d64 _dispatch_client_callout + 8 9   libdispatch.dylib                   0x000000010de0a46e _dispatch_root_queue_drain + 819 10  libdispatch.dylib                   0x000000010de0aba4 _dispatch_worker_thread2 + 132 11  libsystem_pthread.dylib             0x00007fff511c671d _pthread_wqthread + 220 12  libsystem_pthread.dylib             0x00007fff511c65bf start_wqthread + 15  Main Thread Checker: UI API called on a background thread: -[UINavigationController topViewController] PID: 76500, TID: 951449, Thread name: (none), Queue name: com.apple.root.user-initiated-qos, QoS: 25 Backtrace: 4   Busfor                              0x000000010be78d7c -[RNNStackController getCurrentChild] + 44 5   Busfor                              0x000000010be90695 -[UIViewController(LayoutProtocol) resolveOptions] + 69 6   Busfor                              0x000000010be906b1 -[UIViewController(LayoutProtocol) resolveOptions] + 97 7   Busfor                              0x000000010be90cf5 __62-[UIViewController(LayoutProtocol) renderTreeAndWait:perform:]_block_invoke + 869 8   libdispatch.dylib                   0x000000010ddf7df0 _dispatch_call_block_and_release + 12 9   libdispatch.dylib                   0x000000010ddf8d64 _dispatch_client_callout + 8 10  libdispatch.dylib                   0x000000010de0a46e _dispatch_root_queue_drain + 819 11  libdispatch.dylib                   0x000000010de0aba4 _dispatch_worker_thread2 + 132 12  libsystem_pthread.dylib             0x00007fff511c671d _pthread_wqthread + 220 13  libsystem_pthread.dylib             0x00007fff511c65bf start_wqthread + 15  ### Screenshots  ![IMG_3561](https://user-images.githubusercontent.com/16151675/64602243-1c675f00-d3c7-11e9-9b2c-00ecb4da1d3f.PNG) ![IMG_3562](https://user-images.githubusercontent.com/16151675/64602242-1c675f00-d3c7-11e9-8046-7c05783eb3ad.PNG)  ![Simulator Screen Shot - iPhone X 13 0 - 2019-09-10 at 14 16 35](https://user-images.githubusercontent.com/16151675/64609461-ab7b7380-d3d5-11e9-9d00-cc6a33a771c1.png)  --- ### Environment * React Native Navigation version: 2.21.0, 3.2.0 * React Native version: 0.59.10 * Platform(s) (iOS, Android, or both?): iOS * Device info (Simulator/Device? OS version? Debug/Release?): Both, iOS 13, both </body>
		<created>2019-09-10 11:27:07</created>
		<closed>2019-12-08 12:49:27</closed>
	</bug>
	<bug>
		<id>5439</id>
		<title>Constants don't get recalculated when layout changes</title>
		<body>### Issue Description  I'm trying to use `Navigation.constants()` to get the calculated height of the bottom tab bar. However the value of `bottomTabsHeight` stays `0` even when my tabs are shown. I think this is caused by the fact I'm setting 2 separate root layouts: first one without tabs (which uses the `constants` method already), then one which *does* have tabs. Since [`Constants`](https://github.com/wix/react-native-navigation/blob/a71e7311e270d2feb793c7c61b8e637afe98591e/lib/src/adapters/Constants.ts) is a singleton the value of `bottomTabsHeight` isn't recalculated after the layout *with* tabs is set.  ### Steps to Reproduce / Code Snippets / Screenshots  ```js Navigation.setRoot(noTabsLayout); const constants = await Navigation.constants(); // constants.bottomTabsHeight === 0  Navigation.setRoot(bottomTabLayout); const constants = await Navigation.constants(); // constants.bottomTabsHeight === 0 ```  --- ### Environment * React Native Navigation version: 2.26.5 * React Native version: 0.59.10 * Platform(s) (iOS, Android, or both?): iOS * Device info (Simulator/Device? OS version? Debug/Release?): Simulator and device, iOS 12.4 </body>
		<created>2019-09-02 08:52:54</created>
		<closed>2019-09-05 08:43:26</closed>
	</bug>
	<bug>
		<id>5431</id>
		<title>[V3] Top bar style and animation</title>
		<body>### Issue Description These examples are taken in playground app.  **1. Topbar wrong animation**  | Native (what should be)  | RNN v3 | | ------------- | ------------- | | ![ezgif com-video-to-gif (3)](https://user-images.githubusercontent.com/7337535/64061883-83885500-cc0a-11e9-974e-0c1e1887cb74.gif)  | ![ezgif com-video-to-gif (2)](https://user-images.githubusercontent.com/7337535/64061884-85eaaf00-cc0a-11e9-8042-2a6c76d3e067.gif)|  **2. Back button and title are not aligned** ![Screen Shot 2019-08-31 at 16 02 00](https://user-images.githubusercontent.com/7337535/64061715-afa2d680-cc08-11e9-993d-c752e53193f0.png)   --- ### Environment * React Native Navigation version: 3.1.2 * React Native version: 0.60.5 * Platform(s) (iOS, Android, or both?): iOS * Device info (Simulator/Device? OS version? Debug/Release?): Device iPhone X, iOS 12.2 </body>
		<created>2019-08-31 09:15:54</created>
		<closed>2020-01-29 09:29:09</closed>
	</bug>
	<bug>
		<id>5424</id>
		<title>[Android] Absolute views in overlay don't block touches</title>
		<body>### Issue Description  When showing an overlay with views with absolute positions and interceptTouch = false, touches pass-through without capturing the touch event, this works fine on iOS. Also this is reproducible in 3 and 2 versions of the library  ### Steps to Reproduce / Code Snippets / Screenshots  iOS  ![ios_overlay](https://user-images.githubusercontent.com/6560136/63942307-6e25f600-ca65-11e9-8cf3-e4237157301e.gif)  Android  ![android_overlay](https://user-images.githubusercontent.com/6560136/63942319-73834080-ca65-11e9-8e66-ed80951af0a2.gif)   Github template project so that you can see the issue easier https://github.com/fjmorant/example_issue_rnn  --- ### Environment * React Native Navigation version: 3.1.0 ( and 3 and latest 2) * React Native version: 0.60.5 (Also this happens on 0.59) * Platform(s) (iOS, Android, or both?): Android * Device info (Simulator/Device? OS version? Debug/Release?): Emulator Android 9 Pixel 3 XL </body>
		<created>2019-08-29 13:02:42</created>
		<closed>2019-11-30 07:51:38</closed>
	</bug>
	<bug>
		<id>5418</id>
		<title>[V2] Crash when returning to root by pressing Bottom Tab on iOS</title>
		<body>### Issue Description  When I press a bottom tab after pushing two screens onto the stack for that tab, the app crashes.   ### Steps to Reproduce / Code Snippets / Screenshots  1. Start a tab based app where the root screen for one of the tabs has buttons in the TopBar 2. Push a screen on to that tab, and then push another screen on top of that. 3. Press the Bottom Tab for that screen, crash will happen.  Interestingly, if I push a third or fourth screen before pressing the bottom tab, there is no crash.  Native Crash Log:  ``` 2019-08-27 17:01:05.869215-0600 Homepass[49690:950985] -[_UIBackButtonContainerView titleLabel]: unrecognized selector sent to instance 0x7faab9a187c0 2019-08-27 17:01:05.874613-0600 Homepass[49690:950985] *** Terminating app due to uncaught exception 'NSInvalidArgumentException', reason: '-[_UIBackButtonContainerView titleLabel]: unrecognized selector sent to instance 0x7faab9a187c0' *** First throw call stack: ( 0   CoreFoundation                      0x00000001176a76fb __exceptionPreprocess + 331 1   libobjc.A.dylib                     0x0000000116018ac5 objc_exception_throw + 48 2   CoreFoundation                      0x00000001176c5ab4 -[NSObject(NSObject) doesNotRecognizeSelector:] + 132 3   UIKitCore                           0x00000001217adc3d -[UIResponder doesNotRecognizeSelector:] + 287 4   CoreFoundation                      0x00000001176ac443 ___forwarding___ + 1443 5   CoreFoundation                      0x00000001176ae238 _CF_forwarding_prep_0 + 120 6   UIKitCore                           0x0000000120f4bed8 _titleTransitionAdjustmentFromLargeTitleToBackButton + 170 7   UIKitCore                           0x0000000120f4f4c8 -[_UINavigationBarTransitionContextPop _prepareScaleTransition] + 197 8   UIKitCore                           0x0000000120f4fe7d -[_UINavigationBarTransitionContextPop prepare] + 146 9   UIKitCore                           0x0000000120f72772 -[_UINavigationBarVisualProviderModernIOS _performAnimationWithTransitionCompletion:transition:] + 966 10  UIKitCore                           0x0000000120f22998 -[UINavigationBar _setItems:transition:reset:resetOwningRelationship:] + 2004 11  UIKitCore                           0x0000000120f21fe3 -[UINavigationBar setItems:animated:] + 225 12  UIKitCore                           0x00000001210cbb72 __80-[UINavigationController _setViewControllers_7_0:transition:animated:operation:]_block_invoke + 481 13  UIKitCore                           0x00000001210cbd6b __80-[UINavigationController _setViewControllers_7_0:transition:animated:operation:]_block_invoke.539 + 114 14  UIKitCore                           0x00000001210e2725 __98-[UINavigationController _shouldSkipHostedRefreshControlUpdateSchedulingDeferredUpdateIfNecessary]_block_invoke + 16 15  UIKitCore                           0x00000001210e4599 -[UINavigationController _startDeferredTransitionIfNeeded:] + 1380 16  UIKitCore                           0x00000001210e56a7 -[UINavigationController __viewWillLayoutSubviews] + 150 17  UIKitCore                           0x00000001210c638d -[UILayoutContainerView layoutSubviews] + 217 18  UIKit                               0x0000000139aefa87 -[UILayoutContainerViewAccessibility layoutSubviews] + 42 19  UIKitCore                           0x0000000121c4f9c1 -[UIView(CALayerDelegate) layoutSublayersOfLayer:] + 1417 20  QuartzCore                          0x0000000113cabeae -[CALayer layoutSublayers] + 173 21  QuartzCore                          0x0000000113cb0b88 _ZN2CA5Layer16layout_if_neededEPNS_11TransactionE + 396 22  QuartzCore                          0x0000000113cbcee4 _ZN2CA5Layer28layout_and_display_if_neededEPNS_11TransactionE + 72 23  QuartzCore                          0x0000000113c2c3aa _ZN2CA7Context18commit_transactionEPNS_11TransactionE + 328 24  QuartzCore                          0x0000000113c63584 _ZN2CA11Transaction6commitEv + 608 25  QuartzCore                          0x0000000113c63ede _ZN2CA11Transaction17observer_callbackEP19__CFRunLoopObservermPv + 76 26  CoreFoundation                      0x000000011760e0f7 __CFRUNLOOP_IS_CALLING_OUT_TO_AN_OBSERVER_CALLBACK_FUNCTION__ + 23 27  CoreFoundation                      0x00000001176085be __CFRunLoopDoObservers + 430 28  CoreFoundation                      0x0000000117608c31 __CFRunLoopRun + 1505 29  CoreFoundation                      0x0000000117608302 CFRunLoopRunSpecific + 626 30  GraphicsServices                    0x000000011b0592fe GSEventRunModal + 65 31  UIKitCore                           0x0000000121781ba2 UIApplicationMain + 140 32  Homepass                            0x000000010ef5e6d0 main + 112 33  libdyld.dylib                       0x00000001193f3541 start + 1 34  ???                                 0x0000000000000002 0x0 + 2 ) libc++abi.dylib: terminating with uncaught exception of type NSException ```  --- ### Environment * React Native Navigation version: 2.27.2 * React Native version: 0.59.10 * Platform(s) (iOS, Android, or both?): iOS * Device info (Simulator/Device? OS version? Debug/Release?): Simulator, iOS 12, Debug</body>
		<created>2019-08-27 23:07:54</created>
		<closed>2020-03-03 16:29:24</closed>
	</bug>
	<bug>
		<id>5411</id>
		<title>Merging Title, TopBar buttons and status bar options is broken on 3.1.1</title>
		<body>Merging TopBar title, buttons and status bar options is broken on iOS with 3.1.x. Parent options aren't resolved properly and default options aren't regarded when they should be.  --- ### Environment * React Native Navigation version: 3.1.0, 3.1.1 * React Native version: 0.60 * Platform(s) (iOS, Android, or both?): iOS * Device info (Simulator/Device? OS version? Debug/Release?): any </body>
		<created>2019-08-25 16:22:03</created>
		<closed>2019-08-27 15:36:32</closed>
	</bug>
	<bug>
		<id>5395</id>
		<title> Navigation.setDefaultOptions  Does NOT work on V3.1.0!</title>
		<body>### Issue Description  Just create a fresh project RN0.60.5 &amp;  RNN 3.1.0, the  Navigation.setDefaultOptions does not work!. actually Im about to never again use RNN in future projects! :(   --- ### Environment * React Native Navigation version: 3.1.0 * React Native version: 0.60.5 * Platform(s) (iOS, Android, or both?): IOS * Device info (Simulator/Device? OS version? Debug/Release?): Simulator iphone 8 </body>
		<created>2019-08-21 08:14:25</created>
		<closed>2019-08-22 05:50:14</closed>
	</bug>
	<bug>
		<id>5377</id>
		<title>mergeOptions does not update title component in Android</title>
		<body>### Issue Description  If I set custom title component in android and later try to change it to another component with mergeOptions that does not work. On IOS it works fine.  ###  Code example  &lt;!-- Note: When embeding code, please format it and use syntax highlighting to improve readability --&gt; ```javascript // Screen methods componentDidMount() {     Navigation.mergeOptions(this.props.componentId, {       topBar: {         title: {           component: {             name: 'component.Comp1',           }         }       }     });   }  onInteractiveAction() {     Navigation.mergeOptions(this.props.componentId, {       topBar: {         title: {           component: {             name: 'component.Comp2',           }         }       }     });   } ```  If onInteractiveAction is triggered by some touch action in screen Comp2 will become visible in IOS navbar but not in Android  --- ### Environment * React Native Navigation version: 3.0.0-alpha.7 * React Native version: 0.60.4 * Platform(s) (iOS, Android, or both?): Android * Device info: Pixel 2 android ---  Thanks for developing this amazing project :) RNN is the  number one navigation solution for react native apps! </body>
		<created>2019-08-14 16:02:43</created>
		<closed>2020-03-23 10:19:51</closed>
	</bug>
	<bug>
		<id>5375</id>
		<title>[V3] TopTabs - some hierachies don't work anymore</title>
		<body>### Issue Description  Navigation hierachies which used to work in V2 do not work anymore.  ### Steps to Reproduce / Code Snippets / Screenshots  For example the following code works in V2 but not anymore in V3:  ```js                                                          Navigation.setRoot({         root: {             topTabs: {                 children: [{                     component: {                         name: "AppScreen",                     }                 },                 {                     component: {                         name: "AppScreen",                     }                 }],             },         }     }); ``` it throws the following error: ```js    2019-08-12 11:51:34.953 6378-6378/com.test E/AndroidRuntime: FATAL EXCEPTION: main     Process: com.test, PID: 6378     java.lang.ClassCastException: androidx.viewpager.widget.ViewPager$LayoutParams cannot be cast to android.view.ViewGroup$MarginLayoutParams         at com.reactnativenavigation.presentation.ComponentPresenterBase.applyTopInsets(ComponentPresenterBase.java:9)         at com.reactnativenavigation.viewcontrollers.ComponentViewController.applyTopInset(ComponentViewController.java:95)         at com.reactnativenavigation.viewcontrollers.-$$Lambda$wlwFhgHcAClBnwsp5rN0pxte4i4.on(Unknown Source:2)         at com.reactnativenavigation.utils.CollectionUtils.forEach(CollectionUtils.java:93)         at com.reactnativenavigation.utils.CollectionUtils.forEach(CollectionUtils.java:76)         at com.reactnativenavigation.viewcontrollers.ParentController.applyTopInset(ParentController.java:165)         at com.reactnativenavigation.viewcontrollers.-$$Lambda$wlwFhgHcAClBnwsp5rN0pxte4i4.on(Unknown Source:2)         at com.reactnativenavigation.utils.CollectionUtils.forEach(CollectionUtils.java:93)         at com.reactnativenavigation.utils.CollectionUtils.forEach(CollectionUtils.java:76)         at com.reactnativenavigation.viewcontrollers.ParentController.applyTopInset(ParentController.java:165)         at com.reactnativenavigation.viewcontrollers.-$$Lambda$vVglzgYrWmnbpKcV_M9VjZiqrVQ.run(Unknown Source:2)         at com.reactnativenavigation.utils.ObjectUtils.perform(ObjectUtils.java:10)         at com.reactnativenavigation.viewcontrollers.ViewController.onMeasureChild(ViewController.java:330)         at com.reactnativenavigation.views.BehaviourDelegate.onMeasureChild(BehaviourDelegate.java:22)         at com.reactnativenavigation.views.BehaviourDelegate.onMeasureChild(BehaviourDelegate.java:7)         at androidx.coordinatorlayout.widget.CoordinatorLayout.onMeasure(CoordinatorLayout.java:813)         at android.view.View.measure(View.java:23169)         at android.view.ViewGroup.measureChildWithMargins(ViewGroup.java:6749)         at android.widget.FrameLayout.onMeasure(FrameLayout.java:185)         at androidx.appcompat.widget.ContentFrameLayout.onMeasure(ContentFrameLayout.java:143)         at android.view.View.measure(View.java:23169)         at android.view.ViewGroup.measureChildWithMargins(ViewGroup.java:6749)         at android.widget.LinearLayout.measureChildBeforeLayout(LinearLayout.java:1535)         at android.widget.LinearLayout.measureVertical(LinearLayout.java:825)         at android.widget.LinearLayout.onMeasure(LinearLayout.java:704)         at android.view.View.measure(View.java:23169)         at android.view.ViewGroup.measureChildWithMargins(ViewGroup.java:6749)         at android.widget.FrameLayout.onMeasure(FrameLayout.java:185)         at android.view.View.measure(View.java:23169)         at android.view.ViewGroup.measureChildWithMargins(ViewGroup.java:6749)         at android.widget.LinearLayout.measureChildBeforeLayout(LinearLayout.java:1535)         at android.widget.LinearLayout.measureVertical(LinearLayout.java:825)         at android.widget.LinearLayout.onMeasure(LinearLayout.java:704)         at android.view.View.measure(View.java:23169)         at android.view.ViewGroup.measureChildWithMargins(ViewGroup.java:6749)         at android.widget.FrameLayout.onMeasure(FrameLayout.java:185)         at com.android.internal.policy.DecorView.onMeasure(DecorView.java:716)         at android.view.View.measure(View.java:23169)         at android.view.ViewRootImpl.performMeasure(ViewRootImpl.java:2718)         at android.view.ViewRootImpl.measureHierarchy(ViewRootImpl.java:1572)         at android.view.ViewRootImpl.performTraversals(ViewRootImpl.java:1855)         at android.view.ViewRootImpl.doTraversal(ViewRootImpl.java:1460)         at android.view.ViewRootImpl$TraversalRunnable.run(ViewRootImpl.java:7183)         at android.view.Choreographer$CallbackRecord.run(Choreographer.java:949)         at android.view.Choreographer.doCallbacks(Choreographer.java:761)         at android.view.Choreographer.doFrame(Choreographer.java:696)         at android.view.Choreographer$FrameDisplayEventReceiver.run(Choreographer.java:935)         at android.os.Handler.handleCallback(Handler.java:873)         at android.os.Handler.dispatchMessage(Handler.java:99)         at android.os.Looper.loop(Looper.java:193) 2019-08-12 11:51:34.954 6378-6378/com.test E/AndroidRuntime:     at android.app.ActivityThread.main(ActivityThread.java:6669)         at java.lang.reflect.Method.invoke(Native Method)         at com.android.internal.os.RuntimeInit$MethodAndArgsCaller.run(RuntimeInit.java:493)         at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:858) 2019-08-12 11:51:35.016 6378-6378/com.test I/Process: Sending signal. PID: 6378 SIG: 9 ``` i dont know much about android development so i can't find a solutoin but i think it have to do with the androidx portion because the error ```js    androidx.viewpager.widget.ViewPager$LayoutParams cannot be cast to android.view.ViewGroup$MarginLayoutParams  ```  i hope there is a quick fix for it.  btw. the following works: ```js    Navigation.setRoot({             root: {                 topTabs: {                     children: [{                         stack: {                             children: [{                                 component: {                                     name: "AppScreen",                                 }                             }]                         }                     },                     {                         stack: {                             children: [{                                 component: {                                     name: "AppScreen",                                 }                             }]                         }                     }],                 },             }         }); ``` --- ### Environment * React Native Navigation version: 3.0.0-alpha.11 * React Native version: 0.60.4 * Platform(s) (iOS, Android, or both?): Android, iOS not tested * Device info (Simulator/Device? OS version? Debug/Release?): Simulator and Device; Debug; Release not tested  * React Native Navigation version: 2.26.5 * React Native version: 0.59.10 * Platform(s) (iOS, Android, or both?): Android, iOS not tested * Device info (Simulator/Device? OS version? Debug/Release?): Simulator and Device; Debug; Release not tested</body>
		<created>2019-08-13 18:34:32</created>
		<closed>2019-10-19 12:03:24</closed>
	</bug>
	<bug>
		<id>5366</id>
		<title>[iOS/Android] setRoot promise resolves before React components are unmounted</title>
		<body>### Issue Description  When using setRoot one would assume that when setRoot's promise resolves, the previous layout would be fully unmounted. This seems to not be the case. I'm seeing a delay of about 50-200ms between the promise resolving and the react components unmounting. This messes with my log out logic as I reset our redux store directly after changing root which then triggers several of the still mounted components to do a fetch.  ### Steps to Reproduce / Code Snippets / Screenshots  This can be easily seen in a Redux app that logs the actions.  ```js export const setNotAuthenticatedRootLayout = () =&gt; async(dispatch) =&gt; {   dispatch(setNotAuthenticatedRootLayoutStarted());   try {     Navigation.setDefaultOptions(DEFAULT_NOT_AUTHENTICATED_STYLING_OPTIONS);     await Navigation.setRoot(NOT_AUTHENTICATED_LAYOUT);     dispatch(setNotAuthenticatedRootLayoutSuccess());   } catch (error) {     dispatch(setNotAuthenticatedRootLayoutFailed(error));   } };  export const requestLogOut = () =&gt; async(dispatch) =&gt; {   dispatch(requestLogOutStarted());   try {     // Other log out logic like resetting HTTP auth headers etc     await dispatch(setNotAuthenticatedRootLayout());     dispatch(requestLogOutSuccess()); &lt;--- This action also resets my redux stores   } catch (error) {     dispatch(requestLogOutFailed(error));   } ```  and in one of the mounted components: ```js   componentWillUnmount() {     console.log('We are unmounting!');   } ```  Result: We can see the console.log happening ~80ms after the promise resolved.  ![before_guyca_fix](https://user-images.githubusercontent.com/4223434/62688972-2feb6880-b9ca-11e9-9c21-e6fb3d44aab4.png)   --- ### Environment * React Native Navigation version: 2.26.5 * React Native version: 0.59.10 * Platform(s) (iOS, Android, or both?): Both * Device info (Simulator/Device? OS version? Debug/Release?): Simulator + Device, Debug + Release </body>
		<created>2019-08-08 08:51:56</created>
		<closed>2020-05-17 15:29:17</closed>
	</bug>
	<bug>
		<id>5355</id>
		<title>[Regression] [iOS] setStackRoot: top bar buttons are not working</title>
		<body>### Issue Description  After using setStackRoot, it seems my top bar button are no longer working. (Custom react top bar components still work though)  Related to commit: https://github.com/wix/react-native-navigation/commit/5459fa534403f6978ed79c75598a6a8dcadd5339  ### Steps to Reproduce / Code Snippets / Screenshots  ```js     await Navigation.setStackRoot(componentId, [       {         component: {           name: SCREENS.EMAIL_EDIT,           passProps: {             resourceUri,           },           options: {             animations: {               setStackRoot: {                 enabled: false,               },             },           },         },       },     ]); ``` --- ### Environment * React Native Navigation version: 2.26.4 * React Native version: 59.10 * Platform(s) (iOS, Android, or both?): iOS * Device info (Simulator/Device? OS version? Debug/Release?): All </body>
		<created>2019-08-05 12:31:52</created>
		<closed>2019-08-06 07:38:23</closed>
	</bug>
	<bug>
		<id>5348</id>
		<title>[V2] componentWillUnmount not running on screen pop.</title>
		<body>### Issue Description  I'm pushing a screen like normal, with `Navigation.push`, and then pop it w/ `Navigation.pop`. I noticed after the pop takes place, the animation runs, the screen is no longer visible, bot `componentWillUnmount` **doesn't** run.  As I investigated further I found out that `Navigation.pop` never returns anything, the promises that it's supposed to return NEVER resolves, or rejects.  I decided to dig further into the code and found out that [this](https://github.com/wix/react-native-navigation/blob/d09d0108d1530cf10e24c46efb6c9d9962807ead/lib/ios/RNNNavigationStackManager.m#L40:L44) never runs and that's because [this](https://github.com/wix/react-native-navigation/blob/d09d0108d1530cf10e24c46efb6c9d9962807ead/lib/ios/RNNNavigationStackManager.m#L87:L89) never runs.  Now I tried to reproduce that on the playground app but couldn't. Not sure why that's happening on my end.   GOOD NEWS though, I also found [this SO answer](https://stackoverflow.com/questions/27470130/catransaction-completion-block-never-fires)  and tried surrounding the animation block with a main thread block.  After that the issue was gone!! [The completion block runs again](https://github.com/wix/react-native-navigation/blob/d09d0108d1530cf10e24c46efb6c9d9962807ead/lib/ios/RNNNavigationStackManager.m#L87:L89) and so does `componentWillUnmount` on every pop.  I still have no idea what's causing it, but here's how the new code looks like:  ``` [self performAnimationBlock:^{         poppedVC = [viewController.navigationController popViewControllerAnimated:animated]; } ```  is now:  ``` [self performAnimationBlock:^{         dispatch_async(dispatch_get_main_queue(), ^{             poppedVC = [viewController.navigationController popViewControllerAnimated:animated];         }); } ``` --- ### Environment * React Native Navigation version: 2.26.2 * React Native version: 0.59.9 * Platform(s) (iOS, Android, or both?): iOS * Device info (Simulator/Device? OS version? Debug/Release?): iPad Pro 12.9 Inch 3rd Generation iOS 12.4 Simulator </body>
		<created>2019-08-02 16:05:16</created>
		<closed>2020-01-21 13:07:00</closed>
	</bug>
	<bug>
		<id>5343</id>
		<title>[V3] mergeOptions does not change bottomTab colors</title>
		<body>### Issue Description  When I want to change the color of the bottomTab items, I call mergeOptions to change it accordingly. This works perfectly on iOS, but this feature doesn't seem to be implemented. (as BottomTabsController.java mergeOptions doesn't call `tabPresenter.mergeOptions(options);`)  ### Steps to Reproduce / Code Snippets / Screenshots  ```js Navigation.setRoot({ root: { bottomTabs: { id: 'root', children: [ { stack: { id: `tab-1`, children: [ { component: { name: '1', }, }, ], options: { bottomTab: { iconColor: '#FFF', textColor: '#FFF', }, bottomTabs: { animate: true, }, }, }, }, ], }, }, });  // some time later  Navigation.mergeOptions('root', { bottomTab: { iconColor: '#000', textColor: '#000', }, bottomTabs: { animate: true, }, }); Navigation.mergeOptions(`tab-1`, { bottomTab: { iconColor: '#000', textColor: '#000', }, bottomTabs: { animate: true, }, }); ``` When mergeOptions is called, the items are changed accordingly on iOS, but not on android. --- ### Environment * React Native Navigation version: `3.0.0-alpha.8` * React Native version: `0.60.4` * Platform(s) (iOS, Android, or both?): Android * Device info (Simulator/Device? OS version? Debug/Release?): All </body>
		<created>2019-08-01 13:25:23</created>
		<closed>2019-08-19 12:07:47</closed>
	</bug>
	<bug>
		<id>5336</id>
		<title>[V3-alpha.8] Status bar space on android 4.4</title>
		<body>### Issue Description  Space between top bar and status bar on android 4.4  ### Steps to Reproduce / Code Snippets / Screenshots &lt;img width="356" alt="Screenshot 2019-07-30 at 16 27 39" src="https://user-images.githubusercontent.com/9282988/62137900-ff7b3e80-b2e6-11e9-8378-849c7b82c8a0.png"&gt;  (Top bar is green and status bar is black)  --- ### Environment * React Native Navigation version: 3.0.0-alpha.8 * React Native version: 0.60.4 * Platform(s) : Android * Device info: Simulator Nexus 4 API 19 (4.4) Debug </body>
		<created>2019-07-30 14:29:13</created>
		<closed>2020-09-11 11:45:45</closed>
	</bug>
	<bug>
		<id>5311</id>
		<title>[v3] hidden Topbar conflicts with Sidemenu and Translucent</title>
		<body>### Issue Description  when TopBar visibility is false in default options, showing side menu programmatically only side menu background shows up. swipe opening still works.  ### Steps to Reproduce / Code Snippets / Screenshots  1. open playground app 2. in options tab press **Hide TopBar in DefaultOptions** 3. press **Statusbar** button 4. press **BottomTabs** button 5. in **Statusbar** screen try open left or right side menu by pressing **OpenLeft** or **OpenRight** button  ![rec](https://user-images.githubusercontent.com/7693001/61704056-27ebc180-ad58-11e9-9592-2dbec37ed610.gif)  --- ### Environment * React Native Navigation version: v3 alpha4 * React Native version: v0.60.4 * Platform(s) (iOS, Android, or both?): Android * Device info (Simulator/Device? OS version? Debug/Release?): Samsung s5 Android 6.0.1 </body>
		<created>2019-07-23 10:20:24</created>
		<closed>2019-08-13 07:06:11</closed>
	</bug>
	<bug>
		<id>5285</id>
		<title>[v3] TopBar behind StatusBar on push with visible flag change</title>
		<body>### Issue Description  When pushing a Screen on a Stack that was `topBar: { visible: false }` becoming `topBar: { visible: true }`, the TopBar is rendered behind the StatusBar:  ![Screenshot_1563192104](https://user-images.githubusercontent.com/996231/61214773-1deb1280-a709-11e9-8354-0e5cc4d9063c.png)    ### Steps to Reproduce / Code Snippets / Screenshots  To reproduce, use v3 playground app with following diff:  ```diff diff --git a/playground/src/screens/PushedScreen.js b/playground/src/screens/PushedScreen.js index 23d7990d..38a9b8bb 100644 --- a/playground/src/screens/PushedScreen.js +++ b/playground/src/screens/PushedScreen.js @@ -30,7 +30,9 @@ class PushedScreen extends React.Component {            id: 'singleBtn',            text: 'single',            testID: TOP_BAR_BTN -        } +        }, +        drawBehind: true, +        visible: true,        }      };    } diff --git a/playground/src/screens/StackScreen.js b/playground/src/screens/StackScreen.js index 002a8de2..8b33701b 100644 --- a/playground/src/screens/StackScreen.js +++ b/playground/src/screens/StackScreen.js @@ -24,7 +24,9 @@ class StackScreen extends React.Component {          testID: STACK_SCREEN_HEADER,          title: {            text: 'Stack' -        } +        }, +        drawBehind: true, +        visible: false,        }      }    } ```  Steps: 1) Press "Stack" Button 2) Press "Push" Button   --- ### Environment * React Native Navigation version: v3 alpha 2 * React Native version: 0.60 * Platform(s) (iOS, Android, or both?): Android * Device info (Simulator/Device? OS version? Debug/Release?): Emulator API 28 </body>
		<created>2019-07-15 12:03:52</created>
		<closed>2019-07-20 15:57:45</closed>
	</bug>
	<bug>
		<id>5245</id>
		<title>[v2] [Android] White screen if you press physical back during modal</title>
		<body>### Issue Description  I think this is a bit awkward, if you call Navigation.showModal and during transition you press the physical back button, you get a white screen like your activity was removed from stack.  In the attached gif you can see it, on button press I'm calling showModal, if I press back on device, the result is I'm getting a white screen.  ### Steps to Reproduce / Code Snippets / Screenshots  ![20190701_104329](https://user-images.githubusercontent.com/12106217/60423056-991ed580-9bed-11e9-9748-a5e460464e37.gif)   --- ### Environment * React Native Navigation version: 2.22 * React Native version: 0.57.5 * Platform(s) (iOS, Android, or both?): Android * Device info (Simulator/Device? OS version? Debug/Release?): Device, all build types </body>
		<created>2019-07-01 08:48:32</created>
		<closed>2020-08-10 17:32:14</closed>
	</bug>
	<bug>
		<id>5236</id>
		<title>TopBar title centered after 2.21.1 upgrade</title>
		<body>### Issue Description  We're using a custom component in our topBar. After we upgraded to 2.21.1 from 2.17, the title moved from being left aligned to centered. I reverted the upgrade and the title went back over to the left. I tried setting `alignment` as well, but that had no effect.  ### Steps to Reproduce / Code Snippets / Screenshots ``` topBar: {   title: {     component: {       name: Resources     },   }, ... ``` **Version 2.17** ![Screen Shot 2019-06-25 at 1 50 31 PM](https://user-images.githubusercontent.com/8585262/60134620-c33b4800-9754-11e9-9b2a-72c9b2492d22.png) **Version 2.21.1** ![Screen Shot 2019-06-25 at 1 34 50 PM](https://user-images.githubusercontent.com/8585262/60134624-c59da200-9754-11e9-9200-21d2d81c90c0.png)  --- ### Environment * React Native Navigation version: 2.21.1 (also tried 2.22) * React Native version: 0.57.0 * Platform(s) (iOS, Android, or both?): iOS * Device info (Simulator/Device? OS version? Debug/Release?): Simulator &amp; device, debug &amp; release </body>
		<created>2019-06-25 21:26:41</created>
		<closed>2019-12-28 07:24:30</closed>
	</bug>
	<bug>
		<id>5192</id>
		<title>BottomTabs flash black when hiding them on screen push</title>
		<body>### Issue Description  We're in the process of switching from react-navigation to react-native-navigation. Everything was working fine until we switched our lay-out to the sidemenu. So we have a drawer left, and the center contains bottomTabs.  When pushing a screen, we want to hide the bottomTabs. This still works, but the bottomTabs turn black when pushing in the screen.  ### Steps to Reproduce / Code Snippets / Screenshots  Our layout looks like this:  ```js Navigation.setRoot({       root: {         sideMenu: {           left: {             component: {               name: routes.SideMenu,             },           },           center: {             bottomTabs: {               children: [                 {                   stack: {                     options: {                       bottomTab: {                         icon: require('resources/images/bottom-tabs/delta.png'),                       },                       sideMenu: {                         left: {                           enabled: true,                         },                       },                     },                     children: [{ component: { name: routes.Portfolio } }],                   },                 },                 {                   stack: {                     options: {                       bottomTab: {                         icon: require('resources/images/bottom-tabs/markets.png'),                       },                       sideMenu: {                         left: {                           enabled: true,                         },                       },                     },                     children: [                       { component: { name: routes.WatchlistAndMarkets } },                     ],                   },                 },                 {                   stack: {                     options: {                       bottomTab: {                         icon: require('resources/images/bottom-tabs/digest.png'),                       },                       sideMenu: {                         left: {                           enabled: true,                         },                       },                     },                     children: [{ component: { name: routes.Digest } }],                   },                 },                 {                   stack: {                     options: {                       bottomTab: {                         icon: require('resources/images/bottom-tabs/notifications.png'),                       },                       sideMenu: {                         left: {                           enabled: true,                         },                       },                     },                     children: [{ component: { name: routes.Notifications } }],                   },                 },                 {                   stack: {                     options: {                       bottomTab: {                         icon: require('resources/images/bottom-tabs/settings.png'),                       },                       sideMenu: {                         left: {                           enabled: true,                         },                       },                     },                     children: [{ component: { name: routes.Settings } }],                   },                 },               ],             },           },         },       },     }); ``` Before we just had the layout which is defined in the center, then the black flash didn't appear.  I created a video to show the problem. https://jumpshare.com/v/SId8gggV5UvZ0LsIcMlc  --- ### Environment * React Native Navigation version: 2.18.5 * React Native version: 0.59.8 * Platform(s) (iOS, Android, or both?): iOS * Device info (Simulator/Device? OS version? Debug/Release?): iPhone X (real device), iPhone 6 (simulator) both latest iOS version </body>
		<created>2019-06-07 08:59:48</created>
		<closed>2019-07-02 14:08:58</closed>
	</bug>
	<bug>
		<id>5184</id>
		<title>[Android] Nested TouchableOpacity in overlay screen don't work</title>
		<body>### Issue Description  On Android only, setting option interceptTouchOutside to false makes onPress of TouchableOpacity components to not work in child components. On iOS it works perfectly.  ### Steps to Reproduce / Code Snippets / Screenshots  ``` &lt;View style={styles.root}&gt;         &lt;Text style={styles.title} testID={OVERLAY_ALERT_HEADER}&gt;Test view nested touchables&lt;/Text&gt;         &lt;Button title='Dismiss' testID={DISMISS_BTN} onPress={this.dismiss} /&gt;          &lt;TouchableOpacity style={{ backgroundColor: 'red' }} onPress={() =&gt; alert('Touch parent')}&gt;           &lt;View style={{ height: 300, width: 300, alignItems: 'center', justifyContent: 'center' }}&gt;             &lt;TouchableOpacity style={{ margin: 5, height: 90, width: 90, backgroundColor: 'orange', alignItems: 'center', justifyContent: 'center' }} onPress={() =&gt; alert('Touch child')}&gt;               &lt;Text&gt;favourites&lt;/Text&gt;             &lt;/TouchableOpacity&gt;              &lt;TouchableOpacity style={{ margin: 5, height: 90, width: 90, backgroundColor: 'orange', alignItems: 'center', justifyContent: 'center' }} onPress={() =&gt; alert('Touch child')}&gt;               &lt;Text&gt;notifications&lt;/Text&gt;             &lt;/TouchableOpacity&gt;              &lt;TouchableOpacity style={{ margin: 5, height: 90, width: 90, backgroundColor: 'orange', alignItems: 'center', justifyContent: 'center' }} onPress={() =&gt; alert('Touch child')}&gt;               &lt;Text&gt;settings&lt;/Text&gt;             &lt;/TouchableOpacity&gt;            &lt;/View&gt;         &lt;/TouchableOpacity&gt;       &lt;/View&gt; ```  Example https://github.com/wix/react-native-navigation/pull/5182  ![58910106-a2ab3f80-870c-11e9-8c2e-bf418245deff](https://user-images.githubusercontent.com/6560136/58943338-6c56da00-8777-11e9-9f1e-8a3794e53cdc.png)  ![58910120-a939b700-870c-11e9-8d0e-ce4f3a75ed2e](https://user-images.githubusercontent.com/6560136/58943347-711b8e00-8777-11e9-8d15-ed4a9c544baa.png)  --- ### Environment * React Native Navigation version: 2.21.0 * React Native version: 0.59.8 * Platform(s) (iOS, Android, or both?): Android * Device info (Simulator/Device? OS version? Debug/Release?): Samsung S9 Android 8/9 Debug/Release </body>
		<created>2019-06-05 08:52:59</created>
		<closed>2020-05-25 12:23:09</closed>
	</bug>
	<bug>
		<id>5157</id>
		<title>[Android] RuntimeException viewControllers.getView</title>
		<body>### Issue Description  Seeing some Android crashes in the Google playstore related to RNN.   ### Steps to Reproduce / Code Snippets / Screenshots 1.  ```java java.lang.RuntimeException:    at com.reactnativenavigation.viewcontrollers.ViewController.getView (ViewController.java:165)   at com.reactnativenavigation.viewcontrollers.stack.StackController.onAttachToParent (StackController.java:82)   at com.reactnativenavigation.viewcontrollers.ViewController.onGlobalLayout (ViewController.java:255)   at android.view.ViewTreeObserver.dispatchOnGlobalLayout (ViewTreeObserver.java:945)   at android.view.ViewRootImpl.performTraversals (ViewRootImpl.java:2366)   at android.view.ViewRootImpl.doTraversal (ViewRootImpl.java:1468)   at android.view.ViewRootImpl$TraversalRunnable.run (ViewRootImpl.java:7208)   at android.view.Choreographer$CallbackRecord.run (Choreographer.java:1004)   at android.view.Choreographer.doCallbacks (Choreographer.java:816)   at android.view.Choreographer.doFrame (Choreographer.java:751)   at android.view.Choreographer$FrameDisplayEventReceiver.run (Choreographer.java:990)   at android.os.Handler.handleCallback (Handler.java:873)   at android.os.Handler.dispatchMessage (Handler.java:99)   at android.os.Looper.loop (Looper.java:193)   at android.app.ActivityThread.main (ActivityThread.java:6692)   at java.lang.reflect.Method.invoke (Native Method)   at com.android.internal.os.RuntimeInit$MethodAndArgsCaller.run (RuntimeInit.java:493)   at com.android.internal.os.ZygoteInit.main (ZygoteInit.java:858) ```  2.  ```java java.lang.RuntimeException:    at com.reactnativenavigation.viewcontrollers.ViewController.getView (ViewController.java:165)   at com.reactnativenavigation.viewcontrollers.ChildController.onViewBroughtToFront (ChildController.java:45)   at com.reactnativenavigation.viewcontrollers.ChildControllersRegistry.onViewDisappear (ChildControllersRegistry.java:15)   at com.reactnativenavigation.viewcontrollers.ChildController.onViewDisappear (ChildController.java:41)   at com.reactnativenavigation.viewcontrollers.ComponentViewController.onViewDisappear (ComponentViewController.java:48)   at com.reactnativenavigation.viewcontrollers.ViewController.destroy (ViewController.java:235)   at com.reactnativenavigation.viewcontrollers.ChildController.destroy (ChildController.java:70)   at com.reactnativenavigation.viewcontrollers.ComponentViewController.destroy (ComponentViewController.java:93)   at com.reactnativenavigation.viewcontrollers.ParentController.destroy (ParentController.java:112)   at com.reactnativenavigation.viewcontrollers.stack.StackController.destroy (StackController.java:138)   at com.reactnativenavigation.viewcontrollers.ParentController.destroy (ParentController.java:112)   at com.reactnativenavigation.viewcontrollers.bottomtabs.BottomTabsController.destroy (BottomTabsController.java:176)   at com.reactnativenavigation.viewcontrollers.navigator.Navigator.destroyRoot (Navigator.java:121)   at com.reactnativenavigation.viewcontrollers.navigator.Navigator.setRoot (Navigator.java:131)   at com.reactnativenavigation.react.NavigationModule.lambda$setRoot$1 (NavigationModule.java:70)   at com.reactnativenavigation.react.-$$Lambda$NavigationModule$IfiDeOnYfgJADKZUxIVN9Zforsw.run (Unknown Source:8)   at android.os.Handler.handleCallback (Handler.java:873)   at android.os.Handler.dispatchMessage (Handler.java:99)   at android.os.Looper.loop (Looper.java:193)   at android.app.ActivityThread.main (ActivityThread.java:6692)   at java.lang.reflect.Method.invoke (Native Method)   at com.android.internal.os.RuntimeInit$MethodAndArgsCaller.run (RuntimeInit.java:493)   at com.android.internal.os.ZygoteInit.main (ZygoteInit.java:858) ``` --- ### Environment * React Native Navigation version: 2.19.1 * React Native version: 59.8 * Platform(s) (iOS, Android, or both?): Android * Device info (Simulator/Device? OS version? Debug/Release?): All </body>
		<created>2019-05-27 07:36:49</created>
		<closed>2019-05-28 10:57:42</closed>
	</bug>
	<bug>
		<id>5152</id>
		<title>[v2] Large title animation flicks with pull-to-refresh </title>
		<body>Related to https://github.com/wix/react-native-navigation/issues/3538 posted in Jul 11, 2018 that is being ignored.  Large title doesn't behavior as expected when you have pull to refresh on the screen. I don't know if this is an iOS or react-native-navigation bug.  With small title:  ![small title](https://thumbs.gfycat.com/GlaringSilentBlackwidowspider-size_restricted.gif)  With large title:  ![large title bug](https://thumbs.gfycat.com/PossibleApprehensiveGuineapig-size_restricted.gif)   --- ### Environment * React Native Navigation version: 2.18.4 * React Native version: 0.59 * Platform(s) (iOS, Android, or both?): iOS </body>
		<created>2019-05-24 20:02:10</created>
		<closed>2020-08-12 19:46:06</closed>
	</bug>
	<bug>
		<id>5124</id>
		<title>[Regression] Topbar's button custom components weird behaviour</title>
		<body>### Issue Description  It seems between version 2.17 and 2.19 there has been a change in how custom topbar button components display. Notice how between screenshots the badge of the right button no longer works.  RNN version 2.17: ![Selection_058](https://user-images.githubusercontent.com/4223434/58019214-4ab5eb80-7b05-11e9-816c-d2094015b97c.png)  RNN version 2.19: ![Selection_059](https://user-images.githubusercontent.com/4223434/58019259-60c3ac00-7b05-11e9-8989-d6f179b9031f.png)   ### Steps to Reproduce / Code Snippets / Screenshots  The badge is an absolute positioned view. ![Selection_061](https://user-images.githubusercontent.com/4223434/58019402-bac47180-7b05-11e9-918f-0d9487689c5f.png)   --- ### Environment * React Native Navigation version: 2.19.0 * React Native version: 0.57.8 * Platform(s) (iOS, Android, or both?): Android * Device info (Simulator/Device? OS version? Debug/Release?): All </body>
		<created>2019-05-20 11:47:27</created>
		<closed>2019-05-20 14:58:01</closed>
	</bug>
	<bug>
		<id>5117</id>
		<title>[V2] Android Exception java.util.NoSuchElementException StackController.java:228</title>
		<body>### Issue Description  Seeing this error frequently in production but unable to reproduce. Any thoughts on what we could be doing to cause this / if there is a way to prevent this?  ### Steps to Reproduce / Code Snippets / Screenshots  &lt;!-- Note: When embeding code, please format it and use syntax highlighting to improve readability --&gt; ```     at java.util.ArrayList$Itr.next (ArrayList.java:863)   at com.reactnativenavigation.viewcontrollers.stack.StackController.removeChildrenBellowTop (StackController.java:228)   at com.reactnativenavigation.viewcontrollers.stack.StackController.access$000 (StackController.java:36)   at com.reactnativenavigation.viewcontrollers.stack.StackController$2.onSuccess (StackController.java:209)   at com.reactnativenavigation.viewcontrollers.stack.StackController.lambda$push$4$StackController (StackController.java:174)   at com.reactnativenavigation.viewcontrollers.stack.StackController$$Lambda$4.run (Unknown Source:8)   at com.reactnativenavigation.anim.NavigationAnimator$1.onAnimationEnd (NavigationAnimator.java:65)   at android.animation.Animator$AnimatorListener.onAnimationEnd (Animator.java:552)   at android.animation.AnimatorSet.endAnimation (AnimatorSet.java:1294)   at android.animation.AnimatorSet.doAnimationFrame (AnimatorSet.java:1079)   at android.animation.AnimationHandler.doAnimationFrame (AnimationHandler.java:146)   at android.animation.AnimationHandler.access$100 (AnimationHandler.java:37)   at android.animation.AnimationHandler$1.doFrame (AnimationHandler.java:54)   at android.view.Choreographer$CallbackRecord.run (Choreographer.java:947)   at android.view.Choreographer.doCallbacks (Choreographer.java:761)   at android.view.Choreographer.doFrame (Choreographer.java:693)   at android.view.Choreographer$FrameDisplayEventReceiver.run (Choreographer.java:935)   at android.os.Handler.handleCallback (Handler.java:873)   at android.os.Handler.dispatchMessage (Handler.java:99)   at android.os.Looper.loop (Looper.java:214)   at android.app.ActivityThread.main (ActivityThread.java:7032)   at java.lang.reflect.Method.invoke (Native Method)   at com.android.internal.os.RuntimeInit$MethodAndArgsCaller.run (RuntimeInit.java:494)   at com.android.internal.os.ZygoteInit.main (ZygoteInit.java:965)  ```  --- ### Environment * React Native Navigation version: 2.18.5 * React Native version: 0.57.8 * Platform(s) (iOS, Android, or both?): Android * Device info (Simulator/Device? OS version? Debug/Release?): Device Android 7.1-9 Release </body>
		<created>2019-05-17 06:29:30</created>
		<closed>2019-05-26 13:11:23</closed>
	</bug>
	<bug>
		<id>5092</id>
		<title>[v2][Android] Topbar rightButtons don't work with height</title>
		<body>### Issue Description  I'm currently using the property height in my topBar (only for Android of course). I'm trying to use a gradient as topbar background and I want the gradient to go behind the statusbar. By default title and buttons are centered in the topbar, so I'm using tilte height property to correctly place the title centered in topbar (ignoring statusbar height). The problem with this approach is that it only work for the title, not for buttons. Statusbar has no background component so I can't set the gradient as background there. Any idea on a fix or a way to achieve the expected result?  ### Screenshot  ![Screenshot_20190510-102000](https://user-images.githubusercontent.com/12106217/57512948-59362300-730d-11e9-864e-cfc6044f0b16.png)   ### Steps to Reproduce / Code Snippets  This is my style object ```js {   statusBar: {     style: 'light',        },   topBar: {     height: Platform.select({ android: NAVBAR_HEIGHT }), // Only on Android       title: {       height: Platform.select({ android: NAVBAR_HEIGHT }), // Only on Android         text: opt.title,           color: Colors.WHITE     },     backButton: {       color: Colors.WHITE     },     background: {       component: {         name: NavigationKeys.topBarBackground       }     },       rightButtons: Platform.select&lt;OptionsTopBarButton[]&gt;({         android: [           {             id: NavigatorButtonIds.ADD,             icon: IconStorage.getImage('plus')           }         ],         ios: [           {             id: NavigatorButtonIds.ADD,             color: Colors.WHITE,             systemItem: 'add'           }         ]       })   } }; ``` --- ### Environment * React Native Navigation version: Latest, 2.18.5 * React Native version: 0.57.8 * Platform(s) (iOS, Android, or both?): Android * Device info (Simulator/Device? OS version? Debug/Release?): Device - tried on 6,7,8 - Debug </body>
		<created>2019-05-10 08:23:17</created>
		<closed>2019-06-18 02:03:31</closed>
	</bug>
	<bug>
		<id>5078</id>
		<title>[iOS] showModal custom animation Platform inconsistency</title>
		<body>### Issue Description showModal animations options differ on iOS and Android.  Related issue: #4886 and maybe this? #5036   ### Steps to Reproduce / Code Snippets / Screenshots ```tsx Navigation.showModal({   stack: {     children: [       {         component: {           name: 'COMPONENT_NAMAE',           options: {             animations: {               showModal: {                 // Works on Android but not on iOS                 alpha: {                   from: 0,                   to: 1,                   duration: 250,                 },                  // Only works on iOS                 content: {                   alpha: {                     from: 0,                     to: 1,                     duration: 250                   }                 }               },             },           },         },       },     ],   }, })  ```  The same config is applicable in `dismissModal` animations option as well as single component showModal.  --- ### Environment * React Native Navigation version: 2.18.4 * React Native version: 0.59.3 * Platform(s) (iOS, Android, or both?): iOS * Device info (Simulator/Device? OS version? Debug/Release?): all </body>
		<created>2019-05-07 04:52:36</created>
		<closed>2020-02-07 07:34:47</closed>
	</bug>
	<bug>
		<id>5036</id>
		<title>[V2] showModal animation broken</title>
		<body>### Issue Description  On the latest version, modals on iOS instantly show, while the dismiss animation _does_ work.   ### Steps to Reproduce / Code Snippets / Screenshots  ```js                                                       Navigation.showModal({   component: {     name: 'example.Screen'   } }); ```          --- ### Environment * React Native Navigation version: 2.18.1 * React Native version: 0.59.5 * Platform(s) (iOS, Android, or both?): iOS confirmed </body>
		<created>2019-04-26 12:03:34</created>
		<closed>2019-05-12 07:36:19</closed>
	</bug>
	<bug>
		<id>5010</id>
		<title>[V2] [Android] Calling setRoot a second time or currentTabIndex breaks the bottom tab bar</title>
		<body>### Issue Description  Running 2.17.0-snapshot.285 calling setRoot multiple times in the app's lifecycle or calling ```js Navigation.mergeOptions('MainBottomTab', {     bottomTabs: {       currentTabIndex: 0,     },   }); ``` causes the Android bottom tab bar to become stuck on tab index 0. Trying to tap on any other tab causes the tab bar to appear to switch to that tab, but it immediately reverts back to tab index 0. Only killing the app and restarting it can restore bottom tab functionality until the next setRoot or currentTabIndex call.   ### Steps to Reproduce / Code Snippets / Screenshots  On Android call setRoot multiple times with two or more bottomTabs or call  ```js Navigation.mergeOptions('MainBottomTab', {     bottomTabs: {       currentTabIndex: 0,     },   }); ``` after setRoot.  --- ### Environment * React Native Navigation version: 2.17.0-snapshot.285 * React Native version: 0.59.5 * Platform(s) (iOS, Android, or both?): Android * Device info (Simulator/Device? OS version? Debug/Release?): Emulator and Device 9.0. Debug only tested so far. </body>
		<created>2019-04-21 15:31:13</created>
		<closed>2019-05-15 06:09:45</closed>
	</bug>
	<bug>
		<id>4982</id>
		<title>[v2][iOS] currentTabIndex regression after 2.16.0-snapshot.270</title>
		<body>### Issue Description  When I use 2.16.0-snapshot.267, currentTabIndex is working fine. After updating to 2.16.0-snapshot.270 it is ignored and default tab index becomes 0.  ### Steps to Reproduce / Code Snippets / Screenshots  &lt;!-- Note: When embeding code, please format it and use syntax highlighting to improve readability --&gt; ```js   root: {     bottomTabs: {       options: { bottomTabs: { currentTabIndex: 1 } }     }   } ```  I think this commit affected [Explicit attaching and detaching viewControllers in store](https://github.com/wix/react-native-navigation/pull/4947) --- ### Environment * React Native Navigation version: 2.16.0-snapshot.270 * React Native version: 0.58.4 * Platform(s) (iOS, Android, or both?): iOS * Device info (Simulator/Device? OS version? Debug/Release?): Simulator </body>
		<created>2019-04-14 19:30:18</created>
		<closed>2019-04-17 20:04:07</closed>
	</bug>
	<bug>
		<id>4975</id>
		<title>Change orientation on iOS doesn't work (2.17.0)</title>
		<body>### Issue Description  Changing/setting the orientation with RNN API does not seem to work on iOS.  I have an application which is portrait only, except on one screen where both "portrait" and "landscape" are allowed.  To implement this orientation setting, I do a `setStackRoot` to that screen with the following options: ``` { layout: { orientation: ["portrait","landscape"], } } ```  This orientation setting is correctly handled on Android but is not handled at all on iOS. On iOS, the orientation stays on "portrait" only.  My iOS app orientation settings in xcode were "portrait" only for my app. I tried to set it to "portrait"/"landscape left"/"landscape right". But as I want only one screen to be in both landscape and portrait, I've changed my `setRoot` call to start my app in "portrait" only: ``` Navigation.setRoot({     root: {         sideMenu: {             left: {                 component: {                     id: IDs.DRAWER,                     name: MySideMenu,                 }             },             center: {                 stack: {                     id: IDs.MGX_STACK,                     children: [{                         component: {                             name: MyHome,                             options: {                                 layout: {                                     orientation: ["portrait"],                                 }                             }                         },                       }],                     options: {                         layout: {                             orientation: ["portrait"],                         }                     }                 }             },         },     } }) ``` And there too this setting is ignored. My app is now always in both portrait and landscape...  What's wrong? I can't believe this orientation feature is broken on iOS, so what am I doing wrong/missing?  ### Steps to Reproduce / Code Snippets / Screenshots  Simply change the orientation of one screen from portrait to both portrait and landscape on iOS.  --- ### Environment * React Native Navigation version: 2.17.0 * React Native version: 0.57.1 * Platform(s) (iOS, Android, or both?): iOS * Device info (Simulator/Device? OS version? Debug/Release?): device, iOS 12.0.1, debug </body>
		<created>2019-04-11 15:41:53</created>
		<closed>2019-04-17 20:35:26</closed>
	</bug>
	<bug>
		<id>4973</id>
		<title>[V2][iOS] Multiple modals crash during debug mode</title>
		<body>### Issue Description  More than 1 modal opens fine. But upon closing, there's a native signal. Only happens during when DEBUG is on.  ### Steps to Reproduce / Code Snippets / Screenshots  RNNRootViewController.m -(void)cleanReactLeftovers { [[NSNotificationCenter defaultCenter] removeObserver:self]; [[NSNotificationCenter defaultCenter] removeObserver:self.view]; self.view = nil; self.navigationItem.titleView = nil; // crashes self.navigationItem.rightBarButtonItems = nil; self.navigationItem.leftBarButtonItems = nil; }  This seems to fix it: -(void)cleanReactLeftovers { [[NSNotificationCenter defaultCenter] removeObserver:self]; [[NSNotificationCenter defaultCenter] removeObserver:self.view]; self.view = nil; #if !DEBUG self.navigationItem.titleView = nil; self.navigationItem.rightBarButtonItems = nil; self.navigationItem.leftBarButtonItems = nil; #endif }   --- ### Environment * React Native Navigation version: 2.17.0 * React Native version: 0.59.3 * Platform(s): iOS * Device info: Simulator and device, Debug only</body>
		<created>2019-04-11 11:19:13</created>
		<closed>2019-04-18 08:37:11</closed>
	</bug>
	<bug>
		<id>4960</id>
		<title>[iOS] Updated RNNUIBarButtonItem.m implementation with constraints causes crash</title>
		<body>### Issue Description  After upgrading from 2.11.0 to the latest version (2.17.0), our team started experiencing an issue with updating bar buttons in tab-based React Native application. The app crashed and we couldn't understand the root of the issue.  ### Steps to Reproduce / Code Snippets / Screenshots  After calculating values, we called a simple `mergeOptions` where we pass an updated set of buttons and its props:  ``` Navigation.mergeOptions(   this.props.componentId,   options.updatedHeader(this.onButtonPress, disabled) ) ``` And then we got the following error: &lt;img width="813" alt="Screen Shot 2019-04-08 at 14 40 53" src="https://user-images.githubusercontent.com/8209964/55796108-d9305980-5ad1-11e9-887d-5b851c08353b.png"&gt;  We started to compare the source code of React Native Navigation 2.11.0 and 2.17.0 and noticed the changes done regarding constraints (RNNUIBarButtonItem.h file) of bar button items after 2.11.0. We removed these lines, and everything worked ok.  &lt;img width="1594" alt="Screen Shot 2019-04-08 at 22 37 31" src="https://user-images.githubusercontent.com/8209964/55796187-0250ea00-5ad2-11e9-8341-9444ab1b28d2.png"&gt;  --- ### Environment * React Native Navigation version: 2.17.0 * React Native version: 0.58.6 * Platform(s) (iOS, Android, or both?): iOS * Device info (Simulator/Device? OS version? Debug/Release?): Simulator, iOS 12 </body>
		<created>2019-04-09 11:20:28</created>
		<closed>2019-06-26 07:25:07</closed>
	</bug>
	<bug>
		<id>4921</id>
		<title>[Android][V2] Dismissing a modal over a pushed screen causes crash</title>
		<body>### [ANDROID] Dismissing a modal over a pushed screen causes crash  My app is a tab-based app with various pushed screens and modals. Currently (and only on android), we have several areas of the app where a screen is pushed, and a modal is shown over the pushed screen. In all areas where this is the case, calling `dismissAllModals()` results in an app crash.  ### Steps to Reproduce / Code Snippets / Screenshots 1. Launch android app 2. Push a screen 3. Display a modal over that pushed screen 4. Dismiss the modal.  &lt;!-- Note: When embeding code, please format it and use syntax highlighting to improve readability --&gt; &lt;!-- ```js                                                         --&gt; &lt;!-- [ THIS CODE BLOCK WILL USE JAVASCRIPT SYNTAX HIGHLIGHTING ]   --&gt; &lt;!-- ```                                                           --&gt; ##### Stack trace: ``` java.lang.NullPointerException: Attempt to invoke virtual method 'float java.lang.Float.floatValue()' on a null object reference         at com.aurelhubert.ahbottomnavigation.AHBottomNavigation.setTitleInactiveTextSizeInSp(AHBottomNavigation.java:1184)         at com.reactnativenavigation.presentation.BottomTabPresenter.applyOptions(BottomTabPresenter.java:55)         at com.reactnativenavigation.viewcontrollers.bottomtabs.BottomTabsController.applyOptions(BottomTabsController.java:90)         at com.reactnativenavigation.viewcontrollers.ViewController.onViewAppeared(ViewController.java:206)         at com.reactnativenavigation.viewcontrollers.ChildController.onViewAppeared(ChildController.java:34)         at com.reactnativenavigation.viewcontrollers.ViewController.onGlobalLayout(ViewController.java:259)         at android.view.ViewTreeObserver.dispatchOnGlobalLayout(ViewTreeObserver.java:945)         at android.view.ViewRootImpl.performTraversals(ViewRootImpl.java:2250)         at android.view.ViewRootImpl.doTraversal(ViewRootImpl.java:1392)         at android.view.ViewRootImpl$TraversalRunnable.run(ViewRootImpl.java:6752)         at android.view.Choreographer$CallbackRecord.run(Choreographer.java:911)         at android.view.Choreographer.doCallbacks(Choreographer.java:723)         at android.view.Choreographer.doFrame(Choreographer.java:658)         at android.view.Choreographer$FrameDisplayEventReceiver.run(Choreographer.java:897)         at android.os.Handler.handleCallback(Handler.java:790)         at android.os.Handler.dispatchMessage(Handler.java:99)         at android.os.Looper.loop(Looper.java:164)         at android.app.ActivityThread.main(ActivityThread.java:6494)         at java.lang.reflect.Method.invoke(Native Method)         at com.android.internal.os.RuntimeInit$MethodAndArgsCaller.run(RuntimeInit.java:438)         at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:807) ```  ##### Function definition for pushed screen: ```js export const goToContestInfo = (rootId, contestId) =&gt; {     Navigation.push( rootId, {         component: {             name: 'contestInfo',             passProps: {                 contestId,             },             options: {                 bottomTabs: { visible: false , drawBehind: true, animate:true},                 topBar: {                     title: {                         text: 'INFO',                         color: 'white'                     },                     visible: true,                     buttonColor: "white",                      backButton: {                         visible: true,                         color:"white",                         icon: getBackArrow(),                     },                     background:{                          color: COLORS.dark                      },                 }             },         }     }) }; ```  ##### Function definition for showing modal: ```js export const goToGenericWebView = ( source ) =&gt; {     Navigation.showModal({         stack: {             children: [                 {                     component: {                         name: "genericWebView",                         passProps:{                             source                         },                         options:{                             overlayPresentationStyle: "overCurrentContext",                              topBar: {                                 title: {                                     component:{                                         name:'logoHeader',                                         alignment: 'center',                                     }                                 },                                 visible:true,                                  background: {                                     color: COLORS.dark                                 },                                 rightButtons:[                                     {                                         id:"closeWebViewModal",                                         component: {                                             name: 'iconButton',                                             passProps:{                                                 onPress: () =&gt; {                                                     Navigation.dismissAllModals()                                                 },                                                 source:closeButton,                                             }                                         }                                     }                                 ]                             }                         },                     }                 }             ]         }     }) } ```  --- ### Environment * React Native Navigation version: 2.15.0 * React Native version: 0.59.2 * Platform(s) (iOS, Android, or both?): Android only * Device info (Simulator/Device? OS version? Debug/Release?): Android simulator, OS version 8/9 (both tested), Debug </body>
		<created>2019-03-27 20:08:20</created>
		<closed>2019-09-20 11:08:47</closed>
	</bug>
	<bug>
		<id>4914</id>
		<title>Android push animation skips animating for heavy pages</title>
		<body>### Issue Description  Push animation on android skips animating for heavy pages. While on iOS it works fine.  Looking at the android implementation for animations I see that wait for render for the child view is only true if explicitly set so.  I would assume for parity that the flag would default to true or explicitly check for negation.  While it probably would make pushing times inconsistent; it at least would behave consistently on both platforms.   ### Steps to Reproduce / Code Snippets / Screenshots For internal testing we use pages that are showcasing various animating or heavy components. Such as a page with progress bars, animating via js. While switching to those pages the push animation usually skips.  To fix it explicitly setting `waitForRender` works: &lt;!-- Note: When embeding code, please format it and use syntax highlighting to improve readability --&gt; &lt;!-- ```js                                                         --&gt; &lt;!-- [ THIS CODE BLOCK WILL USE JAVASCRIPT SYNTAX HIGHLIGHTING ]   --&gt; &lt;!-- ```                                                           --&gt;             animations: {                 push: {                     waitForRender: true                 }             } --- ### Environment * React Native Navigation version: 2.15.0 * React Native version: 0.57.8 * Platform(s) (iOS, Android, or both?): Android * Device info (Simulator/Device? OS version? Debug/Release?): x86 emulator API 28</body>
		<created>2019-03-26 08:54:53</created>
		<closed>2019-05-15 11:31:01</closed>
	</bug>
	<bug>
		<id>4901</id>
		<title>v2.15.0 Exception 'Component id already exists ... at setRoot on ios</title>
		<body>### Issue Description  I've just updated from RNN 2.7.1 to 2.15.0.  On Android, everything seems fine.  On iOS, I've got a crash at startup if I dare set any id to any component or stack in the setRoot call: ``` Navigation.setRoot({     root: {         sideMenu: {             left: {                 component: {                     // id: IDs.DRAWER,                     name: MgxSideMenu,                 }             },             center: {                 stack: {                     // id: IDs.MGX_STACK,                     children: [{                         component: {                             name: MgxHome                         },                       }],                 }             },         },     } }); ``` If I uncomment any of those id attribute, it will crash at startup with: `Exception 'Component id already exists blablabla...`  ### Steps to Reproduce / Code Snippets / Screenshots  Set any id to any comp in your setRoot call and run on ios...  --- ### Environment * React Native Navigation version: 2.15.0 * React Native version: 0.57.1 * Platform(s) (iOS, Android, or both?): iOS * Device info (Simulator/Device? OS version? Debug/Release?): iPhone SE, debug  ``` $ react-native info    React Native Environment Info:     System:       OS: macOS High Sierra 10.13.6       CPU: (4) x64 Intel(R) Core(TM) i7-7567U CPU @ 3.50GHz       Memory: 118.04 MB / 16.00 GB       Shell: 3.2.57 - /bin/bash     Binaries:       Node: 8.11.3 - ~/.nvm/versions/node/v8.11.3/bin/node       Yarn: 1.10.1 - /usr/local/bin/yarn       npm: 5.6.0 - ~/.nvm/versions/node/v8.11.3/bin/npm       Watchman: 4.9.0 - /usr/local/bin/watchman     SDKs:       iOS SDK:         Platforms: iOS 12.1, macOS 10.14, tvOS 12.1, watchOS 5.1       Android SDK:         API Levels: 18, 23, 24, 25, 26, 27, 28         Build Tools: 23.0.1, 23.0.3, 25.0.0, 25.0.2, 25.0.3, 26.0.0, 26.0.1, 26.0.2, 26.0.3, 27.0.3, 28.0.3         System Images: a... | Intel x86 Atom_64, a...gle_apis | Google APIs Intel x86 Atom_64 ...     IDEs:       Android Studio: 3.1 AI-173.4819257       Xcode: 10.1/10B61 - /usr/bin/xcodebuild     npmPackages:       react: 16.5.0 =&gt; 16.5.0        react-native: 0.57.1 =&gt; 0.57.1      npmGlobalPackages:       react-native-app-id: 0.0.4       react-native-cli: 2.0.1       react-native-create-library: 3.1.2 ``` </body>
		<created>2019-03-22 23:28:11</created>
		<closed>2019-04-17 15:42:30</closed>
	</bug>
	<bug>
		<id>4836</id>
		<title>React Native Navigation Fatal Exception: Tried to create view after it has already been destroyed</title>
		<body>**Issue Description::**  I am working on React native application and using React Native Navigation for routing.  Sometimes my app crash on Android as I have crashlytics installed So I verified crashes using Firebase crash logs. I am getting this error log inside crashlytics::  ``` Fatal Exception: java.lang.RuntimeException: Tried to create view after it has already been destroyed at com.reactnativenavigation.viewcontrollers.ViewController.getView(ViewController.java:161)  at com.reactnativenavigation.viewcontrollers.ParentController.getView(ParentController.java:60) at com.reactnativenavigation.viewcontrollers.stack.StackController.lambda$push$4(StackController.java:172) at com.reactnativenavigation.viewcontrollers.stack.-$$Lambda$StackController$06hFigyLWXXMellTVVP0d0y7blk.run(Unknown Source:8) at com.reactnativenavigation.anim.NavigationAnimator$1.onAnimationEnd(NavigationAnimator.java:64) at android.animation.Animator$AnimatorListener.onAnimationEnd(Animator.java:552) at android.animation.AnimatorSet.endAnimation(AnimatorSet.java:1294) at android.animation.AnimatorSet.doAnimationFrame(AnimatorSet.java:1079) at android.animation.AnimationHandler.doAnimationFrame(AnimationHandler.java:146) at android.animation.AnimationHandler.access$100(AnimationHandler.java:37) at android.animation.AnimationHandler$1.doFrame(AnimationHandler.java:54) at android.view.Choreographer$CallbackRecord.run(Choreographer.java:1170) at android.view.Choreographer.doCallbacks(Choreographer.java:984) at android.view.Choreographer.doFrame(Choreographer.java:806) at android.view.Choreographer$FrameDisplayEventReceiver.run(Choreographer.java:1158) at android.os.Handler.handleCallback(Handler.java:873) at android.os.Handler.dispatchMessage(Handler.java:99) at android.os.Looper.loop(Looper.java:193) at android.app.ActivityThread.main(ActivityThread.java:6863) at java.lang.reflect.Method.invoke(Method.java) at com.android.internal.os.RuntimeInit$MethodAndArgsCaller.run(RuntimeInit.java:537) at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:858) ```  This is only happening inside Android application. I am not able to reproduce this case again, sometimes it occurs automatically. Most of the time it occurs when child screen is comes over the parent screen.  **Code::** ``` Navigation.push(this.props.componentId, {                 component: {                     id: screenId,                     name: screenName,                     passProps: props,                     options: options                 }             });  Navigation.popToRoot(this.props.componentId); ```  **I am using ::** - react native version :: 0.58.6 - react native navigation :: 2.12.0</body>
		<created>2019-03-08 12:31:35</created>
		<closed>2019-07-06 06:52:08</closed>
	</bug>
	<bug>
		<id>4824</id>
		<title>[Regression] [iOS] TextInput focusing in componentDidMount broken in Overlays</title>
		<body>### Issue Description  Regarding MR: https://github.com/wix/react-native-navigation/pull/4778  It seems like that MR has caused some regression regarding TextInput focusing. TextInputs with autoFocus prop or focusing in componentDidMount no longer work.  ### Steps to Reproduce / Code Snippets / Screenshots  Overlay with following code:  ```js componentDidMount() {   this.textInput.focus(); }  render() { return (  &lt;TextInput    ref={(ref) =&gt; { this.textInput = ref; }}    ...otherProps  /&gt; ) ```  or  ```js  render() { return (  &lt;TextInput    autoFocus    ...otherProps  /&gt; ) ```   --- ### Environment * React Native Navigation version: 2.13.1 * React Native version: 0.57.8 * Platform(s) (iOS, Android, or both?): iOS * Device info (Simulator/Device? OS version? Debug/Release?): ALL </body>
		<created>2019-03-05 12:54:03</created>
		<closed>2019-04-18 13:08:43</closed>
	</bug>
	<bug>
		<id>4813</id>
		<title>[v2][iOS] Back gesture doesn't work when topBar.leftButtons have some custom icons</title>
		<body>### Issue Description When a pushed scene  has custom `options.topBar.leftButtons` icons a back gesture doesn't work (you can only open leftMenu)!  But when  a pushed scene  hasn't  a custom `options.topBar.leftButtons`  You can: * open a left menu  * and back to perv. screen using a back gesture   ### Steps to Reproduce / Code Snippets / Screenshots Reproduce demo code: https://gist.github.com/retyui/a8ced587eed30c382e84c465e76c5d96   --- ### Environment * React Native Navigation version: 2.13.1 * React Native version: 0.58.6 * Platform(s) (iOS, Android, or both?): iOS * Device info (Simulator/Device? OS version? Debug/Release?): Real device \ Debug </body>
		<created>2019-03-04 13:21:15</created>
		<closed>2019-12-09 13:47:16</closed>
	</bug>
	<bug>
		<id>4812</id>
		<title>[v2] [Android] TestID for BottomTab: The key must be an application-specific resource id.</title>
		<body>### Issue Description  Android app crash on setting testID of BottomTab.  Android log: ``` java.lang.IllegalArgumentException: The key must be an application-specific resource id. 03-03 19:38:32.875 14063 14063 E AndroidRuntime:     at android.view.View.setTag(View.java:19661) 03-03 19:38:32.875 14063 14063 E AndroidRuntime:     at com.reactnativenavigation.presentation.BottomTabPresenter.applyOptions(BottomTabPresenter.java:57) 03-03 19:38:32.875 14063 14063 E AndroidRuntime:     at com.reactnativenavigation.viewcontrollers.bottomtabs.BottomTabsController.applyOptions(BottomTabsController.java:90) ... ```   Error line in code:  https://github.com/wix/react-native-navigation/blob/master/lib/android/app/src/main/java/com/reactnativenavigation/presentation/BottomTabPresenter.java#L57  This issue was introduce with this commit: https://github.com/wix/react-native-navigation/commit/bfdd41fcb4a3f9cd95fa29828d8dc0b7d2450404#diff-fe7845e05fe8da4f48d10c4da23403e5  ### Code Snippets  ```js Navigation.setRoot({   root: {     bottomTabs: {         children: [           {             stack: {               children: [                 {                   component: {                     name: COMPONENT,                   },                 },               ],               options: {                 bottomTab: {                   text: 'Tab name',                   testID: 'TAB_ID',                   icon: tabIcon,                 },               },             },           },         ]       }     } }); ```  --- ### Environment * React Native Navigation version: 2.13.1 * React Native version: 0.56.0 - 0.58.6 * Platform(s) (iOS, Android, or both?): Android  </body>
		<created>2019-03-04 11:27:12</created>
		<closed>2019-04-01 19:56:54</closed>
	</bug>
	<bug>
		<id>4807</id>
		<title>[V2] Navigation.constants() produces error.</title>
		<body>### Issue Description  I am trying to get the statusBarHeight and topBarHeight but when used `Navigation.constants()` anywhere in my code throws Fatal error: `Exception '-[RNNSideMenuController tabBar]: unrecognized selector sent to instance 0x7f81a7070a00' was thrown while invoking getConstants on target RNNBridgeModule with params (     216,     217 )`  ###  Code Snippets  ```js const NavConstants = await Navigation.constants(); const statusBarHeight = NavConstants.statusBarHeight; const topBarHeight = NavConstants.topBarHeight; console.log(statusBarheight, topBarHeight); ```  ### Screenshot of error  ![simulator screen shot - iphone x - 2019-03-03 at 12 57 05](https://user-images.githubusercontent.com/3870529/53692246-81a51c80-3db4-11e9-9c1d-a2738139b576.png)  --- ### Environment * React Native Navigation version: ^2.12.0 * React Native version: 0.58.4 * Platform(s) (iOS, Android, or both?): iOS * Device info (Simulator/Device? OS version? Debug/Release?): Both Simulator &amp; Device </body>
		<created>2019-03-03 07:19:50</created>
		<closed>2019-06-20 13:54:59</closed>
	</bug>
	<bug>
		<id>4737</id>
		<title>[RNNSplashScreen tabBar]: unrecognized selector sent to instance 0x7fe55ec00c60</title>
		<body>### Issue Description  I got this error after upgrading to v2.11.0. I'm using react-native-splash-screen package. Everything works fine on Android, but on iOs it throws error **[RNNSplashScreen tabBar]: unrecognized selector sent to instance 0x7fe55ec00c60** after splash screen disappear. It only happens if I disable the remote JS debugger.   --- ### Environment * React Native Navigation version: 2.11.0 * React Native version: 0.58.1 * Platform(s) (iOS, Android, or both?): iOs * Device info (Simulator/Device? OS version? Debug/Release?): Simulator Debug </body>
		<created>2019-02-15 02:38:30</created>
		<closed>2019-04-06 18:33:23</closed>
	</bug>
	<bug>
		<id>4734</id>
		<title>[iOS] Peek and Pop no longer working as expected</title>
		<body>### Issue Description  It seems somewhere between release 2.8.0 and 2.11.0 that peek and pop have stopped working. While the peek window still appears, it previews the screen you are going to push as a white blank screen and when you press hard enough that it pushes to the screen. You end up in a blank white screen.  ### Steps to Reproduce / Code Snippets / Screenshots  Go to the playground app , click on the Peek and Preview menu option and the result is a blank screen --- ### Environment * React Native Navigation version: 2.11.0 * React Native version: Any * Platform(s) (iOS, Android, or both?): iOS * Device info (Simulator/Device? OS version? Debug/Release?):Device (as I don't have a compatible Mac to test with simulator) </body>
		<created>2019-02-14 09:12:25</created>
		<closed>2019-02-14 10:03:10</closed>
	</bug>
	<bug>
		<id>4710</id>
		<title>[Android] BottomTabs misaligned if app started in landscape mode</title>
		<body>### Issue Description  On Android when an app is started in Landscape mode and then switched back to portrait. The bottomTabs will be misaligned. Gif below  ### Steps to Reproduce / Code Snippets / Screenshots  ![bottomtabs](https://user-images.githubusercontent.com/4223434/52469010-9bbf5680-2b8a-11e9-99e7-80a547a3285a.gif)   --- ### Environment * React Native Navigation version: 2.8.0 * React Native version: 0.56 * Platform(s) (iOS, Android, or both?): Android * Device info (Simulator/Device? OS version? Debug/Release?): All </body>
		<created>2019-02-08 09:18:43</created>
		<closed>2020-04-28 07:44:38</closed>
	</bug>
	<bug>
		<id>4696</id>
		<title>v2 Android Side Menu Unexpected Behavior </title>
		<body>### Issue Description  There are two different scenarios that I have found where tapping outside of an open side menu to close, or swiping the side menu open after setting the side menu `visible` option to `false` results in unexpected behavior.  My overall question is what is happening on the swiping gesture and when you tap outside of an open side menu? It seems like it opens and closes the side menu as expected, but it doesn't update the screen options, so if `visible` is set to `false` I am unable to open the side menu with the swiping gesture. And if `visible` is set to `true` and I tap outside of the side menu to close it, it will close it, but then anytime I navigate to a screen and then back the side menu thinks it is open because the screen options don't seem to get updated on those tap outside to close/swipe to open gestures.   ### Steps to Reproduce / Code Snippets / Screenshots  Below is the `mergeOptions` function I am using to set `visible` to `true`/`false` in order to show or hide the side menu when tapping on the menu icon, or on one of the links in the menu. ```js  const setSideMenuVisibility = (componentId, isVisible) =&gt; {     Navigation.mergeOptions(componentId, {         sideMenu: {             left: {                 visible: isVisible             }         }     }); } ``` ### Scenario 1 1. Open the side menu using `mergeOptions` and setting `visible` to `true` 2. Tap on the outside area to close the side menu (you should see the side menu close) 3. Push another screen onto the navigation stack 4. Use the top bar button to go back to the original screen 5. The side menu will be open.   As you can see below, when I tap on the menu icon, it opens the side menu by setting `visible` to `true`, then I tap outside of the side menu to close it, then I tap on the button to push screen 2 onto my navigation stack, then I tap the topbar button to go back, then I'm back on screen 1, but the side menu is open. ![side menu stays open when going back](https://user-images.githubusercontent.com/6003033/52350127-7ea15100-29ed-11e9-93d5-b0ed96a1764d.gif)  ### Scenario 2 1. Open the side menu using `mergeOptions` and setting `visible` to `true` 2. Tap on a link in the side menu (this is where I call `mergeOptions` and set the side menu `visible` option to `false`, then push the new screen onto my navigation stack) 3. Use the topbar button to go back to the original screen 4. Try to swipe open the side menu and you will see it close right away.  As you can see below, when I tap on the menu icon, it opens the side menu by setting `visible` to `true`, then I tap on the `Screen 2` link which sets `visible` to false using `mergeOptions`, then pushes screen 2 onto the navigation stack, then I am able to successfully swipe open the side menu as expected, but when I tap on the back button on the top bar and go back to the original screen, I am not able to swipe open the side menu, it just closes right away. ![cannot swipe open side menu](https://user-images.githubusercontent.com/6003033/52351924-4734a380-29f1-11e9-8bc4-a80ea8585ba4.gif)  --- ### Environment * React Native Navigation version: `2.7.1` * React Native version: `0.57.8` * Platform(s) (iOS, Android, or both?): `Android` * Device info (Simulator/Device? OS version? Debug/Release?): `Tested on Galaxy S6 running Android 7.0. Also tested on a Pixel2 XL simulator running Android 8.1. It occurs on both Debug and Release builds.` </body>
		<created>2019-02-06 15:52:50</created>
		<closed>2019-04-03 08:26:42</closed>
	</bug>
	<bug>
		<id>4694</id>
		<title>pop stack NullPointerException</title>
		<body>### Issue Description  crash on Null pointer exception when pop called  ### Steps to Reproduce / Code Snippets / Screenshots  the flow that mostly this issue occurs like follows: 1- open modal 2- close modal and push a view 3- showing something like progress dialog (over the pushed view) 4- after the dialog dismissed pop the view   exception stack trace: ```JAVA  java.lang.NullPointerException: Attempt to invoke virtual method 'void com.reactnativenavigation.viewcontrollers.ViewController.onViewWillAppear()' on a null object reference         at com.reactnativenavigation.viewcontrollers.stack.StackController.pop(StackController.java:248)         at com.reactnativenavigation.viewcontrollers.navigator.Navigator.lambda$pop$2(Navigator.java:162)         at com.reactnativenavigation.viewcontrollers.navigator.-$$Lambda$Navigator$snu0zowFhpNNrG6DTlYojmpj2RE.run(Unknown Source:6)         at com.reactnativenavigation.viewcontrollers.navigator.Navigator.lambda$applyOnStack$5(Navigator.java:221)         at com.reactnativenavigation.viewcontrollers.navigator.-$$Lambda$Navigator$BztKRmJef9zlTqPlTta6T7nWHGw.run(Unknown Source:2)         at com.reactnativenavigation.viewcontrollers.ViewController.performOnParentStack(ViewController.java:145)         at com.reactnativenavigation.viewcontrollers.navigator.Navigator.applyOnStack(Navigator.java:221)         at com.reactnativenavigation.viewcontrollers.navigator.Navigator.pop(Navigator.java:162)         at com.reactnativenavigation.react.NavigationModule.lambda$pop$6(NavigationModule.java:107)         at com.reactnativenavigation.react.-$$Lambda$NavigationModule$-Ih4m-qT9jnEZhcJhxie3zjjHTs.run(Unknown Source:10)         at android.os.Handler.handleCallback(Handler.java:873)         at android.os.Handler.dispatchMessage(Handler.java:99)         at android.os.Looper.loop(Looper.java:193)         at android.app.ActivityThread.main(ActivityThread.java:6718)         at java.lang.reflect.Method.invoke(Native Method)         at com.android.internal.os.RuntimeInit$MethodAndArgsCaller.run(RuntimeInit.java:493)         at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:858) ```  --- ### Environment * React Native Navigation version: 2.7.1 * React Native version: 0.57.508 * Platform(s) (iOS, Android, or both?): Android 9 (Not tested on ios) * Device info (Simulator/Device? OS version? Debug/Release?):device Pixel 3xl android 9 debug </body>
		<created>2019-02-06 12:50:57</created>
		<closed>2020-06-25 11:36:32</closed>
	</bug>
	<bug>
		<id>4693</id>
		<title>ModalDimissedListener Inconsistency</title>
		<body>### Issue Description There is a inconsistency between iOS and Android when using `registerModalDismissedListener` on stack modal. The `componentId` returned from `registerModalDismissedListener` differs between the two platform.   On iOS, it returns the actual modal componentId, whereas on Android, it returns the stack componentId, not the actual modal componentId.   ### Steps to Reproduce / Code Snippets / Screenshots ```js /* MainScreen.js */ ....  // Opening the modal and add custom componentId openModal = () =&gt; {     Navigation.showModal({       stack: {         id: 'ModalUniqueStackID', // putting here just for demonstration         children: [           {             component: {               id: 'ModalUniqueComponentID',               name: 'Example_Modal',             },           },         ],       },     })   }  // Listening to the Modal Dismiss event componentDidMount() {     this.modalDismissedListener = Navigation.events().registerModalDismissedListener(       ({ componentId }) =&gt; {         // on iOS -&gt; 'ModalUniqueComponentID'         // on Android -&gt; 'ModalUniqueStackID'         console.log(componentId)       }     )   }  .... ```  --- ### Environment * React Native Navigation version: 2.8.0 * React Native version: 0.57.8 * Platform(s) (iOS, Android, or both?): both * Device info (Simulator/Device? OS version? Debug/Release?): FILL THIS OUT </body>
		<created>2019-02-06 00:34:59</created>
		<closed>2019-02-06 07:16:24</closed>
	</bug>
	<bug>
		<id>4691</id>
		<title>iOS linker error: library not found for -ljschelpers</title>
		<body>### Issue Description  After upgrading React Native from 0.57.8 -&gt; 0.5.8.3 and also upgrading Xcode to 10.1 (unfortunately, at the same time as the RN upgrade due to unrelated problems w/ the upgrade), I now receive the following error when my iOS project builds RNN:  ``` ld: library not found for -ljschelpers clang: error: linker command failed with exit code 1 (use -v to see invocation) ```  Here's the linker invocation: ``` Ld /Users/jeremy/Library/Developer/Xcode/DerivedData/MyPath-bwhssvdsbkvifjenbwvdkpzlqahk/Build/Products/Debug-iphonesimulator/ReactNativeNavigationTests.xctest/ReactNativeNavigationTests normal x86_64 (in target: ReactNativeNavigationTests)     cd /Users/jeremy/Developer/source/MyPath-React/node_modules/react-native-navigation/lib/ios     export IPHONEOS_DEPLOYMENT_TARGET=10.3     /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang -arch x86_64 -bundle -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator12.1.sdk -L/Users/jeremy/Library/Developer/Xcode/DerivedData/MyPath-bwhssvdsbkvifjenbwvdkpzlqahk/Build/Products/Debug-iphonesimulator -L/Users/jeremy/Developer/source/MyPath-React/node_modules/react-native-navigation/lib/ios -F/Users/jeremy/Library/Developer/Xcode/DerivedData/MyPath-bwhssvdsbkvifjenbwvdkpzlqahk/Build/Products/Debug-iphonesimulator -F/Users/jeremy/Developer/source/MyPath-React/node_modules/react-native-navigation/lib/ios -F/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/Library/Frameworks -filelist /Users/jeremy/Library/Developer/Xcode/DerivedData/MyPath-bwhssvdsbkvifjenbwvdkpzlqahk/Build/Intermediates.noindex/ReactNativeNavigation.build/Debug-iphonesimulator/ReactNativeNavigationTests.build/Objects-normal/x86_64/ReactNativeNavigationTests.LinkFileList -Xlinker -rpath -Xlinker @executable_path/Frameworks -Xlinker -rpath -Xlinker @loader_path/Frameworks -mios-simulator-version-min=10.3 -dead_strip -Xlinker -object_path_lto -Xlinker /Users/jeremy/Library/Developer/Xcode/DerivedData/MyPath-bwhssvdsbkvifjenbwvdkpzlqahk/Build/Intermediates.noindex/ReactNativeNavigation.build/Debug-iphonesimulator/ReactNativeNavigationTests.build/Objects-normal/x86_64/ReactNativeNavigationTests_lto.o -Xlinker -export_dynamic -Xlinker -no_deduplicate -Xlinker -objc_abi_version -Xlinker 2 -fobjc-arc -fobjc-link-runtime -lc++ -ObjC -framework XCTest -Xlinker -sectcreate -Xlinker __TEXT -Xlinker __entitlements -Xlinker /Users/jeremy/Library/Developer/Xcode/DerivedData/MyPath-bwhssvdsbkvifjenbwvdkpzlqahk/Build/Intermediates.noindex/ReactNativeNavigation.build/Debug-iphonesimulator/ReactNativeNavigationTests.build/ReactNativeNavigationTests.xctest-Simulated.xcent -lcxxreact -ljschelpers -lRCTActionSheet -lRCTAnimation -lRCTGeolocation -lRCTImage -lRCTLinking -lRCTNetwork -lRCTSettings -lRCTText -lRCTVibration -lRCTWebSocket -lReact -lOCMock -lyoga -lReactNativeNavigation -Xlinker -dependency_info -Xlinker /Users/jeremy/Library/Developer/Xcode/DerivedData/MyPath-bwhssvdsbkvifjenbwvdkpzlqahk/Build/Intermediates.noindex/ReactNativeNavigation.build/Debug-iphonesimulator/ReactNativeNavigationTests.build/Objects-normal/x86_64/ReactNativeNavigationTests_dependency_info.dat -o /Users/jeremy/Library/Developer/Xcode/DerivedData/MyPath-bwhssvdsbkvifjenbwvdkpzlqahk/Build/Products/Debug-iphonesimulator/ReactNativeNavigationTests.xctest/ReactNativeNavigationTests ```  ### Steps to Reproduce / Code Snippets / Screenshots   --- ### Environment * React Native Navigation version: 2.8.0 (and 2.5.1) * React Native version: 0.58.3  * Platform(s) (iOS, Android, or both?): iOS * Device info (Simulator/Device? OS version? Debug/Release?): Debug build linker error    React Native Environment Info:     System:       OS: macOS 10.14       CPU: (8) x64 Intel(R) Core(TM) i7-6820HQ CPU @ 2.70GHz       Memory: 87.03 MB / 16.00 GB       Shell: 3.2.57 - /bin/bash     Binaries:       Node: 10.15.0 - ~/.nvm/versions/node/v10.15.0/bin/node       npm: 6.7.0 - ~/.nvm/versions/node/v10.15.0/bin/npm       Watchman: 4.7.0 - /usr/local/bin/watchman     SDKs:       iOS SDK:         Platforms: iOS 12.1, macOS 10.14, tvOS 12.1, watchOS 5.1       Android SDK:         API Levels: 20, 23, 24, 25, 26, 27         Build Tools: 23.0.1, 23.0.3, 25.0.0, 25.0.2, 25.0.3, 26.0.0, 26.0.1, 26.0.2, 27.0.0, 27.0.1, 27.0.2, 27.0.3         System Images: android-24 | Google Play Intel x86 Atom, android-25 | Google APIs Intel x86 Atom, android-26 | Google Play Intel x86 Atom     IDEs:       Android Studio: 3.2 AI-181.5540.7.32.5014246       Xcode: 10.1/10B61 - /usr/bin/xcodebuild     npmPackages:       react: ^16.6.3 =&gt; 16.6.3        react-native: ^0.58.3 =&gt; 0.58.3      npmGlobalPackages:       react-native-git-upgrade: 0.2.7 </body>
		<created>2019-02-05 22:45:54</created>
		<closed>2019-05-08 05:20:38</closed>
	</bug>
	<bug>
		<id>4651</id>
		<title>[Android] TopBar buttons leak </title>
		<body>### Issue Description  Hey, everyone. After a long day trying to find out what was leaking on my app, I discovered it was something on RNN. I removed the entire logic and the bug is reproducible on playground.  ### Steps to Reproduce / Code Snippets / Screenshots 1. Replace `static options` on Playground's OptionsScreen with this: ```js static options() { return { topBar: { leftButtons: { id: BUTTON_LEFT, testID: BUTTON_LEFT, icon: require('../../img/navicon_add.png'), text: 'Left', color: 'purple' }, rightButtons: [ { id: CUSTOM_BUTTON2, testID: CUSTOM_BUTTON2, component: { name: 'CustomRoundedButton', passProps: { title: 'Two' } } }, { id: BUTTON_ONE, testID: BUTTON_ONE, text: 'One', fontFamily: 'HelveticaNeue-Italic', fontSize: 28, color: 'red' } ], } } } ``` 2. Navigate back and forth tapping "Push options screen" button and back button. 3. On the 10th time (or more), the app will crash with the following _simplified_ crash log ``` 01-28 18:57:19.775 11610-11648/com.reactnativenavigation.playground I/ReactNativeJS: 'RNN', 'CRB.componentDidMount' 01-28 18:57:19.779 11610-11648/com.reactnativenavigation.playground I/ReactNativeJS: 'RNN', 'CRB.componentDidAppear' 01-28 18:57:20.108 11610-11648/com.reactnativenavigation.playground I/ReactNativeJS: 'RNN', 'CRB.componentDidDisappear' 01-28 18:57:20.394 11610-11610/com.reactnativenavigation.playground D/ReactNative: ReactInstanceManager.detachViewFromInstance() 01-28 18:57:20.397 11610-11610/com.reactnativenavigation.playground D/ReactNative: ReactInstanceManager.detachViewFromInstance() 01-28 18:57:20.398 11610-11648/com.reactnativenavigation.playground I/ReactNativeJS: 'RNN', 'CRB.componentWillUnmount' 01-28 18:57:20.620 11610-11610/com.reactnativenavigation.playground D/ReactNative: ReactInstanceManager.attachRootViewToInstance() 01-28 18:57:20.623 11610-11648/com.reactnativenavigation.playground I/ReactNativeJS: Running application "navigation.playground.OptionsScreen" with appParams: {"initialProps":{"componentId":"Component133"},"rootTag":531}. __DEV__ === true, development-level warning are ON, performance optimizations are OFF 01-28 18:57:20.646 11610-11610/com.reactnativenavigation.playground D/ReactNative: ReactInstanceManager.attachRootViewToInstance() 01-28 18:57:20.719 11610-11648/com.reactnativenavigation.playground I/ReactNativeJS: Running application "CustomRoundedButton" with appParams: {"initialProps":{"componentId":"CustomComponent134"},"rootTag":541}. __DEV__ === true, development-level warning are ON, performance optimizations are OFF 01-28 18:57:20.731 11610-11648/com.reactnativenavigation.playground I/ReactNativeJS: 'RNN', 'CRB.componentDidMount' 01-28 18:57:20.735 11610-11648/com.reactnativenavigation.playground I/ReactNativeJS: 'RNN', 'CRB.componentDidAppear' 01-28 18:57:21.080 11610-11648/com.reactnativenavigation.playground I/ReactNativeJS: 'RNN', 'CRB.componentDidDisappear' 01-28 18:57:21.363 11610-11610/com.reactnativenavigation.playground D/ReactNative: ReactInstanceManager.detachViewFromInstance() 01-28 18:57:21.366 11610-11610/com.reactnativenavigation.playground D/ReactNative: ReactInstanceManager.detachViewFromInstance() 01-28 18:57:21.366 11610-11648/com.reactnativenavigation.playground I/ReactNativeJS: 'RNN', 'CRB.componentWillUnmount' 01-28 18:57:21.566 11610-11610/com.reactnativenavigation.playground D/ReactNative: ReactInstanceManager.attachRootViewToInstance() 01-28 18:57:21.568 11610-11648/com.reactnativenavigation.playground I/ReactNativeJS: Running application "navigation.playground.OptionsScreen" with appParams: {"initialProps":{"componentId":"Component138"},"rootTag":551}. __DEV__ === true, development-level warning are ON, performance optimizations are OFF 01-28 18:57:21.600 11610-11610/com.reactnativenavigation.playground D/ReactNative: ReactInstanceManager.attachRootViewToInstance() 01-28 18:57:21.685 11610-11648/com.reactnativenavigation.playground I/ReactNativeJS: Running application "CustomRoundedButton" with appParams: {"initialProps":{"componentId":"CustomComponent139"},"rootTag":561}. __DEV__ === true, development-level warning are ON, performance optimizations are OFF 01-28 18:57:21.698 11610-11648/com.reactnativenavigation.playground I/ReactNativeJS: 'RNN', 'CRB.componentDidMount' 01-28 18:57:21.703 11610-11648/com.reactnativenavigation.playground I/ReactNativeJS: 'RNN', 'CRB.componentDidAppear' 01-28 18:57:22.044 11610-11648/com.reactnativenavigation.playground I/ReactNativeJS: 'RNN', 'CRB.componentDidDisappear' 01-28 18:57:22.332 11610-11610/com.reactnativenavigation.playground D/ReactNative: ReactInstanceManager.detachViewFromInstance() 01-28 18:57:22.335 11610-11610/com.reactnativenavigation.playground D/ReactNative: ReactInstanceManager.detachViewFromInstance() 01-28 18:57:22.338 11610-11648/com.reactnativenavigation.playground I/ReactNativeJS: 'RNN', 'CRB.componentWillUnmount' 01-28 18:57:22.479 11610-11648/com.reactnativenavigation.playground A/libc: Fatal signal 11 (SIGSEGV), code 1, fault addr 0x1 in tid 11648 (mqt_js), pid 11610 (tion.playground) ```  I've debugged RNN code trying to find out what's causing this, but no luck.  Can you help, @guyca? Thanks :)  --- ### Environment * React Native Navigation version: 2.8.0 * React Native version: 0.57.7 * Platform(s) (iOS, Android, or both?): Android * Device info (Simulator/Device? OS version? Debug/Release?): Device debug and release. </body>
		<created>2019-01-28 21:02:53</created>
		<closed>2019-02-08 08:43:48</closed>
	</bug>
	<bug>
		<id>4636</id>
		<title>Menu gesture will not work after merging options to close menu</title>
		<body>### Issue Description  If you use a gesture to open a menu, and then use Navigation.mergetOptions() to close that menu. The swipe gesture will no longer work. The menu immediately closes.  ### Steps to Reproduce / Code Snippets / Screenshots  Create a project with a side menu. Add a button to the side menu that closes the menu with Navigation.mergetOptions(). Now try and use a gesture to open that menu again. It will appear to open but closes immediately.  Repo to demo the issue https://github.com/cvongrim/rnn-android-gesture-bug  My index.js ``` import { Navigation } from 'react-native-navigation'; import App from './App';  Navigation.registerComponent('navigation.playground.menu', () =&gt; App); Navigation.registerComponent('navigation.playground.WelcomeScreen', () =&gt; App); Navigation.registerComponent('navigation.playground.menu2', () =&gt; App);  Navigation.events().registerAppLaunchedListener(() =&gt; {   Navigation.setRoot({     root: {       sideMenu: {         left: {           component: {             id: 'navigation.playground.menu',             name: 'navigation.playground.menu',           },         },         center: {           component: {             id: 'navigation.playground.WelcomeScreen',             name: 'navigation.playground.WelcomeScreen',           },         },         right: {           component: {             id: 'navigation.playground.menu2',             name: 'navigation.playground.menu2',           },         },       },     },   }); });  ```  My App.js ``` /**  * Sample React Native App  * https://github.com/facebook/react-native  *  * @format  * @flow  */  import React, { Component } from 'react'; import { Platform, StyleSheet, Text, TouchableOpacity, View } from 'react-native'; import { Navigation } from 'react-native-navigation';  const instructions = Platform.select({   ios: 'Press Cmd+R to reload,\n' + 'Cmd+D or shake for dev menu',   android:     'Double tap R on your keyboard to reload,\n' +     'Shake or press menu button for dev menu', });  type Props = {}; export default class App extends Component&lt;Props&gt; {    closeMenu = () =&gt; {     Navigation.mergeOptions('navigation.playground.menu', {       sideMenu: {         left: {           visible: false,         },       },     });   };    render() {     return (       &lt;View style={styles.container}&gt;         &lt;Text style={styles.welcome}&gt;Welcome to React Native!&lt;/Text&gt;         &lt;Text style={styles.instructions}&gt;To get started, edit App.js&lt;/Text&gt;         &lt;Text style={styles.instructions}&gt;{instructions}&lt;/Text&gt;         &lt;TouchableOpacity onPress={this.closeMenu} style={{ backgroundColor: 'grey', padding: 25 }}&gt;           &lt;Text style={{ color: 'white' }}&gt;Close Menu&lt;/Text&gt;         &lt;/TouchableOpacity&gt;       &lt;/View&gt;     );   }  }  const styles = StyleSheet.create({   container: {     flex: 1,     justifyContent: 'center',     alignItems: 'center',     backgroundColor: '#F5FCFF',   },   welcome: {     fontSize: 20,     textAlign: 'center',     margin: 10,   },   instructions: {     textAlign: 'center',     color: '#333333',     marginBottom: 5,   }, });  ```  ### Environment * React Native Navigation version: 2.8.0 * React Native version: 0.57.8 * Platform(s) (iOS, Android, or both?): Android * Device info (Simulator/Device? OS version? Debug/Release?): Simulator and Device Android 9 </body>
		<created>2019-01-24 16:06:16</created>
		<closed>2019-03-10 14:52:05</closed>
	</bug>
	<bug>
		<id>4632</id>
		<title>[V2]setStackRoot not unmounting the first screen in the case of sidemenu</title>
		<body>I have to reset my homescreen and sidedrawer. and i used setStackRoot for both but it works only for homescreen. after reset the sidedrawer it showing the first screen, not unmounting the first drawer screen   ```js                    Navigation.setRoot({   root: {     sideMenu: {       id: "sideMenu",       left: {         enabled: false,         stack: {           id: 'DrawerStack',           children: [{             component: {               name: "MyApp.LeftDrawer",               passProps: {                 isLoggedIn: this.state.isLoggedIn,               },             }           }]         },       },       center: {         stack: {           id: 'Root',           children: [{             component: {               name: 'MyApp.HomeScreen',               passProps: {                 isLoggedIn: this.state.isLoggedIn,               },               options: {                 topBar: {                   title: {                     text: "Markets",                   },                   leftButtons: [                     {                       id: 'drawerMenu',                       icon: icon,                       color: Colors.topBarButton                     },                   ],                 },               }             }           }],         }       },     }   } }); ``` resetting the side drawer and homescreen  ```js    Navigation.setStackRoot('DrawerStack', {   component: {       name: "MyApp.LeftDrawer",       passProps: {           isLoggedIn,       },       options: {           animations:{                 setStackRoot:{                 enable:true               }           }       }   } });     Navigation.setStackRoot('Root', {   component: {       name: 'MyApp.HomeScreen',       passProps: {           isLoggedIn,           username,           password,           twofaStatus,           accountType,           isConnected,       },       options: {           animations:{                 setStackRoot:{                 enable:true               }           },           topBar: {               borderColor: Colors.topBarColor,               title: {                   text: "Markets",               },               leftButtons: [                   {                   id: 'drawerMenu',                   icon: icon,                   color:Colors.topBarButton                   },               ]           }       }   }    }); ```  ---   "react-native-navigation": "^2.5.1",  "react-native": "0.57.8",  Platform: android</body>
		<created>2019-01-24 05:06:56</created>
		<closed>2019-12-22 08:07:10</closed>
	</bug>
	<bug>
		<id>4625</id>
		<title>[IOS][2.7.1] Bug mergeOptions when megre topBar.title.component and then merge topBar.title.text</title>
		<body>### Issue Description When you apply custom topBar component ```js Navigation.mergeOptions(state.componentId, {     topBar: {       visible: true,       title: { component: { name: 'MAIN_SCREEN_CUSTOM_TOP_BAR' } },     },   }); ``` And then apply text topBar:  ```js   Navigation.mergeOptions(state.componentId, {     topBar: {       visible: true,       title: { text: 'Test text top Bar' },     },   }); ```  Nothing will happen on IOS   ### Code Snippets Run this code: [LIVE EXAMPLE GIST](https://gist.github.com/retyui/1c4dbda8a8e741d1e7edc3f2d3f73fcd) First press: "set Text topBar" Then press: "set Custom topBar" And you will see the topBar didn't change! (on Android this case works)   --- ### Environment React Native Navigation version: v2.7.1 React Native version: 0.56.0 Platform(s) (iOS, Android, or both?): IOS only Device info: Simulator\Debug</body>
		<created>2019-01-23 08:04:02</created>
		<closed>2019-08-22 09:01:01</closed>
	</bug>
	<bug>
		<id>4532</id>
		<title>[V2][iOS]Sidemenu not re-rendering on orientation change.</title>
		<body>### Issue Description  Sidemenu does not rerender on orientation change. This means that if the Sidemenu is initially loaded in portrait, when changing to landscape it will look terrible due to wrong dimensions.  ### Steps to Reproduce / Code Snippets / Screenshots  Here you can see what happens when the Sidemenu is initially loaded in portrait, when switching to landscape it doesn't rerender so my layout (which only uses flex) is no longer okay.  ![2019-01-03 15 49 07](https://user-images.githubusercontent.com/4223434/50643774-467e9c80-0f6f-11e9-9dfb-a4eac1fa737c.gif)   --- ### Environment * React Native Navigation version: 2.5.0 * React Native version: 56.0 * Platform(s) (iOS, Android, or both?): iOS * Device info (Simulator/Device? OS version? Debug/Release?): All </body>
		<created>2019-01-03 14:51:44</created>
		<closed>2019-07-05 06:41:54</closed>
	</bug>
	<bug>
		<id>4527</id>
		<title>Sidemenu width counter-intuitive</title>
		<body>### Issue Description  Related issues: #3977   Currently the way the Sidemenu width works is very counter intuitive. It always uses the full width of your device for the Sidemenu component regardless of the width set.   ### Steps to Reproduce / Code Snippets / Screenshots  For example: If I set the SideMenu's width as following:  ``` sideMenu: {   left: {    width: 200,   }  } ```  and my SideMenu screen is a empty screen with Text centered in the middle: ``` const styles = {   root: {     flex: 1,     justifyContent: 'center',     alignItems: 'center',     backgroundColor: '#f5fcff'   } }; ``` ```       &lt;View style={styles.root}&gt;         &lt;Text&gt;             I am centered.         &lt;/Text&gt;         &lt;Text&gt;             Width: {width}         &lt;/Text&gt;       &lt;/View&gt; ```  The following happens: ![simulator screen shot - iphone xr - 2019-01-02 at 10 52 17](https://user-images.githubusercontent.com/4223434/50587356-e22fe000-0e7d-11e9-8b9a-72342f0f6df4.png)   --- ### Environment * React Native Navigation version: Latest * React Native version: 0.57.7 * Platform(s) (iOS, Android, or both?): iOS * Device info (Simulator/Device? OS version? Debug/Release?): All </body>
		<created>2019-01-02 10:05:03</created>
		<closed>2020-04-02 10:56:55</closed>
	</bug>
	<bug>
		<id>4485</id>
		<title>[V2] Toptabs are not showing up, regression in newest version of RNN</title>
		<body>### Issue Description  There has been a regression in Top Tabs Navigation for React-Native-Navigation. After version  2.0.2459 topTabs will no longer appear.   I am currently using the code below with version 2.2.5, however, that code allows me to swipe right and left and the app will transition screens BUT tabs themselves will not appear.   If I downgrade to 2.0.2459 again, the top tabs once again appear.  ### Steps to Reproduce / Code Snippets / Screenshots  &lt;!-- Note: When embeding code, please format it and use syntax highlighting to improve readability --&gt; ```         stack: {           id: 'mainStack',           children: [             {               topTabs: {                 children: [                   {                     component: {                       name: 'Screen1',                       options: {                         topTab: {                           title: 'Tab 1',                         },                       },                     },                   },                   {                     component: {                       name: 'Screen2',                       options: {                         topTab: {                           title: 'Tab 2',                         },                       },                     },                   },                 ],               },             },  ```    ### Environment * React Native Navigation version: 2.2.5 * React Native version: 0.55.0 * Platform(s) (iOS, Android, or both?): Android * Device info (Simulator/Device? OS version? Debug/Release?): Device</body>
		<created>2018-12-20 21:40:41</created>
		<closed>2019-06-24 02:55:05</closed>
	</bug>
	<bug>
		<id>4455</id>
		<title>[V2] iOS back gesture doesn't work when topBar or backButton is hidden</title>
		<body>### Issue Description  Back gesture doesn't work when topBar or backButton's visible set to false  ### Steps to Reproduce / Code Snippets / Screenshots  ```javascript Navigation.push(this.props.componentId, {   component: {     name: 'example.PushedScreen',     passProps: {       text: 'Pushed screen'     },     options: {       topBar: {         visible: false       }     }   } }); ``` or ```javascript Navigation.push(this.props.componentId, {   component: {     name: 'example.PushedScreen',     passProps: {       text: 'Pushed screen'     },     options: {       topBar: {         backButton: {           visible: false         }       }     }   } }); ```  --- ### Environment * React Native Navigation version: 2.2.1-snapshot.61  * React Native version: 0.57.7 * Platform(s): iOS * Device info: Both simulator &amp; device, iOS 12, Both debug &amp; release </body>
		<created>2018-12-15 11:06:33</created>
		<closed>2019-03-11 10:24:28</closed>
	</bug>
	<bug>
		<id>4438</id>
		<title>TopBar title loses bold when being set with mergeOptions()</title>
		<body>### Issue Description  The title in topBar loses its bold style after being set with mergeOptions() ![](https://i.imgur.com/YNcehkV.gif)  ### Steps to Reproduce / Code Snippets / Screenshots ``` constructor(props) {     super(props);     Navigation.events().bindComponent(this);     Navigation.events().registerCommandListener((name, params) =&gt; {       if (name === "push") {         Navigation.mergeOptions(this.props.componentId, {           topBar: {             title: {               text: ""             }           }         });       }     });   }  componentDidAppear() {     Navigation.mergeOptions(this.props.componentId, {       topBar: {         title: {           text: "Announcement post details"         }       }     });   } ``` --- ### Environment * React Native Navigation version: 2.1.3 * React Native version: 0.57.1 * Platform(s) (iOS, Android, or both?): iOS  * Device info (Simulator/Device? OS version? Debug/Release?): iPhone 6 </body>
		<created>2018-12-12 16:49:31</created>
		<closed>2019-02-04 05:34:45</closed>
	</bug>
	<bug>
		<id>4420</id>
		<title>bottomtabs icon  become small when i click multi time in ios</title>
		<body>### Issue Description  When i click multi time on bottomtabs icon of setRoot({bottomTabs}) in ios size of icon is continuously decreasing. and size of icon in ios and android is also not same. Is their any method for animation on click  ### Steps to Reproduce / Code Snippets / Screenshots  Click multi time on same icon --- ### Environment * React Native Navigation version: "^2.2.0" * React Native version: FILL THIS OUT * Platform(s) (iOS, Android, or both?): FILL THIS OUT * Device info (Simulator/Device? OS version? Debug/Release?): FILL THIS OUT![screen shot 2018-12-09 at 11 28 14 am](https://user-images.githubusercontent.com/273250/49693902-8b4c2900-fba5-11e8-9904-40513ea13e4f.png)  </body>
		<created>2018-12-09 05:59:29</created>
		<closed>2020-02-07 07:54:14</closed>
	</bug>
	<bug>
		<id>4388</id>
		<title>iOS popGesture on stack root freezes the app</title>
		<body>### Issue Description  Attempting iOS popGesture on stack root may freeze the app  ### Steps to Reproduce / Code Snippets / Screenshots  1. (May not be necessary. This is just what I have) Have a tab-based app with each tab being a stack 2. Push a screen to one of the stacks 3. Go back 4. Try to do popGesture on stack root 5. Try to push a screen on the stack again 6. App freezes  --- ### Environment * React Native Navigation version: 2.1.3 * React Native version: 0.57.5 * Platform(s) (iOS, Android, or both?): iOS </body>
		<created>2018-12-04 11:15:17</created>
		<closed>2019-04-21 17:33:39</closed>
	</bug>
	<bug>
		<id>4374</id>
		<title>[v2] Can't remove topBar subtitle (and re-align topBar title)</title>
		<body>### Issue Description  When you've set a subtitle, there is no way to remove the subtitle, and have the title go back to full size.  ### Steps to Reproduce / Code Snippets / Screenshots  A full size title: ![image](https://user-images.githubusercontent.com/4755785/49264071-a8dc0d00-f498-11e8-9135-a16376481204.png)  A title with a sub title: ![image](https://user-images.githubusercontent.com/4755785/49264087-b42f3880-f498-11e8-823e-3fb855b3282a.png)  A title that had a sub title, and it's now been removed (note the size of the title, and the space between title and edge of bar): ![image](https://user-images.githubusercontent.com/4755785/49264108-c4dfae80-f498-11e8-9104-715b29ff86b2.png)  I believe you can reproduce this by doing the following:  ```js Navigation.mergeOptions(this.props.componentId, {   topBar: {     title: {       text: 'My Title',     },     subtitle: {       text: 'My Subtitle',     },   } });  Navigation.mergeOptions(this.props.componentId, {   topBar: {     title: {       text: 'My Title',     },     subtitle: {       text: '',     },   } }); ```  I have tried setting the whole subtitle object to `undefined` (it just remains on the screen regardless), `null` (it breaks and complains that null is not a valid option) and also setting the `subtitle.text` option to `undefined` and `null` with the same results (stays visible, or crashes the app)  --- ### Environment * React Native Navigation version: 2.1.3 * React Native version: 0.57.3 * Platform(s) (iOS, Android, or both?): iOS (maybe both - haven't checked android) * Device info (Simulator/Device? OS version? Debug/Release?): Simulator, iPhone X, iOS 12 </body>
		<created>2018-11-30 02:13:25</created>
		<closed>2020-09-16 19:59:56</closed>
	</bug>
	<bug>
		<id>4371</id>
		<title>Custom button's dimensions are not set dynamically (can only be set once)</title>
		<body>### Issue Description Android custom buttons dimension are set/rendered once and do not resize when trying to update their values.  Reproduce: Add a custom button wrapped in a `&lt;View&gt;` component with set padding for the `&lt;View&gt;`. Update that padding after initial rendering of the view to something different (to simulate the desired change of the dimension of the` &lt;View&gt;` container).  Result: Padding is not updated. Old values still apply.  Expected result: I expected the padding to be updated dynamically according to the new values.  ### Environment * React Native Navigation version: 2.1.2 * React Native version: 51 * Platform(s) (iOS, Android, or both?): Android * Device info (Simulator/Device? OS version? Debug/Release?): All </body>
		<created>2018-11-29 15:38:57</created>
		<closed>2018-12-25 19:14:58</closed>
	</bug>
	<bug>
		<id>4345</id>
		<title>[v2][Android] registerComponentDidAppearListener doesn't work on sideMenu</title>
		<body>### Issue Description Hey, guys. Since RNN doesn't have toggleSideMenu implemented yet, we need to do some hack like below. The problem I noticed is that `Navigation.events().registerComponentDidAppearListener` works perfectly on iOS for sideMenu, but it doesn't on Android.  ### Steps to Reproduce / Code Snippets / Screenshots  ```jsx import { Navigation } from 'react-native-navigation';  const DRAWER_ID = 'Sidebar';  class Drawer {   constructor() {     this.visible = false;      Navigation.events().registerComponentDidAppearListener(({ componentId }) =&gt; {       if (componentId === DRAWER_ID) {         this.visible = true;       }     });      Navigation.events().registerComponentDidDisappearListener(({ componentId }) =&gt; {       if (componentId === DRAWER_ID) {         this.visible = false;       }     });   }    toggle() {     try {       const visibility = !this.visible;       Navigation.mergeOptions(DRAWER_ID, {         sideMenu: {           left: {             visible: visibility           }         }       });       this.visible = visibility;     } catch (error) {       console.warn(error);     }   } }  export default new Drawer(); ```  --- ### Environment * React Native Navigation version: 2.1.3 * React Native version: 0.57.5 * Platform(s) (iOS, Android, or both?): Android * Device info (Simulator/Device? OS version? Debug/Release?): Moto G5 Plus. Android 8.1. </body>
		<created>2018-11-21 20:54:18</created>
		<closed>2019-05-24 15:55:46</closed>
	</bug>
	<bug>
		<id>4340</id>
		<title>[v2] Centering of TopBar text doesn't update until tabs are switched</title>
		<body>### Issue Description  I'm trying to center the top bar text of one (out of three) of my tabs. I can do this with the following:  ```js Navigation.mergeOptions(this.props.componentId, {   topBar: {     title: {       alignment: 'center',       text: &lt;varies in length per render&gt;,     },     subtitle: {       alignment: 'center',       text: 'Subtitle',     },   }, }); ```  But, there are two problems with this:  Firstly, on the initial boot, the text is still left-aligned.  ![image](https://user-images.githubusercontent.com/4755785/48811176-4d16d300-ed78-11e8-9437-e36b2347dcbe.png)  Changing tabs, then coming back, recenters the text:  ![2018-11-21 10 29 20](https://user-images.githubusercontent.com/4755785/48811191-6cadfb80-ed78-11e8-8bd6-42bc072bf866.gif)  Secondly, when the title changes, it sometimes becomes offset from the actual center, and only fixes when tabs are changed:  ![2018-11-21 10 30 38](https://user-images.githubusercontent.com/4755785/48811233-92d39b80-ed78-11e8-92d4-d217242b0b62.gif)  Before switching tabs: ![image](https://user-images.githubusercontent.com/4755785/48811258-ada61000-ed78-11e8-8a2b-34a701908aec.png)  After:  ![image](https://user-images.githubusercontent.com/4755785/48811272-b39bf100-ed78-11e8-9a2c-9de5631c2d16.png)  Is there any way to have the text centered from the start (I am calling `Navigation.mergeOptions` in `componentDidMount`), and also have it recenter itself if the length changes? This worked in v1, so I'm surprised it's so difficult in v2.   ### Steps to Reproduce / Code Snippets / Screenshots  See above  --- ### Environment * React Native Navigation version: 2.1.3 * React Native version: 0.57.3 * Platform(s) (iOS, Android, or both?): Android * Device info (Simulator/Device? OS version? Debug/Release?): Emulator Android 7 </body>
		<created>2018-11-21 00:34:10</created>
		<closed>2019-01-04 00:43:00</closed>
	</bug>
	<bug>
		<id>4325</id>
		<title>[V2] ScrollView/FlatList after changing route/pushing/showing modal while there is a momentum scroll</title>
		<body>### Issue Description This is the similar bug that happened in V1 and it got fixed but now it comes back in V2. [#1446](https://github.com/wix/react-native-navigation/issues/1446)  ### Steps to Reproduce / Code Snippets / Screenshots 1. Scroll few items. 2. While there is a momentum scrolling =&gt; switch to the 2nd tabbar screen 3. Return to the 1st screen and try to click a FlatList cell =&gt; cells are not responsive.  --- ### Environment * React Native Navigation version: 2.1.2 * React Native version: 0.55.4 * Platform(s) (iOS, Android, or both?): IOS * Device info (Simulator/Device? OS version? Debug/Release?): Simulator/Device, IOS 1.2.1, Debug/Release </body>
		<created>2018-11-15 05:01:32</created>
		<closed>2020-08-17 04:55:09</closed>
	</bug>
	<bug>
		<id>4303</id>
		<title>Get visibility of drawer v2 RNN</title>
		<body>How do we get the visibility of the drawer?  I get that `toggleDrawer` is not a thing in v2 yet, but how do we know the current state of the side menu (visible or not visible) at the moment to be able to toggle manually like so:  ```Navigation.mergeOptions('navigation.drawer.left', {           sideMenu: {             left: {               visible: true, // How do we do the opposite of what is now the visibility?             }           }         }); ```</body>
		<created>2018-11-09 19:59:11</created>
		<closed>2019-01-07 14:48:05</closed>
	</bug>
	<bug>
		<id>4267</id>
		<title>[V2][Android] PUSH with `options.sideMenu.left.visible: false` not working on Android</title>
		<body>### Issue Description I want close left menu when user press on the navigation button. It is working correctly on IOS.  BUT:  On android when you use push with sideMenu options, they aren't applied.   ### Code Snippets Example code: [gist](https://gist.github.com/retyui/3da926d69dc337ec4e26fe4f4093f7b5)  --- ### Environment * React Native Navigation version: `v2.0.2636` * React Native version: `0.56.1` * Platform(s) (iOS, Android, or both?): Android * Device info: Simulator\Debug </body>
		<created>2018-11-01 08:59:55</created>
		<closed>2019-01-09 13:21:29</closed>
	</bug>
	<bug>
		<id>4249</id>
		<title>[V2][iOS] topBar.title.fontFamily reset on mergeOptions</title>
		<body>### Issue Description  topBar.title.fontFamily is being reset with mergeOptions  ### Steps to Reproduce / Code Snippets / Screenshots  Have a topBar.title.fontFamily set in defaultOptions and try to dynamically adjust the topBar by using mergeOptions. The fontFamily set in the defaultOptions will not be used.  --- ### Environment * Originally reported React Native Navigation version: 2.0.2628 * Also tested on React Native Navigation version: 2.1.2 * React Native version: 0.56 * Platform(s) (iOS, Android, or both?): iOS </body>
		<created>2018-10-29 10:30:54</created>
		<closed>2019-02-01 11:29:57</closed>
	</bug>
	<bug>
		<id>4225</id>
		<title>[v2] mergeOptions doesn't work on overlays</title>
		<body>### Issue Description  I want to dynamically toggle the `interceptTouchOutside` prop of an overlay, but when I try to do so using `mergeOptions` it doesn't seem to work.  ### Steps to Reproduce / Code Snippets / Screenshots  First I'm initializing the overlay like so:  ```js Navigation.showOverlay({     component: {         id: "SlideUpMenu",         name: "myapp.SlideUpMenuComponent",         passProps: {          }, options: {     overlay: { interceptTouchOutside: false     } }     }, }); ```  Then within the overlay there is a button that when pressed calls `mergeOptions` on the overlay:  ```js Navigation.mergeOptions(this.props.componentId, {     overlay: {       interceptTouchOutside: true     } }) ```  But the behaviour of the overlay doesn't change.  --- ### Environment * React Native Navigation version: 2.0.2618 * React Native version: 0.55.4 * Platform(s) (iOS, Android, or both?): Both * Device info (Simulator/Device? OS version? Debug/Release?): Pixel 2 device on Android 9.0 / iPhone SE device on iOS 11.4.1 </body>
		<created>2018-10-25 15:17:15</created>
		<closed>2018-10-28 13:24:18</closed>
	</bug>
	<bug>
		<id>4224</id>
		<title>[V2][iOS] Going back in stack does not set the title color properly</title>
		<body>Consider this a reopened #4079  ### Issue Description  Going back in stack does not set the title color properly on iOS  ### Steps to Reproduce / Code Snippets / Screenshots  1. Have a stack navigator where the first screen has `static get options()` and `topBar.title.color: blue` 2. Push a screen with `static get options()` and `topBar.title.color: red` 3. Pop the screen with red title and the previous screen will have a red title too  --- ### Environment * React Native Navigation version: 2.0.2618 * React Native version: 0.56 * Platform(s) (iOS, Android, or both?): iOS * Device info (Simulator/Device? OS version? Debug/Release?): Simulator, 11.4, Debug </body>
		<created>2018-10-25 12:08:02</created>
		<closed>2018-10-26 20:42:25</closed>
	</bug>
	<bug>
		<id>4210</id>
		<title>[v2] [iOS] bottomTabs visible: false visible again on version 2.0.2614 after it was fixed in 2.0.2597</title>
		<body>### Issue Description  After it was fixed in https://github.com/wix/react-native-navigation/issues/4161 Issue is back but now bottomTabs become visible when I change current Tab.  On the first tab it is not visible.  ``` Navigation.mergeOptions(componentId, {       bottomTabs: {         visible: false,         animate: false,         drawBehind: true,         currentTabIndex: NEWINDEX       }     }); ```  Also I have set  ``` Navigation.setDefaultOptions({     bottomTabs: {       visible: false,       drawBehind: true,       animate: false     }.... ```  And also`visible: false` in my setRoot  bottomTabs  ### Steps to Reproduce / Code Snippets / Screenshots  ``` Navigation.setDefaultOptions({     bottomTabs: {       visible: false,       drawBehind: true,       animate: false     } }) ```  and use to change tab. ``` Navigation.mergeOptions(componentId, {       bottomTabs: {         visible: false,         animate: false,         drawBehind: true,         currentTabIndex: NEWINDEX       }     }); ```  bottom tab becomes visible.  --- ### Environment * React Native Navigation version: 2.0.2614 * React Native version: 0.56 * Platform(s) (iOS, Android, or both?): iOS * Device info (Simulator/Device? OS version? Debug/Release?): both </body>
		<created>2018-10-24 09:51:44</created>
		<closed>2018-10-27 03:12:50</closed>
	</bug>
	<bug>
		<id>4193</id>
		<title>[v2] Animating custom transitions for push?</title>
		<body>### Issue Description  For some reason, I can't get any custom push animations to work on ios (havent tried android) I can put following object in `setDefaultOptions` or `push` and nothing will work. I've tried alpha, x, y, scale, but no dice.   Also, interestingly, the animations: { enabled: 'true'} value works. If i set to false, there is no transition. However, virtually anything else I do inside of animations: {push: { ... }} does not work.  I've tried with and without content. Any tips?  Thanks  ### Steps to Reproduce / Code Snippets / Screenshots ``` Navigation.push(this.props.componentId, {   component: {     id: 'blah',     name: 'blah',     passProps: {},     options: {             animations: {               push: {                 enabled: "true",                 content: {                   alpha: {                     from: 0,                     to: 1,                     duration: 3000,                     interpolation: "accelerate"                   }                 }               }             }           }       }     }   } ```  --- ### Environment * React Native Navigation version: 2.0.2608 * React Native version: 0.57.3 * Platform(s) (iOS, Android, or both?): ios * Device info (Simulator/Device? OS version? Debug/Release?): Simulator Debug </body>
		<created>2018-10-23 01:21:16</created>
		<closed>2019-03-19 13:36:52</closed>
	</bug>
	<bug>
		<id>4192</id>
		<title>[v2][iOS] largeTitle not working correctly anymore</title>
		<body>### Issue Description  I'm using largeTitle for iOS and the default behaviour is that when you scroll the content -&gt; it will transform to the small title. This was working in version `2.0.2381` (pull to refresh was bugged with large title) And since ~2.0.2600 (I tested it with this version and up) the largeTitle says always and the content is going under the largeTitle. Also the titlebar is transparent instead of white. Pull to refresh is working now..  ### Steps to Reproduce / Code Snippets / Screenshots  Install newest v2 with largeTitle: true and scrollable content.  --- ### Environment * React Native Navigation version: 2.0.2600 * React Native version: 0.56.0 * Platform(s) (iOS, Android, or both?): iOS * Device info (Simulator/Device? OS version? Debug/Release?): Debug </body>
		<created>2018-10-22 21:41:58</created>
		<closed>2018-10-23 13:30:03</closed>
	</bug>
	<bug>
		<id>4190</id>
		<title>[V2] topBarHeight constant always 0</title>
		<body>### Issue Description  It seems that when accessing the `topBarHeight` from `Navigation.constants()` that the value is always set to `0`.   I'm not certain if there's another way to access the height of the navigation bar.  ### Steps to Reproduce / Code Snippets / Screenshots  ```js const constants = await Navigation.constants(); console.table(constants); ```  --- ### Environment * React Native Navigation version: 2.0.2594 * React Native version: 0.56.0 * Platform(s) (iOS, Android, or both?): iOS * Device info (Simulator/Device? OS version? Debug/Release?): Simulator / iOS 12 / Debug</body>
		<created>2018-10-22 13:30:29</created>
		<closed>2019-07-03 03:14:08</closed>
	</bug>
	<bug>
		<id>4187</id>
		<title>[V2][iOS] stack.options.layout.backgroundColor not working</title>
		<body>### Issue Description  I'm trying to set a backgroundColor for a stack in an app with bottomTabs, but `stack.options.layout.backgroundColor` is not working on iOS. Works fine on Android though.  ### Steps to Reproduce / Code Snippets / Screenshots  Setup a project with `stacks` as children for `bottomTabs` and try to give the stack `options.layout.backgroundColor`  --- ### Environment * React Native Navigation version: 2.0.2608 * React Native version: 0.56 * Platform(s) (iOS, Android, or both?): iOS </body>
		<created>2018-10-22 11:59:54</created>
		<closed>2018-12-03 12:52:12</closed>
	</bug>
	<bug>
		<id>4180</id>
		<title>[V2] sideMenu animationType does not work</title>
		<body>#4105 broke `animationType`.  It is an accepted input option but actually apply the `sideMenu` animation style.  --- ### Environment * React Native Navigation version: 2.0.2583 * React Native version: 0.57.3 * Platform(s) (iOS, Android, or both?): iOS * Device info (Simulator/Device? OS version? Debug/Release?): All</body>
		<created>2018-10-21 15:18:57</created>
		<closed>2018-10-26 21:27:50</closed>
	</bug>
	<bug>
		<id>4178</id>
		<title>[V2] sideMenu options not available/don't work </title>
		<body>https://github.com/wix/react-native-navigation/pull/4105 broke a few `sideMenu` options.  It looks like `shouldStretchDrawer` and `animationVelocity` have been elevated to `sideMenuOptions` (both left and right get the same value), not `sideMenuSideOptions` (left or right controlled). Is this the new method for settings these?  `animationType` is available but does not seem wired in.  --- ### Environment * React Native Navigation version: 2.0.2583 * React Native version: 0.57.3 * Platform(s) (iOS, Android, or both?): iOS * Device info (Simulator/Device? OS version? Debug/Release?): All </body>
		<created>2018-10-21 02:22:51</created>
		<closed>2018-10-21 12:14:54</closed>
	</bug>
	<bug>
		<id>4172</id>
		<title>[V2] [RNNTabBarController isCustomTransitioned]: unrecognized selector</title>
		<body> ### Issue Description  I am trying to push a layout with bottomTabs and getting the following error:  &lt;img width="398" alt="screen shot 2018-10-19 at 5 52 49 pm" src="https://user-images.githubusercontent.com/2049793/47246042-c746e700-d3c9-11e8-8354-28826745b737.png"&gt;  ### Steps to Reproduce / Code Snippets / Screenshots  This is the code where I try to push the tabs layout. ``` import { Navigation } from "react-native-navigation";  export const openRecord = (componentId, recordId) =&gt; {   console.log('COMPID:',componentId);   Navigation.push(componentId, {     bottomTabs: {       id: "record-tabs",       children: [         {           component: {             name: "record.vaccinations",             options: {               bottomTab: {                 fontSize: 12,                 text: "Vaccinations"               }             }           }         },         {           component: {             name: "record.profile",             options: {               bottomTab: {                 fontSize: 12,                 text: "Profile"               }             }           }         }       ]     }   }); }; ```  --- ### Environment * React Native Navigation version: ^2.0.2588 * React Native version: 0.57.3 * Platform(s) (iOS, Android, or both?): iOS * Device info (Simulator/Device? OS version? Debug/Release?): Simulator iPhone X 11.2 </body>
		<created>2018-10-19 22:08:54</created>
		<closed>2018-10-20 09:38:00</closed>
	</bug>
	<bug>
		<id>4171</id>
		<title>[V2] [iOS]Badge number showing in other tabs</title>
		<body>### Issue Description I used the following code to set badge to the third tab ```javascript Navigation.mergeOptions(componentId, {       bottomTab: {         badge: quote.length.toString()       }     }); ``` However, this will effect the fourth tab on the right as well. &lt;img width="316" alt="screen shot 2018-10-20 at 7 52 17 am" src="https://user-images.githubusercontent.com/659612/47243542-16c6fa80-d43e-11e8-8e72-36ca3fd71926.png"&gt;    ### Steps to Reproduce / Code Snippets / Screenshots use  ```javascript Navigation.mergeOptions(componentId, {       bottomTab: {         badge: quote.length.toString()       }     }); ``` set the badge number would effect other tabs   --- ### Environment * React Native Navigation version: 2.0.2601 * React Native version:  0.57.1 * Platform(s) (iOS, Android, or both?): iOS  </body>
		<created>2018-10-19 21:00:10</created>
		<closed>2018-10-20 09:40:17</closed>
	</bug>
	<bug>
		<id>4165</id>
		<title>custom title image component not being shown on IOS but works on Android </title>
		<body>### Issue Description  custom Tobar-&gt;title (image component) not being shown on IOS but works on Android   ### Steps to Reproduce / Code Snippets / Screenshots  ``` const Logo = ({ style }: any) =&gt; (   &lt;Image     style={[styles.image, style]}     resizeMode="contain"     source={Theme.images.SplashLogo}   /&gt; );  const styles = StyleSheet.create({   image: {     flex: 1,     alignSelf: "center"   } });  export default Logo; ``` then register it :   `Navigation.registerComponent("Logo", () =&gt; Logo);`  after that setDefaultOptions :   ```  Navigation.setDefaultOptions({     topBar: {       visible: true,       animate: true,       drawBehind: false,       title: {         component: {           name: "Logo",           alignment: "center"         }       }     }   }); ```   it shows up on Android , but not on the IOS simulator  --- ### Environment * React Native Navigation version: ^2.0.2597 * React Native version: 0.57.3 * Platform(s) (iOS, Android, or both?): IOS * Device info (Simulator/Device? OS version? Debug/Release?): Simulator/Debug </body>
		<created>2018-10-19 11:26:24</created>
		<closed>2018-10-24 07:30:39</closed>
	</bug>
	<bug>
		<id>4161</id>
		<title>[v2][iOS] bottomTabs options not working. Stopped working on version 2.0.2476</title>
		<body>### Issue Description  I have checked all version and 2.0.2475 is version where `bottomTabs visible: false` was working last time.  2.0.2585 did **NOT** fixed it.  https://github.com/wix/react-native-navigation/issues/4112#issuecomment-430527100  ### Steps to Reproduce / Code Snippets / Screenshots  ``` Navigation.setDefaultOptions({     bottomTabs: {       visible: false,       drawBehind: true,       animate: false     } }) ```  **update:** ![image](https://user-images.githubusercontent.com/18900210/47141374-5547a280-d2e2-11e8-85bc-afea738ac2d1.png)  Here is my bottomTabs navigator code:  `export const startMainNavigator = () =&gt; {   Navigation.setRoot({     root: {       bottomTabs: {         children: [           {             stack: {               children: [                 {                   component: {                     name: "dh.Feed",                     passProps: {                       tabName: "Feed"                     }                   }                 }               ],               options: {                 bottomTab: {                   text: "Tab 1",                   icon: require("../assets/img/emptyTabIcon.png"),                   testID: "Feed"                 },                 statusBar: {                   visible: true,                   animate: false,                   drawBehind: true                 }               }             }           },           {             stack: {               children: [                 {                   component: {                     name: "dh.Inbox",                     passProps: {                       tabName: "Inbox"                     }                   }                 }               ],               options: {                 bottomTab: {                   text: "Tab 2",                   icon: require("../assets/img/emptyTabIcon.png"),                   testID: "Inbox"                 },                 statusBar: {                   visible: true,                   animate: false,                   drawBehind: true                 }               }             }           },           {             stack: {               children: [                 {                   component: {                     name: "dh.Log",                     passProps: {                       tabName: "Log"                     }                   }                 }               ],               options: {                 bottomTab: {                   text: "Tab 3",                   icon: require("../assets/img/emptyTabIcon.png"),                   testID: "Log"                 },                 statusBar: {                   visible: true,                   animate: false,                   drawBehind: true                 }               }             }           },           {             stack: {               children: [                 {                   component: {                     name: "dh.MyProfile",                     passProps: {                       tabName: "MyProfile"                     }                   }                 }               ],               options: {                 bottomTab: {                   text: "Tab 4",                   icon: require("../assets/img/emptyTabIcon.png"),                   testID: "MyProfile"                 },                 statusBar: {                   visible: true,                   animate: false,                   drawBehind: true                 }               }             }           }         ],         options: {           bottomTabs: {             barStyle: "black",             translucent: true,             visible: false,             drawBehind: false,             animate: false,             testID: "bottomTabsTestID",             backgroundColor: "red"           }         }       }     }   }); };`  --- ### Environment * React Native Navigation version: 2.0.2596 * React Native version: 0.56 * Platform(s) (iOS, Android, or both?): iOS * Device info (Simulator/Device? OS version? Debug/Release?): both </body>
		<created>2018-10-19 03:36:49</created>
		<closed>2018-10-19 10:38:23</closed>
	</bug>
	<bug>
		<id>4150</id>
		<title>[V2][iOS] topBar.backButton.color broken after 2.0.2583 or 2.0.2584</title>
		<body>### Issue Description  topBar.backButton.color on iOS (PR #3999) isn't working after 2.0.2583 or 2.0.2584. Can't confirm the exact version, since 2.0.2583 does not work for me.  EDIT: I was previously saying that the fix for #4079 was causing this, but it may not be the case as I'm experiencing the issue even on 2.0.2584  --- ### Environment * React Native Navigation version: 0.56 * React Native version: 2.0.2586 * Platform(s) (iOS, Android, or both?): iOS</body>
		<created>2018-10-17 13:33:28</created>
		<closed>2018-10-18 08:24:23</closed>
	</bug>
	<bug>
		<id>4148</id>
		<title>bottomTabs backgroundColor not working</title>
		<body>Reproduce:  use style as below:  ```js bottomTabs: {         visible: true,         animate: false,         // currentTabIndex: 0,         // currentTabId: 'currentTabId',         testID: 'bottomTabsTestID',         drawBehind: false,         backgroundColor: 'white',         fontSize: 10,         titleDisplayMode: 'alwaysShow' } ```  ### Environment * React Native Navigation version: 2.0.2585 * React Native version: 0.57.1 * Platform(s) (iOS, Android, or both?): iOS * Device info (Simulator/Device? OS version? Debug/Release?): simulator ![screen shot 2018-10-17 at 5 36 42 pm](https://user-images.githubusercontent.com/659612/47066899-47871400-d233-11e8-84be-f4d8ac4018d4.png) </body>
		<created>2018-10-17 06:38:24</created>
		<closed>2018-10-19 08:20:01</closed>
	</bug>
	<bug>
		<id>4145</id>
		<title>[V2][iOS] ShowOverlay Modal, Action Sheet and Alert Under Problem</title>
		<body>  ### Issue Description  I'm creating a button for the Tab Bar using the show Overlay. It looks like top over features like Overlay Modal, ActionSheet and Alert. I've used listeners as a workaround for Modal, but I'm afraid that there will be problems in the next process. Is there a more permanent solution than a temporary solution? You can even say that if I have to write on the Native side.  ### Steps to Reproduce / Code Snippets / Screenshots ``` Navigation.showOverlay({        component: {           id: 'car.TabBarIcon',           name: 'car.TabBarIcon',           options: {           overlay: {              interceptTouchOutside: false          },       }    } }); ```   &lt;img width="548" alt="screen shot 2018-10-16 at 16 15 03" src="https://user-images.githubusercontent.com/25525515/47018968-ad559c00-d15e-11e8-9eb5-ce5dbbefffa2.png"&gt; &lt;img width="554" alt="screen shot 2018-10-16 at 16 14 43" src="https://user-images.githubusercontent.com/25525515/47018969-ad559c00-d15e-11e8-85d0-c58c1e04dca4.png"&gt; &lt;img width="549" alt="screen shot 2018-10-16 at 16 14 00" src="https://user-images.githubusercontent.com/25525515/47018970-ad559c00-d15e-11e8-9d1e-57187a1aaa57.png"&gt;  #### workaround ``` Navigation.events().registerCommandListener((name, params) =&gt; {       if ( ['showModal', 'dismissModal'].indexOf(name) !== -1  ) {          const isShow = name !== 'showModal'        this.setState({ isShow })    } }); ```  --- ### Environment * React Native Navigation version:`2.0.2581` * React Native version: `0.57.3` * Platform(s) (iOS, Android, or both?): `iOS` * Device info (Simulator/Device? OS version? Debug/Release?): Device and Simulator | iPhone6  </body>
		<created>2018-10-16 13:21:04</created>
		<closed>2018-10-31 13:42:51</closed>
	</bug>
	<bug>
		<id>4112</id>
		<title>[v2] [iOS] 2.0.2475 was last version with working bottomTabs visible: false</title>
		<body> ### Issue Description  Just made a test to check on which version `bottomTabs visible: false` stopped working. So the last version it is workin on is 2.0.2475 and 2.0.2476 where it broke.  ### Steps to Reproduce / Code Snippets / Screenshots  ``` Navigation.setDefaultOptions({     bottomTabs: {       visible: false,       drawBehind: true,       animate: false     } }) ```  --- ### Environment * React Native Navigation version: 2.0.2577 * React Native version: 0.56 * Platform(s) (iOS, Android, or both?): iOS * Device info (Simulator/Device? OS version? Debug/Release?): both </body>
		<created>2018-10-09 08:42:51</created>
		<closed>2018-10-17 07:52:37</closed>
	</bug>
	<bug>
		<id>4110</id>
		<title>[v2] TitleBar - Back Text to Large Title Briefly Shows Small Title</title>
		<body>### Issue Description  **TitleBar** &gt; When going back in navigation stack, switching from small title to large title briefly shows small title.  ### Steps to Reproduce / Code Snippets / Screenshots  * In RNN v2 playground:   * Add `largeTitle: { visible: true }` to TextScreen.js `topBar` options.   * Add `visible: true` to PushedScreen `topbar` options. * In Playground:   * Click `Switch to tab based app`   * Click `Push` to push subview   * Click Back button in nav header  * Back text first animates to small title and then animates to large title.  ![before](https://user-images.githubusercontent.com/2394698/46635805-82d66400-cb0a-11e8-8046-11ca7eadbf6c.gif)  * Expected behavior (I was able to hack an older version to get this but couldn't get it working in latest):  ![after](https://user-images.githubusercontent.com/2394698/47458432-5f5c1c00-d78e-11e8-8186-e348e628fbb8.gif)  --- ### Environment * React Native Navigation version: Latest master (d7e5400) * React Native version: v0.51 (Playground), v0.55.4 (our app) * Platform(s) (iOS, Android, or both?): iOS, haven't tried Android * Device info (Simulator/Device? OS version? Debug/Release?): Simulator, iOS 11.4, iPhone X </body>
		<created>2018-10-08 22:03:39</created>
		<closed>2018-10-29 09:11:44</closed>
	</bug>
	<bug>
		<id>4093</id>
		<title>[V2][iOS] SearchBar missing tint color options + can't change Cancel text color</title>
		<body>&lt;!--   Please post questions in Stack Overflow under the react-native-navigation tag   https://stackoverflow.com/questions/tagged/react-native-navigation --&gt;  ### Issue Description  - Using the native SearchBar I can not change the color of the Search... background. In my app it has become Dark Blue and I don't know where to change it. Same goes for the Cancel text next to it.  ### Steps to Reproduce / Code Snippets / Screenshots  ![file](https://user-images.githubusercontent.com/4223434/46475709-8dc98580-c7e6-11e8-9762-a27d0d68a4fb.jpg)  --- ### Environment * React Native Navigation version: 2572 * React Native version: 0.56 * Platform(s) (iOS, Android, or both?): iOS * Device info (Simulator/Device? OS version? Debug/Release?): Device + Simulator </body>
		<created>2018-10-04 13:03:40</created>
		<closed>2020-09-18 04:50:28</closed>
	</bug>
	<bug>
		<id>4080</id>
		<title>[V2][iOS] drawBehind not working after merging options</title>
		<body>### Issue Description  transparent and/or translucent topBar with `drawBehind: true` does not allow drawing behind it after merging options (for example topBar title color or disabling a topBar button). Broken after 2.0.2570.   ### Steps to Reproduce / Code Snippets / Screenshots  1. Have a topBar with `{ drawBehind: true, background: { color: "transparent", translucent: true } }` 2. Try to merge options (for example, disable left button or change text color) 3. View moves down by the height of the topBar, because drawing under topBar is not possible  --- ### Environment * React Native Navigation version: 2.0.2571 * React Native version: 0.56 * Platform(s) (iOS, Android, or both?): iOS * Device info (Simulator/Device? OS version? Debug/Release?): Simulator, 11.4, Debug </body>
		<created>2018-10-03 12:19:24</created>
		<closed>2018-10-17 14:30:33</closed>
	</bug>
	<bug>
		<id>4071</id>
		<title>[Android] Bottom tabs appearing unexpectedly on the next screen in the stack</title>
		<body>&lt;!--   Please post questions in Stack Overflow under the react-native-navigation tag   https://stackoverflow.com/questions/tagged/react-native-navigation --&gt;  ### Issue Description  After hiding bottom tabs they are appearing on the next screen pushed to stack. This reproduces only on Android. Works fine on ios.  ### Steps to Reproduce / Code Snippets / Screenshots  Hide bottom tabs on any screen using `{bottomTabs:  {visible: false, drawBehind: true}}`. Push a screen to the same stack. On ios bottomTabs will stay hidden. On android they will appear. This is inconsistent.  --- ### Environment * React Native Navigation version: 2 * Platform(s) (iOS, Android, or both?): Android * Device info (Simulator/Device? OS version? Debug/Release?): Simulator Android 6 </body>
		<created>2018-10-02 13:27:49</created>
		<closed>2018-10-19 10:38:36</closed>
	</bug>
	<bug>
		<id>4045</id>
		<title>[V2] [Android] BottomTab initial render flickers</title>
		<body>### Issue Description  When using a bottomTab layout, the first time you click on a tab, it will flicker before rendering normally. It seems to be more noticeable when you don't have a left icon.  ### Steps to Reproduce / Code Snippets / Screenshots  Create a bottomTabs layout, cold boot the app and then switch tabs.  ![peek 2018-09-28 09-54](https://user-images.githubusercontent.com/4223434/46195416-96ace980-c304-11e8-9f41-f26a6f9797f4.gif)  --- ### Environment * React Native Navigation version: 2..2566 * React Native version: 0.56 * Platform(s) (iOS, Android, or both?): Android * Device info (Simulator/Device? OS version? Debug/Release?): Simulator + Device </body>
		<created>2018-09-28 07:57:27</created>
		<closed>2018-10-04 07:10:15</closed>
	</bug>
	<bug>
		<id>4038</id>
		<title>button click event isn't emitted for external component</title>
		<body></body>
		<created>2018-09-27 08:05:30</created>
		<closed>2018-09-27 10:58:15</closed>
	</bug>
	<bug>
		<id>4034</id>
		<title>[V2] Screen orientation bug</title>
		<body>### Issue Description  There is a bug which only appears on tab based apps (as far as I investigate). When we set the orientation option, it doesn't affect to the activity for the first time we open the app. Let me explain more.  Let's assume we set layout object like this. ```javascript layout: {   backgroundColor: 'white',   orientation: ['portrait'] } ```  The expected behavior is prevent the app to switch to landscape mode, right? It doesn't happen for the first time unfortunately, screen does rotate wether we set orientation option or not. What I mean by "first time" is, the first time we open and see the tab based app. When we open the tab based app and switch to another tab or go to another screen and try again to rotate the screen, It doesn't rotate, whole app starts to act like we expected.  Sum: orientation option doesn't affect to the app when we start tab based app.  ### Steps to Reproduce / Code Snippets / Screenshots  * Set default option { layout: { orientation: ['portrait'] } } * Start tab based app * Rotate the screen to landscape (it will rotate) * Rotate to portrait (optional) * Switch to another tab or go to another screen * Rotate again (it will not rotate as expected)  --- ### Environment * React Native Navigation version: latest@v2 * React Native version: 0.56 * Platform(s) (iOS, Android, or both?): Android 8.1 * Device info (Simulator/Device? OS version? Debug/Release?): Device, Debug </body>
		<created>2018-09-26 09:20:52</created>
		<closed>2018-12-03 12:52:11</closed>
	</bug>
	<bug>
		<id>4021</id>
		<title>[V2] setStackRoot causes topBar to overlap over the screen</title>
		<body>### Issue Description   ![whatsapp image 2018-09-24 at 10 27 36](https://user-images.githubusercontent.com/11012023/45940969-bc747e80-bfe4-11e8-9db1-decb7c6576d7.jpeg)  After calling setStackRoot(compId), the next view's topBar overlays the content of the view.  ### Steps to Reproduce / Code Snippets / Screenshots  Code: ``` Navigation.setStackRoot(this.props.componentId, {     component: {         name: "nomads.nomads.Dashboard",         passProps: {             text: "Root screen"         },         options: {             topBar: {                 visible: true,                 buttonColor: "white",                 title: {                     text: "Nomads",                     color: "white",                     fontSize: 24,                     fontFamily: "JosefinSans-Regular"                 },                 background: {                     color: primary                 },                 drawBehind: false             },             animations: {                 push: {                     // also tried setStackRoot                     enable: false                 }             }         }     } }); ```  Thanks!  --- ### Environment * React Native Navigation version: 2.0.2556 * React Native version: 0.56.1 * Platform(s) (iOS, Android, or both?): Android * Device info (Simulator/Device? OS version? Debug/Release?): On Device - Debug version </body>
		<created>2018-09-24 07:34:58</created>
		<closed>2018-09-25 10:53:01</closed>
	</bug>
	<bug>
		<id>4010</id>
		<title>[v2][Android] setting leftbutton makes title align more to the right</title>
		<body>&lt;!--   Please post questions in Stack Overflow under the react-native-navigation tag   https://stackoverflow.com/questions/tagged/react-native-navigation --&gt;  ### Issue Description lefbutton causes title to align to the right only happens in android and it is fixed when the screen gets active again. only happens to the first screen when the app launch. ### Steps to Reproduce / Code Snippets / Screenshots  ```   componentWillMount () {     Navigation.events().bindComponent(this);     FontAwesome.getImageSource('bars', 25, 'black').then(icon =&gt;       Navigation.mergeOptions(this.props.componentId, {         topBar: {           leftButtons: [             {               id: 'MENU',               icon,               color: 'black'             },           ]         }       })     )   } ``` &lt;img width="316" alt="screen shot 2018-09-21 at 11 54 30 am" src="https://user-images.githubusercontent.com/14576761/45861996-53052d80-bda2-11e8-8f5a-9ccb865b9f20.png"&gt;   --- ### Environment * React Native Navigation version: 2.0.2474 * React Native version: 0.56 * Platform(s) (iOS, Android, or both?): Android * Device info (Simulator/Device? OS version? Debug/Release?): Simulator / Debug</body>
		<created>2018-09-21 05:29:51</created>
		<closed>2018-12-03 14:52:11</closed>
	</bug>
	<bug>
		<id>3984</id>
		<title>[V2] Bad accessibility on Android</title>
		<body>&lt;!--   Please post questions in Stack Overflow under the react-native-navigation tag   https://stackoverflow.com/questions/tagged/react-native-navigation --&gt;  ### Issue Description  On android, views are defining static content description by calling setContentDescription in class constructors, for example in StackLayout.java it calls setContentDescription("StackLayout") which is completely useless information for accessibility purposes. This makes accessibility services like TalkBack to focus and read out loud "StackLayout", "ComponentLayout", ... when navigating between focusable components.  If all the setContentDescription calls are removed/commented out, it works the same as on iOS.  ### Steps to Reproduce / Code Snippets / Screenshots  Enable TalkBack: Settings --&gt; Accessibility --&gt; TalkBack. Open react-native app that uses react-native-navigation and switch between focusable components on screen. Every second tap on focusable component, it will actually focus on ComponentLayout and not the component user tapped.  --- ### Environment * React Native Navigation version: 2.0.2542 * React Native version: 0.56.1 * Platform(s) (iOS, Android, or both?): Android * Device info (Simulator/Device? OS version? Debug/Release?): Android Emulator &amp; Device </body>
		<created>2018-09-18 09:53:28</created>
		<closed>2018-12-03 15:52:25</closed>
	</bug>
	<bug>
		<id>3971</id>
		<title>[v2] TopBar is hidden</title>
		<body>### Issue Description  I've got the simplest stack based navigator. I have also two screens. The first one is registered in stack's children to be rendered initially. In this first screen I don't need TopBar so I've set options in this way to hide it.  ``` visible: false, drawBehind: true ``` When I push a new screen (the second one) from this initially rendered screen (the first one) in that pushed screen the TopBar is invisible, despite the fact that I've set the right options in the second screen to be actually have a visible TopBar with a title.  This issue is related to android. ios works perfectly.  --- ### Environment * React Native Navigation version: 0.56 * React Native version: 2.0.2515 * Platform(s) (iOS, Android, or both?): android * Device info (Simulator/Device? OS version? Debug/Release?): Simulator / Android 6 / Debug</body>
		<created>2018-09-16 09:32:34</created>
		<closed>2018-09-17 14:37:00</closed>
	</bug>
	<bug>
		<id>3969</id>
		<title>[V2] Malformed calls from JS: field sizes are different</title>
		<body>### Issue Description  Unable to pass props through `passProps` on route initialization.   I'm using WatermelonDB for offline support. And i should pass `database` property on initialization, but currently i'm having issues with it.   ### Here is route initialization  ```js Navigation.setRoot({     root: {       options: {},       stack: {         children: [           {             component: {               id: 'SplashPage',               name: 'SplashPage',               passProps: {                 database       // &lt;--- It's always throws an error               }             },           },         ],         options: {           topBar: {             visible: false,             animate: false,             drawBehind: true,           },         },       },     },   });  ```  ### Error i'm getting  ![image](https://user-images.githubusercontent.com/7595812/45575193-4735da80-b87b-11e8-9828-bf578c5562b3.png)  --- ### Environment * React Native Navigation version: ^2.0.2538 * React Native version: 0.56.0 * Platform(s) (iOS, Android, or both?): iOS * Device info (Simulator/Device? OS version? Debug/Release?): Simulator </body>
		<created>2018-09-14 21:09:36</created>
		<closed>2018-10-09 13:05:38</closed>
	</bug>
	<bug>
		<id>3924</id>
		<title>[v2]SideMenu Bug Report(width option problem)</title>
		<body>### Issue Description  I think there is a bug related to sidemenu width property. If there is a width configuration at sidemenu option, then it does not hide the sidemenu properly.  ### Steps to Reproduce / Code Snippets / Screenshots When I set a specific width at sidemenu option like this,      sideMenu: {         left: {             width: 200,             visible: false,         },     },  and try to hide the side menu like this,          Navigation.mergeOptions(this.props.componentId, {             sideMenu: {                 left: {                     visible: false                 }             }         });  The screen shows like this. ![simulator screen shot - iphone x - 2018-09-05 at 16 42 23](https://user-images.githubusercontent.com/23102875/45078314-b0567900-b12a-11e8-83c5-63e2e08d1309.png)  [FILL THIS OUT - It will be extremely helpful]  --- ### Environment * React Native Navigation version: 2.0.2526 * React Native version: 0.56.0 * Platform(s) (iOS, Android, or both?): iOS * Device info (Simulator/Device? OS version? Debug/Release?): Simulator/iPhoneX Debug mode </body>
		<created>2018-09-05 07:45:19</created>
		<closed>2019-05-30 23:00:49</closed>
	</bug>
	<bug>
		<id>3916</id>
		<title>[v2][Android] RightButton orders are not guaranteed</title>
		<body>### Issue Description  RightButton orders are not guaranteed as I defined. on ios it is alaways rendered in reverse order of an array =&gt; [share, question] but on android, i see random results.  ### Steps to Reproduce / Code Snippets / Screenshots  i defined topBar in my StoreScreen Component ``` static get options() {   return {     topBar: {        ...        rightButtons: [           {             id: 'questionBtn',             icon: require('../../../../assets/images/icons/heartWhite.png'),             color: 'white'           },           {             id: 'shareBtn',             icon: require('../../../../assets/images/icons/shareWhite.png'),             color: 'white'           }         ]       ...     }   } } ```  ![untitled](https://user-images.githubusercontent.com/9474523/45020698-a5d4aa80-b06a-11e8-9e0c-323ec02b8a65.gif)  --- ### Environment * React Native Navigation version: 2.0.2518 * React Native version: 56.0 * Platform(s) (iOS, Android, or both?): Android * Device info (Simulator/Device? OS version? Debug/Release?): Simulator: Nexus6 API27, Device: Galaxy S7, S9 </body>
		<created>2018-09-04 09:07:08</created>
		<closed>2018-09-04 10:07:39</closed>
	</bug>
	<bug>
		<id>3914</id>
		<title>[V2] Problems with push+dismissModal and showModal+pop</title>
		<body>### Issue Description  If you do a `pop` for a modal screen or `dismissModal` for a pushed-screen, then problems start.  ### Steps to Reproduce / Code Snippets / Screenshots  1. `push` new screen. Then call `dismissModal`. Result:  My screens|Crash|Crash (Drawer opened) :-------------------------:|:-------------------------:|:-------------------------: ![img_0017](https://user-images.githubusercontent.com/32956521/45018515-bcb3d680-b043-11e8-95b2-cb98a3532063.PNG) | ![img_0018](https://user-images.githubusercontent.com/32956521/45018292-2c759180-b043-11e8-933b-da4bd70b97ac.PNG)  |  ![img_0019](https://user-images.githubusercontent.com/32956521/45018298-313a4580-b043-11e8-9b0b-384b34faf4c9.PNG)  2. `showModal` new screen. Then call `pop`.  Then call `dismissModal`. Result: nothing happens!  --- ### Environment * Checked with 3 versions of RNNv2: `2.0.2459`, `2.0.2500`, `2.0.2519` * React Native version: `0.55.4` * Platform(s) (iOS, Android, or both?): `iOS` only * Device info (Simulator/Device? OS version? Debug/Release?): `Debug`  --- ### My stack  ``` Navigation.setRoot({         root: {             sideMenu: {                 left: {                     component: {                         id: SCREENS_NAMES.leftDrawer,                         name: SCREENS_NAMES.leftDrawer                     }                 },                 center: {                     bottomTabs: {                         children: navigationSettings.bottomTabs.map(t =&gt; ({                             stack: {                                 children: [                                     {                                         component: {                                             name: t.name,                                             passProps: {                                                 ...(t.passProps || {})                                             },                                             options: {                                                 bottomTab: {                                                     icon: getIconSource(t.icon),                                                 },                                                 topBar: {                                                     visible: true,                                                     title: {                                                         text: t.title,                                                     },                                                 },                                             }                                         }                                     }                                 ],                             }                         })),                     }                 }             }          }     }).then(() =&gt; console.warn("App launched with RNN v2 =))")); ```  Where `navigationSettings.bottomTabs` is:  ``` [             {                 name: SCREENS_NAMES.testHome,                 title: 'Главная',                 icon: INITIALIZED_ICONS_NAMES.home,                 // ...             },             {                 name: SCREENS_NAMES.test,                 title: 'Test',                 icon: INITIALIZED_ICONS_NAMES.test,                 // ...             },         ] ```</body>
		<created>2018-09-04 08:06:22</created>
		<closed>2018-10-31 10:48:56</closed>
	</bug>
	<bug>
		<id>3905</id>
		<title>[v2] [Android] AppLayout defaults to white on launch</title>
		<body>### Issue Description  ![androidlaunchbug](https://user-images.githubusercontent.com/180773/44968644-08b52d00-af17-11e8-9781-dff85e747def.gif)  RAW Video: https://streamable.com/jina7  The video explains the bug very well. On Android, when launching the app, I show my splash screen with `setContentView` in the Activity. Then when `Navigation.setRoot`is executed, the launch screen is replaced with an white screen and gray NavBar (defaults?).   Few moments later, the expected screen options were applied and the app rendered.  I tried different configurations:  - Very bad effect when using `sidemenu` or pure `root.component`.  - It appears for shortest amount of time when using `bottomTabs`.  - It appears for shorter amount of time on better device.  - Settings default options did not work.  ### Steps to Reproduce / Code Snippets / Screenshots  Repro on current master: https://github.com/birkir/kvikmyndr-app  ```js Navigation.setRoot({   component: {     name: WEEK,   }, }); ```  --- ### Environment * React Native Navigation version: 2.0.2515 * React Native version: 0.56.rc-3 * Platform(s) (iOS, Android, or both?): Android * Device info (Simulator/Device? OS version? Debug/Release?): All </body>
		<created>2018-09-03 05:24:15</created>
		<closed>2019-01-04 16:32:05</closed>
	</bug>
	<bug>
		<id>3894</id>
		<title>[v2] Pressing back button while pushing new screen causes crash</title>
		<body>### Issue Description Pressing the back button in the TopBar while a screen is being pushed crashes the app.  I can crash the Play Store version of [Hekla](https://github.com/birkir/hekla) (@birkir, apologies if you've received a flurry of crash reports) doing this, so it is not limited to debug builds.  ### Steps to Reproduce / Code Snippets / Screenshots  1. Push a screen. 2. While the screen animates into existence, tap the area in the TitleBar where the back button is meant to be.  ``` FATAL EXCEPTION: main Process: com.my_app, PID: 6770 java.lang.IllegalStateException: The specified child already has a parent. You must call removeView() on the child's parent first.        at android.view.ViewGroup.addViewInner(ViewGroup.java:5034)        at android.view.ViewGroup.addView(ViewGroup.java:4865)        at android.view.ViewGroup.addView(ViewGroup.java:4805)        at com.reactnativenavigation.viewcontrollers.stack.StackController.pop(StackController.java:209)        at com.reactnativenavigation.viewcontrollers.stack.StackController.onNavigationButtonPressed(StackController.java:325)        at com.reactnativenavigation.viewcontrollers.stack.StackController.bridge$lambda$0$StackController(Unknown Source:0)        at com.reactnativenavigation.viewcontrollers.stack.StackController$$Lambda$0.onPress(Unknown Source:2)        at com.reactnativenavigation.viewcontrollers.TitleBarButtonController.lambda$null$0$TitleBarButtonController(TitleBarButtonController.java:101)        at com.reactnativenavigation.viewcontrollers.TitleBarButtonController$$Lambda$3.onClick(Unknown Source:2)        at android.view.View.performClick(View.java:6597)        at android.view.View.performClickInternal(View.java:6574)        at android.view.View.access$3100(View.java:778)        at android.view.View$PerformClick.run(View.java:25885)        at android.os.Handler.handleCallback(Handler.java:873)        at android.os.Handler.dispatchMessage(Handler.java:99)        at android.os.Looper.loop(Looper.java:193)        at android.app.ActivityThread.main(ActivityThread.java:6669)        at java.lang.reflect.Method.invoke(Native Method)        at com.android.internal.os.RuntimeInit$MethodAndArgsCaller.run(RuntimeInit.java:493)        at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:858)    Force finishing activity com.my_app/.MainActivity ```  --- ### Environment * React Native Navigation version: **2.0.2506** * React Native version: **0.55.4** * Platform(s) (iOS, Android, or both?): **Android** (haven't tested iOS yet) * Device info (Simulator/Device? OS version? Debug/Release?): **Simulator, Android 9 (API 28), Debug**</body>
		<created>2018-08-31 07:49:18</created>
		<closed>2018-09-04 08:10:51</closed>
	</bug>
	<bug>
		<id>3864</id>
		<title>Top bar title component blinks when changing pages</title>
		<body> ### Issue Description  When switching pages the topBar's title blinks if you are using a component instead of text. This happens even if it is a super simple component that only returns `&lt;Text&gt;test title&lt;/Text&gt;`. Previously when using a custom component for the whole topBar it did not blink and appeared immediately between page renders  ### Steps to Reproduce / Code Snippets / Screenshots  ```js Navigation.setStackRoot(this.props.componentId, { component: { name: 'teams', passProps: { teams: true }, options: { topBar : { title: { component: { name: 'CustomTopBar', alignment: 'fill' }, } }, }, } });  export default class TopBarHeader extends BaseComponent { constructor() { super(...arguments); } static displayName = 'TopBar:Header';  render() { return &lt;Text&gt;test&lt;/Text&gt; } } ```  --- ### Environment * React Native Navigation version: 2.0.2502 * React Native version: 0.56 * Platform(s) (iOS, Android, or both?): both </body>
		<created>2018-08-27 19:28:52</created>
		<closed>2019-07-19 04:54:08</closed>
	</bug>
	<bug>
		<id>3860</id>
		<title>[V2] Overlay destruct on setRoot invoke</title>
		<body>&lt;!--   Please post questions in Stack Overflow under the react-native-navigation tag   https://stackoverflow.com/questions/tagged/react-native-navigation --&gt;  ### Issue Description  I'm using `showOverlay` to show an overlay, when I try to change stack with setRoot, overlay will be destructed.  ### Steps to Reproduce / Code Snippets / Screenshots  1. Set root using Navigation.setRoot(...) 2. Show overlay using Navigation.showOverlay(...) 3. Reset root stack using Navigation.setRoot(...)  --- ### Environment * React Native Navigation version: 2.0.2500 * React Native version: 0,56 * Platform(s) (iOS, Android, or both?): both * Device info (Simulator/Device? OS version? Debug/Release?): any </body>
		<created>2018-08-27 07:17:11</created>
		<closed>2018-10-02 17:28:35</closed>
	</bug>
	<bug>
		<id>3767</id>
		<title>[v2] Tried to create view after it has already been destroyed</title>
		<body>My app users are complaining about random crashes on Android. I have Crashlytics installed and I verified by using user and time filters that this crashes are caused by the following error:  ![captura de tela 2018-08-14 as 18 17 04](https://user-images.githubusercontent.com/2624768/44119050-70780b66-9fee-11e8-8dde-be79b083e46c.png)  I can't reproduce the problem in the Android simulator and it seems Android exclusive, as it appears. Can anyone help me what might be happening? Thanks in advance.  --- ### Environment * React Native Navigation version: 2.0.2377 * React Native version: 0.55.4 * Platform(s) (iOS, Android, or both?): Android * Device info (Simulator/Device? OS version? Debug/Release?): Only device, apparently</body>
		<created>2018-08-14 21:19:30</created>
		<closed>2019-12-28 07:24:29</closed>
	</bug>
	<bug>
		<id>3764</id>
		<title>[V2] bottom tab -&gt; changing the text of the current tab is not working with mergeOptions()</title>
		<body>### Issue Description While trying to update the bottom tab text for a tab, it's updating everything but leaving the text as it is ### Steps to Reproduce / Code Snippets / Screenshots ```js this.props.navigation.mergeOptions(this.props.componentId, {     bottomTab: {         text: "my reward"     } })  ``` --- ### Environment * React Native Navigation version: 2.0.2472 * React Native version: 0.55.4 * Platform(s) (iOS, Android, or both?): iOS * Device info (Simulator/Device? OS version? Debug/Release?): Simulator and Device, Debug and Release </body>
		<created>2018-08-14 16:16:18</created>
		<closed>2020-01-29 12:34:32</closed>
	</bug>
	<bug>
		<id>3762</id>
		<title>[V2][Android] topMargin setting for layout crashes an app</title>
		<body>&lt;!--   Please post questions in Stack Overflow under the react-native-navigation tag   https://stackoverflow.com/questions/tagged/react-native-navigation --&gt;  ### Issue Description  app crashes when layout is set with topMargin.  ### Steps to Reproduce / Code Snippets / Screenshots  ``` static get options() {   return {     layout: {topMargin: 24}   } } ```  log:  ``` 08-14 12:20:59.430 16852 16852 D ReactNative: ReactInstanceManager.attachRootViewToInstance() 08-14 12:20:59.435 16852 16852 D AndroidRuntime: Shutting down VM 08-14 12:20:59.436 16852 16852 E AndroidRuntime: FATAL EXCEPTION: main 08-14 12:20:59.436 16852 16852 E AndroidRuntime: Process: com.wix.android.dev, PID: 16852 08-14 12:20:59.436 16852 16852 E AndroidRuntime: java.lang.NullPointerException: Attempt to write to field 'int android.view.ViewGroup$MarginLayoutParams.topMargin' on a null object reference 08-14 12:20:59.436 16852 16852 E AndroidRuntime:        at com.reactnativenavigation.presentation.OptionsPresenter.applyViewOptions(OptionsPresenter.java:62) 08-14 12:20:59.436 16852 16852 E AndroidRuntime:        at com.reactnativenavigation.presentation.OptionsPresenter.present(OptionsPresenter.java:39) 08-14 12:20:59.436 16852 16852 E AndroidRuntime:        at com.reactnativenavigation.viewcontrollers.ChildController.applyOptions(ChildController.java:47) 08-14 12:20:59.436 16852 16852 E AndroidRuntime:        at com.reactnativenavigation.viewcontrollers.ComponentViewController.applyOptions(ComponentViewController.java:48) 08-14 12:20:59.436 16852 16852 E AndroidRuntime:        at com.reactnativenavigation.viewcontrollers.ViewController.mergeOptions(ViewController.java:104) 08-14 12:20:59.436 16852 16852 E AndroidRuntime:        at com.reactnativenavigation.viewcontrollers.ComponentViewController.mergeOptions(ComponentViewController.java:67) 08-14 12:20:59.436 16852 16852 E AndroidRuntime:        at com.reactnativenavigation.viewcontrollers.stack.BackButtonHelper.addToPushedChild(BackButtonHelper.java:12) 08-14 12:20:59.436 16852 16852 E AndroidRuntime:        at com.reactnativenavigation.viewcontrollers.stack.StackController.push(StackController.java:131) 08-14 12:20:59.436 16852 16852 E AndroidRuntime:        at com.reactnativenavigation.viewcontrollers.Navigator.lambda$push$0$Navigator(Navigator.java:137) 08-14 12:20:59.436 16852 16852 E AndroidRuntime:        at com.reactnativenavigation.viewcontrollers.Navigator$$Lambda$0.run(Unknown Source:4) 08-14 12:20:59.436 16852 16852 E AndroidRuntime:        at com.reactnativenavigation.viewcontrollers.ViewController.performOnParentStack(ViewController.java:136) 08-14 12:20:59.436 16852 16852 E AndroidRuntime:        at com.reactnativenavigation.viewcontrollers.ViewController.performOnParentStack(ViewController.java:147) 08-14 12:20:59.436 16852 16852 E AndroidRuntime:        at com.reactnativenavigation.viewcontrollers.Navigator.push(Navigator.java:136) 08-14 12:20:59.436 16852 16852 E AndroidRuntime:        at com.reactnativenavigation.react.NavigationModule.lambda$push$4$NavigationModule(NavigationModule.java:86) 08-14 12:20:59.436 16852 16852 E AndroidRuntime:        at com.reactnativenavigation.react.NavigationModule$$Lambda$4.run(Unknown Source:10) 08-14 12:20:59.436 16852 16852 E AndroidRuntime:        at android.os.Handler.handleCallback(Handler.java:789) 08-14 12:20:59.436 16852 16852 E AndroidRuntime:        at android.os.Handler.dispatchMessage(Handler.java:98) 08-14 12:20:59.436 16852 16852 E AndroidRuntime:        at android.os.Looper.loop(Looper.java:164) 08-14 12:20:59.436 16852 16852 E AndroidRuntime:        at android.app.ActivityThread.main(ActivityThread.java:6541) 08-14 12:20:59.436 16852 16852 E AndroidRuntime:        at java.lang.reflect.Method.invoke(Native Method) 08-14 12:20:59.436 16852 16852 E AndroidRuntime:        at com.android.internal.os.Zygote$MethodAndArgsCaller.run(Zygote.java:240) 08-14 12:20:59.436 16852 16852 E AndroidRuntime:        at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:767) 08-14 12:20:59.437 16852 17017 I ReactNativeJS: Running application "bookings.GroupSession" with appParams: {"initialProps":{"componentId":"667f93f6"},"rootTag":121}. __DEV__ === true, development-level warning are ON, performance optimizations are OFF 08-14 12:20:59.446  1691  1703 W ActivityManager:   Force finishing activity com.wix.android.dev/com.wixoneapp.MainActivity 08-14 12:20:59.456  1691  1707 I ActivityManager: Showing crash dialog for package com.wix.android.dev u0 08-14 12:20:59.501  1421  1421 D gralloc_ranchu: gralloc_alloc: Creating ashmem region of size 2654208 08-14 12:20:59.507  1421  1421 I chatty  : uid=1000(system) allocator@2.0-s identical 1 line 08-14 12:20:59.519  1421  1421 D gralloc_ranchu: gralloc_alloc: Creating ashmem region of size 2654208 08-14 12:20:59.520  1691  4555 I OpenGLRenderer: Initialized EGL, version 1.4 08-14 12:20:59.520  1691  4555 D OpenGLRenderer: Swap behavior 1 08-14 12:20:59.522  1691  4555 W OpenGLRenderer: Failed to choose config with EGL_SWAP_BEHAVIOR_PRESERVED, retrying without... 08-14 12:20:59.522  1691  4555 D OpenGLRenderer: Swap behavior 0 08-14 12:20:59.530  1691  4555 D EGL_emulation: eglCreateContext: 0x878129a0: maj 2 min 0 rcv 2 08-14 12:20:59.535 16852 16863 I zygote  : Background concurrent copying GC freed 148935(5MB) AllocSpace objects, 14(432KB) LOS objects, 44% free, 7MB/13MB, paused 1.214ms total 102.539ms 08-14 12:20:59.552  1691  4555 D EGL_emulation: eglMakeCurrent: 0x878129a0: ver 2 0 (tinfo 0x7fa78c80) 08-14 12:20:59.580  1421  1421 D gralloc_ranchu: gralloc_alloc: Creating ashmem region of size 2076672 08-14 12:20:59.606  1691  4555 D EGL_emulation: eglMakeCurrent: 0x878129a0: ver 2 0 (tinfo 0x7fa78c80) 08-14 12:20:59.789  1691  1707 W Looper  : Dispatch took 260ms on android.ui, h=Handler (android.view.Choreographer$FrameHandler) {79d107} cb=android.view.Choreographer$FrameDisplayEventReceiver@3f85234 msg=0 08-14 12:20:59.952  1691  1706 W ActivityManager: Activity pause timeout for ActivityRecord{eb01f9d u0 com.wix.android.dev/com.wixoneapp.MainActivity t93 f} 08-14 12:20:59.986  1421  1421 D gralloc_ranchu: gralloc_alloc: Creating ashmem region of size 8298496 08-14 12:21:00.006  1421  1421 I chatty  : uid=1000(system) allocator@2.0-s identical 1 line 08-14 12:21:00.011  1421  1421 D gralloc_ranchu: gralloc_alloc: Creating ashmem region of size 8298496 08-14 12:21:00.023  1430  1430 D SurfaceFlinger: duplicate layer name: changing com.google.android.apps.nexuslauncher/com.google.android.apps.nexuslauncher.NexusLauncherActivity to com.google.android.apps.nexuslauncher/com.google.android.apps.nexuslauncher.NexusLauncherActivity#1 08-14 12:21:00.026  2370  2602 D EGL_emulation: eglMakeCurrent: 0x9707f940: ver 2 0 (tinfo 0x971ffb90) 08-14 12:21:00.037  1421  1421 D gralloc_ranchu: gralloc_alloc: Creating ashmem region of size 8298496 08-14 12:21:00.045  1421  1421 I chatty  : uid=1000(system) allocator@2.0-s identical 1 line 08-14 12:21:00.057  1421  1421 D gralloc_ranchu: gralloc_alloc: Creating ashmem region of size 8298496 08-14 12:21:00.072  2318  2450 D EGL_emulation: eglMakeCurrent: 0xa76a18c0: ver 2 0 (tinfo 0x96e2e5c0) 08-14 12:21:00.081  2370  2370 W SessionLifecycleManager: Handover failed. Creating new session controller. 08-14 12:21:00.083  2370  2370 I OptInState: There is a new client and it does not support opt-in. Dropping request. 08-14 12:21:00.092  2370 16607 W LocationOracle: No location history returned by ContextManager 08-14 12:21:00.102  2370  2370 I MicroDetectionWorker: #updateMicroDetector [detectionMode: [mDetectionMode: [1]]] 08-14 12:21:00.102  2370  2370 I MicroDetectionWorker: #startMicroDetector [speakerMode: 0] 08-14 12:21:00.102  2370  2370 I AudioController: Using mInputStreamFactoryBuilder 08-14 12:21:00.116  2370  2370 I MicroDetectionWorker: onReady 08-14 12:21:00.124  2370 16441 I MicroRecognitionRunner: Starting detection. 08-14 12:21:00.125  2370 15690 I MicrophoneInputStream: mic_starting com.google.android.apps.gsa.staticplugins.aa.c@5f7980f 08-14 12:21:00.129  1519 17057 I AudioFlinger: AudioFlinger's thread 0xafb831c0 tid=17057 ready to run 08-14 12:21:00.137  1519 23309 E AudioFlinger: not enough memory for AudioTrack size=131296 08-14 12:21:00.137  1519 23309 D MemoryDealer:   AudioTrack (0xb43992d0, size=4194304) 08-14 12:21:00.137  1519 23309 D MemoryDealer:     0: 0xb4399340 | 0x00000000 | 0x000200E0 | A  08-14 12:21:00.137  1519 23309 D MemoryDealer:     1: 0xb4399360 | 0x000200E0 | 0x000200E0 | A  08-14 12:21:00.137  1519 23309 D MemoryDealer:     2: 0xb43994c0 | 0x000401C0 | 0x000200E0 | A  08-14 12:21:00.137  1519 23309 D MemoryDealer:     3: 0xb427c080 | 0x000602A0 | 0x000200E0 | A  08-14 12:21:00.137  1519 23309 D MemoryDealer:     4: 0xb427c340 | 0x00080380 | 0x000200E0 | A  08-14 12:21:00.137  1519 23309 D MemoryDealer:     5: 0xb427c4c0 | 0x000A0460 | 0x000200E0 | A  08-14 12:21:00.137  1519 23309 D MemoryDealer:     6: 0xb427c640 | 0x000C0540 | 0x000200E0 | A  08-14 12:21:00.137  1519 23309 D MemoryDealer:     7: 0xb427c7f0 | 0x000E0620 | 0x000200E0 | A  08-14 12:21:00.137  1519 23309 D MemoryDealer:     8: 0xb4399630 | 0x00100700 | 0x000200E0 | A  08-14 12:21:00.137  1519 23309 D MemoryDealer:     9: 0xb427ca00 | 0x001207E0 | 0x000200E0 | A  08-14 12:21:00.137  1519 23309 D MemoryDealer:    10: 0xb43998b0 | 0x001408C0 | 0x000200E0 | A  08-14 12:21:00.137  1519 23309 D MemoryDealer:    11: 0xb427cdd0 | 0x001609A0 | 0x000200E0 | A  08-14 12:21:00.137  1519 23309 D MemoryDealer:    12: 0xb427cf00 | 0x00180A80 | 0x000200E0 | A  08-14 12:21:00.137  1519 23309 D MemoryDealer:    13: 0xb28ff080 | 0x001A0B60 | 0x000200E0 | A  08-14 12:21:00.137  1519 23309 D MemoryDealer:    14: 0xb28ff1d0 | 0x001C0C40 | 0x000200E0 | A  08-14 12:21:00.137  1519 23309 D MemoryDealer:    15: 0xb28ff380 | 0x001E0D20 | 0x000200E0 | A  08-14 12:21:00.137  1519 23309 D MemoryDealer:    16: 0xb28ff4d0 | 0x00200E00 | 0x000200E0 | A  08-14 12:21:00.137  1519 23309 D MemoryDealer:    17: 0xb4399ed0 | 0x00220EE0 | 0x000200E0 | A  08-14 12:21:00.137  1519 23309 D MemoryDealer:    18: 0xb4399980 | 0x00240FC0 | 0x000200E0 | A  08-14 12:21:00.137  1519 23309 D MemoryDealer:    19: 0xb43a7020 | 0x002610A0 | 0x000200E0 | A  08-14 12:21:00.137  1519 23309 D MemoryDealer:     08-14 12:21:00.138  1519 23309 E AudioFlinger: createRecordTrack_l() initCheck failed -12; no control block? 08-14 12:21:00.138  2370 15690 E AudioRecord: AudioFlinger could not create record track, status: -12 08-14 12:21:00.145  2370 15690 E AudioRecord-JNI: Error creating AudioRecord instance: initialization check failed with status -12. 08-14 12:21:00.145  2370 15690 E android.media.AudioRecord: Error code -20 when initializing native AudioRecord object. 08-14 12:21:00.146  2370 15690 I MicrophoneInputStream: mic_started com.google.android.apps.gsa.staticplugins.aa.c@5f7980f 08-14 12:21:00.159  1421  1421 D gralloc_ranchu: gralloc_alloc: Creating ashmem region of size 8298496 08-14 12:21:00.170  1430  1430 E EGL_emulation: tid 1430: eglCreateSyncKHR(1962): error 0x3004 (EGL_BAD_ATTRIBUTE) 08-14 12:21:00.207  2370 15690 E ActivityThread: Failed to find provider info for com.google.android.apps.gsa.testing.ui.audio.recorded 08-14 12:21:00.208  2370  2370 I MicroDetectionWorker: onReady 08-14 12:21:00.209  2370 15690 I MicrophoneInputStream: mic_close com.google.android.apps.gsa.staticplugins.aa.c@5f7980f 08-14 12:21:00.211  2370 16441 I MicroRecognitionRunner: Detection finished 08-14 12:21:00.211  2370 16441 W ErrorReporter: reportError [type: 211, code: 524300]: Error reading from input stream 08-14 12:21:00.211  2370 16441 W ErrorProcessor: onFatalError, processing error from engine(4) 08-14 12:21:00.211  2370 16441 W ErrorProcessor: com.google.android.apps.gsa.shared.speech.b.g: Error reading from input stream 08-14 12:21:00.211  2370 16441 W ErrorProcessor:        at com.google.android.apps.gsa.staticplugins.recognizer.j.a.a(SourceFile:28) 08-14 12:21:00.211  2370 16441 W ErrorProcessor:        at com.google.android.apps.gsa.staticplugins.recognizer.j.b.run(SourceFile:15) 08-14 12:21:00.211  2370 16441 W ErrorProcessor:        at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457) 08-14 12:21:00.211  2370 16441 W ErrorProcessor:        at java.util.concurrent.FutureTask.run(FutureTask.java:266) 08-14 12:21:00.211  2370 16441 W ErrorProcessor:        at com.google.android.apps.gsa.shared.util.concurrent.a.ax.run(SourceFile:14) 08-14 12:21:00.211  2370 16441 W ErrorProcessor:        at com.google.android.apps.gsa.shared.util.concurrent.a.bl.run(SourceFile:4) 08-14 12:21:00.211  2370 16441 W ErrorProcessor:        at com.google.android.apps.gsa.shared.util.concurrent.a.bl.run(SourceFile:4) 08-14 12:21:00.211  2370 16441 W ErrorProcessor:        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162) 08-14 12:21:00.211  2370 16441 W ErrorProcessor:        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636) 08-14 12:21:00.211  2370 16441 W ErrorProcessor:        at java.lang.Thread.run(Thread.java:764) 08-14 12:21:00.211  2370 16441 W ErrorProcessor:        at com.google.android.apps.gsa.shared.util.concurrent.a.ai.run(SourceFile:6) 08-14 12:21:00.211  2370 16441 W ErrorProcessor: Caused by: com.google.android.apps.gsa.shared.exception.GsaIOException: Error code: 393238 | Buffer overflow, no available space. 08-14 12:21:00.211  2370 16441 W ErrorProcessor:        at com.google.android.apps.gsa.speech.audio.Tee.f(SourceFile:103) 08-14 12:21:00.211  2370 16441 W ErrorProcessor:        at com.google.android.apps.gsa.speech.audio.au.read(SourceFile:2) 08-14 12:21:00.211  2370 16441 W ErrorProcessor:        at java.io.InputStream.read(InputStream.java:101) 08-14 12:21:00.211  2370 16441 W ErrorProcessor:        at com.google.android.apps.gsa.speech.audio.ao.run(SourceFile:18) 08-14 12:21:00.211  2370 16441 W ErrorProcessor:        at com.google.android.apps.gsa.speech.audio.an.run(SourceFile:2) 08-14 12:21:00.211  2370 16441 W ErrorProcessor:        ... 9 more 08-14 12:21:00.211  2370  2717 I MicroRecognitionRunner: Stopping hotword detection. 08-14 12:21:00.212  2370 16441 I AudioController: internalShutdown 08-14 12:21:00.213  2370  2370 I MicroDetector: Keeping mic open: false 08-14 12:21:00.213  2370  2370 I MicroDetectionWorker: #onError(false) 08-14 12:21:00.214  2370 14633 I DeviceStateChecker: DeviceStateChecker cancelled 08-14 12:21:00.228  2216  2688 W GCoreFlp: No location to return for getLastLocation() 08-14 12:21:00.231  2216  2688 W GCoreFlp: No location to return for getLastLocation() 08-14 12:21:00.255  2216 16448 I Places  : ?: Couldn't find platform key file. 08-14 12:21:00.264  2216  2688 W GCoreFlp: No location to return for getLastLocation() 08-14 12:21:00.270  2216  9693 I Places  : ?: PlacesBleScanner start() with priority 2 08-14 12:21:00.271  2216  9693 I PlaceInferenceEngine: [anon] Changed inference mode: 102 08-14 12:21:00.277  2216  2688 W GCoreFlp: No location to return for getLastLocation() 08-14 12:21:00.280  2216  2688 W GCoreFlp: No location to return for getLastLocation() 08-14 12:21:00.286  2216  2216 E BeaconBle: Missing BluetoothAdapter 08-14 12:21:00.286  2216  2216 I BeaconBle: BLE 'KK+' software access layer enabled 08-14 12:21:00.313  2216  2216 I BeaconBle: Client requested scan, settings=BleSettings [scanMode=ZERO_POWER, callbackType=ALL_MATCHES, reportDelayMillis=0, 1 filters, 0 clients, callingClientName=Places] 08-14 12:21:00.313  2216  2216 I BeaconBle: Scan : No clients left, canceling alarm. 08-14 12:21:00.314  2216  2216 E BeaconBle: Scan couldn't start for Places 08-14 12:21:00.315  2216  2216 W Places  : BLE failure while scanning - code 5 08-14 12:21:00.564 16852 17017 I ReactNativeJS: BI EVENT: {"evid":41,"countRetry":0,"retryIndex":0,"delay":500,"path":"/_api/bookings-middleware-server/bookings","url":"https://apps.wix.com/_api/bookings-middleware-server/bookings","errorMessage":null,"isSuccess":true} 08-14 12:21:00.584  2318  2450 W OpenGLRenderer: Incorrectly called buildLayer on View: ShortcutAndWidgetContainer, destroying layer... 08-14 12:21:00.686 16852 17017 I ReactNativeJS: BI EVENT: {"evid":41,"countRetry":0,"retryIndex":0,"delay":500,"path":"/_api/bookings-middleware-server/bookings","url":"https://apps.wix.com/_api/bookings-middleware-server/bookings","errorMessage":null,"isSuccess":true} 08-14 12:21:04.819 16852 17017 I ReactNativeJS: BI EVENT: {"evid":41,"countRetry":0,"retryIndex":0,"delay":500,"path":"/_api/bookings-middleware-server/bookings","url":"https://apps.wix.com/_api/bookings-middleware-server/bookings","errorMessage":null,"isSuccess":true} 08-14 12:21:05.214  2370  2370 I MicroDetectionWorker: #updateMicroDetector [detectionMode: [mDetectionMode: [1]]] 08-14 12:21:05.214  2370  2370 I MicroDetectionWorker: #startMicroDetector [speakerMode: 0] 08-14 12:21:05.215  2370  2370 I AudioController: Using mInputStreamFactoryBuilder 08-14 12:21:05.217  2370  2370 I MicroDetectionWorker: onReady 08-14 12:21:05.219  2370 16607 I MicroRecognitionRunner: Starting detection. 08-14 12:21:05.220  2370 15690 I MicrophoneInputStream: mic_starting com.google.android.apps.gsa.staticplugins.aa.c@db36f94 08-14 12:21:05.225  1519 17066 I AudioFlinger: AudioFlinger's thread 0xafb83c80 tid=17066 ready to run 08-14 12:21:05.228  1519 23309 E AudioFlinger: not enough memory for AudioTrack size=131296 08-14 12:21:05.228  1519 23309 D MemoryDealer:   AudioTrack (0xb43992d0, size=4194304) 08-14 12:21:05.228  1519 23309 D MemoryDealer:     0: 0xb4399340 | 0x00000000 | 0x000200E0 | A  08-14 12:21:05.228  1519 23309 D MemoryDealer:     1: 0xb4399360 | 0x000200E0 | 0x000200E0 | A  08-14 12:21:05.228  1519 23309 D MemoryDealer:     2: 0xb43994c0 | 0x000401C0 | 0x000200E0 | A  08-14 12:21:05.228  1519 23309 D MemoryDealer:     3: 0xb427c080 | 0x000602A0 | 0x000200E0 | A  08-14 12:21:05.228  1519 23309 D MemoryDealer:     4: 0xb427c340 | 0x00080380 | 0x000200E0 | A  08-14 12:21:05.228  1519 23309 D MemoryDealer:     5: 0xb427c4c0 | 0x000A0460 | 0x000200E0 | A  08-14 12:21:05.228  1519 23309 D MemoryDealer:     6: 0xb427c640 | 0x000C0540 | 0x000200E0 | A  08-14 12:21:05.228  1519 23309 D MemoryDealer:     7: 0xb427c7f0 | 0x000E0620 | 0x000200E0 | A  08-14 12:21:05.228  1519 23309 D MemoryDealer:     8: 0xb4399630 | 0x00100700 | 0x000200E0 | A  08-14 12:21:05.228  1519 23309 D MemoryDealer:     9: 0xb427ca00 | 0x001207E0 | 0x000200E0 | A  08-14 12:21:05.228  1519 23309 D MemoryDealer:    10: 0xb43998b0 | 0x001408C0 | 0x000200E0 | A  08-14 12:21:05.228  1519 23309 D MemoryDealer:    11: 0xb427cdd0 | 0x001609A0 | 0x000200E0 | A  08-14 12:21:05.228  1519 23309 D MemoryDealer:    12: 0xb427cf00 | 0x00180A80 | 0x000200E0 | A  08-14 12:21:05.228  1519 23309 D MemoryDealer:    13: 0xb28ff080 | 0x001A0B60 | 0x000200E0 | A  08-14 12:21:05.228  1519 23309 D MemoryDealer:    14: 0xb28ff1d0 | 0x001C0C40 | 0x000200E0 | A  08-14 12:21:05.228  1519 23309 D MemoryDealer:    15: 0xb28ff380 | 0x001E0D20 | 0x000200E0 | A  08-14 12:21:05.228  1519 23309 D MemoryDealer:    16: 0xb28ff4d0 | 0x00200E00 | 0x000200E0 | A  08-14 12:21:05.228  1519 23309 D MemoryDealer:    17: 0xb4399ed0 | 0x00220EE0 | 0x000200E0 | A  08-14 12:21:05.228  1519 23309 D MemoryDealer:    18: 0xb4399980 | 0x00240FC0 | 0x000200E0 | A  08-14 12:21:05.228  1519 23309 D MemoryDealer:    19: 0xb43a7020 | 0x002610A0 | 0x000200E0 | A  08-14 12:21:05.228  1519 23309 D MemoryDealer:     08-14 12:21:05.228  1519 23309 E AudioFlinger: createRecordTrack_l() initCheck failed -12; no control block? 08-14 12:21:05.228  2370 15690 E AudioRecord: AudioFlinger could not create record track, status: -12 08-14 12:21:05.231  2370 15690 E AudioRecord-JNI: Error creating AudioRecord instance: initialization check failed with status -12. 08-14 12:21:05.231  2370 15690 E android.media.AudioRecord: Error code -20 when initializing native AudioRecord object. 08-14 12:21:05.231  2370 15690 I MicrophoneInputStream: mic_started com.google.android.apps.gsa.staticplugins.aa.c@db36f94 08-14 12:21:05.231  2370  2370 I MicroDetectionWorker: onReady 08-14 12:21:05.232  2370 16607 W SpeechLevelGenerator: Really low audio levels detected. The audio input may have issues. 08-14 12:21:05.236  2370 15690 I MicrophoneInputStream: mic_close com.google.android.apps.gsa.staticplugins.aa.c@db36f94 08-14 12:21:05.237  2370 16607 I MicroRecognitionRunner: Detection finished 08-14 12:21:05.237  2370 16607 W ErrorReporter: reportError [type: 211, code: 524300]: Error reading from input stream 08-14 12:21:05.237  2370 16607 W ErrorProcessor: onFatalError, processing error from engine(4) 08-14 12:21:05.237  2370 16607 W ErrorProcessor: com.google.android.apps.gsa.shared.speech.b.g: Error reading from input stream 08-14 12:21:05.237  2370 16607 W ErrorProcessor:        at com.google.android.apps.gsa.staticplugins.recognizer.j.a.a(SourceFile:28) 08-14 12:21:05.237  2370 16607 W ErrorProcessor:        at com.google.android.apps.gsa.staticplugins.recognizer.j.b.run(SourceFile:15) 08-14 12:21:05.237  2370 16607 W ErrorProcessor:        at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457) 08-14 12:21:05.237  2370 16607 W ErrorProcessor:        at java.util.concurrent.FutureTask.run(FutureTask.java:266) 08-14 12:21:05.237  2370 16607 W ErrorProcessor:        at com.google.android.apps.gsa.shared.util.concurrent.a.ax.run(SourceFile:14) 08-14 12:21:05.237  2370 16607 W ErrorProcessor:        at com.google.android.apps.gsa.shared.util.concurrent.a.bl.run(SourceFile:4) 08-14 12:21:05.237  2370 16607 W ErrorProcessor:        at com.google.android.apps.gsa.shared.util.concurrent.a.bl.run(SourceFile:4) 08-14 12:21:05.237  2370 16607 W ErrorProcessor:        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162) 08-14 12:21:05.237  2370 16607 W ErrorProcessor:        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636) 08-14 12:21:05.237  2370 16607 W ErrorProcessor:        at java.lang.Thread.run(Thread.java:764) 08-14 12:21:05.237  2370 16607 W ErrorProcessor:        at com.google.android.apps.gsa.shared.util.concurrent.a.ai.run(SourceFile:6) 08-14 12:21:05.237  2370 16607 W ErrorProcessor: Caused by: com.google.android.apps.gsa.shared.exception.GsaIOException: Error code: 393238 | Buffer overflow, no available space. 08-14 12:21:05.237  2370 16607 W ErrorProcessor:        at com.google.android.apps.gsa.speech.audio.Tee.f(SourceFile:103) 08-14 12:21:05.237  2370 16607 W ErrorProcessor:        at com.google.android.apps.gsa.speech.audio.au.read(SourceFile:2) 08-14 12:21:05.237  2370 16607 W ErrorProcessor:        at java.io.InputStream.read(InputStream.java:101) 08-14 12:21:05.237  2370 16607 W ErrorProcessor:        at com.google.android.apps.gsa.speech.audio.ao.run(SourceFile:18) 08-14 12:21:05.237  2370 16607 W ErrorProcessor:        at com.google.android.apps.gsa.speech.audio.an.run(SourceFile:2) 08-14 12:21:05.237  2370 16607 W ErrorProcessor:        ... 9 more 08-14 12:21:05.238  2370 16607 I AudioController: internalShutdown 08-14 12:21:05.238  2370  2717 I MicroRecognitionRunner: Stopping hotword detection. 08-14 12:21:05.240  2370  2370 I MicroDetector: Keeping mic open: false 08-14 12:21:05.240  2370 14823 I DeviceStateChecker: DeviceStateChecker cancelled 08-14 12:21:05.240  2370  2370 I MicroDetectionWorker: #onError(false) 08-14 12:21:10.243  2370  2370 I MicroDetectionWorker: #updateMicroDetector [detectionMode: [mDetectionMode: [1]]] 08-14 12:21:10.243  2370  2370 I MicroDetectionWorker: #startMicroDetector [speakerMode: 0] 08-14 12:21:10.243  2370  2370 I AudioController: Using mInputStreamFactoryBuilder 08-14 12:21:10.244  2370  2370 I MicroDetectionWorker: onReady 08-14 12:21:10.247  2370 14823 I MicroRecognitionRunner: Starting detection. 08-14 12:21:10.248  2370 15690 I MicrophoneInputStream: mic_starting com.google.android.apps.gsa.staticplugins.aa.c@27a17fb 08-14 12:21:10.251  1519 17072 I AudioFlinger: AudioFlinger's thread 0xafb839c0 tid=17072 ready to run 08-14 12:21:10.253  1519 16009 E AudioFlinger: not enough memory for AudioTrack size=131296 08-14 12:21:10.253  1519 16009 D MemoryDealer:   AudioTrack (0xb43992d0, size=4194304) 08-14 12:21:10.253  1519 16009 D MemoryDealer:     0: 0xb4399340 | 0x00000000 | 0x000200E0 | A  08-14 12:21:10.253  1519 16009 D MemoryDealer:     1: 0xb4399360 | 0x000200E0 | 0x000200E0 | A  08-14 12:21:10.253  1519 16009 D MemoryDealer:     2: 0xb43994c0 | 0x000401C0 | 0x000200E0 | A  08-14 12:21:10.253  1519 16009 D MemoryDealer:     3: 0xb427c080 | 0x000602A0 | 0x000200E0 | A  08-14 12:21:10.253  1519 16009 D MemoryDealer:     4: 0xb427c340 | 0x00080380 | 0x000200E0 | A  08-14 12:21:10.253  1519 16009 D MemoryDealer:     5: 0xb427c4c0 | 0x000A0460 | 0x000200E0 | A  08-14 12:21:10.253  1519 16009 D MemoryDealer:     6: 0xb427c640 | 0x000C0540 | 0x000200E0 | A  08-14 12:21:10.253  1519 16009 D MemoryDealer:     7: 0xb427c7f0 | 0x000E0620 | 0x000200E0 | A  08-14 12:21:10.253  1519 16009 D MemoryDealer:     8: 0xb4399630 | 0x00100700 | 0x000200E0 | A  08-14 12:21:10.253  1519 16009 D MemoryDealer:     9: 0xb427ca00 | 0x001207E0 | 0x000200E0 | A  08-14 12:21:10.253  1519 16009 D MemoryDealer:    10: 0xb43998b0 | 0x001408C0 | 0x000200E0 | A  08-14 12:21:10.253  1519 16009 D MemoryDealer:    11: 0xb427cdd0 | 0x001609A0 | 0x000200E0 | A  08-14 12:21:10.253  1519 16009 D MemoryDealer:    12: 0xb427cf00 | 0x00180A80 | 0x000200E0 | A  08-14 12:21:10.253  1519 16009 D MemoryDealer:    13: 0xb28ff080 | 0x001A0B60 | 0x000200E0 | A  08-14 12:21:10.253  1519 16009 D MemoryDealer:    14: 0xb28ff1d0 | 0x001C0C40 | 0x000200E0 | A  08-14 12:21:10.253  1519 16009 D MemoryDealer:    15: 0xb28ff380 | 0x001E0D20 | 0x000200E0 | A  08-14 12:21:10.253  1519 16009 D MemoryDealer:    16: 0xb28ff4d0 | 0x00200E00 | 0x000200E0 | A  08-14 12:21:10.253  1519 16009 D MemoryDealer:    17: 0xb4399ed0 | 0x00220EE0 | 0x000200E0 | A  08-14 12:21:10.253  1519 16009 D MemoryDealer:    18: 0xb4399980 | 0x00240FC0 | 0x000200E0 | A  08-14 12:21:10.253  1519 16009 D MemoryDealer:    19: 0xb43a7020 | 0x002610A0 | 0x000200E0 | A  08-14 12:21:10.253  1519 16009 D MemoryDealer:     08-14 12:21:10.253  1519 16009 E AudioFlinger: createRecordTrack_l() initCheck failed -12; no control block? 08-14 12:21:10.253  2370 15690 E AudioRecord: AudioFlinger could not create record track, status: -12 08-14 12:21:10.256  2370 15690 E AudioRecord-JNI: Error creating AudioRecord instance: initialization check failed with status -12. 08-14 12:21:10.256  2370 15690 E android.media.AudioRecord: Error code -20 when initializing native AudioRecord object. 08-14 12:21:10.256  2370 15690 I MicrophoneInputStream: mic_started com.google.android.apps.gsa.staticplugins.aa.c@27a17fb 08-14 12:21:10.257  2370  2370 I MicroDetectionWorker: onReady 08-14 12:21:10.259  2370 15690 I MicrophoneInputStream: mic_close com.google.android.apps.gsa.staticplugins.aa.c@27a17fb 08-14 12:21:10.260  2370 14823 I MicroRecognitionRunner: Detection finished 08-14 12:21:10.260  2370 14823 W ErrorReporter: reportError [type: 211, code: 524300]: Error reading from input stream 08-14 12:21:10.261  2370  2717 I MicroRecognitionRunner: Stopping hotword detection. 08-14 12:21:10.261  2370 14823 W ErrorProcessor: onFatalError, processing error from engine(4) 08-14 12:21:10.261  2370 14823 W ErrorProcessor: com.google.android.apps.gsa.shared.speech.b.g: Error reading from input stream 08-14 12:21:10.261  2370 14823 W ErrorProcessor:        at com.google.android.apps.gsa.staticplugins.recognizer.j.a.a(SourceFile:28) 08-14 12:21:10.261  2370 14823 W ErrorProcessor:        at com.google.android.apps.gsa.staticplugins.recognizer.j.b.run(SourceFile:15) 08-14 12:21:10.261  2370 14823 W ErrorProcessor:        at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457) 08-14 12:21:10.261  2370 14823 W ErrorProcessor:        at java.util.concurrent.FutureTask.run(FutureTask.java:266) 08-14 12:21:10.261  2370 14823 W ErrorProcessor:        at com.google.android.apps.gsa.shared.util.concurrent.a.ax.run(SourceFile:14) 08-14 12:21:10.261  2370 14823 W ErrorProcessor:        at com.google.android.apps.gsa.shared.util.concurrent.a.bl.run(SourceFile:4) 08-14 12:21:10.261  2370 14823 W ErrorProcessor:        at com.google.android.apps.gsa.shared.util.concurrent.a.bl.run(SourceFile:4) 08-14 12:21:10.261  2370 14823 W ErrorProcessor:        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162) 08-14 12:21:10.261  2370 14823 W ErrorProcessor:        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636) 08-14 12:21:10.261  2370 14823 W ErrorProcessor:        at java.lang.Thread.run(Thread.java:764) 08-14 12:21:10.261  2370 14823 W ErrorProcessor:        at com.google.android.apps.gsa.shared.util.concurrent.a.ai.run(SourceFile:6) 08-14 12:21:10.261  2370 14823 W ErrorProcessor: Caused by: com.google.android.apps.gsa.shared.exception.GsaIOException: Error code: 393238 | Buffer overflow, no available space. 08-14 12:21:10.261  2370 14823 W ErrorProcessor:        at com.google.android.apps.gsa.speech.audio.Tee.f(SourceFile:103) 08-14 12:21:10.261  2370 14823 W ErrorProcessor:        at com.google.android.apps.gsa.speech.audio.au.read(SourceFile:2) 08-14 12:21:10.261  2370 14823 W ErrorProcessor:        at java.io.InputStream.read(InputStream.java:101) 08-14 12:21:10.261  2370 14823 W ErrorProcessor:        at com.google.android.apps.gsa.speech.audio.ao.run(SourceFile:18) 08-14 12:21:10.261  2370 14823 W ErrorProcessor:        at com.google.android.apps.gsa.speech.audio.an.run(SourceFile:2) 08-14 12:21:10.261  2370 14823 W ErrorProcessor:        ... 9 more 08-14 12:21:10.261  2370 14823 I AudioController: internalShutdown 08-14 12:21:10.262  2370  2370 I MicroDetector: Keeping mic open: false 08-14 12:21:10.262  2370  2370 I MicroDetectionWorker: #onError(false) 08-14 12:21:10.262  2370 16607 I DeviceStateChecker: DeviceStateChecker cancelled 08-14 12:21:10.427  1691  1706 W ActivityManager: Activity destroy timeout for ActivityRecord{eb01f9d u0 com.wix.android.dev/com.wixoneapp.MainActivity t93 f} 08-14 12:21:10.440  1422  1448 D hwcomposer: hw_composer sent 16 syncs in 123s 08-14 12:21:15.271  2370  2370 I MicroDetectionWorker: #updateMicroDetector [detectionMode: [mDetectionMode: [1]]] 08-14 12:21:15.271  2370  2370 I MicroDetectionWorker: #startMicroDetector [speakerMode: 0] 08-14 12:21:15.272  2370  2370 I AudioController: Using mInputStreamFactoryBuilder 08-14 12:21:15.274  2370  2370 I MicroDetectionWorker: onReady 08-14 12:21:15.277  2370 16608 I MicroRecognitionRunner: Starting detection. 08-14 12:21:15.278  2370 15690 I MicrophoneInputStream: mic_starting com.google.android.apps.gsa.staticplugins.aa.c@d7376a9 08-14 12:21:15.281  1519 17076 I AudioFlinger: AudioFlinger's thread 0xafa29e00 tid=17076 ready to run 08-14 12:21:15.283  1519 23309 E AudioFlinger: not enough memory for AudioTrack size=131296 08-14 12:21:15.283  1519 23309 D MemoryDealer:   AudioTrack (0xb43992d0, size=4194304) 08-14 12:21:15.283  1519 23309 D MemoryDealer:     0: 0xb4399340 | 0x00000000 | 0x000200E0 | A  08-14 12:21:15.283  1519 23309 D MemoryDealer:     1: 0xb4399360 | 0x000200E0 | 0x000200E0 | A  08-14 12:21:15.283  1519 23309 D MemoryDealer:     2: 0xb43994c0 | 0x000401C0 | 0x000200E0 | A  08-14 12:21:15.283  1519 23309 D MemoryDealer:     3: 0xb427c080 | 0x000602A0 | 0x000200E0 | A  08-14 12:21:15.283  1519 23309 D MemoryDealer:     4: 0xb427c340 | 0x00080380 | 0x000200E0 | A  08-14 12:21:15.283  1519 23309 D MemoryDealer:     5: 0xb427c4c0 | 0x000A0460 | 0x000200E0 | A  08-14 12:21:15.283  1519 23309 D MemoryDealer:     6: 0xb427c640 | 0x000C0540 | 0x000200E0 | A  08-14 12:21:15.283  1519 23309 D MemoryDealer:     7: 0xb427c7f0 | 0x000E0620 | 0x000200E0 | A  08-14 12:21:15.283  1519 23309 D MemoryDealer:     8: 0xb4399630 | 0x00100700 | 0x000200E0 | A  08-14 12:21:15.283  1519 23309 D MemoryDealer:     9: 0xb427ca00 | 0x001207E0 | 0x000200E0 | A  08-14 12:21:15.283  1519 23309 D MemoryDealer:    10: 0xb43998b0 | 0x001408C0 | 0x000200E0 | A  08-14 12:21:15.283  1519 23309 D MemoryDealer:    11: 0xb427cdd0 | 0x001609A0 | 0x000200E0 | A  08-14 12:21:15.283  1519 23309 D MemoryDealer:    12: 0xb427cf00 | 0x00180A80 | 0x000200E0 | A  08-14 12:21:15.283  1519 23309 D MemoryDealer:    13: 0xb28ff080 | 0x001A0B60 | 0x000200E0 | A  08-14 12:21:15.283  1519 23309 D MemoryDealer:    14: 0xb28ff1d0 | 0x001C0C40 | 0x000200E0 | A  08-14 12:21:15.283  1519 23309 D MemoryDealer:    15: 0xb28ff380 | 0x001E0D20 | 0x000200E0 | A  08-14 12:21:15.283  1519 23309 D MemoryDealer:    16: 0xb28ff4d0 | 0x00200E00 | 0x000200E0 | A  08-14 12:21:15.283  1519 23309 D MemoryDealer:    17: 0xb4399ed0 | 0x00220EE0 | 0x000200E0 | A  08-14 12:21:15.283  1519 23309 D MemoryDealer:    18: 0xb4399980 | 0x00240FC0 | 0x000200E0 | A  08-14 12:21:15.283  1519 23309 D MemoryDealer:    19: 0xb43a7020 | 0x002610A0 | 0x000200E0 | A  08-14 12:21:15.283  1519 23309 D MemoryDealer:     08-14 12:21:15.283  1519 23309 E AudioFlinger: createRecordTrack_l() initCheck failed -12; no control block? 08-14 12:21:15.284  2370 15690 E AudioRecord: AudioFlinger could not create record track, status: -12 08-14 12:21:15.287  2370 15690 E AudioRecord-JNI: Error creating AudioRecord instance: initialization check failed with status -12. 08-14 12:21:15.288  2370 15690 E android.media.AudioRecord: Error code -20 when initializing native AudioRecord object. 08-14 12:21:15.288  2370 15690 I MicrophoneInputStream: mic_started com.google.android.apps.gsa.staticplugins.aa.c@d7376a9 08-14 12:21:15.289  2370 15690 E ActivityThread: Failed to find provider info for com.google.android.apps.gsa.testing.ui.audio.recorded 08-14 12:21:15.290  2370  2370 I MicroDetectionWorker: onReady 08-14 12:21:15.294  2370 15690 I MicrophoneInputStream: mic_close com.google.android.apps.gsa.staticplugins.aa.c@d7376a9 08-14 12:21:15.295  2370 16608 I MicroRecognitionRunner: Detection finished 08-14 12:21:15.295  2370 16608 W ErrorReporter: reportError [type: 211, code: 524300]: Error reading from input stream 08-14 12:21:15.295  2370  2717 I MicroRecognitionRunner: Stopping hotword detection. 08-14 12:21:15.295  2370 16608 W ErrorProcessor: onFatalError, processing error from engine(4) 08-14 12:21:15.295  2370 16608 W ErrorProcessor: com.google.android.apps.gsa.shared.speech.b.g: Error reading from input stream 08-14 12:21:15.295  2370 16608 W ErrorProcessor:        at com.google.android.apps.gsa.staticplugins.recognizer.j.a.a(SourceFile:28) 08-14 12:21:15.295  2370 16608 W ErrorProcessor:        at com.google.android.apps.gsa.staticplugins.recognizer.j.b.run(SourceFile:15) 08-14 12:21:15.295  2370 16608 W ErrorProcessor:        at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457) 08-14 12:21:15.295  2370 16608 W ErrorProcessor:        at java.util.concurrent.FutureTask.run(FutureTask.java:266) 08-14 12:21:15.295  2370 16608 W ErrorProcessor:        at com.google.android.apps.gsa.shared.util.concurrent.a.ax.run(SourceFile:14) 08-14 12:21:15.295  2370 16608 W ErrorProcessor:        at com.google.android.apps.gsa.shared.util.concurrent.a.bl.run(SourceFile:4) 08-14 12:21:15.295  2370 16608 W ErrorProcessor:        at com.google.android.apps.gsa.shared.util.concurrent.a.bl.run(SourceFile:4) 08-14 12:21:15.295  2370 16608 W ErrorProcessor:        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162) 08-14 12:21:15.295  2370 16608 W ErrorProcessor:        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636) 08-14 12:21:15.295  2370 16608 W ErrorProcessor:        at java.lang.Thread.run(Thread.java:764) 08-14 12:21:15.295  2370 16608 W ErrorProcessor:        at com.google.android.apps.gsa.shared.util.concurrent.a.ai.run(SourceFile:6) 08-14 12:21:15.295  2370 16608 W ErrorProcessor: Caused by: com.google.android.apps.gsa.shared.exception.GsaIOException: Error code: 393238 | Buffer overflow, no available space. 08-14 12:21:15.295  2370 16608 W ErrorProcessor:        at com.google.android.apps.gsa.speech.audio.Tee.f(SourceFile:103) 08-14 12:21:15.295  2370 16608 W ErrorProcessor:        at com.google.android.apps.gsa.speech.audio.au.read(SourceFile:2) 08-14 12:21:15.295  2370 16608 W ErrorProcessor:        at java.io.InputStream.read(InputStream.java:101) 08-14 12:21:15.295  2370 16608 W ErrorProcessor:        at com.google.android.apps.gsa.speech.audio.ao.run(SourceFile:18) 08-14 12:21:15.295  2370 16608 W ErrorProcessor:        at com.google.android.apps.gsa.speech.audio.an.run(SourceFile:2) 08-14 12:21:15.295  2370 16608 W ErrorProcessor:        ... 9 more 08-14 12:21:15.296  2370 16608 I AudioController: internalShutdown 08-14 12:21:15.297  2370  2370 I MicroDetector: Keeping mic open: false 08-14 12:21:15.297  2370  2370 I MicroDetectionWorker: #onError(false) 08-14 12:21:15.297  2370 16607 I DeviceStateChecker: DeviceStateChecker cancelled 08-14 12:21:15.305  1691  1705 E memtrack: Couldn't load memtrack module 08-14 12:21:15.305  1691  1705 W android.os.Debug: failed to get memory consumption info: -1 08-14 12:21:20.303  2370  2370 I MicroDetectionWorker: #updateMicroDetector [detectionMode: [mDetectionMode: [1]]] 08-14 12:21:20.303  2370  2370 I MicroDetectionWorker: #startMicroDetector [speakerMode: 0] 08-14 12:21:20.304  2370  2370 I AudioController: Using mInputStreamFactoryBuilder 08-14 12:21:20.307  2370  2370 I MicroDetectionWorker: onReady 08-14 12:21:20.307  2370 16608 I MicroRecognitionRunner: Starting detection. 08-14 12:21:20.308  2370 15690 I MicrophoneInputStream: mic_starting com.google.android.apps.gsa.staticplugins.aa.c@ab305c7 08-14 12:21:20.311  1519 17080 I AudioFlinger: AudioFlinger's thread 0xafa29640 tid=17080 ready to run 08-14 12:21:20.313  1519 23309 E AudioFlinger: not enough memory for AudioTrack size=131296 08-14 12:21:20.313  1519 23309 D MemoryDealer:   AudioTrack (0xb43992d0, size=4194304) 08-14 12:21:20.313  1519 23309 D MemoryDealer:     0: 0xb4399340 | 0x00000000 | 0x000200E0 | A  08-14 12:21:20.313  1519 23309 D MemoryDealer:     1: 0xb4399360 | 0x000200E0 | 0x000200E0 | A  08-14 12:21:20.313  1519 23309 D MemoryDealer:     2: 0xb43994c0 | 0x000401C0 | 0x000200E0 | A  08-14 12:21:20.313  1519 23309 D MemoryDealer:     3: 0xb427c080 | 0x000602A0 | 0x000200E0 | A  08-14 12:21:20.313  1519 23309 D MemoryDealer:     4: 0xb427c340 | 0x00080380 | 0x000200E0 | A  08-14 12:21:20.313  1519 23309 D MemoryDealer:     5: 0xb427c4c0 | 0x000A0460 | 0x000200E0 | A  08-14 12:21:20.313  1519 23309 D MemoryDealer:     6: 0xb427c640 | 0x000C0540 | 0x000200E0 | A  08-14 12:21:20.313  1519 23309 D MemoryDealer:     7: 0xb427c7f0 | 0x000E0620 | 0x000200E0 | A  08-14 12:21:20.313  1519 23309 D MemoryDealer:     8: 0xb4399630 | 0x00100700 | 0x000200E0 | A  08-14 12:21:20.313  1519 23309 D MemoryDealer:     9: 0xb427ca00 | 0x001207E0 | 0x000200E0 | A  08-14 12:21:20.313  1519 23309 D MemoryDealer:    10: 0xb43998b0 | 0x001408C0 | 0x000200E0 | A  08-14 12:21:20.313  1519 23309 D MemoryDealer:    11: 0xb427cdd0 | 0x001609A0 | 0x000200E0 | A  08-14 12:21:20.313  1519 23309 D MemoryDealer:    12: 0xb427cf00 | 0x00180A80 | 0x000200E0 | A  08-14 12:21:20.313  1519 23309 D MemoryDealer:    13: 0xb28ff080 | 0x001A0B60 | 0x000200E0 | A  08-14 12:21:20.313  1519 23309 D MemoryDealer:    14: 0xb28ff1d0 | 0x001C0C40 | 0x000200E0 | A  08-14 12:21:20.313  1519 23309 D MemoryDealer:    15: 0xb28ff380 | 0x001E0D20 | 0x000200E0 | A  08-14 12:21:20.313  1519 23309 D MemoryDealer:    16: 0xb28ff4d0 | 0x00200E00 | 0x000200E0 | A  08-14 12:21:20.313  1519 23309 D MemoryDealer:    17: 0xb4399ed0 | 0x00220EE0 | 0x000200E0 | A  08-14 12:21:20.313  1519 23309 D MemoryDealer:    18: 0xb4399980 | 0x00240FC0 | 0x000200E0 | A  08-14 12:21:20.313  1519 23309 D MemoryDealer:    19: 0xb43a7020 | 0x002610A0 | 0x000200E0 | A  08-14 12:21:20.313  1519 23309 D MemoryDealer:     08-14 12:21:20.313  1519 23309 E AudioFlinger: createRecordTrack_l() initCheck failed -12; no control block? 08-14 12:21:20.313  2370 15690 E AudioRecord: AudioFlinger could not create record track, status: -12 08-14 12:21:20.315  2370 15690 E AudioRecord-JNI: Error creating AudioRecord instance: initialization check failed with status -12. 08-14 12:21:20.316  2370 15690 E android.media.AudioRecord: Error code -20 when initializing native AudioRecord object. 08-14 12:21:20.316  2370 15690 I MicrophoneInputStream: mic_started com.google.android.apps.gsa.staticplugins.aa.c@ab305c7 08-14 12:21:20.317  2370  2370 I MicroDetectionWorker: onReady 08-14 12:21:20.319  2370 15690 I MicrophoneInputStream: mic_close com.google.android.apps.gsa.staticplugins.aa.c@ab305c7 08-14 12:21:20.320  2370 16608 I MicroRecognitionRunner: Detection finished 08-14 12:21:20.320  2370 16608 W ErrorReporter: reportError [type: 211, code: 524300]: Error reading from input stream 08-14 12:21:20.321  2370  2717 I MicroRecognitionRunner: Stopping hotword detection. 08-14 12:21:20.321  2370 16608 W ErrorProcessor: onFatalError, processing error from engine(4) 08-14 12:21:20.321  2370 16608 W ErrorProcessor: com.google.android.apps.gsa.shared.speech.b.g: Error reading from input stream 08-14 12:21:20.321  2370 16608 W ErrorProcessor:        at com.google.android.apps.gsa.staticplugins.recognizer.j.a.a(SourceFile:28) 08-14 12:21:20.321  2370 16608 W ErrorProcessor:        at com.google.android.apps.gsa.staticplugins.recognizer.j.b.run(SourceFile:15) 08-14 12:21:20.321  2370 16608 W ErrorProcessor:        at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457) 08-14 12:21:20.321  2370 16608 W ErrorProcessor:        at java.util.concurrent.FutureTask.run(FutureTask.java:266) 08-14 12:21:20.321  2370 16608 W ErrorProcessor:        at com.google.android.apps.gsa.shared.util.concurrent.a.ax.run(SourceFile:14) 08-14 12:21:20.321  2370 16608 W ErrorProcessor:        at com.google.android.apps.gsa.shared.util.concurrent.a.bl.run(SourceFile:4) 08-14 12:21:20.321  2370 16608 W ErrorProcessor:        at com.google.android.apps.gsa.shared.util.concurrent.a.bl.run(SourceFile:4) 08-14 12:21:20.321  2370 16608 W ErrorProcessor:        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162) 08-14 12:21:20.321  2370 16608 W ErrorProcessor:        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636) 08-14 12:21:20.321  2370 16608 W ErrorProcessor:        at java.lang.Thread.run(Thread.java:764) 08-14 12:21:20.321  2370 16608 W ErrorProcessor:        at com.google.android.apps.gsa.shared.util.concurrent.a.ai.run(SourceFile:6) 08-14 12:21:20.321  2370 16608 W ErrorProcessor: Caused by: com.google.android.apps.gsa.shared.exception.GsaIOException: Error code: 393238 | Buffer overflow, no available space. 08-14 12:21:20.321  2370 16608 W ErrorProcessor:        at com.google.android.apps.gsa.speech.audio.Tee.f(SourceFile:103) 08-14 12:21:20.321  2370 16608 W ErrorProcessor:        at com.google.android.apps.gsa.speech.audio.au.read(SourceFile:2) 08-14 12:21:20.321  2370 16608 W ErrorProcessor:        at java.io.InputStream.read(InputStream.java:101) 08-14 12:21:20.321  2370 16608 W ErrorProcessor:        at com.google.android.apps.gsa.speech.audio.ao.run(SourceFile:18) 08-14 12:21:20.321  2370 16608 W ErrorProcessor:        at com.google.android.apps.gsa.speech.audio.an.run(SourceFile:2) 08-14 12:21:20.321  2370 16608 W ErrorProcessor:        ... 9 more 08-14 12:21:20.321  2370 16608 I AudioController: internalShutdown 08-14 12:21:20.323  2370  2370 I MicroDetector: Keeping mic open: false 08-14 12:21:20.323  2370  2370 I MicroDetectionWorker: #onError(false) 08-14 12:21:20.323  2370 16607 I DeviceStateChecker: DeviceStateChecker cancelled 08-14 12:21:25.325  2370  2370 I MicroDetectionWorker: #updateMicroDetector [detectionMode: [mDetectionMode: [1]]] 08-14 12:21:25.325  2370  2370 I MicroDetectionWorker: #startMicroDetector [speakerMode: 0] 08-14 12:21:25.327  2370  2370 I AudioController: Using mInputStreamFactoryBuilder 08-14 12:21:25.328  2370  2370 I MicroDetectionWorker: onReady 08-14 12:21:25.331  2370 16608 I MicroRecognitionRunner: Starting detection. 08-14 12:21:25.332  2370 15690 I MicrophoneInputStream: mic_starting com.google.android.apps.gsa.staticplugins.aa.c@18ba0d5 08-14 12:21:25.336  1519 17085 I AudioFlinger: AudioFlinger's thread 0xafb83bc0 tid=17085 ready to run 08-14 12:21:25.338  1519 23309 E AudioFlinger: not enough memory for AudioTrack size=131296 08-14 12:21:25.338  1519 23309 D MemoryDealer:   AudioTrack (0xb43992d0, size=4194304) 08-14 12:21:25.338  1519 23309 D MemoryDealer:     0: 0xb4399340 | 0x00000000 | 0x000200E0 | A  08-14 12:21:25.338  1519 23309 D MemoryDealer:     1: 0xb4399360 | 0x000200E0 | 0x000200E0 | A  08-14 12:21:25.338  1519 23309 D MemoryDealer:     2: 0xb43994c0 | 0x000401C0 | 0x000200E0 | A  08-14 12:21:25.338  1519 23309 D MemoryDealer:     3: 0xb427c080 | 0x000602A0 | 0x000200E0 | A  08-14 12:21:25.338  1519 23309 D MemoryDealer:     4: 0xb427c340 | 0x00080380 | 0x000200E0 | A  08-14 12:21:25.338  1519 23309 D MemoryDealer:     5: 0xb427c4c0 | 0x000A0460 | 0x000200E0 | A  08-14 12:21:25.338  1519 23309 D MemoryDealer:     6: 0xb427c640 | 0x000C0540 | 0x000200E0 | A  08-14 12:21:25.338  1519 23309 D MemoryDealer:     7: 0xb427c7f0 | 0x000E0620 | 0x000200E0 | A  08-14 12:21:25.338  1519 23309 D MemoryDealer:     8: 0xb4399630 | 0x00100700 | 0x000200E0 | A  08-14 12:21:25.338  1519 23309 D MemoryDealer:     9: 0xb427ca00 | 0x001207E0 | 0x000200E0 | A  08-14 12:21:25.338  1519 23309 D MemoryDealer:    10: 0xb43998b0 | 0x001408C0 | 0x000200E0 | A  08-14 12:21:25.338  1519 23309 D MemoryDealer:    11: 0xb427cdd0 | 0x001609A0 | 0x000200E0 | A  08-14 12:21:25.338  1519 23309 D MemoryDealer:    12: 0xb427cf00 | 0x00180A80 | 0x000200E0 | A  08-14 12:21:25.338  1519 23309 D MemoryDealer:    13: 0xb28ff080 | 0x001A0B60 | 0x000200E0 | A  08-14 12:21:25.338  1519 23309 D MemoryDealer:    14: 0xb28ff1d0 | 0x001C0C40 | 0x000200E0 | A  08-14 12:21:25.338  1519 23309 D MemoryDealer:    15: 0xb28ff380 | 0x001E0D20 | 0x000200E0 | A  08-14 12:21:25.338  1519 23309 D MemoryDealer:    16: 0xb28ff4d0 | 0x00200E00 | 0x000200E0 | A  08-14 12:21:25.338  1519 23309 D MemoryDealer:    17: 0xb4399ed0 | 0x00220EE0 | 0x000200E0 | A  08-14 12:21:25.338  1519 23309 D MemoryDealer:    18: 0xb4399980 | 0x00240FC0 | 0x000200E0 | A  08-14 12:21:25.338  1519 23309 D MemoryDealer:    19: 0xb43a7020 | 0x002610A0 | 0x000200E0 | A  08-14 12:21:25.338  1519 23309 D MemoryDealer:     08-14 12:21:25.338  1519 23309 E AudioFlinger: createRecordTrack_l() initCheck failed -12; no control block? 08-14 12:21:25.338  2370 15690 E AudioRecord: AudioFlinger could not create record track, status: -12 08-14 12:21:25.339  2370 15690 E AudioRecord-JNI: Error creating AudioRecord instance: initialization check failed with status -12. 08-14 12:21:25.339  2370 15690 E android.media.AudioRecord: Error code -20 when initializing native AudioRecord object. 08-14 12:21:25.339  2370 15690 I MicrophoneInputStream: mic_started com.google.android.apps.gsa.staticplugins.aa.c@18ba0d5 08-14 12:21:25.340  2370  2370 I MicroDetectionWorker: onReady 08-14 12:21:25.348  2370 15690 I MicrophoneInputStream: mic_close com.google.android.apps.gsa.staticplugins.aa.c@18ba0d5 08-14 12:21:25.349  2370 16608 I MicroRecognitionRunner: Detection finished 08-14 12:21:25.349  2370 16608 W ErrorReporter: reportError [type: 211, code: 524300]: Error reading from input stream 08-14 12:21:25.349  2370  2717 I MicroRecognitionRunner: Stopping hotword detection. 08-14 12:21:25.349  2370 16608 W ErrorProcessor: onFatalError, processing error from engine(4) 08-14 12:21:25.349  2370 16608 W ErrorProcessor: com.google.android.apps.gsa.shared.speech.b.g: Error reading from input stream 08-14 12:21:25.349  2370 16608 W ErrorProcessor:        at com.google.android.apps.gsa.staticplugins.recognizer.j.a.a(SourceFile:28) 08-14 12:21:25.349  2370 16608 W ErrorProcessor:        at com.google.android.apps.gsa.staticplugins.recognizer.j.b.run(SourceFile:15) 08-14 12:21:25.349  2370 16608 W ErrorProcessor:        at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457) 08-14 12:21:25.349  2370 16608 W ErrorProcessor:        at java.util.concurrent.FutureTask.run(FutureTask.java:266) 08-14 12:21:25.349  2370 16608 W ErrorProcessor:        at com.google.android.apps.gsa.shared.util.concurrent.a.ax.run(SourceFile:14) 08-14 12:21:25.349  2370 16608 W ErrorProcessor:        at com.google.android.apps.gsa.shared.util.concurrent.a.bl.run(SourceFile:4) 08-14 12:21:25.349  2370 16608 W ErrorProcessor:        at com.google.android.apps.gsa.shared.util.concurrent.a.bl.run(SourceFile:4) 08-14 12:21:25.349  2370 16608 W ErrorProcessor:        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162) 08-14 12:21:25.349  2370 16608 W ErrorProcessor:        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636) 08-14 12:21:25.349  2370 16608 W ErrorProcessor:        at java.lang.Thread.run(Thread.java:764) 08-14 12:21:25.349  2370 16608 W ErrorProcessor:        at com.google.android.apps.gsa.shared.util.concurrent.a.ai.run(SourceFile:6) 08-14 12:21:25.349  2370 16608 W ErrorProcessor: Caused by: com.google.android.apps.gsa.shared.exception.GsaIOException: Error code: 393238 | Buffer overflow, no available space. 08-14 12:21:25.349  2370 16608 W ErrorProcessor:        at com.google.android.apps.gsa.speech.audio.Tee.f(SourceFile:103) 08-14 12:21:25.349  2370 16608 W ErrorProcessor:        at com.google.android.apps.gsa.speech.audio.au.read(SourceFile:2) 08-14 12:21:25.349  2370 16608 W ErrorProcessor:        at java.io.InputStream.read(InputStream.java:101) 08-14 12:21:25.349  2370 16608 W ErrorProcessor:        at com.google.android.apps.gsa.speech.audio.ao.run(SourceFile:18) 08-14 12:21:25.349  2370 16608 W ErrorProcessor:        at com.google.android.apps.gsa.speech.audio.an.run(SourceFile:2) 08-14 12:21:25.349  2370 16608 W ErrorProcessor:        ... 9 more 08-14 12:21:25.349  2370 16608 I AudioController: internalShutdown 08-14 12:21:25.351  2370  2370 I MicroDetector: Keeping mic open: false 08-14 12:21:25.351  2370  2370 I MicroDetectionWorker: #onError(false) 08-14 12:21:25.352  2370 16607 I DeviceStateChecker: DeviceStateChecker cancelled 08-14 12:21:30.236  2216  2688 W GCoreFlp: No location to return for getLastLocation() 08-14 12:21:30.358  2370  2370 I MicroDetectionWorker: #updateMicroDetector [detectionMode: [mDetectionMode: [1]]] 08-14 12:21:30.358  2370  2370 I MicroDetectionWorker: #startMicroDetector [speakerMode: 0] 08-14 12:21:30.358  2370  2370 I AudioController: Using mInputStreamFactoryBuilder 08-14 12:21:30.361  2370  2370 I MicroDetectionWorker: onReady 08-14 12:21:30.362  2370 16607 I MicroRecognitionRunner: Starting detection. 08-14 12:21:30.363  2370 15690 I MicrophoneInputStream: mic_starting com.google.android.apps.gsa.staticplugins.aa.c@bedbf53 08-14 12:21:30.365  1519 17091 I AudioFlinger: AudioFlinger's thread 0xafa29e40 tid=17091 ready to run 08-14 12:21:30.367  1519 23309 E AudioFlinger: not enough memory for AudioTrack size=131296 08-14 12:21:30.367  1519 23309 D MemoryDealer:   AudioTrack (0xb43992d0, size=4194304) 08-14 12:21:30.367  1519 23309 D MemoryDealer:     0: 0xb4399340 | 0x00000000 | 0x000200E0 | A  08-14 12:21:30.367  1519 23309 D MemoryDealer:     1: 0xb4399360 | 0x000200E0 | 0x000200E0 | A  08-14 12:21:30.367  1519 23309 D MemoryDealer:     2: 0xb43994c0 | 0x000401C0 | 0x000200E0 | A  08-14 12:21:30.367  1519 23309 D MemoryDealer:     3: 0xb427c080 | 0x000602A0 | 0x000200E0 | A  08-14 12:21:30.367  1519 23309 D MemoryDealer:     4: 0xb427c340 | 0x00080380 | 0x000200E0 | A  08-14 12:21:30.367  1519 23309 D MemoryDealer:     5: 0xb427c4c0 | 0x000A0460 | 0x000200E0 | A  08-14 12:21:30.367  1519 23309 D MemoryDealer:     6: 0xb427c640 | 0x000C0540 | 0x000200E0 | A  08-14 12:21:30.367  1519 23309 D MemoryDealer:     7: 0xb427c7f0 | 0x000E0620 | 0x000200E0 | A  08-14 12:21:30.367  1519 23309 D MemoryDealer:     8: 0xb4399630 | 0x00100700 | 0x000200E0 | A  08-14 12:21:30.367  1519 23309 D MemoryDealer:     9: 0xb427ca00 | 0x001207E0 | 0x000200E0 | A  08-14 12:21:30.367  1519 23309 D MemoryDealer:    10: 0xb43998b0 | 0x001408C0 | 0x000200E0 | A  08-14 12:21:30.367  1519 23309 D MemoryDealer:    11: 0xb427cdd0 | 0x001609A0 | 0x000200E0 | A  08-14 12:21:30.367  1519 23309 D MemoryDealer:    12: 0xb427cf00 | 0x00180A80 | 0x000200E0 | A  08-14 12:21:30.367  1519 23309 D MemoryDealer:    13: 0xb28ff080 | 0x001A0B60 | 0x000200E0 | A  08-14 12:21:30.367  1519 23309 D MemoryDealer:    14: 0xb28ff1d0 | 0x001C0C40 | 0x000200E0 | A  08-14 12:21:30.367  1519 23309 D MemoryDealer:    15: 0xb28ff380 | 0x001E0D20 | 0x000200E0 | A  08-14 12:21:30.367  1519 23309 D MemoryDealer:    16: 0xb28ff4d0 | 0x00200E00 | 0x000200E0 | A  08-14 12:21:30.367  1519 23309 D MemoryDealer:    17: 0xb4399ed0 | 0x00220EE0 | 0x000200E0 | A  08-14 12:21:30.367  1519 23309 D MemoryDealer:    18: 0xb4399980 | 0x00240FC0 | 0x000200E0 | A  08-14 12:21:30.367  1519 23309 D MemoryDealer:    19: 0xb43a7020 | 0x002610A0 | 0x000200E0 | A  08-14 12:21:30.367  1519 23309 D MemoryDealer:     08-14 12:21:30.367  1519 23309 E AudioFlinger: createRecordTrack_l() initCheck failed -12; no control block? 08-14 12:21:30.367  2370 15690 E AudioRecord: AudioFlinger could not create record track, status: -12 08-14 12:21:30.369  2370 15690 E AudioRecord-JNI: Error creating AudioRecord instance: initialization check failed with status -12. 08-14 12:21:30.370  2370 15690 E android.media.AudioRecord: Error code -20 when initializing native AudioRecord object. 08-14 12:21:30.370  2370 15690 I MicrophoneInputStream: mic_started com.google.android.apps.gsa.staticplugins.aa.c@bedbf53 08-14 12:21:30.373  2370  2370 I MicroDetectionWorker: onReady 08-14 12:21:30.377  2370 15690 I MicrophoneInputStream: mic_close com.google.android.apps.gsa.staticplugins.aa.c@bedbf53 08-14 12:21:30.377  2370 16607 I MicroRecognitionRunner: Detection finished 08-14 12:21:30.377  2370 16607 W ErrorReporter: reportError [type: 211, code: 524300]: Error reading from input stream 08-14 12:21:30.378  2370  2717 I MicroRecognitionRunner: Stopping hotword detection. 08-14 12:21:30.378  2370 16607 W ErrorProcessor: onFatalError, processing error from engine(4) 08-14 12:21:30.378  2370 16607 W ErrorProcessor: com.google.android.apps.gsa.shared.speech.b.g: Error reading from input stream 08-14 12:21:30.378  2370 16607 W ErrorProcessor:        at com.google.android.apps.gsa.staticplugins.recognizer.j.a.a(SourceFile:28) 08-14 12:21:30.378  2370 16607 W ErrorProcessor:        at com.google.android.apps.gsa.staticplugins.recognizer.j.b.run(SourceFile:15) 08-14 12:21:30.378  2370 16607 W ErrorProcessor:        at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457) 08-14 12:21:30.378  2370 16607 W ErrorProcessor:        at java.util.concurrent.FutureTask.run(FutureTask.java:266) 08-14 12:21:30.378  2370 16607 W ErrorProcessor:        at com.google.android.apps.gsa.shared.util.concurrent.a.ax.run(SourceFile:14) 08-14 12:21:30.378  2370 16607 W ErrorProcessor:        at com.google.android.apps.gsa.shared.util.concurrent.a.bl.run(SourceFile:4) 08-14 12:21:30.378  2370 16607 W ErrorProcessor:        at com.google.android.apps.gsa.shared.util.concurrent.a.bl.run(SourceFile:4) 08-14 12:21:30.378  2370 16607 W ErrorProcessor:        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162) 08-14 12:21:30.378  2370 16607 W ErrorProcessor:        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636) 08-14 12:21:30.378  2370 16607 W ErrorProcessor:        at java.lang.Thread.run(Thread.java:764) 08-14 12:21:30.378  2370 16607 W ErrorProcessor:        at com.google.android.apps.gsa.shared.util.concurrent.a.ai.run(SourceFile:6) 08-14 12:21:30.378  2370 16607 W ErrorProcessor: Caused by: com.google.android.apps.gsa.shared.exception.GsaIOException: Error code: 393238 | Buffer overflow, no available space. 08-14 12:21:30.378  2370 16607 W ErrorProcessor:        at com.google.android.apps.gsa.speech.audio.Tee.f(SourceFile:103) 08-14 12:21:30.378  2370 16607 W ErrorProcessor:        at com.google.android.apps.gsa.speech.audio.au.read(SourceFile:2) 08-14 12:21:30.378  2370 16607 W ErrorProcessor:        at java.io.InputStream.read(InputStream.java:101) 08-14 12:21:30.378  2370 16607 W ErrorProcessor:        at com.google.android.apps.gsa.speech.audio.ao.run(SourceFile:18) 08-14 12:21:30.378  2370 16607 W ErrorProcessor:        at com.google.android.apps.gsa.speech.audio.an.run(SourceFile:2) 08-14 12:21:30.378  2370 16607 W ErrorProcessor:        ... 9 more 08-14 12:21:30.378  2370 16607 I AudioController: internalShutdown 08-14 12:21:30.379  2370  2370 I MicroDetector: Keeping mic open: false 08-14 12:21:30.379  2370  2370 I MicroDetectionWorker: #onError(false) 08-14 12:21:30.380  2370 14823 I DeviceStateChecker: DeviceStateChecker cancelled 08-14 12:21:35.239  1691  1705 E memtrack: Couldn't load memtrack module 08-14 12:21:35.239  1691  1705 W android.os.Debug: failed to get memory consumption info: -1 08-14 12:21:35.258  1691  1705 E memtrack: Couldn't load memtrack module 08-14 12:21:35.258  1691  1705 W android.os.Debug: failed to get memory consumption info: -1 08-14 12:21:35.267  1691  1705 E memtrack: Couldn't load memtrack module 08-14 12:21:35.267  1691  1705 W android.os.Debug: failed to get memory consumption info: -1 08-14 12:21:35.380  2370  2370 I MicroDetectionWorker: #updateMicroDetector [detectionMode: [mDetectionMode: [1]]] 08-14 12:21:35.380  2370  2370 I MicroDetectionWorker: #startMicroDetector [speakerMode: 0] 08-14 12:21:35.381  2370  2370 I AudioController: Using mInputStreamFactoryBuilder 08-14 12:21:35.384  2370  2370 I MicroDetectionWorker: onReady 08-14 12:21:35.386  2370 16608 I MicroRecognitionRunner: Starting detection. 08-14 12:21:35.389  2370 15690 I MicrophoneInputStream: mic_starting com.google.android.apps.gsa.staticplugins.aa.c@96a54c1 08-14 12:21:35.394  1519 17095 I AudioFlinger: AudioFlinger's thread 0xafb83440 tid=17095 ready to run 08-14 12:21:35.397  1519 23309 E AudioFlinger: not enough memory for AudioTrack size=131296 08-14 12:21:35.397  1519 23309 D MemoryDealer:   AudioTrack (0xb43992d0, size=4194304) 08-14 12:21:35.397  1519 23309 D MemoryDealer:     0: 0xb4399340 | 0x00000000 | 0x000200E0 | A  08-14 12:21:35.397  1519 23309 D MemoryDealer:     1: 0xb4399360 | 0x000200E0 | 0x000200E0 | A  08-14 12:21:35.397  1519 23309 D MemoryDealer:     2: 0xb43994c0 | 0x000401C0 | 0x000200E0 | A  08-14 12:21:35.397  1519 23309 D MemoryDealer:     3: 0xb427c080 | 0x000602A0 | 0x000200E0 | A  08-14 12:21:35.397  1519 23309 D MemoryDealer:     4: 0xb427c340 | 0x00080380 | 0x000200E0 | A  08-14 12:21:35.397  1519 23309 D MemoryDealer:     5: 0xb427c4c0 | 0x000A0460 | 0x000200E0 | A  08-14 12:21:35.397  1519 23309 D MemoryDealer:     6: 0xb427c640 | 0x000C0540 | 0x000200E0 | A  08-14 12:21:35.397  1519 23309 D MemoryDealer:     7: 0xb427c7f0 | 0x000E0620 | 0x000200E0 | A  08-14 12:21:35.397  1519 23309 D MemoryDealer:     8: 0xb4399630 | 0x00100700 | 0x000200E0 | A  08-14 12:21:35.397  1519 23309 D MemoryDealer:     9: 0xb427ca00 | 0x001207E0 | 0x000200E0 | A  08-14 12:21:35.397  1519 23309 D MemoryDealer:    10: 0xb43998b0 | 0x001408C0 | 0x000200E0 | A  08-14 12:21:35.397  1519 23309 D MemoryDealer:    11: 0xb427cdd0 | 0x001609A0 | 0x000200E0 | A  08-14 12:21:35.397  1519 23309 D MemoryDealer:    12: 0xb427cf00 | 0x00180A80 | 0x000200E0 | A  08-14 12:21:35.397  1519 23309 D MemoryDealer:    13: 0xb28ff080 | 0x001A0B60 | 0x000200E0 | A  08-14 12:21:35.397  1519 23309 D MemoryDealer:    14: 0xb28ff1d0 | 0x001C0C40 | 0x000200E0 | A  08-14 12:21:35.397  1519 23309 D MemoryDealer:    15: 0xb28ff380 | 0x001E0D20 | 0x000200E0 | A  08-14 12:21:35.397  1519 23309 D MemoryDealer:    16: 0xb28ff4d0 | 0x00200E00 | 0x000200E0 | A  08-14 12:21:35.397  1519 23309 D MemoryDealer:    17: 0xb4399ed0 | 0x00220EE0 | 0x000200E0 | A  08-14 12:21:35.397  1519 23309 D MemoryDealer:    18: 0xb4399980 | 0x00240FC0 | 0x000200E0 | A  08-14 12:21:35.397  1519 23309 D MemoryDealer:    19: 0xb43a7020 | 0x002610A0 | 0x000200E0 | A  08-14 12:21:35.397  1519 23309 D MemoryDealer:     08-14 12:21:35.397  1519 23309 E AudioFlinger: createRecordTrack_l() initCheck failed -12; no control block? 08-14 12:21:35.397  2370 15690 E AudioRecord: AudioFlinger could not create record track, status: -12 08-14 12:21:35.400  2370 15690 E AudioRecord-JNI: Error creating AudioRecord instance: initialization check failed with status -12. 08-14 12:21:35.400  2370 15690 E android.media.AudioRecord: Error code -20 when initializing native AudioRecord object. 08-14 12:21:35.401  2370 15690 I MicrophoneInputStream: mic_started com.google.android.apps.gsa.staticplugins.aa.c@96a54c1 08-14 12:21:35.404  2370  2370 I MicroDetectionWorker: onReady 08-14 12:21:35.414  2370 15690 I MicrophoneInputStream: mic_close com.google.android.apps.gsa.staticplugins.aa.c@96a54c1 08-14 12:21:35.415  2370 16608 I MicroRecognitionRunner: Detection finished 08-14 12:21:35.415  2370 16608 W ErrorReporter: reportError [type: 211, code: 524300]: Error reading from input stream 08-14 12:21:35.417  2370  2717 I MicroRecognitionRunner: Stopping hotword detection. 08-14 12:21:35.417  2370 16608 W ErrorProcessor: onFatalError, processing error from engine(4) 08-14 12:21:35.417  2370 16608 W ErrorProcessor: com.google.android.apps.gsa.shared.speech.b.g: Error reading from input stream 08-14 12:21:35.417  2370 16608 W ErrorProcessor:        at com.google.android.apps.gsa.staticplugins.recognizer.j.a.a(SourceFile:28) 08-14 12:21:35.417  2370 16608 W ErrorProcessor:        at com.google.android.apps.gsa.staticplugins.recognizer.j.b.run(SourceFile:15) 08-14 12:21:35.417  2370 16608 W ErrorProcessor:        at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457) 08-14 12:21:35.417  2370 16608 W ErrorProcessor:        at java.util.concurrent.FutureTask.run(FutureTask.java:266) 08-14 12:21:35.417  2370 16608 W ErrorProcessor:        at com.google.android.apps.gsa.shared.util.concurrent.a.ax.run(SourceFile:14) 08-14 12:21:35.417  2370 16608 W ErrorProcessor:        at com.google.android.apps.gsa.shared.util.concurrent.a.bl.run(SourceFile:4) 08-14 12:21:35.417  2370 16608 W ErrorProcessor:        at com.google.android.apps.gsa.shared.util.concurrent.a.bl.run(SourceFile:4) 08-14 12:21:35.417  2370 16608 W ErrorProcessor:        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162) 08-14 12:21:35.417  2370 16608 W ErrorProcessor:        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636) 08-14 12:21:35.417  2370 16608 W ErrorProcessor:        at java.lang.Thread.run(Thread.java:764) 08-14 12:21:35.417  2370 16608 W ErrorProcessor:        at com.google.android.apps.gsa.shared.util.concurrent.a.ai.run(SourceFile:6) 08-14 12:21:35.417  2370 16608 W ErrorProcessor: Caused by: com.google.android.apps.gsa.shared.exception.GsaIOException: Error code: 393238 | Buffer overflow, no available space. 08-14 12:21:35.417  2370 16608 W ErrorProcessor:        at com.google.android.apps.gsa.speech.audio.Tee.f(SourceFile:103) 08-14 12:21:35.417  2370 16608 W ErrorProcessor:        at com.google.android.apps.gsa.speech.audio.au.read(SourceFile:2) 08-14 12:21:35.417  2370 16608 W ErrorProcessor:        at java.io.InputStream.read(InputStream.java:101) 08-14 12:21:35.417  2370 16608 W ErrorProcessor:        at com.google.android.apps.gsa.speech.audio.ao.run(SourceFile:18) 08-14 12:21:35.417  2370 16608 W ErrorProcessor:        at com.google.android.apps.gsa.speech.audio.an.run(SourceFile:2) 08-14 12:21:35.417  2370 16608 W ErrorProcessor:        ... 9 more 08-14 12:21:35.418  2370 16608 I AudioController: internalShutdown 08-14 12:21:35.420  2370  2370 I MicroDetector: Keeping mic open: false 08-14 12:21:35.421  2370  2370 I MicroDetectionWorker: #onError(false) 08-14 12:21:35.421  2370 14823 I DeviceStateChecker: DeviceStateChecker cancelled ```  --- ### Environment * React Native Navigation version: 2 * React Native version: * Platform(s) (iOS, Android, or both?): Android * Device info (Simulator/Device? OS version? Debug/Release?): simulator </body>
		<created>2018-08-14 12:25:50</created>
		<closed>2018-08-19 16:15:03</closed>
	</bug>
	<bug>
		<id>3735</id>
		<title>[V2][Android] Navigation buttons disappear after mergeOptions </title>
		<body>&lt;!--   Please post questions in Stack Overflow under the react-native-navigation tag   https://stackoverflow.com/questions/tagged/react-native-navigation --&gt;  ### Issue Description  All buttons disappear after calling `mergeOptions` twice  ``` Navigation.mergeOptions(this.props.componentId, {       topBar: {         leftButtons: getNavigatorButtons('left', params),         rightButtons: getNavigatorButtons('right', params),       } }); Navigation.mergeOptions(this.props.componentId, {popGesture: nextProps.isEdited}) ``` --- ### Environment * React Native Navigation version: 2 * React Native version:  * Platform(s) (iOS, Android, or both?): Android * Device info (Simulator/Device? OS version? Debug/Release?): Simulator </body>
		<created>2018-08-10 13:07:19</created>
		<closed>2018-08-20 11:31:16</closed>
	</bug>
	<bug>
		<id>3733</id>
		<title>[V2] dismissModal doesn't await</title>
		<body>&lt;!--   Please post questions in Stack Overflow under the react-native-navigation tag   https://stackoverflow.com/questions/tagged/react-native-navigation --&gt;  ### Issue Description  It seems that `await dismissModal(componentId)` doesn't work. The modal should be shown right after dismissing is also getting closed.   ### Steps to Reproduce / Code Snippets / Screenshots  ``` await Navigation.dismissModal('one'); Navigation.showModal('two'); ``` Expected modal 'one' to be dismissed and the 'two' to be shown. Actually the 'two' doesn't show.  --- ### Environment * React Native Navigation version: 2 * React Native version:  * Platform(s) (iOS, Android, or both?): checked on iOS * Device info (Simulator/Device? OS version? Debug/Release?): Simulator </body>
		<created>2018-08-10 11:55:00</created>
		<closed>2018-08-15 22:30:19</closed>
	</bug>
	<bug>
		<id>3732</id>
		<title>[V2] App stucks when pushing to the stack some ID twice</title>
		<body>&lt;!--   Please post questions in Stack Overflow under the react-native-navigation tag   https://stackoverflow.com/questions/tagged/react-native-navigation --&gt;  ### Issue Description  When pushing a screen to the stack with the same ID for the second time, the app stucks and than crashes without throwing any error to the debugger or ui.  ### Steps to Reproduce / Code Snippets / Screenshots  Push a screen to the same stack with the same ID twice --- ### Environment * React Native Navigation version: 2 * React Native version:  * Platform(s) (iOS, Android, or both?): checked on IOS * Device info (Simulator/Device? OS version? Debug/Release?): Simulator </body>
		<created>2018-08-10 11:43:17</created>
		<closed>2019-01-04 16:32:06</closed>
	</bug>
	<bug>
		<id>3692</id>
		<title>[V2] push new screen crash the app on android</title>
		<body>### Issue Description  this morning after updating to RNN to 2.0.2454 and 2.0.2456 can't push new screen  Navigation.push crash the app , but showModal works fine the app close maybe crashs in android only ,iOS works fine  ### Steps to Reproduce / Code Snippets / Screenshots  A simple `react-native init newProject` with RNN `v2.0.2456` as dependency   index.js ```` import { AppRegistry } from "react-native"; import App from "./App"; import Test from "./Test"; import { name as appName } from "./app.json"; import { Navigation } from "react-native-navigation";  Navigation.registerComponent(`navigation.AppScreen`, () =&gt; App); Navigation.registerComponent(`navigation.TestScreen`, () =&gt; Test);  Navigation.events().registerAppLaunchedListener(() =&gt; {   Navigation.setRoot({     root: {       stack: {         id: "appStack",         options: {           // topBar: {           //   visible: false           // }         },         children: [           {             component: {               id: "App",               name: "navigation.AppScreen",               passProps: {                 text: "This is Test"               }             }           }         ]       }     }   }); });  ````  App.js ```` ... import { Navigation } from "react-native-navigation";  export default class App extends Component {   onPressLearnMore = async () =&gt; {     await Navigation.push("appStack", {       component: {         name: "navigation.TestScreen",         passProps: {           text: "Pushed screen"         },         options: {           topBar: {             title: {               text: "Pushed screen title"             }           }         }       }     });   };   render() {     return (       &lt;View style={styles.container}&gt;         &lt;Text style={styles.welcome}&gt;Welcome to React Native!&lt;/Text&gt;         &lt;Button           onPress={this.onPressLearnMore}           title="Learn More"           color="#841584"           accessibilityLabel="Learn more about this purple button"         /&gt;       &lt;/View&gt;     );   } }  ```` Test.js ``` export default class Test extends Component {   render() {     return (       &lt;View style={styles.container}&gt;         &lt;Text style={styles.welcome}&gt;Page 2&lt;/Text&gt;       &lt;/View&gt;     );   } } ``` --- ### Environment * React Native Navigation version: 2.0.2456 * React Native version: 0.56.0 * Platform(s) (iOS, Android, or both?): Android * Device info (Simulator/Device? OS version? Debug/Release?): Device / 6.0 / Debug </body>
		<created>2018-08-05 16:03:48</created>
		<closed>2018-08-09 23:40:13</closed>
	</bug>
	<bug>
		<id>3689</id>
		<title>[V2] [Android] Back button does not work as expected on screen with side menus</title>
		<body> ### Back button does not work as expected on screen with side menus  if a screen gets pushed in an app with side menu, pressing back button does not pop the last screen from stack. It exits from the app completely. Does not depend on how many screens are pushed. ### Steps to Reproduce / Code Snippets / Screenshots Run the playground app. press "SWITCH TO APP WITH SIDE MENUS". Press "Push". Press back button. It exits the app.  ![the screen cap](https://media.giphy.com/media/vMaXHLJ5uy884TdDMh/giphy.gif)  --- ### Environment * React Native Navigation version: 2.0.2453 * React Native version: 0.51.x * Platform(s) (iOS, Android, or both?): Android * Device info (Simulator/Device? OS version? Debug/Release?): Google Pixel 1/ 8.1 / Debug</body>
		<created>2018-08-04 17:48:38</created>
		<closed>2018-09-16 14:53:00</closed>
	</bug>
	<bug>
		<id>3666</id>
		<title>[V2] [AndroidOnly] Navigator.dismissModal closes multiple modals if Navigation.setRoot is called from modal</title>
		<body>### Issue Description  We have an app where we use Navigation.setRoot() from a modal screen, and later in the application we have an issue when we open multiple modals, and then need to close one by one, but on Navigation.dismissModal(), all modals are getting closed, leaving the application in the inconsistent state.  This issue only happens on Android  ### Steps to Reproduce / Code Snippets / Screenshots  - Use Navigation.showModal() to display a modal - Use Navigation.setRoot() from the modal - Open a modal from the new root, and then open a modal from that modal - Dismiss the last modal - Both modals are dismissed. --- ### Environment * React Native Navigation version: 2.0.2425 * React Native version: 0.55.0 * Platform(s) (iOS, Android, or both?): Android * Device info (Simulator/Device? OS version? Debug/Release?): All devices and Emulator </body>
		<created>2018-07-31 12:29:17</created>
		<closed>2018-09-24 12:26:19</closed>
	</bug>
	<bug>
		<id>3657</id>
		<title>NullPointer when showing/dismissing modals</title>
		<body>&lt;!--   Please post questions in Stack Overflow under the react-native-navigation tag   https://stackoverflow.com/questions/tagged/react-native-navigation --&gt;  ### Issue Description  app crashes when modal is displayed  ### Steps to Reproduce / Code Snippets / Screenshots  display a modal, sorry I cannot be more specific, it happens just with 1 of my modals but reproducible  --- ### Environment * React Native Navigation version: v2 2.0.2424 (commit d2357c53fdadadb223) * React Native version: 0.55.4 * Platform(s) (iOS, Android, or both?): android 7.0 &amp; 8.1.0 * Device info (Simulator/Device? OS version? Debug/Release?): Nexus 5x, LG K8 (2017) Dual  ## stack-trace: ``` java.lang.NullPointerException: Attempt to invoke interface method 'void android.view.ViewManager.removeView(android.view.View)' on a null object reference com.reactnativenavigation.viewcontrollers.ViewController.detachView ViewController.java:158 com.reactnativenavigation.viewcontrollers.modal.ModalPresenter.onShowModalEnd ModalPresenter.java:58 com.reactnativenavigation.viewcontrollers.modal.ModalPresenter.access$000 ModalPresenter.java:14 com.reactnativenavigation.viewcontrollers.modal.ModalPresenter$1.onAnimationEnd ModalPresenter.java:51 android.animation.AnimatorSet.onChildAnimatorEnded AnimatorSet.java:829 android.animation.AnimatorSet.-wrap1 AnimatorSet.java android.animation.AnimatorSet$AnimatorSetListener.onAnimationEnd AnimatorSet.java:784 android.animation.ValueAnimator.endAnimation ValueAnimator.java:1163 android.animation.ValueAnimator.doAnimationFrame ValueAnimator.java:1323 android.animation.AnimationHandler.doAnimationFrame AnimationHandler.java:146 android.animation.AnimationHandler.-wrap2 AnimationHandler.java android.animation.AnimationHandler$1.doFrame AnimationHandler.java:54 android.view.Choreographer$CallbackRecord.run Choreographer.java:869 android.view.Choreographer.doCallbacks Choreographer.java:683 android.view.Choreographer.doFrame Choreographer.java:616 android.view.Choreographer$FrameDisplayEventReceiver.run Choreographer.java:857 android.os.Handler.handleCallback Handler.java:751 android.os.Handler.dispatchMessage Handler.java:95 android.os.Looper.loop Looper.java:154 android.app.ActivityThread.main ActivityThread.java:6311 java.lang.reflect.Method.invoke Method.java com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run ZygoteInit.java:872 com.android.internal.os.ZygoteInit.main ZygoteInit.java:762 ```</body>
		<created>2018-07-30 11:03:08</created>
		<closed>2018-09-05 05:52:38</closed>
	</bug>
	<bug>
		<id>3627</id>
		<title>[V2] showModal with {topBar: {drawBehind: true}} not displaying the TopBar on Android</title>
		<body>Top bar is not shown in `showModal` when adding the following option: ```   {       topBar: {          drawBehind: true,         elevation: 0,      }   } ```  It works fine when `elevation: 0` is removed.  This might have been introduced after this merge: https://github.com/wix/react-native-navigation/pull/3601/files @guyca    --- ### Environment * React Native Navigation version: 2.0.2428 * React Native version: 0.56.0 * Platform(s) (iOS, Android, or both?): Android only * Device info (Simulator/Device? OS version? Debug/Release?): Api 26 </body>
		<created>2018-07-25 21:37:36</created>
		<closed>2018-12-03 15:52:18</closed>
	</bug>
	<bug>
		<id>3608</id>
		<title>[V2] Build error in Xcode 10 "Multiple commands produce..."</title>
		<body>&lt;!--   Please post questions in Stack Overflow under the react-native-navigation tag   https://stackoverflow.com/questions/tagged/react-native-navigation --&gt;  ### Issue Description  After following the [installation instructions](https://wix.github.io/react-native-navigation/v2/#/docs/Installing) multiple times and clearing caches in between I still get build errors in Xcode 10:  ### Steps to Reproduce / Code Snippets / Screenshots  ![image](https://user-images.githubusercontent.com/1247313/43078195-1055a934-8e8a-11e8-9b9e-9bfd63f71a63.png)  --- ### Environment * React Native Navigation version: 2.0.2425 * React Native version: 0.56.0 * Platform(s) (iOS, Android, or both?): iOS * Device info (Simulator/Device? OS version? Debug/Release?): Simulator  * No other dependencies except `react-native-navigation` installed</body>
		<created>2018-07-23 13:12:55</created>
		<closed>2018-11-15 13:38:17</closed>
	</bug>
	<bug>
		<id>3606</id>
		<title>[V2] Can not show more than two overlays at the same time</title>
		<body>&lt;!--   Please post questions in Stack Overflow under the react-native-navigation tag   https://stackoverflow.com/questions/tagged/react-native-navigation --&gt;  ### Issue Description  Showing more than two overlays was working perfectly until this commit https://github.com/wix/react-native-navigation/commit/fc493775eb5d2900a40054bfef261a3802d93ad2. Since this commit https://github.com/wix/react-native-navigation/commit/17286fb55fdb72e6f5df373d8667c4d7afdf8a98 is possible to show **only two**   ### Steps to Reproduce / Code Snippets / Screenshots  ```javascript      Navigation.showOverlay({         component: {           id: "one",           name: "exmaple.NotificationTrayOverlay",           options: {             overlay: {               interceptTouchOutside: false             }           }         }       });        Navigation.showOverlay({         component: {           id: "two",           name: "example.ProgressOverlay",           options: {             overlay: {               interceptTouchOutside: false             }           }         }       });              Navigation.showOverlay({         component: {           id: "three",           name: "example.CartOverlay",           options: {             overlay: {               interceptTouchOutside: false             }           }         }       }); ``` --- ### Environment * React Native Navigation version: 2.0.2422 * React Native version: 0.55 * Platform(s) (iOS, Android, or both?): iOS * Device info (Simulator/Device? OS version? Debug/Release?): Simulator </body>
		<created>2018-07-22 23:12:41</created>
		<closed>2018-07-24 12:13:41</closed>
	</bug>
	<bug>
		<id>3566</id>
		<title>Navigation.showModal with RN Modal showing</title>
		<body>If a React Native Modal is showing on the screen, trying to use Navigation.showModal() will crash natively with native crashlog  ``` Exception '-[RCTModalHostViewController getLeafViewController]: unrecognized selector sent to instance 0x--------' was thrown while invoking showModal on target RNNBridgeModule with params ... ```   Environment:  * React Native Navigation version: 2.0.2412 * React Native version: 51 * Platform(s) (iOS, Android, or both?): iOS * Device info (Simulator/Device? OS version? Debug/Release?): Simulator iPhone X </body>
		<created>2018-07-16 13:31:00</created>
		<closed>2018-07-18 11:58:39</closed>
	</bug>
	<bug>
		<id>3550</id>
		<title>[V2] registerBottomTabSelectedListener callback falls out of sync after setting tab</title>
		<body>### registerBottomTabSelectedListener callback falls out of sync after setting tab programmatically via `mergeOptions`  After selecting new tab [programmatically via `mergeOptions`](https://github.com/wix/react-native-navigation/blob/4c48ad7c37ecdcaa18af06194303e635d1a92556/playground/src/screens/TextScreen.js#L71), `registerBottomTabSelectedListener` callback receives stale property `unselectedTabIndex` - immediately after the fact, when you press any tab button, the callback receives correct `selectedTabIndex`, but incorrect `unselectedTabIndex`, i.e. it holds index of the tab where you programmatically selected new tab.  ### Steps to Reproduce / Code Snippets / Screenshots  [FILL THIS OUT - It will be extremely helpful]  --- ### Environment * React Native Navigation version: 2.0.2407 * React Native version: 0.53.3 * Platform(s) (iOS, Android, or both?): both * Device info (Simulator/Device? OS version? Debug/Release?): Simulator iPhone 6, iOS 11.4, Debug</body>
		<created>2018-07-13 13:50:07</created>
		<closed>2018-07-18 11:36:29</closed>
	</bug>
	<bug>
		<id>3545</id>
		<title>[v2] Bottom tabs visibility problem</title>
		<body>### Issue Description  We have an app with bottom tabs. We want to navigate to another screen with hiding the bottom tabs. It's working but causes a UI bug when we go back, appears a white area (exact same height as bottom tabs). You can see below.  ### Steps to Reproduce / Code Snippets / Screenshots Let's assume first screen is HomeScreen (with bottom tabs) and second screen is CommentsScreen. Just pass ```{ bottomTabs: { visible: false, animated: true } }``` to CommentsScreen to hide bottom tabs.  ![2018-07-12 18 21 09](https://user-images.githubusercontent.com/22980987/42643030-da25ac42-8600-11e8-98f4-ecdb5e477a00.gif) ![2018-07-12 18 21 57](https://user-images.githubusercontent.com/22980987/42643032-da4f9a0c-8600-11e8-97b2-3ab440b76137.gif)   --- ### Environment * React Native Navigation version: v2 latest * React Native version: 0.55.4 * Platform(s) (iOS, Android, or both?): iOS * Device info (Simulator/Device? OS version? Debug/Release?):  All </body>
		<created>2018-07-12 15:30:03</created>
		<closed>2018-11-04 09:37:22</closed>
	</bug>
	<bug>
		<id>3484</id>
		<title>[v2] [iOS] Bottom tab bar icons are lower resolution after specifying color.</title>
		<body>When I don't specify a color for the icons (and they are black by default), RNN uses the @2x/@3x high-resolution version. However, when I add that color, they still use the low-resolution version. I think this has to do with the UIImage+Tint that's being done, but it worked fine in RNN v1? </body>
		<created>2018-07-03 00:05:19</created>
		<closed>2018-07-03 14:53:07</closed>
	</bug>
	<bug>
		<id>3468</id>
		<title>[V2] showModal not working on 0.56.rc4</title>
		<body>&lt;!--   Please post questions in Stack Overflow under the react-native-navigation tag   https://stackoverflow.com/questions/tagged/react-native-navigation --&gt;  ### Issue Description Navigation.showModal quit the app immediately  ### Steps to Reproduce / Code Snippets / Screenshots  ```javascrip  Navigation.showModal({   stack: {     children: [{       component: {          name: 'test.Screen'       }     }]   } }); ```   --- ### Environment * React Native Navigation version: 2.0.2381 * React Native version: 0.56.rc4 * Platform(s) (iOS, Android, or both?): IOS * Device info (Simulator/Device? OS version? Debug/Release?): Simulator, IOS 10.0, Debug </body>
		<created>2018-07-01 05:14:29</created>
		<closed>2018-12-03 15:52:22</closed>
	</bug>
	<bug>
		<id>3443</id>
		<title>[ios][v1] Global Events and Screen Events do not work after iPhoneX patch</title>
		<body>### Issue Description  Global Events and Screen Events do not work after iPhoneX patch  ### Steps to Reproduce / Code Snippets / Screenshots Install latest (1.1.473) and register global events and  and none of the events are generated.   ```     new ScreenVisibilityListener({    willAppear: ({ screen }) =&gt; {       logger.log(`Displaying screen ${screen}`);     },     didAppear: ( screen, startTime, endTime, commandType }) =&gt; {       console.log('screenVisibility', `Screen ${screen} displayed`);     },     willDisappear: () =&gt; { // { screen, startTime, endTime, commandType }) =&gt; {       /logger.log(`Screen will disappear ${screen}`);     },     didDisappear: ({ screen }) =&gt; {       /logger.log(`Screen disappeared ${screen}`);     }   }).register(); ```   The problem is associated in RCCViewController.m at the following lines:  ``` - (void)sendScreenChangedEvent:(NSString *)eventName {     if ([self.view isKindOfClass:[RCTRootView class]]) { &lt;---  This is not a RCTRootView anymore                  RCTRootView *rootView = (RCTRootView *)self.view;         code code... }  - (void)sendGlobalScreenEvent:(NSString *)eventName endTimestampString:(NSString *)endTimestampStr shouldReset:(BOOL)shouldReset {     if ([self.view isKindOfClass:[RCTRootView class]]){&lt;---  This is not a RCTRootView anymore         code code... } ```   The fix would be: ``` - (void)sendScreenChangedEvent:(NSString *)eventName {   if (self.rootView != nil) {     RCTRootView *rootView = self.rootView;          if (rootView.appProperties &amp;&amp; rootView.appProperties[@"navigatorEventID"]) {              [[[RCCManager sharedInstance] getBridge].eventDispatcher sendAppEventWithName:rootView.appProperties[@"navigatorEventID"] body:@        {          @"type": @"ScreenChangedEvent",          @"id": eventName        }];     }   } }  - (void)sendGlobalScreenEvent:(NSString *)eventName endTimestampString:(NSString *)endTimestampStr shouldReset:(BOOL)shouldReset {   if (self.rootView != nil){     RCTRootView *rootView = self.rootView;     NSString *screenName = [rootView moduleName];          [[[RCCManager sharedInstance] getBridge].eventDispatcher sendAppEventWithName:eventName body:@      {        @"commandType": self.commandType ? self.commandType : @"",        @"screen": screenName ? screenName : @"",        @"startTime": self.timestamp ? self.timestamp : @"",        @"endTime": endTimestampStr ? endTimestampStr : @""      }];          if (shouldReset) {       self.commandType = nil;       self.timestamp = nil;     }   } } ``` --- ### Environment * React Native Navigation version: 1.1.473 * React Native version: 0.55.3 * Platform(s) : IOS * Device info (Simulator/Device? OS version? Debug/Release?): All </body>
		<created>2018-06-26 13:24:55</created>
		<closed>2018-07-05 01:46:48</closed>
	</bug>
	<bug>
		<id>3424</id>
		<title>[V2] Keyboard does not avoids ScrollView</title>
		<body>&lt;!--   Please post questions in Stack Overflow under the react-native-navigation tag   https://stackoverflow.com/questions/tagged/react-native-navigation --&gt;  ### Issue Description  Hey, guys. I need to implement a form and the keyboard not seems aware of `ScrollView` on Android. It works properly on react-navigation. I tried `KeyboardAvoidingView` and `KeyboardAwareScrollView`.  Since all libs of KeyboardAvoid*** do workarounds for iOS and return a normal ScrollView for Android,  it seems the bug is in this lib.  ### Steps to Reproduce / Code Snippets / Screenshots  GIF: ![jun-22-2018 18-29-19](https://user-images.githubusercontent.com/804994/41800097-670afaf2-764a-11e8-951d-8c0259406866.gif)  Code: ```jsx render() {     return (         &lt;KeyboardAwareScrollView enableOnAndroid&gt;             &lt;View style={{ padding: 20 }}&gt;                 &lt;TextInput placeholder='textinput here' style={{ padding: 16 }} /&gt;                 &lt;TextInput placeholder='textinput here' style={{ padding: 16 }} /&gt;                 &lt;TextInput placeholder='textinput here' style={{ padding: 16 }} /&gt;                 &lt;TextInput placeholder='textinput here' style={{ padding: 16 }} /&gt;                 &lt;TextInput placeholder='textinput here' style={{ padding: 16 }} /&gt;                 &lt;TextInput placeholder='textinput here' style={{ padding: 16 }} /&gt;                 &lt;TextInput placeholder='textinput here' style={{ padding: 16 }} /&gt;                 &lt;TextInput placeholder='textinput here' style={{ padding: 16 }} /&gt;                 &lt;TextInput placeholder='textinput here' style={{ padding: 16 }} /&gt;             &lt;/View&gt;         &lt;/KeyboardAwareScrollView&gt;     ); } ```  --- ### Environment * React Native Navigation version: 2.0.2373 * React Native version: 0.55.4 * Platform(s) (iOS, Android, or both?): Android * Device info (Simulator/Device? OS version? Debug/Release?): Simulator Samsung Galaxy S8 on debug </body>
		<created>2018-06-22 21:36:27</created>
		<closed>2018-07-30 09:30:42</closed>
	</bug>
	<bug>
		<id>3418</id>
		<title>[v2] SideMenu is overflowing Safe Area</title>
		<body>&lt;!--   Please post questions in Stack Overflow under the react-native-navigation tag   https://stackoverflow.com/questions/tagged/react-native-navigation --&gt;  ### Issue Description  Hey, guys. First of all: you are doing a great work here. We all appreciate your effort.  I'm developing a Sidemenu and it's Safe Area doesn't seem to work properly. I tried a lot of margin and RN's SafeAreaView without any luck :( It start on the top (behind the DeviceStatusBar) and if I swipe a little bit it shows the View correctly.  ### Steps to Reproduce / Code Snippets / Screenshots ![jun-22-2018 01-10-08](https://user-images.githubusercontent.com/804994/41757606-7f85e95c-75b9-11e8-80f9-543eb191de49.gif)  If you need a sample I can write one, but I think the gif does the job, right?  Thanks for your help.  --- ### Environment * React Native Navigation version: 2.0.2362 * React Native version: 0.55.4 * Platform(s) (iOS, Android, or both?): iOS * Device info (Simulator/Device? OS version? Debug/Release?): iOS Simulator iPhone X 11.4 on debug </body>
		<created>2018-06-22 04:22:20</created>
		<closed>2018-06-24 11:03:59</closed>
	</bug>
	<bug>
		<id>3410</id>
		<title>[v2] [iOS] iPhone X splash screen problem</title>
		<body>I'm trying to configure the splash screen for my app via Xcode, but there is a problem when I open the app on the iPhone X.  I configured the LaunchImage on Xcode as follows:  &lt;img width="585" alt="captura de tela 2018-06-21 as 12 10 28" src="https://user-images.githubusercontent.com/2624768/41728106-5b4b8c58-754c-11e8-918b-ea017327cead.png"&gt;  When I launch the app on the iPhone X, the solid orange image appears for a while, but suddenly changes to the logo before showing the single screen app. I tested different image combinations and found out that it uses the iPhone X image first, then it changes to the iPhone Portrait 2x iOS 7+ and fallbacks to iPhone Portrait 1x if the latter doesn't exist. As the image is smaller, it appears stretched.  ![bug](https://user-images.githubusercontent.com/2624768/41728908-5654e6ac-754e-11e8-8516-925a6ae09b28.gif)  --- ### Environment * React Native Navigation version: 2.0.2275 * React Native version: 0.55.1 * Platform(s) (iOS, Android, or both?): iOS * Device info (Simulator/Device? OS version? Debug/Release?): iPhone X</body>
		<created>2018-06-21 15:28:29</created>
		<closed>2018-06-21 21:22:15</closed>
	</bug>
	<bug>
		<id>3401</id>
		<title>[V2][Android] mergeOptions title cause bottomTabs become visible</title>
		<body>```       Navigator.mergeOptions(this.props.componentId, {         topBar: {           title: {             text: state.title,           },         }, ```  The code above,  case `bottomTabs` become visible.  --- ### Environment * React Native Navigation version: 2.0.2367 * React Native version: 0.51 * Platform(s) (iOS, Android, or both?): Android * Device info (Simulator/Device? OS version? Debug/Release?): Simulator &amp; Device </body>
		<created>2018-06-21 06:32:41</created>
		<closed>2018-08-02 16:23:53</closed>
	</bug>
	<bug>
		<id>3394</id>
		<title>[V2][Android] componentDidAppear didn't trigger when switch tab</title>
		<body> ### Issue Description  When I switch tab, I found the `componentDidAppear` lifecycle I defined in the screen component is not triggered,  same as the `componentDidDisappear` event.   --- ### Environment * React Native Navigation version: 2.0.2361 * React Native version: 0.51 * Platform(s) (iOS, Android, or both?): Android * Device info (Simulator/Device? OS version? Debug/Release?): Simulator &amp; Device </body>
		<created>2018-06-20 10:15:42</created>
		<closed>2018-06-21 07:37:46</closed>
	</bug>
	<bug>
		<id>3392</id>
		<title>[v2][Android] NPE</title>
		<body>This can be reproduced if the app starts with the red screen like this: `error: bundling failed: Error: We don't know what to do with this node type. We were previously a Statement but we can't fit in here?     at NodePath.insertBefore (/home/stanimir/structmedia/fuelapp/FuelApp/node_modules/@babel/traverse/lib/path/modification.js:55:11)`  `"description":"/home/stanimir/App/node_modules/react-native-modal/src/index.js: We don't know what to do with this node type. We were previously a Statement but we can't fit in here?`                                                                         with dependencies: {     "react": "16.3.2",     "react-native": "0.56.0-rc.2",     "react-native-navigation": "^2.0.2359",     "react-native-modal": "^6.1.0", } "devDependencies": {     "babel-preset-react-native": "^5.0.2",  **-&gt; this red screen not appears with "babel-preset-react-native": "5.0.0"** } ``` 06-20 09:08:33.444 25288-25288/? E/AndroidRuntime: FATAL EXCEPTION: main                                                    Process: com.fuelapp.debug, PID: 25288                                                    java.lang.RuntimeException: Unable to resume activity {com.fuelapp.debug/com.fuelapp.MainActivity}: java.lang.NullPointerException: Attempt to invoke virtual method 'com.facebook.react.bridge.JavaScriptModule com.facebook.react.bridge.ReactContext.getJSModule(java.lang.Class)' on a null object reference                                                        at android.app.ActivityThread.performResumeActivity(ActivityThread.java:3659)                                                        at android.app.ActivityThread.handleResumeActivity(ActivityThread.java:3699)                                                        at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1655)                                                        at android.os.Handler.dispatchMessage(Handler.java:105)                                                        at android.os.Looper.loop(Looper.java:172)                                                        at android.app.ActivityThread.main(ActivityThread.java:6637)                                                        at java.lang.reflect.Method.invoke(Native Method)                                                        at com.android.internal.os.Zygote$MethodAndArgsCaller.run(Zygote.java:240)                                                        at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:767)                                                     Caused by: java.lang.NullPointerException: Attempt to invoke virtual method 'com.facebook.react.bridge.JavaScriptModule com.facebook.react.bridge.ReactContext.getJSModule(java.lang.Class)' on a null object reference                                                        at com.reactnativenavigation.react.EventEmitter.&lt;init&gt;(EventEmitter.java:21)                                                        at com.reactnativenavigation.react.NavigationReactInitializer.emitAppLaunched(NavigationReactInitializer.java:55)                                                        at com.reactnativenavigation.react.NavigationReactInitializer.prepareReactApp(NavigationReactInitializer.java:49)                                                        at com.reactnativenavigation.react.NavigationReactInitializer.onActivityResumed(NavigationReactInitializer.java:28)                                                        at com.reactnativenavigation.react.ReactGateway.onActivityResumed(ReactGateway.java:40)                                                        at com.reactnativenavigation.NavigationActivity.onResume(NavigationActivity.java:43)                                                        at android.app.Instrumentation.callActivityOnResume(Instrumentation.java:1355)                                                        at android.app.Activity.performResume(Activity.java:7079)                                                        at android.app.ActivityThread.performResumeActivity(ActivityThread.java:3634) ```  https://github.com/wix/react-native-navigation/issues/3087</body>
		<created>2018-06-20 06:18:15</created>
		<closed>2018-07-03 12:16:23</closed>
	</bug>
	<bug>
		<id>3391</id>
		<title>Subtitle clipped when moving to landscape mode in iOS</title>
		<body>&lt;!--   Please post questions in Stack Overflow under the react-native-navigation tag   https://stackoverflow.com/questions/tagged/react-native-navigation --&gt;  ### Issue Description When rotating a device from Portrait, then landscape, and back to portrait, the subtitle text gets clipped while in landscape mode.  ### Steps to Reproduce / Code Snippets / Screenshots ## Steps to reproduce  - Create a topBar navigation   - Add a Title and Subtitle to the topBar  - Load the application in a portrait view  - Rotate the device to a landscape view  - Rotate the device back to portrait view  - The subtitle is now clipped  - A gif is provided below ### Gif ![](https://cl.ly/0s3V3B3H2v2I/Screen%20Recording%202018-06-19%20at%2005.20%20PM.gif)  --- ### Environment * React Native Navigation version: "react-native-navigation": "2.0.2350", * React Native version: "react-native": "0.55.4", * Platform(s) (iOS, Android, or both?): iOs=S * Device info (Simulator/Device? OS version? Debug/Release?): Simulator and DEvice </body>
		<created>2018-06-20 00:24:09</created>
		<closed>2018-12-03 15:52:14</closed>
	</bug>
	<bug>
		<id>3379</id>
		<title>[V2] [Android] statusBar style not recover after showModal with different style</title>
		<body>### Issue Description  statusBar style not recover after showModal with different style  ### Steps to Reproduce / Code Snippets / Screenshots  1.    Screen A  with options:  ``` {    statusBar: {        style: 'dark'    } } ``` 2. showModal B with options: ``` {    statusBar: {        style: 'light'    } } ```  3. dismissModal B,   the statusBar of Screen A will keep the `light` style  --- ### Environment * React Native Navigation version: "2.0.2334" * React Native version:  0.51 * Platform(s) (iOS, Android, or both?): Android * Device info (Simulator/Device? OS version? Debug/Release?):  Simulator/Device </body>
		<created>2018-06-19 05:07:29</created>
		<closed>2018-12-03 15:52:12</closed>
	</bug>
	<bug>
		<id>3369</id>
		<title>[v2] bottomTab(s) fontSize does not work</title>
		<body>### Issue Description bottomTabs fontSize does not work on Android.   ### Steps to Reproduce / Code Snippets / Screenshots ```js Navigation.setDefaultOptions({     bottomTabs: {         fontSize: 14,     }, }); ``` ### Environment * React Native Navigation version: latest * React Native version: latest * Platform(s) (iOS, Android, or both?): Android * Device info (Simulator/Device? OS version? Debug/Release?): Debug/Android 8.1 Device </body>
		<created>2018-06-16 16:28:23</created>
		<closed>2018-07-10 11:55:00</closed>
	</bug>
	<bug>
		<id>3368</id>
		<title>[v2] [iOS 12] showModal crashes</title>
		<body>`showModal` is throwing Array index exception on iOS 12  Happening inside this method: ```objc - (void)setCustomNavigationComponentBackground {     if (!_customTopBarBackground) {         if (self.options.topBar.background.component.name) {             RCTRootView *reactView = (RCTRootView*)[_creator createRootViewFromComponentOptions:self.options.topBar.background.component];              _customTopBarBackground = [[RNNCustomTitleView alloc] initWithFrame:self.navigationController.navigationBar.bounds subView:reactView alignment:@"fill"];             [self.navigationController.navigationBar insertSubview:_customTopBarBackground atIndex:1];             self.navigationController.navigationBar.clipsToBounds = YES;  // ----&gt; HERE:         } else if ([[self.navigationController.navigationBar.subviews objectAtIndex:1] isKindOfClass:[RNNCustomTitleView class]]) {               [[self.navigationController.navigationBar.subviews objectAtIndex:1] removeFromSuperview];             self.navigationController.navigationBar.clipsToBounds = NO;         }     } if (_customTopBarBackground &amp;&amp; _customTopBarBackground.superview == nil) {         if ([[self.navigationController.navigationBar.subviews objectAtIndex:1] isKindOfClass:[RNNCustomTitleView class]]) {             [[self.navigationController.navigationBar.subviews objectAtIndex:1] removeFromSuperview];         }         [self.navigationController.navigationBar insertSubview:_customTopBarBackground atIndex:1];         self.navigationController.navigationBar.clipsToBounds = YES;     } } ```  Will provide details and a potential fix later.</body>
		<created>2018-06-15 22:26:44</created>
		<closed>2018-06-20 11:34:51</closed>
	</bug>
	<bug>
		<id>3345</id>
		<title>[V2] component layouts as bottomTabs children are not visible</title>
		<body>  ### Issue Description  adding components to bottomTabs children make them not be visible although stack children work as expected.  ### Steps to Reproduce / Code Snippets / Screenshots  In playground app root folder replace existing code in index.js with the following. (It's the same example as mentioned in the docs for bottomTabs). ```js import React, { Component } from 'react'; import { View, Text } from 'react-native'; import { Navigation } from 'react-native-navigation';  class Test extends Component {   render() {     return (       &lt;View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}&gt;         &lt;Text&gt;Test Screen&lt;/Text&gt;       &lt;/View&gt;     );   } }  Navigation.registerComponent('Test', () =&gt; Test);  Navigation.setRoot({   root: {     bottomTabs: {       children: [         {           stack: {             children: [               {                 component: {                   name: 'Test'                 }               }             ],             options: {               bottomTab: {                 title: 'Tab 1',                 icon: require('./images/one.png'),               },             },           },         },         {           component: {             name: 'Test',             options: {               bottomTab: {                 title: 'Tab 2',                 icon: require('./images/two.png'),               },             },           },         },       ],     },   }, });  ``` In addition to playground app i tried it on a clean init project (Edited as instructed in the docs) and got the same results.  ![Screen Cap](https://media.giphy.com/media/1Xamrt2Dwd2u8UC3BD/giphy.gif) --- ### Environment * React Native Navigation version: 2.0.2344 * React Native version: 0.55.4 * Platform(s) (iOS, Android, or both?): Android * Device info (Simulator/Device? OS version? Debug/Release?):  Google Pixel 1 Android 8.1 Debug Genymotion Android Emulator Custom Phone 6.0 Debug </body>
		<created>2018-06-11 18:56:33</created>
		<closed>2018-12-03 15:52:11</closed>
	</bug>
	<bug>
		<id>3319</id>
		<title>[V2] Default background color doesn't work as specified in the documentation</title>
		<body>### Issue Description  When configuring a default background  (`Navigation.setDefaultOptions`) color as specified in the documentation, nothing happens.   ```  {   layout: {    backgroundColor: 'red'   } } ```  Reference: https://wix.github.io/react-native-navigation/v2/#/docs/styling?id=common-options   It turns out it works when adding, instead:  ``` {   screenBackgroundColor: 'red' } ```   Setting the color using `Navigation.setDefaultOptions` only works on Android. But it works on iOS when defining this property per screen.   * React Native Navigation version: 2.0.2305 * React Native version: 0.54.4 * Platform(s) (iOS, Android, or both?): Both * Device info (Simulator/Device? OS version? Debug/Release?): iOS 10, 11 - Android API 25 </body>
		<created>2018-06-07 19:35:15</created>
		<closed>2018-06-09 20:48:21</closed>
	</bug>
	<bug>
		<id>3317</id>
		<title>[V2] [Android] cannot find symbol import com.facebook.react.uimanager.MeasureSpecProvider</title>
		<body>### Issue Description  Since 4c8d48b1b596c314ff3242a2b619c3f893d4b5e1 Android builds fail on ReactNative &gt;= 0.55.4 as both MeasureSpecProvider and SizeMonitoringFrameLayout moved to `uimanager/common` https://github.com/facebook/react-native/commit/6b45fb2cb1ca44fa7375bc7696bf90a68a85df3c   ### Steps to Reproduce / Code Snippets / Screenshots  `react-native run-android`  ``` error: cannot find symbol import com.facebook.react.uimanager.MeasureSpecProvider error: cannot find symbol import com.facebook.react.uimanager.SizeMonitoringFrameLayout ```  ### Temp patch   `lib/android/app/src/main/java/com/reactnativenavigation/react/SyncUiImplementation.java` ``` - import com.facebook.react.uimanager.MeasureSpecProvider; + import com.facebook.react.uimanager.common.MeasureSpecProvider;  - import com.facebook.react.uimanager.SizeMonitoringFrameLayout; + import com.facebook.react.uimanager.common.SizeMonitoringFrameLayout; ```  No idea how to properly fix this, my Java skills are pretty much non-existent ;-)  --- ### Environment * React Native Navigation version: 2.0.2329 * React Native version: &gt;= 0.55.4 * Platform(s) (iOS, Android, or both?): Android </body>
		<created>2018-06-07 11:31:01</created>
		<closed>2018-06-11 11:13:36</closed>
	</bug>
	<bug>
		<id>3313</id>
		<title>Parsing ReadableMaps is broken on RN 0.54</title>
		<body>&lt;!--   Please post questions in Stack Overflow under the react-native-navigation tag   https://stackoverflow.com/questions/tagged/react-native-navigation --&gt;  ### Issue Description  The app crash on Android but works fine on IOS. &lt;img width="285" alt="screen shot 2018-06-06 at 12 29 14 pm" src="https://user-images.githubusercontent.com/22877561/41054864-9886a226-698d-11e8-87a5-d3f4a79f4cbd.png"&gt;  I checked the code that bridges and set the setRoot react method here and it seems like the problem is on line 60  &lt;img width="995" alt="screen shot 2018-06-06 at 1 31 30 pm" src="https://user-images.githubusercontent.com/22877561/41054981-fc6b3db0-698d-11e8-8f1b-c9f663a1e9c2.png"&gt;  MainActivity.java ```java         import com.reactnativenavigation.*;          public class MainActivity extends NavigationActivity {         } ```  MainApplication.java ```java package com.cityworksmobile;  import android.app.Application;  import com.facebook.react.ReactApplication; import com.microsoft.appcenter.reactnative.crashes.AppCenterReactNativeCrashesPackage; import com.microsoft.appcenter.reactnative.analytics.AppCenterReactNativeAnalyticsPackage; import com.microsoft.appcenter.reactnative.appcenter.AppCenterReactNativePackage; import com.oblador.keychain.KeychainPackage; import com.AlexanderZaytsev.RNI18n.RNI18nPackage; import com.facebook.react.ReactNativeHost; import com.facebook.react.ReactPackage; import com.facebook.react.shell.MainReactPackage; import com.facebook.soloader.SoLoader; import com.reactnativenavigation.NavigationApplication; import com.reactnativenavigation.react.NavigationReactNativeHost; import android.support.annotation.*; import java.util.*;    public class MainApplication extends NavigationApplication {     @Override     public boolean isDebug() {         return BuildConfig.DEBUG;     }          @Override     protected ReactNativeHost createReactNativeHost() {         return new NavigationReactNativeHost(this) {             @Override             protected String getJSMainModuleName() {                 return "index";             }         };     }         protected List&lt;ReactPackage&gt; getPackages() {         // Add additional packages you require here         // No need to add RnnPackage and MainReactPackage         return Arrays.&lt;ReactPackage&gt;asList(             new AppCenterReactNativeCrashesPackage(MainApplication.this, getResources().getString(R.string.appCenterCrashes_whenToSendCrashes)),             new AppCenterReactNativeAnalyticsPackage(MainApplication.this, getResources().getString(R.string.appCenterAnalytics_whenToEnableAnalytics)),             new AppCenterReactNativePackage(MainApplication.this),             new KeychainPackage(),             new RNI18nPackage()         );     }           @Nullable     @Override     public List&lt;ReactPackage&gt; createAdditionalReactPackages() {         return getPackages();     } }  ```   build.gradle ``` apply plugin: "com.android.application"  import com.android.build.OutputFile  /**  * The react.gradle file registers a task for each build variant (e.g. bundleDebugJsAndAssets  * and bundleReleaseJsAndAssets).  * These basically call `react-native bundle` with the correct arguments during the Android build  * cycle. By default, bundleDebugJsAndAssets is skipped, as in debug/dev mode we prefer to load the  * bundle directly from the development server. Below you can see all the possible configurations  * and their defaults. If you decide to add a configuration block, make sure to add it before the  * `apply from: "../../node_modules/react-native/react.gradle"` line.  *  * project.ext.react = [  *   // the name of the generated asset file containing your JS bundle  *   bundleAssetName: "index.android.bundle",  *  *   // the entry file for bundle generation  *   entryFile: "index.android.js",  *  *   // whether to bundle JS and assets in debug mode  *   bundleInDebug: false,  *  *   // whether to bundle JS and assets in release mode  *   bundleInRelease: true,  *  *   // whether to bundle JS and assets in another build variant (if configured).  *   // See http://tools.android.com/tech-docs/new-build-system/user-guide#TOC-Build-Variants  *   // The configuration property can be in the following formats  *   //         'bundleIn${productFlavor}${buildType}'  *   //         'bundleIn${buildType}'  *   // bundleInFreeDebug: true,  *   // bundleInPaidRelease: true,  *   // bundleInBeta: true,  *  *   // whether to disable dev mode in custom build variants (by default only disabled in release)  *   // for example: to disable dev mode in the staging build type (if configured)  *   devDisabledInStaging: true,  *   // The configuration property can be in the following formats  *   //         'devDisabledIn${productFlavor}${buildType}'  *   //         'devDisabledIn${buildType}'  *  *   // the root of your project, i.e. where "package.json" lives  *   root: "../../",  *  *   // where to put the JS bundle asset in debug mode  *   jsBundleDirDebug: "$buildDir/intermediates/assets/debug",  *  *   // where to put the JS bundle asset in release mode  *   jsBundleDirRelease: "$buildDir/intermediates/assets/release",  *  *   // where to put drawable resources / React Native assets, e.g. the ones you use via  *   // require('./image.png')), in debug mode  *   resourcesDirDebug: "$buildDir/intermediates/res/merged/debug",  *  *   // where to put drawable resources / React Native assets, e.g. the ones you use via  *   // require('./image.png')), in release mode  *   resourcesDirRelease: "$buildDir/intermediates/res/merged/release",  *  *   // by default the gradle tasks are skipped if none of the JS files or assets change; this means  *   // that we don't look at files in android/ or ios/ to determine whether the tasks are up to  *   // date; if you have any other folders that you want to ignore for performance reasons (gradle  *   // indexes the entire tree), add them here. Alternatively, if you have JS files in android/  *   // for example, you might want to remove it from here.  *   inputExcludes: ["android/**", "ios/**"],  *  *   // override which node gets called and with what additional arguments  *   nodeExecutableAndArgs: ["node"],  *  *   // supply additional arguments to the packager  *   extraPackagerArgs: []  * ]  */  project.ext.react = [     entryFile: "index.js" ]  apply from: "../../node_modules/react-native/react.gradle"  /**  * Set this to true to create two separate APKs instead of one:  *   - An APK that only works on ARM devices  *   - An APK that only works on x86 devices  * The advantage is the size of the APK is reduced by about 4MB.  * Upload all the APKs to the Play Store and people will download  * the correct one based on the CPU architecture of their device.  */ def enableSeparateBuildPerCPUArchitecture = false  /**  * Run Proguard to shrink the Java bytecode in release builds.  */ def enableProguardInReleaseBuilds = false  android {     compileSdkVersion 26     buildToolsVersion '27.0.3'       defaultConfig {         applicationId "xxxxxxxxxxx"         minSdkVersion 19         targetSdkVersion 25         versionCode 1         versionName "1.0"         ndk {             abiFilters "armeabi-v7a", "x86"         }         //multiDexEnabled = true     }       compileOptions {          sourceCompatibility JavaVersion.VERSION_1_8          targetCompatibility JavaVersion.VERSION_1_8      }     splits {         abi {             reset()             enable enableSeparateBuildPerCPUArchitecture             universalApk false  // If true, also generate a universal APK             include "armeabi-v7a", "x86"         }     }     buildTypes {         release {             minifyEnabled enableProguardInReleaseBuilds             proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"         }     }     // applicationVariants are e.g. debug, release     applicationVariants.all { variant -&gt;         variant.outputs.each { output -&gt;             // For each separate APK per architecture, set a unique version code as described here:             // http://tools.android.com/tech-docs/new-build-system/user-guide/apk-splits             def versionCodes = ["armeabi-v7a":1, "x86":2]             def abi = output.getFilter(OutputFile.ABI)             if (abi != null) {  // null for the universal-debug, universal-release variants                 output.versionCodeOverride =                         versionCodes.get(abi) * 1048576 + defaultConfig.versionCode             }         }     } }  dependencies {     // added that to resolved compatitibility issues     configurations.all {         resolutionStrategy.eachDependency { DependencyResolveDetails details -&gt;             def requested = details.requested             if (requested.group == 'com.android.support' &amp;&amp; details.requested.name != 'multidex') {                 details.useVersion '27.0.+'             }         }     }     //implementation 'com.android.support:multidex:1.0.1'     implementation project(':appcenter-crashes')     implementation project(':appcenter-analytics')     implementation project(':appcenter')     implementation project(':react-native-keychain')     implementation project(':react-native-i18n')     implementation fileTree(dir: "libs", include: ["*.jar"])     implementation "com.facebook.react:react-native:+"  // From node_modules     implementation fileTree(dir: "libs", include: ["*.jar"])     implementation project(':react-native-navigation')    }  // Run this once to be able to run the application with BUCK // puts all compile dependencies into folder libs for BUCK to use task copyDownloadableDepsToLibs(type: Copy) {     from configurations.compile     into 'libs' }   ```  ### Steps to Reproduce / Code Snippets / Screenshots  [FILL THIS OUT - It will be extremely helpful]  --- ### Environment * React Native Navigation version: 2.0.2324 * React Native version: 0.54.0 * Platform(s) (iOS, Android, or both?): Android * Device info (Simulator/Device? OS version? Debug/Release?): Android Device/Emulator </body>
		<created>2018-06-06 17:38:03</created>
		<closed>2018-06-11 11:13:48</closed>
	</bug>
	<bug>
		<id>3306</id>
		<title>Rename startApp animation to setRoot</title>
		<body></body>
		<created>2018-06-05 12:54:05</created>
		<closed>2018-09-16 13:20:00</closed>
	</bug>
	<bug>
		<id>3292</id>
		<title>Can't change the statusBar settings on a page in layoutType: sideMenu</title>
		<body>### Issue Description  The settings of the statusBar can't be changed on a page that's in a layoutType: sideMenu. It currently works on all the other layoutTypes.   The same problem exists in the playground app.   ### Steps to Reproduce / Code Snippets / Screenshots  ```js statusBar: {       style: 'light',       visible: true, }, ```  ![without sidemenu](https://user-images.githubusercontent.com/1283800/40905290-bfa8997e-67dd-11e8-8be0-74153462e8e2.png) ![with sidemenu](https://user-images.githubusercontent.com/1283800/40905291-bfda2c14-67dd-11e8-8b64-cbb42ff1be7c.png)  --- ### Environment * React Native Navigation version: 2.0.2312 * React Native version: 0.55.4 * Platform(s) (iOS, Android, or both?): iOS * Device info (Simulator/Device? OS version? Debug/Release?): Simulator (iPhone X, 8) and iPhone 7, iOS 11.4,  Debug &amp; Release </body>
		<created>2018-06-04 08:01:11</created>
		<closed>2018-06-07 09:05:28</closed>
	</bug>
	<bug>
		<id>3209</id>
		<title>[v2] bottomTabs visible false is not working</title>
		<body>## Steps to Reproduce / Code Snippets / Screenshots I have set `bottomTabs: { visible: false }` before `setRoot` and `registerScreens` as following:  ```js     Navigation.events().registerAppLaunchedListener(async () =&gt; {        await Navigation.setDefaultOptions({         popGesture: false,         bottomTabs: {           visible: false,           drawBehind: false,           translucent: false,           hideShadow: true,           backgroundColor: '#0f0'         }       });        await registerScreens();        Navigation.setRoot({         bottomTabs: {           children: [             {               component: {                 name: 'screens.Home',                 passProps: {                   text: 'This is tab 1'                 }               }             },             {               component: {                 name: 'screens.Album',                 passProps: {                   text: 'This is tab 2'                 }               }             }           ]         }       });     }); ```  My HomeScreen component didn't put any extra config as following:      import React, { Component } from 'react';     import { View } from 'react-native';      export default class HomeScreen extends Component {       constructor(props) {         super(props);       }        render() {         return (           &lt;View style={{flex: 1, backgroundColor: '#f00'}}&gt;           &lt;/View&gt;         );       }     }  The result is like below screenshots: ![2018-05-15 7 00 08](https://user-images.githubusercontent.com/9659080/40052990-3aa55886-5872-11e8-9ec2-77dedeb0f4cf.png)  The tabBar didn't hide completely, with some space left at the bottom (green area).  **NOTE: This should be a BUG, I have tried all solution provided inside RNN v2 guide.**   Someone please help! ## Environment React Native Navigation version: 2.0.2286 React Native version: 0.52.0 Platform(s) (iOS, Android, or both?): IOS Device info (Simulator/Device? OS version? Debug/Release?): iPhone X simulator, iPhone 6, in Debug mode</body>
		<created>2018-05-15 11:01:41</created>
		<closed>2018-06-24 11:46:25</closed>
	</bug>
	<bug>
		<id>3195</id>
		<title>[v2] Reload results in multiple remounts during initialization</title>
		<body>### Issue Description  I am getting a very odd behavior where on reload (rr on Android) my app would mount several times, while running a hard `react-native run-android` would start the app correctly. It prevents my second level components from correctly receiving the parent's props as the multiple reloads causes empty props to be passed through while it was mounting.   ``` # This is the result of reloading once:  ReactNativeJS: Running application "navigation.playground.TopTabOptionsScreen" with appParams: {"initialProps":{"componentId":"Component4"},"rootTag":211}. __DEV__ === true, development-level warning are ON, performance optimizations are OFF ReactNativeJS: Running application "navigation.playground.TopTabScreen" with appParams: {"initialProps":{"componentId":"Component5"},"rootTag":221}. __DEV__ === true, development-level warning are ON, performance optimizations are OFF ReactNativeJS: Running application "navigation.playground.TopTabScreen" with appParams: {"initialProps":{"componentId":"Component6"},"rootTag":231}. __DEV__ === true, development-level warning are ON, performance optimizations are OFF ReactNative: ReactInstanceManager.attachRootViewToInstance() ReactNativeJS: Running application "navigation.playground.WelcomeScreen" with appParams: {"initialProps":{"componentId":"Component1"},"rootTag":241}. __DEV__ === true, development-level warning are ON, performance optimizations are OFF ```   ### Steps to Reproduce  I was able to reproduce on the playground example by installing the app on an Android device, launching, and reloading it with live-reload enabled or disabled.  Full stack of two reloads:  ``` 05-11 12:16:13.508  2461  2461 D ReactNative: ReactInstanceManager.detachViewFromInstance() 05-11 12:16:13.689  2461  2461 D ReactNative: ReactInstanceManager.onJSBundleLoadedFromServer() 05-11 12:16:13.689  2461  2461 D ReactNative: ReactInstanceManager.recreateReactContextInBackground() 05-11 12:16:13.689  2461  2461 D ReactNative: ReactInstanceManager.runCreateReactContextOnNewThread() 05-11 12:16:13.689  2461  2461 D ReactNative: ReactInstanceManager.tearDownReactContext() 05-11 12:16:13.689  2461  2461 D ReactNative: CatalystInstanceImpl.destroy() start 05-11 12:16:13.690  2461  3499 D ReactNative: ReactInstanceManager.createReactContext() 05-11 12:16:13.721  2461  3499 D ReactNative: Initializing React Xplat Bridge. 05-11 12:16:13.723  2461  3499 D ReactNative: Initializing React Xplat Bridge before initializeBridge 05-11 12:16:13.733  2461  2477 D ReactNative: CatalystInstanceImpl.destroy() end 05-11 12:16:13.734  2461  3499 D ReactNative: Initializing React Xplat Bridge after initializeBridge 05-11 12:16:13.734  2461  3499 D ReactNative: CatalystInstanceImpl.runJSBundle() 05-11 12:16:13.734  2461  3501 D ReactNative: ReactInstanceManager.setupReactContext() 05-11 12:16:13.734  2461  3501 D ReactNative: CatalystInstanceImpl.initialize() 05-11 12:16:13.735  2461  3501 D ReactNative: ReactInstanceManager.attachRootViewToInstance() 05-11 12:16:13.735  2461  3501 D ReactNative: ReactInstanceManager.attachRootViewToInstance() 05-11 12:16:13.735  2461  3501 D ReactNative: ReactInstanceManager.attachRootViewToInstance() 05-11 12:16:13.936  2461  3500 I ReactNativeJS: Running application "navigation.playground.TopTabOptionsScreen" with appParams: {"initialProps":{"componentId":"Component4"},"rootTag":211}. __DEV__ === true, development-level warning are ON, performance optimizations are OFF 05-11 12:16:13.957  2461  3500 I ReactNativeJS: Running application "navigation.playground.TopTabScreen" with appParams: {"initialProps":{"componentId":"Component5"},"rootTag":221}. __DEV__ === true, development-level warning are ON, performance optimizations are OFF 05-11 12:16:13.962  2461  3500 I ReactNativeJS: Running application "navigation.playground.TopTabScreen" with appParams: {"initialProps":{"componentId":"Component6"},"rootTag":231}. __DEV__ === true, development-level warning are ON, performance optimizations are OFF 05-11 12:16:13.980  2461  2461 D ReactNative: ReactInstanceManager.attachRootViewToInstance() 05-11 12:16:13.980  2461  3500 I ReactNativeJS: Running application "navigation.playground.WelcomeScreen" with appParams: {"initialProps":{"componentId":"Component1"},"rootTag":241}. __DEV__ === true, development-level warning are ON, performance optimizations are OFF 05-11 12:27:13.716  2461  2461 D ReactNative: ReactInstanceManager.detachViewFromInstance() 05-11 12:27:14.224  2461  2461 D ReactNative: ReactInstanceManager.onJSBundleLoadedFromServer() 05-11 12:27:14.224  2461  2461 D ReactNative: ReactInstanceManager.recreateReactContextInBackground() 05-11 12:27:14.224  2461  2461 D ReactNative: ReactInstanceManager.runCreateReactContextOnNewThread() 05-11 12:27:14.224  2461  2461 D ReactNative: ReactInstanceManager.tearDownReactContext() 05-11 12:27:14.225  2461  2461 D ReactNative: CatalystInstanceImpl.destroy() start 05-11 12:27:14.227  2461  5787 D ReactNative: ReactInstanceManager.createReactContext() 05-11 12:27:14.266  2461  5787 D ReactNative: Initializing React Xplat Bridge. 05-11 12:27:14.308  2461  2539 D ReactNative: CatalystInstanceImpl.destroy() end 05-11 12:27:14.316  2461  5787 D ReactNative: Initializing React Xplat Bridge before initializeBridge 05-11 12:27:14.319  2461  5787 D ReactNative: Initializing React Xplat Bridge after initializeBridge 05-11 12:27:14.319  2461  5787 D ReactNative: CatalystInstanceImpl.runJSBundle() 05-11 12:27:14.319  2461  5789 D ReactNative: ReactInstanceManager.setupReactContext() 05-11 12:27:14.319  2461  5789 D ReactNative: CatalystInstanceImpl.initialize() 05-11 12:27:14.320  2461  5789 D ReactNative: ReactInstanceManager.attachRootViewToInstance() 05-11 12:27:14.320  2461  5789 D ReactNative: ReactInstanceManager.attachRootViewToInstance() 05-11 12:27:14.320  2461  5789 D ReactNative: ReactInstanceManager.attachRootViewToInstance() 05-11 12:27:14.678  2461  5788 I ReactNativeJS: Running application "navigation.playground.TopTabOptionsScreen" with appParams: {"initialProps":{"componentId":"Component4"},"rootTag":251}. __DEV__ === true, development-level warning are ON, performance optimizations are OFF 05-11 12:27:14.708  2461  5788 I ReactNativeJS: Running application "navigation.playground.TopTabScreen" with appParams: {"initialProps":{"componentId":"Component5"},"rootTag":261}. __DEV__ === true, development-level warning are ON, performance optimizations are OFF 05-11 12:27:14.715  2461  5788 I ReactNativeJS: Running application "navigation.playground.TopTabScreen" with appParams: {"initialProps":{"componentId":"Component6"},"rootTag":271}. __DEV__ === true, development-level warning are ON, performance optimizations are OFF 05-11 12:27:14.745  2461  2461 D ReactNative: ReactInstanceManager.attachRootViewToInstance() 05-11 12:27:14.746  2461  5788 I ReactNativeJS: Running application "navigation.playground.WelcomeScreen" with appParams: {"initialProps":{"componentId":"Component1"},"rootTag":281}. __DEV__ === true, development-level warning are ON, performance optimizations are OFF ```  --- ### Environment * React Native Navigation version: 2.0.0 (v2 branch c47a3771eaa2cd57e9d08150dcdfb34ce791d2ee) * React Native version: 0.51.1 * Platform(s) (iOS, Android, or both?): Android * Device info (Simulator/Device? OS version? Debug/Release?): Device/Simulator Debug. </body>
		<created>2018-05-11 16:33:09</created>
		<closed>2018-06-20 06:35:35</closed>
	</bug>
	<bug>
		<id>3171</id>
		<title>[v2] Error in pushing component</title>
		<body>### Issue Description  I am quite sure I haven't made any changes to my code, but a recent npm install, with all versions remaining same, Navigation.push is throwing a warning:  &gt; push should be called from a stack child component  I am not even sure what this means! Here's the layout I am using right now:    ```js LoginStack: {     stack: {       children: [{         component: {           name: 'Login'         }       }]     }   }  ```  And this is what I am using to push:  ```js Navigation.push(this.props.componentId, {   component: {     name: 'OTP',     passProps: {phone: this.state.phone}   } }) ``` ### Steps to Reproduce / Code Snippets / Screenshots  ![img_681c89cb4aa6-1](https://user-images.githubusercontent.com/523335/39719647-76c78dc8-5257-11e8-8b3a-2637a2f284ba.jpeg)  --- ### Environment * React Native Navigation version: 2.0.2274 * React Native version: 0.55.3 * Platform(s) (iOS, Android, or both?): iOS * Device info (Simulator/Device? OS version? Debug/Release?): Device </body>
		<created>2018-05-07 19:04:33</created>
		<closed>2018-06-06 22:44:09</closed>
	</bug>
	<bug>
		<id>2621</id>
		<title>How to disable sideMenu on current screen?</title>
		<body> ### Issue Description How to disable sideMenu on current window even user swipe right or left on the screen  ### Environment * React Native Navigation version: 2.0.2016 (V2) * React Native version: 0.52.2 * Platform(s) (iOS, Android, or both?): both * Device info (Simulator/Device? OS version? Debug/Release?): all </body>
		<created>2018-02-01 11:20:11</created>
		<closed>2018-11-04 09:37:18</closed>
	</bug>
	<bug>
		<id>1642</id>
		<title>Plan for redux support in v2? (HOC support)</title>
		<body>I'm looking to switch from v1 to v2, but the first thing I noticed was that when registering containers, you can no longer pass in the store and Provider. Is this in the roadmap?</body>
		<created>2017-08-04 22:50:21</created>
		<closed>2018-07-11 09:31:53</closed>
	</bug>
</bugs>
