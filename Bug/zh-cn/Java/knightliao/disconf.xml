<?xml version="1.0" encoding="ISO-8859-1"?>

<bugs>
	<bug>
		<id>166</id>
		<title>除zookeeper放在linux系统中，其他都是window系统测试出现java.nio.file.InvalidPathException</title>
		<body></body>
		<created>2016-09-07 10:00:20</created>
		<closed>2016-09-11 15:57:18</closed>
	</bug>
	<bug>
		<id>158</id>
		<title>disconf不支持https</title>
		<body>在com.baidu.disconf.core.common.restful.core.RemoteUrl.RemoteUrl(String, List&lt;String&gt;)里面，以下代码                 if (!server.contains("http://")) {                     server = "http://" + server;                 } 写死了，配置如果没有http://，那么会自动加上。但如果disconf-web是https，则无论如何都支持不了。 </body>
		<created>2016-08-31 02:15:34</created>
		<closed>2016-09-11 15:57:02</closed>
	</bug>
	<bug>
		<id>89</id>
		<title>java.lang.IllegalArgumentException: wrong number of arguments</title>
		<body>@knightliao, 升级disconf到2.6.32时发现一个问题，异常堆栈为： 20160427 10:18:34.688 ERROR com.baidu.disconf.client.store.processor.impl.DisconfStoreFileProcessorImpl. main inject2Instance [fileName,fileItem]:[basicproxyrouter.properties,proxy.routerRateEnable] java.lang.IllegalArgumentException: wrong number of arguments java.lang.IllegalArgumentException: wrong number of arguments     at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.7.0_80]     at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57) ~[?:1.7.0_80]     at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.7.0_80]     at java.lang.reflect.Method.invoke(Method.java:606) ~[?:1.7.0_80]     at com.baidu.disconf.client.common.model.DisconfCenterFile$FileItemValue.setValue4FileItem(DisconfCenterFile.java:216) ~[classes/:?]     at com.baidu.disconf.client.store.processor.impl.DisconfStoreFileProcessorImpl.inject2Instance(DisconfStoreFileProcessorImpl.java:148) ~[classes/:?]     at com.baidu.disconf.client.core.processor.impl.DisconfFileCoreProcessorImpl.inject2OneConf(DisconfFileCoreProcessorImpl.java:237) ~[classes/:?]     at com.baidu.disconf.client.core.processor.impl.DisconfFileCoreProcessorImpl.inject2Conf(DisconfFileCoreProcessorImpl.java:257) ~[classes/:?]     at com.baidu.disconf.client.core.impl.DisconfCoreMgrImpl.inject2DisconfInstance(DisconfCoreMgrImpl.java:95) ~[classes/:?]     at com.baidu.disconf.client.DisconfMgr.secondScan(DisconfMgr.java:139) ~[classes/:?]     at com.baidu.disconf.client.DisconfMgrBeanSecond.init(DisconfMgrBeanSecond.java:13) ~[classes/:?]     at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.7.0_80]     at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57) ~[?:1.7.0_80]     at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.7.0_80]     at java.lang.reflect.Method.invoke(Method.java:606) ~[?:1.7.0_80]  说明： 1. 略微改了一下源码DisconfStoreFileProcessorImpl中inject2Instance捕获到异常的打印（把fileItem）    加进来 1. 配置及其对应说明    2.1 配置文件中的proxy.routerRateEnable为布尔值（proxy.routerRateEnable=true）         对应的配置bean的属性为routerRateLimitEnable，相当于         private boolean routerRateLimitEnable;        ```    @DisconfFileItem(name = "proxy.routerRateEnable", associateField = "routerRateLimitEnable")    ```        @Override    public boolean isRouterRateLimitEnable() {        return routerRateLimitEnable;    }        2.2 我测试了2.6.31和2.6.32,——即将enable.remote.conf=false使用前面一个版本（2.6.31）则没有报错（可以正常将本地的配置与配置BEAN完成映射），但2.6.32则报错了        2.3  经追溯源码DisconfCenterFile中setValue4FileItem方法中setMethod.invoke(object, value) 这个处理报错了（反射），但不清楚是什么原因——貌似对一些boolean属性的存在问题（非boolean则OK）  @knightliao, 有时间确定后可否回复。 </body>
		<created>2016-04-27 02:35:20</created>
		<closed>2016-05-31 09:16:14</closed>
	</bug>
	<bug>
		<id>77</id>
		<title>新增配置项，值可以为空格，修改该配置项，就算改为有效字符，都会提示“服务器内部错误”</title>
		<body>新增配置项，配置值设为空格，修改该配置项，配置值就算改为有效字符，都会提示“服务器内部错误” 后台日志为： 17:59:27.676 [http-bio-8080-exec-2] WARN  c.b.d.c.handler.MyExceptionHandler - details:  java.lang.IllegalArgumentException: original must not be null         at difflib.DiffUtils.diff(DiffUtils.java:95) ~[diffutils-1.3.0.jar:na]         at difflib.DiffUtils.diff(DiffUtils.java:51) ~[diffutils-1.3.0.jar:na]         at com.baidu.disconf.web.common.comparator.StringComparator.getDeltas(StringComparator.java:32) ~[classes/:na]         at com.baidu.disconf.web.common.comparator.CommonComparator.getChunksByType(CommonComparator.java:31) ~[classes/:na]         at com.baidu.disconf.web.common.comparator.CommonComparator.getChangesFromOriginal(CommonComparator.java:16) ~[classes/:na]         at com.baidu.disconf.web.utils.DiffUtils.getDiff(DiffUtils.java:55) ~[classes/:na]         at com.baidu.disconf.web.service.config.service.impl.ConfigMgrImpl.updateItemValue(ConfigMgrImpl.java:428) ~[classes/:na]         at com.baidu.disconf.web.service.config.service.impl.ConfigMgrImpl$$FastClassBySpringCGLIB$$7099537e.invoke(&lt;generated&gt;) ~[spring-core-4.1.7.RELEASE.jar:na]         at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204) ~[spring-core-4.1.7.RELEASE.jar:4.1.7.RELEASE]         at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717) ~[spring-aop-4.1.7.RELEASE.jar:4.1.7.RELEASE]         at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157) ~[spring-aop-4.1.7.RELEASE.jar:4.1.7.RELEASE]         at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99) ~[spring-tx-4.1.7.RELEASE.jar:4.1.7.RELEASE]         at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:281) ~[spring-tx-4.1.7.RELEASE.jar:4.1.7.RELEASE]         at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96) ~[spring-tx-4.1.7.RELEASE.jar:4.1.7.RELEASE]         at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179) ~[spring-aop-4.1.7.RELEASE.jar:4.1.7.RELEASE]         at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653) ~[spring-aop-4.1.7.RELEASE.jar:4.1.7.RELEASE]         at com.baidu.disconf.web.service.config.service.impl.ConfigMgrImpl$$EnhancerBySpringCGLIB$$11c0729a.updateItemValue(&lt;generated&gt;) ~[spring-core-4.1.7.RELEASE.jar:na]         at com.baidu.disconf.web.web.config.controller.ConfigUpdateController.updateItem(ConfigUpdateController.java:66) ~[classes/:na]         at com.baidu.disconf.web.web.config.controller.ConfigUpdateController$$FastClassBySpringCGLIB$$d464ad9d.invoke(&lt;generated&gt;) ~[spring-core-4.1.7.RELEASE.jar:na]         at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204) ~[spring-core-4.1.7.RELEASE.jar:4.1.7.RELEASE]         at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717) ~[spring-aop-4.1.7.RELEASE.jar:4.1.7.RELEASE]         at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157) ~[spring-aop-4.1.7.RELEASE.jar:4.1.7.RELEASE]         at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85) ~[spring-aop-4.1.7.RELEASE.jar:4.1.7.RELEASE]         at com.baidu.disconf.web.service.roleres.service.RoleResourceAspect.decideAccess(RoleResourceAspect.java:109) ~[classes/:na]         at sun.reflect.GeneratedMethodAccessor105.invoke(Unknown Source) ~[na:na]         at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.jav </body>
		<created>2016-04-01 10:05:07</created>
		<closed>2016-05-31 09:16:05</closed>
	</bug>
	<bug>
		<id>76</id>
		<title>No class found excepetion for org.codehaus.jackson.Xxxxx</title>
		<body>disconf-web中 com.baidu.dsp.common.interceptor.WebCommonInterceptor #returnJsonSystemError 中用到apollo-xxx.jar中 com.github.knightliao.apollo.utils.data.JsonUtils.  而JsonUtils类import了org.codehaus.jackson.Xxxxx，但org.codehaus.jackson jar包默认不会打到最终war包的。 </body>
		<created>2016-04-01 02:34:36</created>
		<closed>2016-05-31 09:15:48</closed>
	</bug>
</bugs>
