<?xml version="1.0" encoding="ISO-8859-1"?>

<bugs>
	<bug>
		<id>1173</id>
		<title>在DialogFragment中使用时出现java.lang.IllegalArgumentException: Illegal pattern character 't'</title>
		<body>**详细描述** 使用ClassicsHeader 必出现 定位源代码位置是ClassicsHeader 205行 DateFormat初始化的地方        mLastUpdateFormat = new SimpleDateFormat(mTextUpdate, Locale.getDefault());  **使用版本** ```gradle implementation 'com.scwang.smartrefresh:SmartRefreshLayout:1.1.2'  implementation 'com.scwang.smartrefresh:SmartRefreshHeader:1.1.2'  ``` </body>
		<created>2020-06-02 09:23:36</created>
		<closed>2020-06-02 09:34:30</closed>
	</bug>
	<bug>
		<id>1167</id>
		<title>SmartRefreshLayout+CoordinatorLayout 上拉加载的时候 置顶的view也滑动上去了</title>
		<body>在android10上,我运行你的demo是也如此</body>
		<created>2020-05-27 14:43:40</created>
		<closed>2020-05-28 08:26:02</closed>
	</bug>
	<bug>
		<id>1164</id>
		<title>多次调用autoRefresh或者autoRefreshAnimationOnly转圈时候中间的动画圆弧会直接变成圆形</title>
		<body>如题。正常来说，转圈中间的动画是带箭头弧形的，但是多次调用refresh后，直接变成圆形。 用的是这种类别：srl.setRefreshHeader(new MaterialHeader(this));  多次调用后，ui错误，变成圆形而不是箭头动画的弧形 srl.autoRefreshAnimationOnly(); srl.autoRefreshAnimationOnly(); srl.autoRefreshAnimationOnly();</body>
		<created>2020-05-25 03:03:42</created>
		<closed>2020-05-27 05:10:46</closed>
	</bug>
	<bug>
		<id>1162</id>
		<title>调用autoRefresh，刷新后再调用finishRefresh，RefreshHeader的onFinish方法不会回调</title>
		<body>调用autoRefresh，刷新后再调用finishRefresh，RefreshHeader的onFinish方法不会回调</body>
		<created>2020-05-22 07:55:48</created>
		<closed>2020-05-22 08:46:01</closed>
	</bug>
	<bug>
		<id>1161</id>
		<title>在xml里写布局的时候 SmartRefreshLayout里写布局无法预览布局</title>
		<body>在xml里写布局的时候 SmartRefreshLayout里写布局无法预览布局</body>
		<created>2020-05-21 09:17:17</created>
		<closed>2020-05-22 14:31:54</closed>
	</bug>
	<bug>
		<id>1146</id>
		<title>淘宝二楼那个demo不能触发刷新事件，你看看</title>
		<body> 淘宝二楼那个不能触发刷新事件</body>
		<created>2020-04-23 09:26:22</created>
		<closed>2020-04-23 11:03:59</closed>
	</bug>
	<bug>
		<id>1133</id>
		<title>2.0.0版本setFooterInsetStartPx()把值设到header里去了。</title>
		<body>**详细描述** 2.0.0版本setFooterInsetStartPx()把值设到header里去了。  **使用版本** ```gradle implementation 'com.scwang.smartrefresh:SmartRefreshLayout:2.0.0'  ``` **使用代码** ```java     /**      * Set the Footer's start offset.      * 设置 Footer 起始偏移量（用处和 setFooterInsetStartPx 一样）      * @param insetPx 像素      * @return RefreshLayout      */     @Override     public RefreshLayout setFooterInsetStartPx(int insetPx) {         mHeaderInsetStart = insetPx;         return this;     }  ```  </body>
		<created>2020-03-30 11:17:27</created>
		<closed>2020-03-31 03:37:42</closed>
	</bug>
	<bug>
		<id>1123</id>
		<title>[ConstraintLayout约束位置布局显示不全]</title>
		<body>**详细描述** 在使用ConstraintLayout布局中，指定SmartRefreshLayout位于某个view之下预览recycleView高度不能完全展开，运行时高度也不能撑满SmartRefreshLayout SmartRefreshLayout设置为wrap_content，数据多就不能滚动，因为已经超出屏幕底部 recycleView只能指定高度dp才能适配上 **使用版本** ```gradle implementation 'com.scwang.smartrefresh:SmartRefreshLayout:1.1.2'  implementation 'com.scwang.smartrefresh:SmartRefreshHeader:1.1.2'  ```  **布局代码** ```xml &lt;androidx.constraintlayout.widget.ConstraintLayout&gt; &lt;tv/&gt; &lt;tv/&gt;  &lt;!--希望SmartRefreshLayout占据固定的屏幕高度 50% 70% ... --&gt;   &lt;com.scwang.smartrefresh.layout.SmartRefreshLayout             android:id="@+id/refresh"             android:layout_width="0dp"             android:layout_height="0dp"             android:layout_marginTop="@dimen/dp_6"             app:layout_constraintBottom_toBottomOf="parent"             app:layout_constraintEnd_toEndOf="parent"             app:layout_constraintStart_toStartOf="parent"             app:layout_constraintTop_toBottomOf="@id/tv_h1"&gt;          &lt;androidx.recyclerview.widget.RecyclerView                 android:id="@+id/rv_product"                 android:layout_width="match_parent"                 android:layout_height="match_parent"                 android:overScrollMode="never"                 tools:itemCount="12"                 tools:listitem="@layout/item_rank_product_full" /&gt;      &lt;/com.scwang.smartrefresh.layout.SmartRefreshLayout&gt; &lt;/androidx.constraintlayout.widget.ConstraintLayout&gt; ```  </body>
		<created>2020-03-18 09:58:10</created>
		<closed>2020-05-31 14:11:52</closed>
	</bug>
	<bug>
		<id>1118</id>
		<title>列表快速滑动操作会把 Header或者Footer带出来一部分</title>
		<body>**详细描述** 列表快速滑动操作会把 Header或者Footer带出来一部分  **使用版本** ```gradle implementation 'com.scwang.smartrefresh:SmartRefreshLayout:1.0.3'  ``` </body>
		<created>2020-03-11 08:49:16</created>
		<closed>2020-05-31 14:20:00</closed>
	</bug>
	<bug>
		<id>1111</id>
		<title>刷新控件嵌套scrollview出现内容黑屏，有其他操作就会恢复原样</title>
		<body>**详细描述** 1、有自定义header 2、smartRefresh嵌套scrollview 3、进入页面，被包裹的内容黑屏 4、有其他操作  **使用版本** ```gradle  api 'com.scwang.smartrefresh:SmartRefreshLayout:1.1.0'  api 'com.scwang.smartrefresh:SmartRefreshHeader:1.1.0' ``` **使用代码** ```java  mRefreshLayout.setRefreshHeader(new TjRefreshHeader(mWeakReference.get()));         mRefreshLayout.setHeaderHeight(60);         //下拉刷新         mRefreshLayout.setOnRefreshListener(refreshLayout -&gt; {             initData(true);         }); ``` ```java  mRefreshLayout.setEnableRefresh(isNeed); ``` **布局代码** ```xml &lt;?xml version="1.0" encoding="utf-8"?&gt; &lt;RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"     xmlns:bind="http://schemas.android.com/apk/res-auto"     xmlns:tools="http://schemas.android.com/tools"     android:layout_width="match_parent"     android:layout_height="match_parent"     android:background="@color/white"     android:focusable="true"     android:focusableInTouchMode="true"     android:orientation="vertical"&gt;      &lt;RelativeLayout         android:id="@+id/rl_toolbar"         android:layout_width="match_parent"         android:layout_height="56.5dp"&gt;          &lt;ImageView             android:id="@+id/iv_back"             android:layout_width="wrap_content"             android:layout_height="match_parent"             android:paddingLeft="@dimen/margin_size"             android:paddingRight="20dp"             android:src="@drawable/ic_left_arrow" /&gt;          &lt;ImageView             android:id="@+id/iv_more"             android:layout_width="wrap_content"             android:layout_height="match_parent"             android:layout_alignParentRight="true"             android:paddingLeft="15dp"             android:paddingRight="@dimen/margin_size"             android:src="@drawable/icon_detail_more" /&gt;          &lt;ImageView             android:id="@+id/iv_share"             android:layout_width="wrap_content"             android:layout_height="match_parent"             android:layout_toLeftOf="@+id/iv_more"             android:paddingLeft="20dp"             android:paddingRight="15dp"             android:src="@drawable/icon_detail_share" /&gt;      &lt;/RelativeLayout&gt;      &lt;RelativeLayout         android:id="@+id/rl_bottom"         android:layout_width="match_parent"         android:layout_height="127dp"         android:layout_alignParentBottom="true"         android:background="@drawable/bg_notes_detail_conner"&gt;          &lt;SeekBar             android:id="@+id/skb_progress"             style="@style/Widget.SeekBar.Normal1"             android:layout_width="match_parent"             android:layout_height="wrap_content"             android:layout_gravity="center_vertical"             android:layout_marginTop="18dp"             android:background="@android:color/transparent"             android:indeterminate="false"             android:max="100"             android:paddingStart="20dp"             android:paddingTop="4dp"             android:paddingEnd="20dp"             android:paddingBottom="4dp"             android:progress="0"             android:splitTrack="false"             android:thumbOffset="0dp" /&gt;          &lt;TextView             android:id="@+id/txt_play_time"             android:layout_width="wrap_content"             android:layout_height="wrap_content"             android:layout_below="@+id/skb_progress"             android:layout_marginLeft="20dp"             android:layout_marginTop="3dp"             android:alpha="0.5"             android:text="00:00:00"             android:textColor="@color/color_text_normal"             android:textSize="14sp" /&gt;          &lt;TextView             android:id="@+id/txt_play_duration"             android:layout_width="wrap_content"             android:layout_height="wrap_content"             android:layout_below="@+id/skb_progress"             android:layout_alignParentRight="true"             android:layout_marginTop="3dp"             android:layout_marginRight="20dp"             android:alpha="0.5"             android:textColor="@color/color_text_normal"             android:textSize="14sp"             tools:text="00:00:00" /&gt;          &lt;RelativeLayout             android:layout_width="wrap_content"             android:layout_height="wrap_content"             android:layout_below="@+id/txt_play_duration"             android:layout_centerHorizontal="true"&gt;              &lt;ImageView                 android:id="@+id/iv_start_pause"                 android:layout_width="55dp"                 android:layout_height="55dp"                 android:src="@drawable/bg_notes_detail_player" /&gt;               &lt;RelativeLayout                 android:id="@+id/rl_buffering"                 android:layout_width="55dp"                 android:layout_height="55dp"                 android:background="@drawable/bg_circle"                 android:visibility="gone"&gt;                  &lt;com.airbnb.lottie.LottieAnimationView                     android:id="@+id/lottieAnimationView"                     android:layout_width="20dp"                     android:layout_height="20dp"                     android:layout_centerVertical="true"                     android:layout_marginLeft="20dp"                     android:visibility="invisible"                     bind:lottie_autoPlay="true"                     bind:lottie_fileName="buffring.json"                     bind:lottie_loop="true" /&gt;              &lt;/RelativeLayout&gt;          &lt;/RelativeLayout&gt;       &lt;/RelativeLayout&gt;      &lt;com.scwang.smartrefresh.layout.SmartRefreshLayout         android:id="@+id/refreshLayout"         android:layout_width="match_parent"         android:layout_height="match_parent"         android:layout_above="@+id/rl_bottom"         android:layout_below="@+id/rl_toolbar"&gt;          &lt;android.support.v4.widget.NestedScrollView             android:id="@+id/scv_content"             android:layout_width="match_parent"             android:layout_height="match_parent"             android:fillViewport="true"&gt;              &lt;LinearLayout                 android:layout_width="match_parent"                 android:layout_height="match_parent"                 android:background="@color/white"                 android:focusable="true"                 android:focusableInTouchMode="true"                 android:orientation="vertical"&gt;                  &lt;RelativeLayout                     android:id="@+id/rl_desc"                     android:layout_width="match_parent"                     android:layout_height="wrap_content"                     android:layout_marginLeft="@dimen/margin_size"                     android:layout_marginRight="@dimen/margin_size"                     android:focusable="true"                     android:focusableInTouchMode="true"&gt;                      &lt;com.xxx.xxx.customui.MediumBoldEditTextView                         android:id="@+id/edt_fileName"                         android:layout_width="match_parent"                         android:layout_height="wrap_content"                         android:background="@null"                         android:ellipsize="end"                         android:enabled="true"                         android:lines="1"                         android:maxLength="50"                         android:maxLines="1"                         android:scrollHorizontally="true"                         android:singleLine="true"                         android:textColor="@color/color_text_normal"                         android:textSize="25sp"                         tools:text="Notes" /&gt;                      &lt;TextView                         android:id="@+id/txt_date"                         android:layout_width="wrap_content"                         android:layout_height="wrap_content"                         android:layout_below="@+id/edt_fileName"                         android:layout_marginTop="8dp"                         android:alpha="0.5"                         android:textColor="@color/color_text_normal"                         android:textSize="12sp"                         tools:text="2019-08-07" /&gt;                      &lt;TextView                         android:id="@+id/txt_time"                         android:layout_width="wrap_content"                         android:layout_height="wrap_content"                         android:layout_below="@+id/edt_fileName"                         android:layout_marginLeft="8dp"                         android:layout_marginTop="8dp"                         android:layout_toRightOf="@+id/txt_date"                         android:alpha="0.5"                         android:drawableLeft="@drawable/ic_notes_time"                         android:drawablePadding="4dp"                         android:gravity="center_vertical"                         android:textColor="@color/color_text_normal"                         android:textSize="12sp"                         tools:text="04:21:08" /&gt;                  &lt;/RelativeLayout&gt;                  &lt;com.xxx.xxx.customui.NoteDetailStatusLayout                     android:id="@+id/nl_status"                     android:layout_width="match_parent"                     android:layout_height="wrap_content"                     android:layout_marginTop="12dp"                     android:visibility="gone"                     tools:visibility="visible" /&gt;                  &lt;FrameLayout                     android:layout_width="match_parent"                     android:layout_height="match_parent"                     android:layout_marginLeft="@dimen/margin_size"                     android:layout_marginRight="@dimen/margin_size"&gt;                      &lt;com.xxx.xxx.customui.NotesDetailEmptyView                         android:id="@+id/emptyView"                         android:layout_width="match_parent"                         android:layout_height="match_parent"                         android:visibility="gone" /&gt;                      &lt;android.support.v7.widget.AppCompatTextView                         android:id="@+id/txt_content"                         android:layout_width="match_parent"                         android:layout_height="match_parent"                         android:background="@null"                         android:hint="@string/wait_trans_tips1"                         android:lineSpacingExtra="4sp"                         android:padding="4dp"                         android:textColor="@color/color_96203152"                         android:textColorHint="@color/color_acb2c0"                         android:textCursorDrawable="@drawable/cursor_color"                         android:textSize="20sp"                         android:visibility="gone"                         tools:text="@string/home_voice_permission_setting" /&gt;                  &lt;/FrameLayout&gt;              &lt;/LinearLayout&gt;          &lt;/android.support.v4.widget.NestedScrollView&gt;      &lt;/com.scwang.smartrefresh.layout.SmartRefreshLayout&gt;      &lt;RelativeLayout         android:id="@+id/rl_location"         android:layout_width="60dp"         android:layout_height="35dp"         android:layout_alignParentRight="true"         android:layout_alignParentBottom="true"         android:layout_marginBottom="193.5dp"         android:background="@drawable/bg_notes_location"         android:visibility="gone"         tools:visibility="visible"&gt;          &lt;ImageView             android:layout_width="wrap_content"             android:layout_height="wrap_content"             android:layout_centerVertical="true"             android:layout_marginLeft="15dp"             android:src="@drawable/ic_notes_location" /&gt;      &lt;/RelativeLayout&gt;  &lt;/RelativeLayout&gt; ```  **问题重现** 问题重现操作步骤: 偶现  **预期行为** 对你期望发生的事情的清晰而简明的描述。  **屏幕截图** 如果适用，添加屏幕截图以帮助解释您的问题。  **设备信息** 请填写一下你运行设备的信息，信息越全越有助于我理解问题  - 设备名: 任意手机  - Android版本: 任意   </body>
		<created>2020-01-18 05:56:10</created>
		<closed>2020-01-18 06:43:12</closed>
	</bug>
	<bug>
		<id>1103</id>
		<title>设置某个header后，再设置其他header，后者的展示高度还是前的高度，即没有重新计算新设置header的高度，Demo中同样存在该问题！！！</title>
		<body>设置某个header后，再设置其他header，后者的展示高度还是前的高度，即没有重新计算新设置header的高度  demo也存在这问题，我录制了下视频  PhoenixHeader的高度为200dp MaterialHeader的高度为100dp  默认先设置MaterialHeader刷新头部，第一次动态设完PhoenixHeader刷新头部后，再动态设置MaterialHeader刷新头部，此时MaterialHeader的高度为200dp和预期的100dp不符合  由于新设置的MaterialHeader没有走测量逻辑，高度直接复用了上一个header的高度导致的！具体为什么没有走测量还没有发现问题……  ![71649716-e8d08c00-2d4b-11ea-9930-b95f5307f496](https://user-images.githubusercontent.com/20511081/71658598-a6c13d80-2d7f-11ea-89e8-3f24157e1f63.gif)    </body>
		<created>2020-01-02 08:48:25</created>
		<closed>2020-05-22 16:29:24</closed>
	</bug>
	<bug>
		<id>1100</id>
		<title>设置某个header后，再设置其他header，后者的展示高度还是前的高度，即没有重新计算新设置header的高度</title>
		<body>设置某个header后，再设置其他header，后者的展示高度还是前的高度，即没有重新计算新设置header的高度</body>
		<created>2019-12-23 06:25:58</created>
		<closed>2019-12-24 07:16:33</closed>
	</bug>
	<bug>
		<id>1093</id>
		<title>[SmartRefreshLayout 嵌套RecyclerView 嵌套滑动冲突问题]</title>
		<body>**详细描述**。   @scwang90 群主你好, 我这里遇到一个嵌套问题,还请指教一下~  **问题描述** 嵌套RecyclerView初次下拉刷新后,出现数据,往上滑动直接触发loadMore(RecyclerView的item数据能够支撑滑动),RecyclerView无法向上滑动; 此时也无法下拉刷新;  根据bug现象,初步确定是在向上滑动到屏幕底部是,SmartRefreshLayout吃掉了recyclerview的滑动事件;  **使用版本** ```gradle ext.refreshLayoutVersion = '2.0.0-alpha-1'  implementation "com.scwang.smart:refresh-layout-kernel:$refreshLayoutVersion"  implementation "com.scwang.smart:refresh-header-classics:$refreshLayoutVersion"  implementation "com.scwang.smart:refresh-footer-classics:$refreshLayoutVersion" ``` **使用代码** ```kotlin //Fragment中 override fun onViewCreated(view: View, savedInstanceState: Bundle?) {         super.onViewCreated(view, savedInstanceState)         if (mShowRefresh) {             refreshLayout.setRefreshHeader(ClassicsHeader(requireContext()))             refreshLayout.setRefreshFooter(ClassicsFooter(requireContext()))             refreshLayout.setEnableAutoLoadMore(false)             refreshLayout.setEnableLoadMoreWhenContentNotFull(false)             refreshLayout.setOnRefreshListener {                 doRefresh()             }             refreshLayout.setOnLoadMoreListener {                 doLoadMore()             }             refreshLayout.setEnableNestedScroll(true)         }     }      override fun doRefresh() {         Handler().postDelayed({             mViewModel.changedData()             refreshLayout.finishRefresh()         }, 2000)     }      override fun doLoadMore() {         refreshLayout.autoLoadMore()         Handler().postDelayed({             showLongToast("下滑")             refreshLayout.finishLoadMore()         }, 800)     }  ```  **布局代码** ```xml &lt;?xml version="1.0" encoding="utf-8"?&gt; &lt;FrameLayout xmlns:android="http://schemas.android.com/apk/res/android"     xmlns:app="http://schemas.android.com/apk/res-auto"     android:layout_width="match_parent"     android:layout_height="match_parent"     android:background="?attr/library.view.background"&gt;      &lt;androidx.coordinatorlayout.widget.CoordinatorLayout         android:id="@+id/coordinator_layout"         android:layout_width="match_parent"         android:layout_height="match_parent"&gt;          &lt;LinearLayout             android:layout_width="match_parent"             android:layout_height="match_parent"             android:orientation="vertical"&gt;              &lt;include layout="@layout/view_header_bar" /&gt;              &lt;com.scwang.smart.refresh.layout.SmartRefreshLayout                 android:id="@+id/refreshLayout"                 android:layout_width="match_parent"                 android:layout_height="0dp"                 android:layout_weight="1"                 android:layout_marginTop="1dp"&gt;                 &lt;com.airbnb.epoxy.EpoxyRecyclerView                     android:id="@+id/recycler_view"                     android:layout_width="match_parent"                     android:layout_height="match_parent"/&gt;             &lt;/com.scwang.smart.refresh.layout.SmartRefreshLayout&gt;         &lt;/LinearLayout&gt;     &lt;/androidx.coordinatorlayout.widget.CoordinatorLayout&gt; &lt;/FrameLayout&gt; ``` &gt; 注: 布局中EpoxyRecyclerView继承于Recyclerview, 切该类中均没有任何事件处理代码  **EpoxyRecyclerView源码,主要是包装了recycle的复用机制** ```java package com.airbnb.epoxy;  import //... public class EpoxyRecyclerView extends RecyclerView {    //...    @JvmOverloads    public EpoxyRecyclerView(@NotNull Context context, @Nullable AttributeSet attrs) {       this(context, attrs, 0, 4, (DefaultConstructorMarker)null);    }     @JvmOverloads    public EpoxyRecyclerView(@NotNull Context context) {       this(context, (AttributeSet)null, 0, 6, (DefaultConstructorMarker)null);    } } ``` **屏幕截图** 如果适用，添加屏幕截图以帮助解释您的问题。  **设备信息** 请填写一下你运行设备的信息，信息越全越有助于我理解问题  - 设备名: 小米9 SE  - Android版本: Android 9.0  - 系统版本: MIUI11.0.3  **gif** 由于GIF文件大于10MB, 通过邮件发送; </body>
		<created>2019-12-13 08:34:16</created>
		<closed>2019-12-13 09:35:34</closed>
	</bug>
	<bug>
		<id>1088</id>
		<title>手动调用 autoRefresh 无效的问题</title>
		<body>**详细描述** 手动调用 autoRefresh 无效的没有触发，是在Fragment里使用的   </body>
		<created>2019-12-11 07:12:19</created>
		<closed>2019-12-23 10:24:09</closed>
	</bug>
	<bug>
		<id>1082</id>
		<title>autoRefreshAnimationOnly引发的问题</title>
		<body>**详细描述** 第一次autoRefreshAnimationOnly ,然后关闭下拉刷新. 第二次手动滑动屏幕触发下拉刷新的时候,有时候不走 onRefreshListener 方法  **使用版本** ```gradle implementation 'com.scwang.smartrefresh:SmartRefreshLayout:1.1.0-andx-16 implementation 'com.scwang.smartrefresh:SmartRefreshHeader:1.1.0-andx-16'  ``` **使用代码** ```java SmartRefreshLayout().autoRefreshAnimationOnly(); ``` **问题重现** 问题重现操作步骤: 1. 设置仅执行刷新动画 autoRefreshAnimationOnly 2.在网络请求成功后,关闭了刷新动画 3.第二次快速下拉刷新,没有走onRefresh的回调. 一直显示刷新动画  **问题补充** 刚刚打印了 Header的log，在调用autoRefreshAnimationOnly 的时候，刷新结束时，有时候会不走 Header的onFinish方法。这个时候再次刷新就不会触发onRefresh 的回调  </body>
		<created>2019-12-04 03:40:17</created>
		<closed>2020-03-15 12:23:26</closed>
	</bug>
	<bug>
		<id>1080</id>
		<title>String建议</title>
		<body>&lt;string name="srl_header_pulling"&gt;\@下拉刷新&lt;/string&gt;     &lt;string name="srl_header_refreshing"&gt;\@正在刷新…&lt;/string&gt;     &lt;string name="srl_header_loading"&gt;\@正在加载…&lt;/string&gt;     &lt;string name="srl_header_release"&gt;\@释放刷新&lt;/string&gt;     &lt;string name="srl_header_finish"&gt;\@刷新完成&lt;/string&gt;     &lt;string name="srl_header_failed"&gt;\@刷新失败&lt;/string&gt;     &lt;string name="srl_header_update"&gt;\@上次更新 M-d HH:mm&lt;/string&gt;     &lt;string name="srl_header_secondary"&gt;\@进入二楼&lt;/string&gt;      &lt;string name="srl_footer_pulling"&gt;\@上拉加载&lt;/string&gt;     &lt;string name="srl_footer_release"&gt;\@释放加载&lt;/string&gt;     &lt;string name="srl_footer_loading"&gt;\@正在加载…&lt;/string&gt;     &lt;string name="srl_footer_refreshing"&gt;\@正在刷新…&lt;/string&gt;     &lt;string name="srl_footer_finish"&gt;\@加载完成&lt;/string&gt;     &lt;string name="srl_footer_failed"&gt;\@加载失败&lt;/string&gt;     &lt;string name="srl_footer_nothing"&gt;\@没有更多数据了&lt;/string&gt;  可以去掉“斜杠@”吗？用着真的很不舒服。。。。。 </body>
		<created>2019-11-30 11:58:19</created>
		<closed>2020-05-22 14:34:02</closed>
	</bug>
	<bug>
		<id>1069</id>
		<title>在全局设置主题的时候，只有Header生效，Footer不生效，</title>
		<body>代码就是README里的。Footer并不生效啊 static {         //设置全局的Header构建器         SmartRefreshLayout.setDefaultRefreshHeaderCreator((mContext, layout) -&gt; {             layout.setPrimaryColorsId(R.color.white, R.color.status_background);//全局设置主题颜色             return new ClassicsHeader(mContext);         });         //设置全局的Footer构建器         SmartRefreshLayout.setDefaultRefreshFooterCreator((mContext, layout) -&gt; {             layout.setPrimaryColorsId(R.color.white, R.color.status_background);//全局设置主题颜色             return new ClassicsFooter(mContext);         });     }</body>
		<created>2019-11-11 10:36:27</created>
		<closed>2019-12-09 02:22:15</closed>
	</bug>
	<bug>
		<id>1064</id>
		<title>自动加载更多不能用 滑动到最下面不能自动加载，需要在上拉一下才能刷新</title>
		<body>自动加载更多不能用 滑动到最下面不能自动加载，需要在上拉一下才能刷新</body>
		<created>2019-10-31 08:48:16</created>
		<closed>2019-12-25 02:09:36</closed>
	</bug>
	<bug>
		<id>1063</id>
		<title>下拉刷新动画卡死</title>
		<body>**详细描述** 下拉刷新时：onDetachedFromWindow()比finishRefresh()先执行，在onDetachedFromWindow()方法中notifyStateChanged(RefreshState.None)修改成了None状态，执行到finishRefresh()方法时没有对应状态，动画直接卡死不动  **使用版本** ```gradle implementation 'com.scwang.smart:refresh-layout-kernel:2.0.0-alpha-1'  implementation 'com.scwang.smart:refresh-header-material:2.0.0-alpha-1'  implementation 'com.scwang.smart:refresh-footer-classics:2.0.0-alpha-1'  ``` **使用代码** ```java SmartRefreshLayout.setDefaultRefreshHeaderCreator(new DefaultRefreshHeaderCreator() {             @Override             public RefreshHeader createRefreshHeader(Context context, RefreshLayout layout) {                 MaterialHeader materialHeader = new MaterialHeader(context);                 //  materialHeader.setColorSchemeColors(colorsId);                 layout.setPrimaryColorsId(colorsId, android.R.color.white);//全局设置主题颜色                 return materialHeader;             }         });         SmartRefreshLayout.setDefaultRefreshFooterCreator(new DefaultRefreshFooterCreator() {             @Override             public RefreshFooter createRefreshFooter(Context context, RefreshLayout layout) {                 return new ClassicsFooter(context);             }         }); ```  **布局代码** ```xml     &lt;com.scwang.smart.refresh.layout.SmartRefreshLayout         android:id="@+id/refresh_layout"         style="@style/constraint_start_end_bottom"         android:layout_height="0dp"         app:layout_constraintTop_toBottomOf="@+id/banner_view"&gt;          &lt;androidx.recyclerview.widget.RecyclerView             android:id="@+id/recycler_view"             android:layout_width="match_parent"             android:layout_height="match_parent"             android:scrollbars="none" /&gt;     &lt;/com.scwang.smart.refresh.layout.SmartRefreshLayout&gt; ```  **问题重现** 问题重现操作步骤: 1. 进入主页,下拉刷新 '...'  **设备信息** 每个设备都是这情况 **附加信息** 猜测可能是嵌套引起 </body>
		<created>2019-10-30 03:08:06</created>
		<closed>2020-05-31 13:47:22</closed>
	</bug>
	<bug>
		<id>1050</id>
		<title>调用finishLoadMoreWithNoMoreData的bug</title>
		<body>**详细描述** 对问题进行清晰而简明的描述，把握问题的关键点。  **使用版本** ```gradle   implementation 'com.scwang.smart:refresh-layout-kernel:2.0.0-alpha-1'      //核心必须依赖   implementation 'com.scwang.smart:refresh-header-classics:2.0.0-alpha-1'    //经典刷新头   implementation 'com.scwang.smart:refresh-footer-classics:2.0.0-alpha-1'    //经典加载 ``` **使用代码** ```java   //这里是回调   if (mViewBindingFgt.includeRefreshLayout.refreshLayout.isRefreshing()) {             if (data.size() &lt; IntConsts.PAGE_SIZE) {                 mViewBindingFgt.includeRefreshLayout.refreshLayout.finishLoadMoreWithNoMoreData();             }             mViewBindingFgt.includeRefreshLayout.recyclerView.scrollToPosition(0);             mViewBindingFgt.includeRefreshLayout.refreshLayout.finishRefresh();             mMyOrderStateAdapter.setNewData(data);         } else if (mViewBindingFgt.includeRefreshLayout.refreshLayout.isLoading()) {             if (data.size() &lt; IntConsts.PAGE_SIZE) {                 mViewBindingFgt.includeRefreshLayout.refreshLayout.finishLoadMoreWithNoMoreData();             }             mViewBindingFgt.includeRefreshLayout.refreshLayout.finishLoadMore();             mMyOrderStateAdapter.addData(data);         } ```  **布局代码** ```xml  &lt;com.scwang.smart.refresh.layout.SmartRefreshLayout         android:id="@+id/refresh_layout"         android:layout_width="match_parent"         android:layout_height="match_parent"         app:srlDisableContentWhenRefresh="true"         app:srlEnableLoadMoreWhenContentNotFull="false"         app:srlEnableOverScrollBounce="false"         app:srlEnableOverScrollDrag="false"         &gt;          &lt;com.scwang.smart.refresh.header.ClassicsHeader             android:layout_width="match_parent"             android:layout_height="wrap_content" /&gt;          &lt;androidx.recyclerview.widget.RecyclerView             android:id="@+id/recycler_view"             android:layout_width="match_parent"             android:layout_height="match_parent"             android:overScrollMode="never" /&gt;          &lt;com.scwang.smart.refresh.footer.ClassicsFooter             android:layout_width="match_parent"             android:layout_height="wrap_content" /&gt;     &lt;/com.scwang.smart.refresh.layout.SmartRefreshLayout&gt; ```  4.发现问题 调用 finishLoadMoreWithNoMoreData()方法后 不显示没有更多数据提示。   调用自动刷新方法 不回到列表顶部</body>
		<created>2019-10-15 07:28:49</created>
		<closed>2019-12-09 02:21:27</closed>
	</bug>
	<bug>
		<id>1047</id>
		<title>华为荣耀20pro 设置Header导致崩溃问题</title>
		<body>**详细描述** 对问题进行清晰而简明的描述，把握问题的关键点。  **使用版本** ```gradle     implementation 'com.scwang.smartrefresh:SmartRefreshLayout:1.0.5.1'     implementation 'com.scwang.smartrefresh:SmartRefreshHeader:1.0.5.1' ``` **使用代码** ```java         mRefresh.setRefreshHeader(new DeliveryHeader(getContext())); ```  **布局代码** ```xml     &lt;com.scwang.smartrefresh.layout.SmartRefreshLayout         android:id="@+id/refresh"         android:layout_width="match_parent"         android:layout_height="match_parent"         app:srlHeaderHeight="200dp"&gt;     &lt;android.support.v7.widget.RecyclerView         android:id="@+id/rv_earning"         android:layout_width="match_parent"         android:layout_height="wrap_content"&gt;      &lt;/android.support.v7.widget.RecyclerView&gt; &lt;/com.scwang.smartrefresh.layout.SmartRefreshLayout&gt; ```  **报错日志** ``` 2019-10-14 11:25:28.346 4094-4094/com.gte E/AndroidRuntime: FATAL EXCEPTION: main     Process: com.gte, PID: 4094     java.lang.IllegalArgumentException: width and height must be &gt; 0         at android.graphics.Bitmap.createBitmap(Bitmap.java:1252)         at android.graphics.Bitmap.createBitmap(Bitmap.java:1219)         at android.graphics.Bitmap.createBitmap(Bitmap.java:1169)         at android.graphics.Bitmap.createBitmap(Bitmap.java:1130)         at com.scwang.smartrefresh.layout.internal.pathview.PathsDrawable.createCachedBitmapIfNeeded(PathsDrawable.java:216)         at com.scwang.smartrefresh.layout.internal.pathview.PathsDrawable.draw(PathsDrawable.java:128)         at com.scwang.smartrefresh.header.DeliveryHeader.onDraw(DeliveryHeader.java:159)         at android.view.View.draw(View.java:20495)         at android.view.View.updateDisplayListIfDirty(View.java:19306)         at android.view.View.draw(View.java:20223)         at android.view.ViewGroup.drawChild(ViewGroup.java:4394)         at com.scwang.smartrefresh.layout.SmartRefreshLayout.drawChild(SmartRefreshLayout.java:838)         at android.view.ViewGroup.dispatchDraw(ViewGroup.java:4170)         at android.view.View.updateDisplayListIfDirty(View.java:19297) ```   **问题重现** 问题重现崩溃: 1. 设置Header 2.下拉刷新  并不是所有的header都会崩溃，我试过有DropBoxHeader和MaterialHeader不会崩溃  **预期行为** 修复bug  **屏幕截图** 无  **设备信息** 请填写一下你运行设备的信息，信息越全越有助于我理解问题  - 设备名: [e.g. 华为荣耀20pro]  - Android版本: [e.g. Android 9.0]  - 设备型号 [YAL-AL10]  - 系统版本（Magic 2.1.0）  **附加信息** [报错日志.txt](https://github.com/scwang90/SmartRefreshLayout/files/3722846/default.txt)  并不是所有的header都会崩溃，我试过有DropBoxHeader和MaterialHeader不会崩溃 </body>
		<created>2019-10-14 03:53:26</created>
		<closed>2019-10-18 05:34:22</closed>
	</bug>
	<bug>
		<id>1037</id>
		<title>RecyclerView 使用PagerSnapHelper时，上拉加载更多（RecyclerView无法正常复位）</title>
		<body>**详细描述** 当RecyclerView 使用PagerSnapHelper时，在下拉加载回调中请求并添加数据至adapter，footerView是可以正常消失的，但RecyclerView无法复位（无法回到底部）  **使用版本** ```gradle implementation 'com.scwang.smartrefresh:SmartRefreshLayout:1.1.0  implementation 'com.scwang.smartrefresh:SmartRefreshHeader:1.1.0'  ``` **使用代码** ```     /**      * 模拟请求      * @param isRefresh 是刷新还是加载更多      */     private void testRequest(final boolean isRefresh) {                  mHandler.postDelayed(new Runnable() {             @Override             public void run() {                 //模拟数据                 Collection&lt;Integer&gt; list = loadModels();                                  if (isRefresh) {                     mAdapter.refresh(list);                     mRefreshLayout.finishRefresh();                 } else {                     //当我对Adapter添加数据时，recyclerView就无法正常复位（FooterView是正常消失的）                     //但如果不对Adapter添加数据，那么recyclerView又可以正常复位，FooterView也可以正常消失                     //或者我先执行finishRefresh()，再延时对Adapter添加数据那么也是正常的                     mAdapter.loadMore(list);                     mRefreshLayout.finishLoadMore();                 }             }         }, 1000);     } ```  **布局代码** demo中的 activity_example_snaphelper.xml  **屏幕截图** ![屏幕快照 2019-09-23 下午8 28 31](https://user-images.githubusercontent.com/14747934/65425666-1058b400-de41-11e9-80fd-562b5888a080.png)  #### 如图，应该是列表复位后只显示一个item，而现在却显示两个  **设备信息** 请填写一下你运行设备的信息，信息越全越有助于我理解问题  - 设备名:AS系统模拟器  - Android版本: [Android 9.0] </body>
		<created>2019-09-23 12:33:51</created>
		<closed>2020-03-15 12:33:42</closed>
	</bug>
	<bug>
		<id>1032</id>
		<title>setEnableLoadMoreWhenContentNotFull 会导致代码创建的SM无法上拉加载</title>
		<body>**详细描述** setEnableLoadMoreWhenContentNotFull 在通过代码创建SmartRefreshLayout的时候导致即使内部RV超过屏幕也不会开启上拉加载  **使用版本** ```gradle implementation 'com.scwang.smartrefresh:SmartRefreshLayout:2.0.0-alpha-1'  ``` **使用代码** ```java     val pageRefreshLayout = PageRefreshLayout(context)     pageRefreshLayout.setEnableLoadMoreWhenContentNotFull(false) ```</body>
		<created>2019-09-12 07:31:04</created>
		<closed>2019-09-12 08:00:56</closed>
	</bug>
	<bug>
		<id>1031</id>
		<title>[不是bug或者不确定是bug，请使用错误报告模板]</title>
		<body>**详细描述** 对问题进行清晰而简明的描述，把握问题的关键点。  **使用版本** ```gradle implementation 'com.scwang.smartrefresh:SmartRefreshLayout:1.0.5'  implementation 'com.scwang.smartrefresh:SmartRefreshHeader:1.0.5'  ``` **使用代码** ```java  static {         //设置全局的Header构建器         SmartRefreshLayout.setDefaultRefreshHeaderCreator(new DefaultRefreshHeaderCreator() {             @Override             public RefreshHeader createRefreshHeader(Context context, RefreshLayout layout) {                 //全局设置主题颜色                 layout.setPrimaryColorsId(R.color.color_white, R.color.color_black6);                 //.setTimeFormat(new DynamicTimeFormat("更新于 %s"));//指定为经典Header，默认是 贝塞尔雷达Header                 return new MaterialHeader(context);             }         });         //设置全局的Footer构建器         SmartRefreshLayout.setDefaultRefreshFooterCreator(new DefaultRefreshFooterCreator() {             @Override             public RefreshFooter createRefreshFooter(Context context, RefreshLayout layout) {                 //指定为经典Footer，默认是 BallPulseFooter                 return new ClassicsFooter(context).setDrawableSize(20);             }         });     } ```  **布局代码** &lt;?xml version="1.0" encoding="utf-8"?&gt; &lt;com.scwang.smartrefresh.layout.SmartRefreshLayout xmlns:android="http://schemas.android.com/apk/res/android"     android:layout_width="match_parent"     android:layout_height="match_parent"     android:id="@+id/fresh"     &gt;     &lt;ListView         android:id="@+id/lvOrder"         android:layout_width="match_parent"         android:layout_height="wrap_content"         android:paddingLeft="@dimen/dp_8"         android:paddingRight="@dimen/dp_8"         android:scrollbars="horizontal"         android:divider="@color/line4"         android:dividerHeight="@dimen/dp_10"/&gt; &lt;/com.scwang.smartrefresh.layout.SmartRefreshLayout&gt; ```  **问题重现** 第一次打开界面后，头部会露出来一点 然后手动下拉刷新后，就正常了  **预期行为** 第一次进来时头部全部看不见  **屏幕截图** ![QQ截图20190912142637](https://user-images.githubusercontent.com/14309324/64759569-13fb5980-d56a-11e9-97d3-cf952d74756a.png)   **设备信息** 请填写一下你运行设备的信息，信息越全越有助于我理解问题  - 设备名: [e.g. 小米8  - Android版本: [e.g. Android 9.0]  - 设备型号 [e.g. ]  - 系统版本（MIUI 10.3.5）  **附加信息**  </body>
		<created>2019-09-12 06:32:09</created>
		<closed>2020-05-22 16:25:08</closed>
	</bug>
	<bug>
		<id>1030</id>
		<title>你好，淘宝二楼，一楼背景如果是白色底的话，第一次进来这个页面，二楼的背景图片会看得到，然后下拉的时候会一闪之后才正常</title>
		<body>你好，淘宝二楼，一楼背景如果是白色底的话，第一次进来这个页面，二楼的背景图片会看得到，然后下拉的时候会一闪之后才正常，是否能让第一次进来的时候二楼的图片不显示在一楼呢。</body>
		<created>2019-09-11 10:49:22</created>
		<closed>2019-09-11 11:08:07</closed>
	</bug>
	<bug>
		<id>1028</id>
		<title>finishRefesh(fase) 会有空指针。</title>
		<body>**详细描述** 在请求失败的时候 noMoreData 会有空指针异常  **使用版本** ```gradle implementation 'com.scwang.smartrefresh:SmartRefreshLayout:1.1.0'  ``` **使用代码** ```java    @Override             protected void onFailed(String failed) {                 smartRefreshLayout.finishLoadMore(false);                 smartRefreshLayout.finishRefresh(false);&lt;=========                 if (pageNo == 1) {                     holder.withData(failed).showLoadFailed();                 } else {                     ToastHelper.showShort(failed);                 }             } ``` **附加信息**  /**      * finish refresh.      * 完成加载      *      * @param success 数据是否成功刷新 （会影响到上次更新时间的改变）      * @return RefreshLayout      */     @Override     public RefreshLayout finishRefresh(boolean success) {         if (success) {             long passTime = System.currentTimeMillis() - mLastOpenTime;             int delayed = (Math.min(Math.max(0, 300 - (int) passTime), 300) &lt;&lt; 16);//保证加载动画有300毫秒的时间             return finishRefresh(delayed, true, Boolean.FALSE);         } else {             return finishRefresh(0, false, null);&lt;-------这里赋值为null，引起空指针           return finishRefresh(0, false, Boolean.TRUE);&lt;-----改成这样合适不合适？         }     }  </body>
		<created>2019-09-10 06:52:58</created>
		<closed>2019-09-16 02:09:39</closed>
	</bug>
	<bug>
		<id>1017</id>
		<title>搭配AppBarLayout和ViewPager时，在ViewPager的子页面切换后下拉有问题</title>
		<body>**详细描述** 在SmartRefreshLayout - CoordinatorLayout - AppBarLayout和ViewPager的层级结构下，在ViewPager的子页面切换后，refreshEnable的状态没更新，导致原本可以下拉的列表直接出来了下拉动画。  **使用版本** ```gradle     implementation 'com.scwang.smartrefresh:SmartRefreshLayout:1.1.0-alpha-20'     implementation 'com.scwang.smartrefresh:SmartRefreshHeader:1.1.0-alpha-20' ```  **外部布局代码** ```xml        &lt;com.scwang.smartrefresh.layout.SmartRefreshLayout             android:layout_width="match_parent"             android:layout_height="match_parent"             android:layout_below="@id/circle_action_bar"             app:srlEnableLoadMore="false"             &gt;              &lt;android.support.design.widget.CoordinatorLayout                 android:layout_width="match_parent"                 android:layout_height="match_parent"                 &gt;                  &lt;android.support.design.widget.AppBarLayout                     android:layout_width="match_parent"                     android:layout_height="wrap_content"                     android:background="@android:color/transparent"                     android:fadingEdge="none"                     app:elevation="0dp"                     &gt;                     ...                  &lt;/android.support.design.widget.AppBarLayout&gt;                  &lt;android.support.v4.view.ViewPager                     android:layout_width="match_parent"                     android:layout_height="match_parent"                     app:layout_behavior="@string/appbar_scrolling_view_behavior"                     /&gt;                  ...              &lt;/android.support.design.widget.CoordinatorLayout&gt;          &lt;/com.scwang.smartrefresh.layout.SmartRefreshLayout&gt; ```  **viewpager内部子页面布局代码** ```xml        &lt;com.scwang.smartrefresh.layout.SmartRefreshLayout             android:layout_width="match_parent"             android:layout_height="match_parent"             &gt;             &lt;!--因为有其他地方需要复用等原因，子页面内部还嵌套了一层SmartRefreshLayout，但此时子页面内部的SmartRefreshLayout是关闭下拉刷新的--&gt;              &lt;android.support.v7.widget.RecyclerView                 android:layout_width="match_parent"                 android:layout_height="match_parent"/&gt;          &lt;/com.scwang.smartrefresh.layout.SmartRefreshLayout&gt; ```  **问题重现** 问题重现操作: 1. 将viewpager中的一个页面拉到中间位置； 2.切换到viewpager中的其他页面并拉到全页面的顶部； 3.再切回到之前的子页面； 4.这个子页面中的列表还在中间位置，但已经没法下拉列表，此时下拉就会出现下拉动画。在上拉一段距离后才恢复正常。  **预期行为** 切换回之前页面后能正常下拉列表，而不是出现下拉动画。  **屏幕截图** ![2e17928e5767041f906072ff5d51e47f](https://user-images.githubusercontent.com/8924834/63916674-7c771080-ca6b-11e9-8926-97d549193d3e.gif)   **设备信息**  - 设备名: [华为P30 &amp; 荣耀8]  - Android版本: [Android 9.0 &amp; Android 8.0]  </body>
		<created>2019-08-29 06:45:46</created>
		<closed>2020-05-27 14:04:13</closed>
	</bug>
	<bug>
		<id>1014</id>
		<title>使用了SmartRefreshLayout后，gpu一直在刷新</title>
		<body>**详细描述** 使用了SmartRefreshLayout后，打开gpu检测可以看到gpu一直在刷新，去除后就没有了。为什么？ 这个一直刷新很耗电。 **使用版本** ```gradle api 'com.scwang.smartrefresh:SmartRefreshLayout:1.1.0'  ``` **使用代码**   **布局代码** ```xml   &lt;com.scwang.smartrefresh.layout.SmartRefreshLayout             android:id="@+id/refresh"             android:layout_width="match_parent"             android:layout_height="0dp"             android:focusable="true"             android:focusableInTouchMode="true"             app:layout_constraintBottom_toBottomOf="parent"             app:layout_constraintTop_toBottomOf="@id/title_tv"&gt;              &lt;android.support.v7.widget.RecyclerView                 android:id="@+id/recycleView"                 android:layout_width="match_parent"                 android:layout_height="match_parent" /&gt;         &lt;/com.scwang.smartrefresh.layout.SmartRefreshLayout&gt; ```   </body>
		<created>2019-08-26 02:01:21</created>
		<closed>2019-08-26 05:02:17</closed>
	</bug>
	<bug>
		<id>1010</id>
		<title>[不是bug或者不确定是bug，请使用错误报告模板]</title>
		<body>**详细描述** 在使用母版页嵌套的时候，SmartRefreshLayout做为嵌套子页内的元素时，会报java.lang.NoSuchFieldError异常。具体内容如下： java.lang.NoSuchFieldError: No field refreshLayout of type I in class Lcom/package/exam/R$id; or its superclasses (declaration of 'com.package.exam.R$id' appears in /data/app/com.package-1/base.apk)  但在母版页中直接使用时不会抛异常，并可以正常使用 **使用版本** ```gradle     api 'com.scwang.smartrefresh:SmartRefreshLayout:1.1.0' ``` **使用代码** ```java     /**      * 绑定母版页      */     protected void bindMaster(int subLayoutRes) {         View masterView = getLayoutInflater().inflate(MASTER_RES, null);         View subContent = getLayoutInflater().inflate(subLayoutRes, null);         contentLayout = masterView.findViewById(R.id.contentLayout);         contentLayout.addView(subContent);         initWidget(masterView);         super.setContentView(masterView);     } ```  **布局代码** ```xml /**母版页**/ &lt;?xml version="1.0" encoding="utf-8"?&gt; &lt;LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"     android:layout_width="match_parent"     android:layout_height="match_parent"     android:orientation="vertical"&gt;      &lt;include layout="@layout/include_base_title" /&gt;      &lt;FrameLayout         android:id="@id/contentLayout"         android:layout_width="match_parent"         android:layout_height="match_parent" /&gt; &lt;/LinearLayout&gt;  /**子页**/ &lt;com.scwang.smartrefresh.layout.SmartRefreshLayout xmlns:android="http://schemas.android.com/apk/res/android"     android:id="@+id/refreshLayout"     android:layout_width="match_parent"     android:layout_height="match_parent"&gt;      &lt;LinearLayout         android:layout_width="match_parent"         android:layout_height="wrap_content"         android:background="@color/colorPrimary"         android:gravity="center_vertical"         android:orientation="vertical"&gt;          &lt;ImageView             android:layout_width="match_parent"             android:layout_height="wrap_content"             android:layout_marginTop="5dp"             android:layout_marginBottom="5dp"             android:adjustViewBounds="true"             android:contentDescription="@string/imageView"             android:scaleType="fitCenter"             android:src="@drawable/icon_exam_list_bg" /&gt;          &lt;LinearLayout             android:layout_width="match_parent"             android:layout_height="30dp"&gt;              &lt;TextView                 android:layout_width="match_parent"                 android:layout_height="match_parent"                 android:layout_weight="1"                 android:gravity="center"                 android:text="考试标题"                 android:textColor="@color/white" /&gt;              &lt;TextView                 android:layout_width="match_parent"                 android:layout_height="match_parent"                 android:layout_weight="1"                 android:gravity="center"                 android:text="发布时间"                 android:textColor="@color/white" /&gt;         &lt;/LinearLayout&gt;          &lt;androidx.recyclerview.widget.RecyclerView             android:id="@+id/recycler"             android:layout_width="match_parent"             android:layout_height="wrap_content" /&gt;     &lt;/LinearLayout&gt; &lt;/com.scwang.smartrefresh.layout.SmartRefreshLayout&gt; ```  **问题重现** 进入该页面直接抛出异常。  **预期行为** 在任何环境下无障碍使用  **设备信息** AS原生模拟器  </body>
		<created>2019-08-23 07:49:06</created>
		<closed>2020-05-29 05:32:43</closed>
	</bug>
	<bug>
		<id>1007</id>
		<title>MotinLayout兼容还是有些问题</title>
		<body>**详细描述** 对MotionLayout兼容不够  **使用版本** ```gradle implementation 'com.scwang.smartrefresh:SmartRefreshLayout:1.1.0-andx-12'  ```  **布局代码** ```xml  &lt;com.scwang.smartrefresh.layout.SmartRefreshLayout     xmlns:android="http://schemas.android.com/apk/res/android"     xmlns:app="http://schemas.android.com/apk/res-auto"     android:id="@+id/srlMotion"     android:layout_width="match_parent"     android:layout_height="match_parent"&gt;      &lt;androidx.constraintlayout.motion.widget.MotionLayout         android:layout_width="match_parent"         android:layout_height="match_parent"         app:layoutDescription="@xml/motion"&gt;          ...SomeLayout...    &lt;androidx.recyclerview.widget.RecyclerView             android:id="@+id/recycler"             android:layout_width="match_parent"             android:layout_height="match_parent"             app:layoutManager="androidx.recyclerview.widget.LinearLayoutManager"/&gt;     &lt;/androidx.constraintlayout.motion.widget.MotionLayout&gt; &lt;/com.scwang.smartrefresh.layout.SmartRefreshLayout&gt;  ``` **MotionScene** ``` &lt;OnSwipe             app:dragDirection="dragUp"             app:touchAnchorId="@id/recycler"             app:touchAnchorSide="top"/&gt; ```  **问题重现**  在SmartRefreshLayout包裹MotionLayout的情况下,使用RecyclerView作为touchAnchor时:  事件X:直接拖出刷新Header  #### A.`SmartRefreshLayout:1.1.0-andx-12` 刚修复(#944 )的版本:      a).大部分对RecyclerView上下滑动时是正常的,但是对动画结束后的View进行拖动,会触发X     b).降列表上拉一段距离后,快速下滑,使RecyclerView依靠本身"惯性"恰好滑动到顶部之时,对列表进行拖动,也会触发X   #### B.`SmartRefreshLayout:1.1.0` 目前最新版本     a).只要将列表上拉滑动至动画结束,松开手指再滑动,动画将完全不进行,只会触发X   **附加信息** 此处反馈的是SmartRefreshLayout包裹MotionLayout的情况下,如果是MotionLayout包裹SmartRefreshLayout的情况测试良好... </body>
		<created>2019-08-20 15:16:51</created>
		<closed>2019-08-20 15:18:15</closed>
	</bug>
	<bug>
		<id>1005</id>
		<title>1.0.5版本，使用SmartRefreshLayout作为父布局，嵌套viewPager+CollapsingToolbarLayout实现吸顶效果，导致外层refreshLayout拦截事件，无法滑动， 问题场景在https://github.com/SiberiaDante/MultiScrollDemo复现</title>
		<body>**详细描述** 对问题进行清晰而简明的描述，把握问题的关键点。  **使用版本** ```gradle implementation 'com.scwang.smartrefresh:SmartRefreshLayout:x.x.x'  implementation 'com.scwang.smartrefresh:SmartRefreshHeader:x.x.x'  ``` **使用代码** ```java SmartRefreshLayout.setDefaultRefreshHeaderCreator(new DefaultRefreshHeaderCreator() {                 @Override                 public RefreshHeader createRefreshHeader(Context context, RefreshLayout layout) {                     return new ClassicsHeader(context).setSpinnerStyle(SpinnerStyle.Translate);                 }             });         SmartRefreshLayout.setDefaultRefreshFooterCreator(new DefaultRefreshFooterCreator() {                 @Override                 public RefreshFooter createRefreshFooter(Context context, RefreshLayout layout) {                     return new ClassicsFooter(context).setSpinnerStyle(SpinnerStyle.Translate);                 }             }); RefreshLayout refreshLayout = (RefreshLayout)findViewById(R.id.refreshLayout); refreshLayout.setOnRefreshListener(new OnRefreshListener() {     @Override     public void onRefresh(RefreshLayout refreshlayout) {         refreshlayout.finishRefresh(2000);     } }); refreshLayout.setOnLoadMoreListener(new OnLoadMoreListener() {     @Override     public void onLoadMore(RefreshLayout refreshlayout) {         refreshlayout.finishLoadMore(2000);     } }); ```  **布局代码** ```xml &lt;com.scwang.smartrefresh.layout.SmartRefreshLayout     xmlns:app="http://schemas.android.com/apk/res-auto"     android:id="@+id/refreshLayout"     android:layout_width="match_parent"     android:layout_height="match_parent"     android:background="#444444"     app:srlPrimaryColor="#444444"     app:srlAccentColor="@android:color/white"     app:srlEnablePreviewInEditMode="true"&gt;     &lt;com.scwang.smartrefresh.layout.header.ClassicsHeader         android:layout_width="match_parent"         android:layout_height="wrap_content"/&gt;     &lt;TextView         android:layout_width="match_parent"         android:layout_height="match_parent"         android:padding="@dimen/dimenPaddingCommon"         android:background="@android:color/white"         android:text="@string/description_define_in_xml"/&gt;     &lt;com.scwang.smartrefresh.layout.footer.ClassicsFooter         android:layout_width="match_parent"         android:layout_height="wrap_content"/&gt; &lt;/com.scwang.smartrefresh.layout.SmartRefreshLayout&gt; ```  **问题重现** 问题重现操作不走: 1. 进入主页 '...' 2.点击按钮 '....' 3.滚动列表 '....' 4.发现问题  **预期行为** 对你期望发生的事情的清晰而简明的描述。  **屏幕截图** 如果适用，添加屏幕截图以帮助解释您的问题。  **设备信息** 请填写一下你运行设备的信息，信息越全越有助于我理解问题  - 设备名: [e.g. 华为P20]  - Android版本: [e.g. Android 7.0]  - 设备型号 [e.g. ]  - 系统版本（手机厂商定制rom）  **附加信息** 在此处添加任何有关该问题的任何其他说明。 </body>
		<created>2019-08-19 08:20:30</created>
		<closed>2020-05-22 15:31:37</closed>
	</bug>
	<bug>
		<id>1004</id>
		<title>TwoLevelHeader触发之后回弹效果问题，求指导</title>
		<body>**详细描述** TwoLevelHeader在调用openTwoLevel(true)方法弹出二楼视图之后，在调用finishTwoLevel()效果回到一楼，如何让一楼视图从下拉时的状态回弹到顶部，而不是从底部回弹；  **使用版本** ```gradle  implementation 'com.scwang.smartrefresh:SmartRefreshLayout:1.1.0-andx-10' ``` **使用代码** ```java    mSmartRefreshLayout.setOnMultiPurposeListener(new SimpleMultiPurposeListener() {             @Override             public void onLoadMore(@NonNull RefreshLayout refreshLayout) {             }              @Override             public void onRefresh(@NonNull RefreshLayout refreshLayout) {                 mSmartRefreshLayout.finishRefresh(0);             }              @Override             public void onHeaderMoving(RefreshHeader header, boolean isDragging, float percent,                                        int offset, int headerHeight, int maxDragHeight) {                  Log.d("Header", "onHeaderMoving: offset &gt;&gt;&gt; " + offset + " percent &gt;&gt;&gt; " + percent);                  float twoLevelHeaderPercent = offset / (float) mTwoLevelHeader.getHeight();                 if (!isDragging) {                     mIvFavorite.setAlpha(1 - twoLevelHeaderPercent);                     mIvFonSetting.setAlpha(1 - twoLevelHeaderPercent);                     mIvLevelSwitcher.setAlpha(1 - twoLevelHeaderPercent);                 }                 mIvMazParallax.setScaleX(1 + Math.min(percent, 1));                 mIvMazParallax.setScaleY(1 + Math.min(percent, 1)); //                mIvMazParallax.setTranslationY(offset);                 mRlTwoLevelView.setTranslationY(offset - mSmartRefreshLayout.getLayout().getHeight());             }              @Override             public void onStateChanged(@NonNull RefreshLayout refreshLayout,                                        @NonNull RefreshState oldState,                                        @NonNull RefreshState newState) {                 if (oldState == RefreshState.TwoLevel) {                     mRlTwoLevelView.setAlpha(0f);                     mIvMazParallax.setAlpha(1f);                 }             }         }); ```  **布局代码** ```xml &lt;FrameLayout xmlns:android="http://schemas.android.com/apk/res/android"     android:layout_width="match_parent"     android:layout_height="match_parent"&gt;     &lt;!--图图片预览界面缩放--&gt;     &lt;ImageView         android:id="@+id/iv_magazine_detail_parallax"         android:layout_width="match_parent"         android:layout_height="@dimen/dp_190" /&gt;      &lt;com.scwang.smartrefresh.layout.SmartRefreshLayout         android:id="@+id/srl_magazine_detail"         android:layout_width="match_parent"         android:layout_height="match_parent"         app:srlDragRate="0.35"         app:srlEnableNestedScrolling="true"         app:srlHeaderHeight="@dimen/dp_40"         app:srlReboundDuration="0"&gt;          &lt;!--二楼--&gt;         &lt;com.scwang.smartrefresh.layout.header.TwoLevelHeader             android:id="@+id/tlh_magazine_detail"             android:layout_width="match_parent"             android:layout_height="match_parent"             app:srlEnablePullToCloseTwoLevel="false"             app:srlFloorRage="1"             app:srlRefreshRage="0.1"&gt;              &lt;include layout="@layout/expressreader_include_magazine_level_header" /&gt;              &lt;com.scwang.smartrefresh.layout.header.ClassicsHeader                 android:layout_width="match_parent"                 android:layout_height="@dimen/dp_40"                 android:gravity="center"                 app:layout_srlSpinnerStyle="Translate"                 app:srlAccentColor="@android:color/transparent"                 app:srlClassicsSpinnerStyle="Translate"                 app:srlDrawableProgress="@null"                 app:srlDrawableProgressSize="@dimen/dp_0"                 app:srlEnableLastTime="false"                 app:srlFinishDuration="0"                 app:srlPrimaryColor="@android:color/transparent" /&gt;         &lt;/com.scwang.smartrefresh.layout.header.TwoLevelHeader&gt;          &lt;!--二楼:详情页面--&gt;         &lt;include layout="@layout/expressreader_include_magazine_content" /&gt;      &lt;/com.scwang.smartrefresh.layout.SmartRefreshLayout&gt;      &lt;!--Toolbar:状态栏--&gt;     &lt;LinearLayout         android:id="@+id/ll_magazine_detail_toolbar"         android:layout_width="match_parent"         android:layout_height="@dimen/dp_60"&gt;     &lt;/LinearLayout&gt; &lt;/FrameLayout&gt;  ```  **问题重现** 问题重现操作不走: 1.下拉触发二楼视图 2.上拉回到一楼视图 3.一楼视图从屏幕底部回弹，而不是下拉触发二楼的的下拉咋状态开始回弹 4.导致视图的白色背景出现，影响体验  **预期行为** 回到一楼从触发二楼时的状态开始回弹  **屏幕截图** 如果适用，添加屏幕截图以帮助解释您的问题。  ![69CDE932-D480-4A2D-8261-87FCE214B68F](https://user-images.githubusercontent.com/16483463/63163089-f87a5d00-c056-11e9-8610-92f86537f96c.png) ![B3F7CFED-F90A-4B70-89D7-EF91C36F7A4B](https://user-images.githubusercontent.com/16483463/63163097-fdd7a780-c056-11e9-87ae-39e93b164796.png)  </body>
		<created>2019-08-16 10:52:49</created>
		<closed>2019-08-16 13:03:49</closed>
	</bug>
</bugs>
