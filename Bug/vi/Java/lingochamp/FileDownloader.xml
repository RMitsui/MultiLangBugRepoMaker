<?xml version="1.0" encoding="ISO-8859-1"?>

<bugs>
	<bug>
		<id>1295</id>
		<title>FileDownloader下载某些源必现报错！[已提供下载链接可复现]</title>
		<body>## Before Issue  1. 针对fileDownloader的chunk问题 [Issues](https://github.com/lingochamp/FileDownloader/issues/1238) 2. 在OkDownload中出现的问题 [Issues](https://github.com/lingochamp/okdownload/issues/31)  ## Issue **现在遇到上面的两个问题了。我下载了这些链接：** https://traffic.omny.fm/d/clips/61af0f78-644a-4500-9792-a89500ea78e5/5c2d07fe-0ef9-4b04-9646-a9d20148a726/94c08e35-dc0a-4aa8-b31b-aaf6001fa4bd/audio.mp3?utm_source=Podcast&amp;in_playlist=e62e19db-f740-456f-b0a6-a9d2014b5993&amp;t=1572400611  https://downloads.wamu.org/mp3/dr/19/10/r1191015.mp3  **最终都得到了这样的错误反馈：** ### require range[xxxxxx-) with contentLength(xxxxxxx), but the backend response contentLength is xxxxxxx on downloadId[-xxxxxxx]-connectionIndex[2], please ask your backend dev to fix such problem.  当时OkDownload的作者让我使用单线程来下是可以解决这个问题的。前阵子咨询过你们同样的问题。**针对fileDownloader的chunk问题** [Issues](https://github.com/lingochamp/FileDownloader/issues/1238) 说是已经解决了，但是现在问题好像依然存在？  </body>
		<created>2019-10-30 06:56:09</created>
		<closed>2019-11-04 11:53:24</closed>
	</bug>
	<bug>
		<id>1289</id>
		<title>传入错误下载地址，没有下载错误的回调</title>
		<body>传入一个无效的地址，例如空字符串，开始下载后没有任何回调，包括下载错误的回调 请问这正常吗？是不是我需要设置重试次数或其他属性？</body>
		<created>2019-10-11 12:18:02</created>
		<closed>2019-10-12 05:50:23</closed>
	</bug>
	<bug>
		<id>1258</id>
		<title> ArrayIndexOutOfBoundsException &amp; ClassCastException</title>
		<body>日志如下： ```text error: taskId=-1308182626, id=-987839946, errorMsg=java.net.UnknownHostException: Unable to resolve host "56.com-t-56.com": No address associated with hostname error: taskId=-1308182626, id=-1851813541, errorMsg=java.net.UnknownHostException: Unable to resolve host "56.com-t-56.com": No address associated with hostname error: taskId=-1308182626, id=-467198106, errorMsg=java.net.UnknownHostException: Unable to resolve host "56.com-t-56.com": No address associated with hostname error: taskId=-1308182626, id=-456171208, errorMsg=java.net.UnknownHostException: Unable to resolve host "56.com-t-56.com": No address associated with hostname error: taskId=-1308182626, id=1296230872, errorMsg=java.net.UnknownHostException: Unable to resolve host "56.com-t-56.com": No address associated with hostname error: taskId=-1308182626, id=-522498879, errorMsg=java.net.UnknownHostException: Unable to resolve host "56.com-t-56.com": No address associated with hostname error: taskId=-1308182626, id=185128245, errorMsg=java.net.UnknownHostException: Unable to resolve host "56.com-t-56.com": No address associated with hostname error: taskId=-1308182626, id=1257182566, errorMsg=java.net.UnknownHostException: Unable to resolve host "56.com-t-56.com": No address associated with hostname error: taskId=-1308182626, id=-1104038785, errorMsg=java.net.UnknownHostException: Unable to resolve host "56.com-t-56.com": No address associated with hostname error: taskId=-1308182626, id=-1355035729, errorMsg=java.net.UnknownHostException: Unable to resolve host "56.com-t-56.com": No address associated with hostname error: taskId=-1308182626, id=-996161181, errorMsg=java.net.UnknownHostException: Unable to resolve host "56.com-t-56.com": No address associated with hostname error: taskId=-1308182626, id=-609139631, errorMsg=com.liulishuo.filedownloader.exception.FileDownloadNetworkPolicyException: Only allows downloading this task on the wifi network type error: taskId=-1308182626, id=-1198959825, errorMsg=com.liulishuo.filedownloader.exception.FileDownloadNetworkPolicyException: Only allows downloading this task on the wifi network type error: taskId=-1308182626, id=2071724236, errorMsg=com.liulishuo.filedownloader.exception.FileDownloadNetworkPolicyException: Only allows downloading this task on the wifi network type error: taskId=-1308182626, id=-1335835025, errorMsg=com.liulishuo.filedownloader.exception.FileDownloadNetworkPolicyException: Only allows downloading this task on the wifi network type error: taskId=-1308182626, id=1754926801, errorMsg=com.liulishuo.filedownloader.exception.FileDownloadNetworkPolicyException: Only allows downloading this task on the wifi network type error: taskId=-1308182626, id=-1212841019, errorMsg=com.liulishuo.filedownloader.exception.FileDownloadNetworkPolicyException: Only allows downloading this task on the wifi network type error: taskId=-1308182626, id=-1063763472, errorMsg=com.liulishuo.filedownloader.exception.FileDownloadNetworkPolicyException: Only allows downloading this task on the wifi network type error: taskId=-1308182626, id=1933237023, errorMsg=com.liulishuo.filedownloader.exception.FileDownloadNetworkPolicyException: Only allows downloading this task on the wifi network type error: taskId=-1308182626, id=126911114, errorMsg=com.liulishuo.filedownloader.exception.FileDownloadNetworkPolicyException: Only allows downloading this task on the wifi network type error: taskId=-1308182626, id=-339280496, errorMsg=com.liulishuo.filedownloader.exception.FileDownloadNetworkPolicyException: Only allows downloading this task on the wifi network type error: taskId=-1308182626, id=1181444984, errorMsg=com.liulishuo.filedownloader.exception.FileDownloadNetworkPolicyException: Only allows downloading this task on the wifi network type error: taskId=-1308182626, id=-1386328724, errorMsg=java.lang.ArrayIndexOutOfBoundsException: length=1535; index=1535 error: taskId=-1308182626, id=1253482442, errorMsg=java.lang.ClassCastException: java.lang.Object cannot be cast to com.liulishuo.filedownloader.download.DownloadLaunchRunnable error: taskId=-1308182626, id=1742385762, errorMsg=com.liulishuo.filedownloader.exception.FileDownloadNetworkPolicyException: Only allows downloading this task on the wifi network type error: taskId=-1308182626, id=718645003, errorMsg=java.lang.ArrayIndexOutOfBoundsException: length=767; index=767 error: taskId=-1308182626, id=-1057533709, errorMsg=java.lang.ClassCastException: java.lang.Object cannot be cast to com.liulishuo.filedownloader.download.DownloadLaunchRunnable error: taskId=-1308182626, id=-1720334634, errorMsg=java.lang.ArrayIndexOutOfBoundsException: length=191; index=191 error: taskId=-1308182626, id=405832501, errorMsg=java.lang.ClassCastException: java.lang.Object cannot be cast to com.liulishuo.filedownloader.download.DownloadLaunchRunnable ``` 可以把它们整合成统一的 FileDownloadNetworkPolicyException 吗？谢谢。</body>
		<created>2019-08-27 12:07:07</created>
		<closed>2019-08-31 14:29:29</closed>
	</bug>
	<bug>
		<id>1225</id>
		<title>java.lang.ArrayIndexOutOfBoundsException: length=11; index=11</title>
		<body>线上友盟统计到的问题，目前有三个手机遇到。 java.lang.ArrayIndexOutOfBoundsException: length=11; index=11 at android.util.SparseArray.gc(SparseArray.java:203) at android.util.SparseArray.put(SparseArray.java:238) at com.liulishuo.filedownloader.database.b.a(NoDatabaseImpl.java:107) at com.liulishuo.filedownloader.database.c.a(RemitDatabase.java:137) at com.liulishuo.filedownloader.download.DownloadLaunchRunnable.a(DownloadLaunchRunnable.java:680) at com.liulishuo.filedownloader.download.DownloadLaunchRunnable.run(DownloadLaunchRunnable.java:303) at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1167) at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:641) at java.lang.Thread.run(Thread.java:784)  看了一下NoDatabaseImpl.java的源码，感觉是SparseArray非线程安全导致的。 某一个线程在remove，另一个线程在put。 这边是否需要加锁？ final SparseArray&lt;List&lt;ConnectionModel&gt;&gt; connectionModelListMap = new SparseArray&lt;&gt;(); </body>
		<created>2019-06-27 09:19:32</created>
		<closed>2019-09-01 12:01:12</closed>
	</bug>
	<bug>
		<id>1224</id>
		<title>notification not appear</title>
		<body>#### Before Issue  1. Please search on the [Issues](https://github.com/lingochamp/FileDownloader/issues) 2. Please search on the [wiki](https://github.com/lingochamp/FileDownloader/wiki) 3. Please set `FileDownloadLog.NEED_LOG=true` and review the Logcat output from main process and `:filedownloader` process ( pay attention to Warn and Error level logcat)  #### Issue  1. What problem do you get? _notification not appear on 1.7.5 version_  &gt;P.S. If you don't know how to get `:filedownloader` process, it's recommended to using `pidcat` to just filter all your application logcat, or define `process.non-separate=true` on [filedownloader.properties](https://github.com/lingochamp/FileDownloader/wiki/filedownloader.properties)  ---  请在Issue前认真的跟进上面提到的建议，这样将可以极大的加快你遇到问题的处理。 </body>
		<created>2019-06-24 10:40:38</created>
		<closed>2019-07-29 11:52:48</closed>
	</bug>
	<bug>
		<id>1209</id>
		<title>更新到1.7.6版本后，通知栏仍概率性自动出现FileDownloader is running提示，不能复现</title>
		<body>更新到1.7.6版本后，通知栏仍概率性自动出现FileDownloader is running提示，点击该通知提示没有响应。该提示是在用户使用手机并未下载资源的时候自动出现，手机未重启放置一晚第二天看这个通知又自动消失了。目前暂未获取到有效log。 </body>
		<created>2019-04-25 03:29:48</created>
		<closed>2019-08-23 12:40:43</closed>
	</bug>
	<bug>
		<id>1168</id>
		<title>从1.6.9更新到1.7.5部分之前任务继续下载出现Requested Range Not Satisfiable问题</title>
		<body>**从1.6.9更新到1.7.5 部分任务请求头从Range=[bytes=25046605-]变成Range=[bytes=25046605-0]** (如果在1.7.5上创建任务再回到1.6.9的继续下载,请求头会从Range=[bytes=25046605-]变成Range=[bytes=25046605--1]) 导致连接创建失败,下面是大致日志,具体出错在HTTP/1.1 416 Requested Range Not Satisfiable.  **v1.6.9产生的任务使用v1.7.5的请求头** D/FileDownloader.ConnectTask: &lt;---- -1189118502 request header {If-Match=["5c0b79f9-2216fa0"], Range=[bytes=0-0], User-Agent=[FileDownloader/1.7.5]} D/FileDownloader.ConnectTask: &lt;---- -1189118502 request header {If-Match=["5c0b79f9-2216fa0"], Range=[bytes=1726298-11915231], User-Agent=[FileDownloader/1.7.5]} D/FileDownloader.ConnectTask: &lt;---- -1189118502 request header {If-Match=["5c0b79f9-2216fa0"], Range=[bytes=13217018-23830463], User-Agent=[FileDownloader/1.7.5]} D/FileDownloader.ConnectTask: &lt;---- -1189118502 request header {If-Match=["5c0b79f9-2216fa0"], **Range=[bytes=25046605-0]**, User-Agent=[FileDownloader/1.7.5]} **v1.7.5产生的任务请求头使用v1.7.5的请求头** D/FileDownloader.ConnectTask: &lt;---- -1359419612 request header {If-Match=["5c0b79f9-2216fa0"], Range=[bytes=0-0], User-Agent=[FileDownloader/1.7.5]} D/FileDownloader.ConnectTask: &lt;---- -1359419612 request header {If-Match=["5c0b79f9-2216fa0"], Range=[bytes=2317602-11915231], User-Agent=[FileDownloader/1.7.5]} D/FileDownloader.ConnectTask: &lt;---- -1359419612 request header {If-Match=["5c0b79f9-2216fa0"], Range=[bytes=14052602-23830463], User-Agent=[FileDownloader/1.7.5]} D/FileDownloader.ConnectTask: &lt;---- -1359419612 request header {If-Match=["5c0b79f9-2216fa0"], **Range=[bytes=25967834-]**, User-Agent=[FileDownloader/1.7.5]} **v1.6.9产生的任务响应** D/FileDownloader.ConnectTask: ----&gt; -1189118502 response header {null=[HTTP/1.1 206 Partial Content], Cache-Control=[max-age=7200], Connection=[keep-alive], Content-Length=[1], Content-Range=[bytes 0-0/35745696], Content-Type=[application/octet-stream], Date=[Fri, 04 Jan 2019 04:10:31 GMT], ETag=["5c0b79f9-2216fa0"], Expires=[Fri, 04 Jan 2019 06:10:31 GMT], Last-Modified=[Sat, 08 Dec 2018 07:59:53 GMT], Server=[nginx/1.11.7], X-Android-Received-Millis=[1546575033888], X-Android-Response-Source=[NETWORK 206], X-Android-Selected-Protocol=[http/1.1], X-Android-Sent-Millis=[1546575033872]} D/FileDownloader.ConnectTask: ----&gt; -1189118502 response header {null=[HTTP/1.1 206 Partial Content], Cache-Control=[max-age=7200], Connection=[keep-alive], Content-Length=[10086904], Content-Range=[bytes 1828328-11915231/35745696], Content-Type=[application/octet-stream], Date=[Fri, 04 Jan 2019 04:10:31 GMT], ETag=["5c0b79f9-2216fa0"], Expires=[Fri, 04 Jan 2019 06:10:31 GMT], Last-Modified=[Sat, 08 Dec 2018 07:59:53 GMT], Server=[nginx/1.11.7], X-Android-Received-Millis=[1546575033945], X-Android-Response-Source=[NETWORK 206], X-Android-Selected-Protocol=[http/1.1], X-Android-Sent-Millis=[1546575033918]} D/FileDownloader.ConnectTask: ----&gt; -1189118502 **response header {null=[HTTP/1.1 416 Requested Range Not Satisfiable]**, Cache-Control=[max-age=7200], Connection=[keep-alive], Content-Length=[213], Content-Range=[bytes */35745696], Content-Type=[text/html], Date=[Fri, 04 Jan 2019 04:10:31 GMT], Expires=[Fri, 04 Jan 2019 06:10:31 GMT], Server=[nginx/1.11.7], X-Android-Received-Millis=[1546575034018], X-Android-Response-Source=[NETWORK 416], X-Android-Selected-Protocol=[http/1.1], X-Android-Sent-Millis=[1546575033956]} D/FileDownloader.ConnectTask: ----&gt; -1189118502 response header {null=[HTTP/1.1 206 Partial Content], Cache-Control=[max-age=7200], Connection=[keep-alive], Content-Length=[10544185], Content-Range=[bytes 13286279-23830463/35745696], Content-Type=[application/octet-stream], Date=[Fri, 04 Jan 2019 04:10:31 GMT], ETag=["5c0b79f9-2216fa0"], Expires=[Fri, 04 Jan 2019 06:10:31 GMT], Last-Modified=[Sat, 08 Dec 2018 07:59:53 GMT], Server=[nginx/1.11.7], X-Android-Received-Millis=[1546575034221], X-Android-Response-Source=[NETWORK 206], X-Android-Selected-Protocol=[http/1.1], X-Android-Sent-Millis=[1546575033956]} **v1.7.5产生的任务响应** D/FileDownloader.ConnectTask: ----&gt; -1359419612 response header {null=[HTTP/1.1 206 Partial Content], Cache-Control=[max-age=7200], Connection=[keep-alive], Content-Length=[1], Content-Range=[bytes 0-0/35745696], Content-Type=[application/octet-stream], Date=[Fri, 04 Jan 2019 04:10:44 GMT], ETag=["5c0b79f9-2216fa0"], Expires=[Fri, 04 Jan 2019 06:10:44 GMT], Last-Modified=[Sat, 08 Dec 2018 07:59:53 GMT], Server=[nginx/1.11.7], X-Android-Received-Millis=[1546575046560], X-Android-Response-Source=[NETWORK 206], X-Android-Selected-Protocol=[http/1.1], X-Android-Sent-Millis=[1546575046499]} D/FileDownloader.ConnectTask: ----&gt; -1359419612 response header {null=[HTTP/1.1 206 Partial Content], Cache-Control=[max-age=7200], Connection=[keep-alive], Content-Length=[8807480], Content-Range=[bytes 15022984-23830463/35745696], Content-Type=[application/octet-stream], Date=[Fri, 04 Jan 2019 04:10:44 GMT], ETag=["5c0b79f9-2216fa0"], Expires=[Fri, 04 Jan 2019 06:10:44 GMT], Last-Modified=[Sat, 08 Dec 2018 07:59:53 GMT], Server=[nginx/1.11.7], X-Android-Received-Millis=[1546575046623], X-Android-Response-Source=[NETWORK 206], X-Android-Selected-Protocol=[http/1.1], X-Android-Sent-Millis=[1546575046593]} D/FileDownloader.ConnectTask: ----&gt; -1359419612 response header {null=[HTTP/1.1 206 Partial Content], Cache-Control=[max-age=7200], Connection=[keep-alive], Content-Length=[9610296], Content-Range=[bytes 26135400-35745695/35745696], Content-Type=[application/octet-stream], Date=[Fri, 04 Jan 2019 04:10:44 GMT], ETag=["5c0b79f9-2216fa0"], Expires=[Fri, 04 Jan 2019 06:10:44 GMT], Last-Modified=[Sat, 08 Dec 2018 07:59:53 GMT], Server=[nginx/1.11.7], X-Android-Received-Millis=[1546575046742], X-Android-Response-Source=[NETWORK 206], X-Android-Selected-Protocol=[http/1.1], X-Android-Sent-Millis=[1546575046642]} D/FileDownloader.ConnectTask: ----&gt; -1359419612 response header {null=[HTTP/1.1 206 Partial Content], Cache-Control=[max-age=7200], Connection=[keep-alive], Content-Length=[8987695], Content-Range=[bytes 2927537-11915231/35745696], Content-Type=[application/octet-stream], Date=[Fri, 04 Jan 2019 04:10:44 GMT], ETag=["5c0b79f9-2216fa0"], Expires=[Fri, 04 Jan 2019 06:10:44 GMT], Last-Modified=[Sat, 08 Dec 2018 07:59:53 GMT], Server=[nginx/1.11.7], X-Android-Received-Millis=[1546575046753], X-Android-Response-Source=[NETWORK 206], X-Android-Selected-Protocol=[http/1.1], X-Android-Sent-Millis=[1546575046644]}</body>
		<created>2019-01-04 06:06:53</created>
		<closed>2019-07-21 12:56:06</closed>
	</bug>
	<bug>
		<id>1136</id>
		<title>Occur [FileDownloader is running] notification despite there is no downloading task.</title>
		<body>device：honor Android: 8.0.0 FileDownload: 1.7.6-SNAPSHOT description:  通知栏出现此通知且关不掉，我是在1.7.5版本就遇见这个问题了，后来参照https://github.com/lingochamp/FileDownloader/issues/1096 升级了快照版本问题还是存在</body>
		<created>2018-10-24 01:28:16</created>
		<closed>2018-12-03 02:13:42</closed>
	</bug>
	<bug>
		<id>1104</id>
		<title>Context.startForegroundService did not then call Service.startForeground</title>
		<body>1. What problem do you get? `Context.startForegroundService() did not then call Service.startForeground(): ServiceRecord{ad3cfbc u0 &lt;application.package.name&gt;/com.liulishuo.filedownloader.services.FileDownloadService$SharedMainProcessService} ` 2. Which version of FileDownloader are you using when you produce such problem? 1.7.5  3. How to reproduce such problem? When `OS &gt;= Oreo` and App is still in foreground  4. Do you set `FileDownloadLog.NEED_LOG=true`? Yes  I think problem here is that in `FileDownloadService` class you check for `needMakeServiceForeground` with conditions `Build.VERSION.SDK_INT &gt;= Build.VERSION_CODES.O` and `!isAppOnForeground()` However, if `OS &gt;= Oreo` then it should always call `makeServiceForeground()` doesn't matter if app is in foreground or not.  Have a look here https://developer.android.com/about/versions/oreo/background   If you think that's correct then I can open PR</body>
		<created>2018-08-31 20:37:04</created>
		<closed>2018-09-14 08:37:16</closed>
	</bug>
	<bug>
		<id>1100</id>
		<title>DownloadRunnable类中getDownloadedOffset()方法NPE问题</title>
		<body>```     private long getDownloadedOffset() {         final FileDownloadDatabase database = CustomComponentHolder.getImpl().getDatabaseInstance();         if (connectionIndex &gt;= 0) {             // is multi connection             List&lt;ConnectionModel&gt; connectionModels = database.findConnectionModel(downloadId);             for (ConnectionModel connectionModel : connectionModels) {                 if (connectionModel.getIndex() == connectionIndex) {                     return connectionModel.getCurrentOffset();                 }             }         } else {             // is single connection             FileDownloadModel downloadModel = database.find(downloadId);             // 这个地方报出NPE问题             return downloadModel.getSoFar();         }         return 0;     } ```</body>
		<created>2018-08-22 09:03:06</created>
		<closed>2018-12-12 06:01:23</closed>
	</bug>
	<bug>
		<id>1078</id>
		<title>Android 8+: Not allowed to start service Intent</title>
		<body>**What problem do you get?** I'm getting the exact same issue as ticket #1017 but when using `process.non-separate=true`.  **Which version of FileDownloader are you using when you produce such problem?** I'm using the latest version: 1.7.4  **How to reproduce such problem?** Add `process.non-separate=true` to filedownloader.properties. Then follow steps as with ticket  #1017   **Exception logcat**  ``` E: FATAL EXCEPTION: main    Process: com.brightcove.player.test.exo2, PID: 9875    java.lang.RuntimeException: Error receiving broadcast Intent { act=android.net.conn.CONNECTIVITY_CHANGE flg=0x4000010 (has extras) } in com.brightcove.player.network.ConnectivityMonitor$1@64fb744        at android.app.LoadedApk$ReceiverDispatcher$Args.lambda$-android_app_LoadedApk$ReceiverDispatcher$Args_52497(LoadedApk.java:1323)        at android.app.-$Lambda$aS31cHIhRx41653CMnd4gZqshIQ.$m$7(Unknown Source:4)        at android.app.-$Lambda$aS31cHIhRx41653CMnd4gZqshIQ.run(Unknown Source:39)        at android.os.Handler.handleCallback(Handler.java:790)        at android.os.Handler.dispatchMessage(Handler.java:99)        at android.os.Looper.loop(Looper.java:164)        at android.app.ActivityThread.main(ActivityThread.java:6494)        at java.lang.reflect.Method.invoke(Native Method)        at com.android.internal.os.RuntimeInit$MethodAndArgsCaller.run(RuntimeInit.java:438)        at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:807)     Caused by: java.lang.IllegalStateException: Not allowed to start service Intent { cmp=com.brightcove.player.test.exo2/com.liulishuo.filedownloader.services.FileDownloadService$SharedMainProcessService }: app is in background uid UidRecord{8d32f03 u0a355 LAST bg:+3m7s444ms idle change:cached procs:1 seq(0,0,0)}        at android.app.ContextImpl.startServiceCommon(ContextImpl.java:1521)        at android.app.ContextImpl.startService(ContextImpl.java:1477)        at android.content.ContextWrapper.startService(ContextWrapper.java:650)        at com.liulishuo.filedownloader.FileDownloadServiceSharedTransmit.bindStartByContext(FileDownloadServiceSharedTransmit.java:145)        at com.liulishuo.filedownloader.FileDownloadServiceProxy.bindStartByContext(FileDownloadServiceProxy.java:120)        at com.liulishuo.filedownloader.FileDownloader.pauseAll(FileDownloader.java:282)        at com.brightcove.player.network.DownloadManager$1.onConnectivityChanged(DownloadManager.java:120)        at com.brightcove.player.network.ConnectivityMonitor$1.onReceive(ConnectivityMonitor.java:260)        at android.app.LoadedApk$ReceiverDispatcher$Args.lambda$-android_app_LoadedApk$ReceiverDispatcher$Args_52497(LoadedApk.java:1313)        at android.app.-$Lambda$aS31cHIhRx41653CMnd4gZqshIQ.$m$7(Unknown Source:4)         at android.app.-$Lambda$aS31cHIhRx41653CMnd4gZqshIQ.run(Unknown Source:39)         at android.os.Handler.handleCallback(Handler.java:790)         at android.os.Handler.dispatchMessage(Handler.java:99)         at android.os.Looper.loop(Looper.java:164)         at android.app.ActivityThread.main(ActivityThread.java:6494)         at java.lang.reflect.Method.invoke(Native Method)         at com.android.internal.os.RuntimeInit$MethodAndArgsCaller.run(RuntimeInit.java:438)         at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:807)  ``` </body>
		<created>2018-07-12 15:14:40</created>
		<closed>2018-08-03 05:29:42</closed>
	</bug>
	<bug>
		<id>1069</id>
		<title>blockComplete 在主线程回调</title>
		<body>#### Before Issue  1. Please search on the [Issues](https://github.com/lingochamp/FileDownloader/issues) 2. Please search on the [wiki](https://github.com/lingochamp/FileDownloader/wiki) 3. Please set `FileDownloadLog.NEED_LOG=true` and review the Logcat output from main process and `:filedownloader` process ( pay attention to Warn and Error level logcat)  #### Issue  1. What problem do you get? 2. Which version of FileDownloader are you using when you produce such problem? 3. How to reproduce such problem? 4. Do you set `FileDownloadLog.NEED_LOG=true`? 5. Could you please reproduce this problem and provide all main process and `:filedownloader` process logcat  6. Can you fix it by yourself and request PR, if not, what's problem do you get when you try to fix it  &gt;P.S. If you don't know how to get `:filedownloader` process, it's recommended to using `pidcat` to just filter all your application logcat, or define `process.non-separate=true` on [filedownloader.properties](https://github.com/lingochamp/FileDownloader/wiki/filedownloader.properties)  ---  blockComplete 按照注释应该是在非UI线程回调，但是在使用中发现并不是这样的 打log看了下，原因如下： 1. FileDownloadList 在文件下载完成后，remove方法会回调，switch 走FileDownloadStatus.completed 分支，然后在 FileDownloadMessenger 中的parcelQueue队列后面加入BlockCompleteMessageImpl 2. 但是这时候，parcelQueue可能不为空，里面还有没处理完的 ProgressMessageSnapshot 3. FileDownloadMessageStation 的 requestEnqueue 判断是否走blockCompletedPool 的逻辑是parcelQueue头，是否是 BlockCompleteMessageImpl。但是这时候 parcelQueue 头是还没处理完的 ProgressMessageSnapshot，BlockCompleteMessageImpl其实在队列尾部。这样就造成了这个不会走blockCompletedPool，而是走UI线程。 4. 如上所述，这个设计本身就隐形的要求 BlockCompleteMessageImpl 入队列时，队列为空？如果不为空就不走UI线程？ 为什么不能在 BlockCompleteMessageImpl 入队列时，清空一下队列？ </body>
		<created>2018-07-02 06:25:33</created>
		<closed>2019-08-31 14:19:36</closed>
	</bug>
	<bug>
		<id>1028</id>
		<title>Directory Traversal Vulnerability in FileDownloader</title>
		<body>We have found a directory traversal vulnerability in FileDownloader, which may cause remote code execution. For consideration of security, we do not reveal the detail of this vulnerability currently. Welcome contact me by Email: tiamo_inter#foxmail.com  Update: CVE has assigned this vulnerability an ID: https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-11248</body>
		<created>2018-05-17 11:01:52</created>
		<closed>2018-05-17 16:24:48</closed>
	</bug>
	<bug>
		<id>1017</id>
		<title>Android 8/8+: Fatal Exception: java.lang.IllegalStateException</title>
		<body>Library version: `com.liulishuo.filedownloader:library:1.6.5`  Build Environment - compileSdkVersion 26 - buildToolsVersion "27.0.3" - minSdkVersion 15 - targetSdkVersion 26  Observations - 100% of this crash happens in Android 8+ - 99% of this crash happens when app is at background  Info from Crashlytics &gt;  &gt; Not allowed to start service Intent { cmp=com.XXXX.YYYY/com.liulishuo.filedownloader.services.FileDownloadService$SeparateProcessService }: app is in background uid UidRecord{51e9798 u0a324 CAC bg:+1m31s64ms idle procs:2 seq(73,73,73)} &gt; ``` &gt; Fatal Exception: java.lang.IllegalStateException: Not allowed to start service Intent { cmp=com.XXXX.YYYY/com.liulishuo.filedownloader.services.FileDownloadService$SeparateProcessService }: app is in background uid UidRecord{51e9798 u0a324 CAC  bg:+1m31s64ms idle procs:2 seq(73,73,73)} &gt;        at android.app.ContextImpl.startServiceCommon(ContextImpl.java:1522) &gt;        at android.app.ContextImpl.startService(ContextImpl.java:1478) &gt;        at android.content.ContextWrapper.startService(ContextWrapper.java:645) &gt;        at com.liulishuo.filedownloader.services.BaseFileServiceUIGuard.bindStartByContext(SourceFile:157) &gt;        at com.liulishuo.filedownloader.services.BaseFileServiceUIGuard.bindStartByContext(SourceFile:126) &gt;        at com.liulishuo.filedownloader.FileDownloadServiceProxy.bindStartByContext(SourceFile:112) &gt;        at com.liulishuo.filedownloader.FileDownloader.bindService(SourceFile:486) &gt;        at com.liulishuo.filedownloader.LostServiceConnectedHandler.disconnected(SourceFile:94) &gt;        at com.liulishuo.filedownloader.FileDownloadConnectListener.callback(SourceFile:45) &gt;        at com.liulishuo.filedownloader.event.DownloadEventPoolImpl.trigger(SourceFile:132) &gt;        at com.liulishuo.filedownloader.event.DownloadEventPoolImpl.publish(SourceFile:107) &gt;        at com.liulishuo.filedownloader.event.DownloadEventPoolImpl$1.run(SourceFile:121) &gt;        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162) &gt;        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636) &gt;        at java.lang.Thread.run(Thread.java:764) &gt; ```  Related: https://stackoverflow.com/questions/46445265/android-8-0-java-lang-illegalstateexception-not-allowed-to-start-service-inten?utm_medium=organic&amp;utm_source=google_rich_qa&amp;utm_campaign=google_rich_qa</body>
		<created>2018-04-26 04:21:22</created>
		<closed>2018-05-04 02:29:16</closed>
	</bug>
	<bug>
		<id>1006</id>
		<title>.A resource was acquired at attached stack trace but never released. See java.io.Closeable for information on avoiding resource leaks.</title>
		<body>这个问题修复了吗。只是报错。没有崩溃。版本是1.6.9 ![3e03d1fb98a2ce79dd8e43ef1371437f](https://user-images.githubusercontent.com/17866068/38924946-d51abb06-4330-11e8-900e-88c313d7bf22.png) </body>
		<created>2018-04-18 09:50:19</created>
		<closed>2018-04-20 10:23:03</closed>
	</bug>
	<bug>
		<id>953</id>
		<title>请问数据库操作为什么和log的级别嵌套在一起呢？</title>
		<body>FileDownloadManager  ![image](https://user-images.githubusercontent.com/17804057/36150066-42a2f8ca-10fd-11e8-8aa6-e36a257cd211.png) </body>
		<created>2018-02-13 12:34:42</created>
		<closed>2018-02-26 06:30:58</closed>
	</bug>
	<bug>
		<id>949</id>
		<title>Data lose when retry </title>
		<body>using latest downloader version   02-09 13:41:50.111 18475-20616/com.downloader I/FileDownloader.DownloadStatusCallback: inspectNeedCallbackToUser need callback to user 02-09 13:41:50.111 18475-20615/com.downloader I/FileDownloader.DownloadStatusCallback: handleProgress notify user progress status 02-09 13:41:50.111 18475-20584/com.downloader D/FileDownloader.MessageSnapshotGate: ~~~callback -488320154 old[3] new[3] 1 02-09 13:41:50.111 18475-20584/com.downloader D/FileDownloader.FileDownloadMessenger: notify progress -488320154@com.liulishuo.filedownloader.DownloadTask@b888cee 3515292 466862114 02-09 13:41:50.111 18475-20584/com.downloader D/FileDownloader.MessageSnapshotGate: updateKeepFlow 02-09 13:41:50.121 18475-18475/com.downloader V/SRL: notification show : 3515292=  Speed:7 02-09 13:41:50.121 18475-18475/com.downloader V/SRL: notification soFar : 3515292==3 02-09 13:42:03.121 18475-20616/com.downloader I/FileDownloader.DownloadStatusCallback: inspectNeedCallbackToUser need callback to user 02-09 13:42:03.121 18475-20615/com.downloader I/FileDownloader.DownloadStatusCallback: handleProgress notify user progress status 02-09 13:42:03.121 18475-20584/com.downloader D/FileDownloader.MessageSnapshotGate: ~~~callback -488320154 old[3] new[3] 1 02-09 13:42:03.121 18475-20584/com.downloader D/FileDownloader.FileDownloadMessenger: notify progress -488320154@com.liulishuo.filedownloader.DownloadTask@b888cee 3536112 466862114 02-09 13:42:03.121 18475-20584/com.downloader D/FileDownloader.MessageSnapshotGate: updateKeepFlow 02-09 13:42:03.141 18475-18475/com.downloader V/SRL: notification show : 3536112=  Speed:1 02-09 13:42:03.141 18475-18475/com.downloader V/SRL: notification soFar : 3536112==3 02-09 13:42:12.431 18475-20616/com.downloader I/FileDownloader.DownloadStatusCallback: inspectNeedCallbackToUser need callback to user 02-09 13:42:12.431 18475-20615/com.downloader I/FileDownloader.DownloadStatusCallback: handleProgress notify user progress status 02-09 13:42:12.431 18475-20584/com.downloader D/FileDownloader.MessageSnapshotGate: ~~~callback -488320154 old[3] new[3] 1 02-09 13:42:12.431 18475-20616/com.downloader I/System.out: FileDownloadRandomAccessFile : null==Internal 02-09 13:42:12.431 18475-20584/com.downloader D/FileDownloader.FileDownloadMessenger: notify progress -488320154@com.liulishuo.filedownloader.DownloadTask@b888cee 3556932 466862114 02-09 13:42:12.441 18475-20584/com.downloader D/FileDownloader.MessageSnapshotGate: updateKeepFlow 02-09 13:42:12.451 18475-18475/com.downloader V/SRL: notification show : 3556932=  Speed:2 02-09 13:42:12.451 18475-18475/com.downloader V/SRL: notification soFar : 3556932==3 02-09 13:42:33.651 18475-20620/com.downloader D/FileDownloader.FetchDataTask: require flushAndSync id[-488320154] index[4] offset[373492082], consume[7] 02-09 13:42:33.661 18475-20620/com.downloader D/FileDownloader.ConnectTask: &lt;---- -488320154 request header {Range=[bytes=373489688-], User-Agent=[FileDownloader/1.0.78]} 02-09 13:42:33.671 18475-20977/com.downloader D/FileDownloader.MessageSnapshotGate: ~~~callback -488320154 old[3] new[5] 1 02-09 13:42:33.671 18475-20977/com.downloader D/FileDownloader.FileDownloadMessenger: notify retry -488320154@com.liulishuo.filedownloader.DownloadTask@b888cee 10 5 java.net.SocketTimeoutException 02-09 13:42:33.671 18475-20977/com.downloader D/FileDownloader.MessageSnapshotGate: updateKeepFlow 02-09 13:42:48.241 18475-20618/com.downloader D/FileDownloader.FetchDataTask: require flushAndSync id[-488320154] index[2] offset[187682750], consume[9] 02-09 13:42:48.251 18475-20618/com.downloader D/FileDownloader.ConnectTask: &lt;---- -488320154 request header {Range=[bytes=186744844-280117265], User-Agent=[FileDownloader/1.0.78]} 02-09 13:42:48.261 18475-20977/com.downloader D/FileDownloader.MessageSnapshotGate: ~~~callback -488320154 old[5] new[5] 1 02-09 13:42:48.261 18475-20977/com.downloader D/FileDownloader.FileDownloadMessenger: notify retry -488320154@com.liulishuo.filedownloader.DownloadTask@b888cee 10 6 java.net.SocketTimeoutException: timeout 02-09 13:42:48.261 18475-20977/com.downloader D/FileDownloader.MessageSnapshotGate: updateKeepFlow 02-09 13:42:56.071 18475-18475/com.downloader V/FileDownloader.DownloadTaskHunter: the task[-488320154] has been expired from the launch pool. 02-09 13:42:56.071 18475-18475/com.downloader D/FileDownloader.FileDownloadManager: request pause the task -488320154 02-09 13:42:56.071 18475-18475/com.downloader D/FileDownloader.FileDownloadThreadPool: successful cancel -488320154 FALSE 02-09 13:42:56.071 18475-18475/com.downloader D/FileDownloader.FileDownloadMessenger: notify begin -488320154@com.liulishuo.filedownloader.DownloadTask@b888cee 02-09 13:42:56.071 18475-18475/com.downloader V/FileDownloader.DownloadTaskHunter: filedownloader:lifecycle:start com.liulishuo.filedownloader.DownloadTaskHunter@e41101c by -2  02-09 13:42:56.071 18475-18475/com.downloader V/FileDownloader.FileDownloadList: remove -488320154@com.liulishuo.filedownloader.DownloadTask@b888cee left -2 0 02-09 13:42:56.071 18475-18475/com.downloader D/FileDownloader.FileDownloadMessenger: notify paused -488320154@com.liulishuo.filedownloader.DownloadTask@b888cee 02-09 13:42:56.071 18475-18475/com.downloader V/FileDownloader.DownloadTaskHunter: filedownloader:lifecycle:over com.liulishuo.filedownloader.DownloadTaskHunter@e41101c by -2  02-09 13:42:56.081 18475-18475/com.downloader V/SRL: notification soFar : 3442708==-2 02-09 13:43:02.571 18475-20619/com.downloader D/FileDownloader.FetchDataTask: require flushAndSync id[-488320154] index[3] offset[280708172], consume[13] 02-09 13:43:02.571 18475-20619/com.downloader D/FileDownloader.DownloadLaunchRunnable: the task[-488320154] has already been paused, so pass the retry callback 02-09 13:43:02.591 18475-20617/com.downloader D/FileDownloader.FetchDataTask: require flushAndSync id[-488320154] index[1] offset[94142381], consume[10] 02-09 13:43:02.591 18475-20617/com.downloader D/FileDownloader.DownloadLaunchRunnable: the task[-488320154] has already been paused, so pass the retry callback</body>
		<created>2018-02-09 08:19:23</created>
		<closed>2018-03-11 05:28:44</closed>
	</bug>
	<bug>
		<id>942</id>
		<title>FileDownloadHttpException: response code error: 405</title>
		<body>### 我在做apk下载的时候遇到了405错误，然后根据提示确实是ResponseHeader没有文件的大小，随后根据提示在filedownloader.properties 的文件中配置http.lenient=true来忽略这个错误，但是依然没有得到解决。此外在之前使用的时候1.6.8是可以下载的不存在这个情况。我下载的链接是：http://open.game.163.com/web-download-apk/?gameId=ga8a49e80f5fed7546015ffca86c88009b &gt; 02-03 22:58:08.312 10213-10213/com.wangxia.battleroyale W/System.err: com.liulishuo.filedownloader.exception.FileDownloadHttpException: response code error: 405,  02-03 22:58:08.312 10213-10213/com.wangxia.battleroyale W/System.err:  request headers: {Range=[bytes=0-0], User-Agent=[FileDownloader/1.7.0]}  02-03 22:58:08.312 10213-10213/com.wangxia.battleroyale W/System.err:  response headers: {null=[HTTP/1.1 405 Method Not Allowed], Allow=[GET], Connection=[keep-alive], Content-Language=[en], Content-Length=[1047], Content-Type=[text/html;charset=utf-8], Date=[Sun, 04 Feb 2018 03:58:08 GMT], Server=[nginx], Set-Cookie=[JVM_ROUTE=610c93cae28f6afa99f7255a9f95e88f743151759023efd58c33a05d7b0444940f30288d450d4a643c2e604cfc7f18d0; Domain=game.yixin.im; Expires=Fri, 22-Feb-2086 07:12:15 GMT; Path=/, JVM_ROUTE=610c93cae28f6afa99f7255a9f95e88f743151759023efd58c33a05d7b0444940f30288d450d4a643c2e604cfc7f18d0; Domain=open.yixin.im; Expires=Fri, 22-Feb-2086 07:12:15 GMT; Path=/], X-Android-Received-Millis=[1517716688291], X-Android-Response-Source=[NETWORK 405], X-Android-Sent-Millis=[1517716688245]} 02-03 22:58:08.312 10213-10213/com.wangxia.battleroyale W/System.err:     at com.liulishuo.filedownloader.download.DownloadLaunchRunnable.handleTrialConnectResult(DownloadLaunchRunnable.java:552) 02-03 22:58:08.312 10213-10213/com.wangxia.battleroyale W/System.err:     at com.liulishuo.filedownloader.download.DownloadLaunchRunnable.trialConnect(DownloadLaunchRunnable.java:374) 02-03 22:58:08.312 10213-10213/com.wangxia.battleroyale W/System.err:     at com.liulishuo.filedownloader.download.DownloadLaunchRunnable.run(DownloadLaunchRunnable.java:253) 02-03 22:58:08.312 10213-10213/com.wangxia.battleroyale W/System.err:     at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1112) 02-03 22:58:08.312 10213-10213/com.wangxia.battleroyale W/System.err:     at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:587) 02-03 22:58:08.312 10213-10213/com.wangxia.battleroyale W/System.err:     at java.lang.Thread.run(Thread.java:818) </body>
		<created>2018-02-04 04:07:48</created>
		<closed>2018-02-05 11:01:13</closed>
	</bug>
	<bug>
		<id>933</id>
		<title>重复下载</title>
		<body>每次下载的时候都会先发起range为  0-  的请求，然后再分段下载，但是这一个 0- 的请求，就已经下载了整个文件了，为什么不发起一个range为0-0的请求，然后解析response中的content-range来获取总长再进行分段？我自己改了一版代码，发现这样也是完全可以下载的，可以解决掉重复下载的问题，但不明白为什么作者不这样用呢？其他的使用者好像也没反馈类似问题 </body>
		<created>2018-01-28 15:05:46</created>
		<closed>2018-01-31 14:31:49</closed>
	</bug>
	<bug>
		<id>908</id>
		<title>FileDownloadUtils里的CONTENT_DISPOSITION_PATTERN正则貌似多匹配了2个引号</title>
		<body>注释的W3C链接（http://www.w3.org/Protocols/rfc2616/rfc2616-sec19.html） 里虽然举了个例子：attachment; filename="fname.ext"，但并没有强制要求文件名必须要使用双引号，然后W3C链接里还有个RFC 1806（http://www.ietf.org/rfc/rfc1806.txt） 的链接来解释了Content-Disposition，但里面的例子里文件名并没有双引号：attachment; filename=genome.jpeg。  现在这个正则强制匹配文件名的双引号，导致没有没有双引号的时候拿不到文件名了，这是当时故意这么设计的吗？</body>
		<created>2018-01-10 09:22:39</created>
		<closed>2018-01-15 11:30:28</closed>
	</bug>
	<bug>
		<id>901</id>
		<title>setCallbackProgressTimes这个方法设置回调次数和实际的次数不一致</title>
		<body>#### Before Issue  1. Please search on the [Issues](https://github.com/lingochamp/FileDownloader/issues) 2. Please search on the [wiki](https://github.com/lingochamp/FileDownloader/wiki) 3. Please set `FileDownloadLog.NEED_LOG=true` and review the Logcat output from main process and `:filedownloader` process ( pay attention to Warn and Error level logcat)  #### Issue  1. What problem do you get? 2. Which version of FileDownloader are you using when you produce such problem? 3. How to reproduce such problem? 4. Do you set `FileDownloadLog.NEED_LOG=true`? 5. Could you please reproduce this problem and provide all main process and `:filedownloader` process logcat  6. Can you fix it by yourself and request PR, if not, what's problem do you get when you try to fix it  &gt;P.S. If you don't know how to get `:filedownloader` process, it's recommended to using `pidcat` to just filter all your application logcat, or define `process.non-separate=true` on [filedownloader.properties](https://github.com/lingochamp/FileDownloader/wiki/filedownloader.properties)  ---  请在Issue前认真的跟进上面提到的建议，这样将可以极大的加快你遇到问题的处理。 </body>
		<created>2018-01-08 03:54:23</created>
		<closed>2018-01-22 14:15:00</closed>
	</bug>
	<bug>
		<id>889</id>
		<title>请问这是什么非法参数异常错误，没找到具体原因</title>
		<body>#### Issue       12-25 19:23:43.587 13320-13320/? E/AndroidRuntime: FATAL EXCEPTION: main Process: com.hy.HoneyMarket, PID: 13320       java.lang.IllegalArgumentException: can't handover the message, no master to receive this message(status[2]) size[0]        at com.liulishuo.filedownloader.k.b(Unknown Source)     at com.liulishuo.filedownloader.j$b.a(Unknown Source)     at com.liulishuo.filedownloader.j$b.handleMessage(Unknown Source)     at android.os.Handler.dispatchMessage(Handler.java:98)     at android.os.Looper.loop(Looper.java:135)     at android.app.ActivityThread.main(ActivityThread.java:5258)     at java.lang.reflect.Method.invoke(Native Method)     at java.lang.reflect.Method.invoke(Method.java:372)     at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:963)     at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:758)  --- </body>
		<created>2017-12-25 12:13:40</created>
		<closed>2018-01-07 01:33:52</closed>
	</bug>
	<bug>
		<id>884</id>
		<title>你的demoapp点击开始然后快速点击暂停，网速为负值</title>
		<body>#### Before Issue  1. Please search on the [Issues](https://github.com/lingochamp/FileDownloader/issues) 2. Please search on the [wiki](https://github.com/lingochamp/FileDownloader/wiki) 3. Please set `FileDownloadLog.NEED_LOG=true` and review the Logcat output from main process and `:filedownloader` process ( pay attention to Warn and Error level logcat)  #### Issue  1. What problem do you get? 2. Which version of FileDownloader are you using when you produce such problem? 3. How to reproduce such problem? 4. Do you set `FileDownloadLog.NEED_LOG=true`? 5. Could you please reproduce this problem and provide all main process and `:filedownloader` process logcat  6. Can you fix it by yourself and request PR, if not, what's problem do you get when you try to fix it  &gt;P.S. If you don't know how to get `:filedownloader` process, it's recommended to using `pidcat` to just filter all your application logcat, or define `process.non-separate=true` on [filedownloader.properties](https://github.com/lingochamp/FileDownloader/wiki/filedownloader.properties)  ---  请在Issue前认真的跟进上面提到的建议，这样将可以极大的加快你遇到问题的处理。 </body>
		<created>2017-12-23 02:16:31</created>
		<closed>2018-01-16 13:19:37</closed>
	</bug>
	<bug>
		<id>867</id>
		<title>部分小米手机直接崩溃</title>
		<body>No static method a(Ljava/lang/String;Ljava/lang/Object;)V in class Ljunit/framework/Assert; or its super classes (declaration of 'junit.framework.Assert' appears in /system/framework/core-junit.jar)  com.liulishuo.filedownloader.event.DownloadEventPoolImpl.a(SourceFile:42)  1.6.8版本，部分小米手机会直接崩溃，错误如上。 </body>
		<created>2017-12-11 13:28:59</created>
		<closed>2017-12-12 05:17:02</closed>
	</bug>
	<bug>
		<id>858</id>
		<title>FileDownloadSerialQueue maybe deadlock</title>
		<body>I try to override `FileDownloadSerialQueue` to my project , and I found it may deadlock sometimes . Because the `BlocklingQueue.take()` will call `await()` in thread , it will hold the `finishCallback` lock . I think that `synchronized` no need to used in `SerialLoop` .</body>
		<created>2017-12-06 07:48:19</created>
		<closed>2017-12-10 03:45:13</closed>
	</bug>
	<bug>
		<id>857</id>
		<title>莫名其妙下载不动了，手动暂停后，获取状态一直为progress</title>
		<body>1.莫名其妙下载不动了，手动暂停后，获取状态一直为progress 2. 杀掉退出APP，杀掉进程后，才可恢复正常  截取部分日志如下：   12-06 14:58:09.442 19617-19972/com.gtmc.test D/FileDownloader.MessageSnapshotGate: ~~~callback 1740509613 old[3] new[3] 1 12-06 14:58:09.446 19617-19972/com.gtmc.test D/FileDownloader.FileDownloadMessenger: notify progress 1740509613@com.liulishuo.filedownloader.DownloadTask@8d244c 86355043 86548501 12-06 14:58:10.924 19617-19972/com.gtmc.test D/FileDownloader.MessageSnapshotGate: ~~~callback 1740509613 old[3] new[-3] 1 12-06 14:58:10.930 19617-19972/com.gtmc.test V/FileDownloader.FileDownloadList: remove 1740509613@com.liulishuo.filedownloader.DownloadTask@8d244c left -3 0 12-06 14:58:10.943 19617-19972/com.gtmc.test D/FileDownloader.FileDownloadMessenger: notify block completed 1740509613@com.liulishuo.filedownloader.DownloadTask@8d244c FileDownloader-Flow-02 12-06 14:58:10.951 19617-20046/com.gtmc.test D/FileDownloader.FileDownloadMessenger: notify completed 1740509613@com.liulishuo.filedownloader.DownloadTask@8d244c 12-06 14:58:10.953 19617-20046/com.gtmc.test V/FileDownloader.DownloadTaskHunter: filedownloader:lifecycle:over com.liulishuo.filedownloader.DownloadTaskHunter@befcc95 by -3  12-06 14:58:35.095 19617-19617/com.gtmc.test D/FileDownloader.LaunchTaskPool: expire 0 tasks 12-06 14:58:43.218 19617-19617/com.gtmc.test D/FileDownloader.LaunchTaskPool: expire 0 tasks 12-06 15:06:08.709 19617-19617/com.gtmc.test D/FileDownloader.DownloadTask: setPath /data/user/0/com.gtmc.test/cache/ar/VR2017120501/1.1/high/car.zip 12-06 15:06:08.710 19617-19617/com.gtmc.test D/FileDownloader.DownloadTask: setListener com.yongyou.ui.ar.ARActivity$1$1@559d6bf 12-06 15:06:08.710 19617-19617/com.gtmc.test V/FileDownloader.DownloadTaskHunter: call start Url[http://ozkde5ivh.bkt.clouddn.com/file/ar/car.zip], Path[/data/user/0/com.gtmc.test/cache/ar/VR2017120501/1.1/high/car.zip] Listener[com.yongyou.ui.ar.ARActivity$1$1@559d6bf], Tag[null] 12-06 15:06:08.712 19617-20564/com.gtmc.test D/FileDownloader.FileDownloadMessenger: notify begin 1740509613@com.liulishuo.filedownloader.DownloadTask@48040ea 12-06 15:06:08.712 19617-19617/com.gtmc.test V/FileDownloader.DownloadTaskHunter: the task[1740509613] has been into the launch pool. 12-06 15:06:08.712 19617-20564/com.gtmc.test V/FileDownloader.DownloadTaskHunter: filedownloader:lifecycle:start com.liulishuo.filedownloader.DownloadTaskHunter@d5f1fdb by 11  12-06 15:06:08.713 19617-20564/com.gtmc.test V/FileDownloader.FileDownloadList: add list in all 1740509613@com.liulishuo.filedownloader.DownloadTask@48040ea 11 1 12-06 15:09:25.468 19617-20578/com.gtmc.test D/FileDownloader.FileDownloadMessenger: notify progress 1740509613@com.liulishuo.filedownloader.DownloadTask@48040ea 45642347 86548501   12-06 15:11:00.831 19617-19617/com.gtmc.test V/FileDownloader.DownloadTaskHunter: the task[1740509613] has been expired from the launch pool. 12-06 15:11:00.839 19617-19617/com.gtmc.test D/FileDownloader.FileDownloadMessenger: notify begin 1740509613@com.liulishuo.filedownloader.DownloadTask@48040ea 12-06 15:11:00.841 19617-19617/com.gtmc.test V/FileDownloader.DownloadTaskHunter: filedownloader:lifecycle:start com.liulishuo.filedownloader.DownloadTaskHunter@d5f1fdb by -2  12-06 15:11:00.843 19617-19617/com.gtmc.test V/FileDownloader.FileDownloadList: remove 1740509613@com.liulishuo.filedownloader.DownloadTask@48040ea left -2 0 12-06 15:11:00.845 19617-19617/com.gtmc.test D/FileDownloader.FileDownloadMessenger: notify paused 1740509613@com.liulishuo.filedownloader.DownloadTask@48040ea 12-06 15:11:00.846 19617-19617/com.gtmc.test V/FileDownloader.DownloadTaskHunter: filedownloader:lifecycle:over com.liulishuo.filedownloader.DownloadTaskHunter@d5f1fdb by -2   12-06 15:11:35.116 19617-19617/com.gtmc.test W/FileDownloader.FileDownloader: request pause but not exist 1740509613  </body>
		<created>2017-12-06 07:17:29</created>
		<closed>2018-01-15 02:25:46</closed>
	</bug>
	<bug>
		<id>855</id>
		<title>Pending状态下，执行pause操作，FileDownloader.getImpl().getStatus() 并不是暂停状态(value = -2)，还是pending状态(value = 1)</title>
		<body>#### Before Issue  1. Please search on the [Issues](https://github.com/lingochamp/FileDownloader/issues) 2. Please search on the [wiki](https://github.com/lingochamp/FileDownloader/wiki) 3. Please set `FileDownloadLog.NEED_LOG=true` and review the Logcat output from main process and `:filedownloader` process ( pay attention to Warn and Error level logcat)  #### Issue  1. What problem do you get? 2. Which version of FileDownloader are you using when you produce such problem? 3. How to reproduce such problem? 4. Do you set `FileDownloadLog.NEED_LOG=true`? 5. Could you please reproduce this problem and provide all main process and `:filedownloader` process logcat  6. Can you fix it by yourself and request PR, if not, what's problem do you get when you try to fix it  &gt;P.S. If you don't know how to get `:filedownloader` process, it's recommended to using `pidcat` to just filter all your application logcat, or define `process.non-separate=true` on [filedownloader.properties](https://github.com/lingochamp/FileDownloader/wiki/filedownloader.properties)  ---  请在Issue前认真的跟进上面提到的建议，这样将可以极大的加快你遇到问题的处理。 </body>
		<created>2017-12-05 06:47:31</created>
		<closed>2017-12-12 17:24:43</closed>
	</bug>
	<bug>
		<id>838</id>
		<title>在retry的时候 retryingTimes 一直返回为基数是什么原因？</title>
		<body>#### Before Issue  1. Please search on the [Issues](https://github.com/lingochamp/FileDownloader/issues) 2. Please search on the [wiki](https://github.com/lingochamp/FileDownloader/wiki) 3. Please set `FileDownloadLog.NEED_LOG=true` and review the Logcat output from main process and `:filedownloader` process ( pay attention to Warn and Error level logcat)  #### Issue  1. What problem do you get? 2. Which version of FileDownloader are you using when you produce such problem? 3. How to reproduce such problem? 4. Do you set `FileDownloadLog.NEED_LOG=true`? 5. Could you please reproduce this problem and provide all main process and `:filedownloader` process logcat  6. Can you fix it by yourself and request PR, if not, what's problem do you get when you try to fix it  &gt;P.S. If you don't know how to get `:filedownloader` process, it's recommended to using `pidcat` to just filter all your application logcat, or define `process.non-separate=true` on [filedownloader.properties](https://github.com/lingochamp/FileDownloader/wiki/filedownloader.properties)  ---  请在Issue前认真的跟进上面提到的建议，这样将可以极大的加快你遇到问题的处理。 </body>
		<created>2017-11-15 11:09:54</created>
		<closed>2017-12-12 17:00:03</closed>
	</bug>
	<bug>
		<id>793</id>
		<title>下载几个文件，然后同时暂停再继续概率出现从头开始下载</title>
		<body>#### Before Issue  1. Please search on the [Issues](https://github.com/lingochamp/FileDownloader/issues) 2. Please search on the [wiki](https://github.com/lingochamp/FileDownloader/wiki) 3. Please set `FileDownloadLog.NEED_LOG=true` and review the Logcat output from main process and `:filedownloader` process ( pay attention to Warn and Error level logcat)  #### Issue  1. What problem do you get? 2. Which version of FileDownloader are you using when you produce such problem? 3. How to reproduce such problem? 4. Do you set `FileDownloadLog.NEED_LOG=true`? 5. Could you please reproduce this problem and provide all main process and `:filedownloader` process logcat  6. Can you fix it by yourself and request PR, if not, what's problem do you get when you try to fix it  &gt;P.S. If you don't know how to get `:filedownloader` process, it's recommended to using `pidcat` to just filter all your application logcat, or define `process.non-separate=true` on [filedownloader.properties](https://github.com/lingochamp/FileDownloader/wiki/filedownloader.properties)  ---  请在Issue前认真的跟进上面提到的建议，这样将可以极大的加快你遇到问题的处理。 </body>
		<created>2017-10-12 11:47:44</created>
		<closed>2017-10-13 11:58:47</closed>
	</bug>
	<bug>
		<id>791</id>
		<title>Connection failed with request[{Range=[bytes=-474921016-399245915]}],下载5G文件，下载了1G多，然后暂停再继续失败，应该是分片错了</title>
		<body>#### Before Issue  1. Please search on the [Issues](https://github.com/lingochamp/FileDownloader/issues) 2. Please search on the [wiki](https://github.com/lingochamp/FileDownloader/wiki) 3. Please set `FileDownloadLog.NEED_LOG=true` and review the Logcat output from main process and `:filedownloader` process ( pay attention to Warn and Error level logcat)  #### Issue  1. What problem do you get? 2. Which version of FileDownloader are you using when you produce such problem? 3. How to reproduce such problem? 4. Do you set `FileDownloadLog.NEED_LOG=true`? 5. Could you please reproduce this problem and provide all main process and `:filedownloader` process logcat  6. Can you fix it by yourself and request PR, if not, what's problem do you get when you try to fix it  &gt;P.S. If you don't know how to get `:filedownloader` process, it's recommended to using `pidcat` to just filter all your application logcat, or define `process.non-separate=true` on [filedownloader.properties](https://github.com/lingochamp/FileDownloader/wiki/filedownloader.properties)  ---  请在Issue前认真的跟进上面提到的建议，这样将可以极大的加快你遇到问题的处理。 </body>
		<created>2017-10-11 09:23:21</created>
		<closed>2017-10-12 02:04:16</closed>
	</bug>
	<bug>
		<id>789</id>
		<title>0KB文件不会下载</title>
		<body>文件大小：0kb 文件名：.nomedia 错误提示：java.net.MalformedURLException: Protocol not found：xxx   </body>
		<created>2017-10-11 06:42:46</created>
		<closed>2018-02-08 03:11:03</closed>
	</bug>
	<bug>
		<id>754</id>
		<title>DefaultDatabaseImpl.java clear()代码重复</title>
		<body>156 157行代码重复 ```Java    @Override     public void clear() {         downloaderModelMap.clear();          db.delete(TABLE_NAME, null, null);         db.delete(TABLE_NAME, null, null);     } ``` 是不是要同时清空CONNECTION_TABLE_NAME 和TABLE_NAME的？</body>
		<created>2017-09-04 09:29:55</created>
		<closed>2017-09-29 08:35:35</closed>
	</bug>
	<bug>
		<id>744</id>
		<title>NullPoint</title>
		<body> 08-23 17:58:14.430 com.lzj.shanyi E/AndroidRuntime: FATAL EXCEPTION: main                                                     Process: com.lzj.shanyi, PID: 29136                                                     io.reactivex.exceptions.OnErrorNotImplementedException: Attempt to invoke virtual method 'boolean com.liulishuo.filedownloader.download.DownloadLaunchRunnable.isAlive()' on a null object reference                                                         at io.reactivex.internal.functions.Functions$14.accept(Functions.java:229)                                                         at io.reactivex.internal.functions.Functions$14.accept(Functions.java:226)                                                         at io.reactivex.internal.observers.LambdaObserver.onError(LambdaObserver.java:72)                                                         at io.reactivex.internal.operators.observable.ObservableObserveOn$ObserveOnObserver.checkTerminated(ObservableObserveOn.java:276)                                                         at io.reactivex.internal.operators.observable.ObservableObserveOn$ObserveOnObserver.drainNormal(ObservableObserveOn.java:172)                                                         at io.reactivex.internal.operators.observable.ObservableObserveOn$ObserveOnObserver.run(ObservableObserveOn.java:252)                                                         at io.reactivex.android.schedulers.HandlerScheduler$ScheduledRunnable.run(HandlerScheduler.java:109)                                                         at android.os.Handler.handleCallback(Handler.java:739)                                                         at android.os.Handler.dispatchMessage(Handler.java:95)                                                         at android.os.Looper.loop(Looper.java:152)                                                         at android.app.ActivityThread.main(ActivityThread.java:5507)                                                         at java.lang.reflect.Method.invoke(Native Method)                                                         at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:726)                                                         at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:616)                                                         at de.robv.android.xposed.XposedBridge.main(XposedBridge.java:102)                                                      Caused by: java.lang.NullPointerException: Attempt to invoke virtual method 'boolean com.liulishuo.filedownloader.download.DownloadLaunchRunnable.isAlive()' on a null object reference                                                         at android.os.Parcel.readException(Parcel.java:1626)                                                         at android.os.Parcel.readException(Parcel.java:1573)                                                         at com.liulishuo.filedownloader.i.IFileDownloadIPCService$Stub$Proxy.pause(IFileDownloadIPCService.java:313)                                                         at com.liulishuo.filedownloader.FileDownloadServiceUIGuard.pause(FileDownloadServiceUIGuard.java:119)                                                         at com.liulishuo.filedownloader.FileDownloadServiceProxy.pause(FileDownloadServiceProxy.java:72)                                                         at com.liulishuo.filedownloader.DownloadTaskHunter.pause(DownloadTaskHunter.java:419)                                                         at com.liulishuo.filedownloader.DownloadTask.pause(DownloadTask.java:338)                                                         at com.liulishuo.filedownloader.FileDownloader.pause(FileDownloader.java:249)                                                         at com.lzj.shanyi.feature.game.download.GameDownloadManager.pause(GameDownloadManager.java:648)                                                         at com.lzj.shanyi.feature.game.download.subscribe.OnPauseDownloadSubscribe.subscribe(OnPauseDownloadSubscribe.java:31)                                                         at io.reactivex.internal.operators.observable.ObservableCreate.subscribeActual(ObservableCreate.java:40)                                                         at io.reactivex.Observable.subscribe(Observable.java:10700)                                                         at io.reactivex.internal.operators.observable.ObservableSubscribeOn$1.run(ObservableSubscribeOn.java:39)                                                         at io.reactivex.Scheduler$1.run(Scheduler.java:138)                                                         at io.reactivex.internal.schedulers.ScheduledRunnable.run(ScheduledRunnable.java:59)                                                         at io.reactivex.internal.schedulers.ScheduledRunnable.call(ScheduledRunnable.java:51)                                                         at java.util.concurrent.FutureTask.run(FutureTask.java:237)                                                         at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:154)                                                         at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:269)                                                         at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1113)                                                         at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:588)                                                         at java.lang.Thread.run(Thread.java:818) 08-23 17:58:14.437 com.lzj.shanyi E/ActivityThread: Failed to find provider info for net.oneplus.odm.provider.PayloadProvider 08-23 17:58:14.437 com.lzj.shanyi E/AbstractTracker: Unknown URL content://net.oneplus.odm.provider.PayloadProvider/OP_payload_upload_table </body>
		<created>2017-08-23 10:02:17</created>
		<closed>2019-02-04 01:46:01</closed>
	</bug>
	<bug>
		<id>743</id>
		<title>IllegalFormatConversionException</title>
		<body>下载完成后的广播 FileDownloadModel downloadModel = FileDownloadBroadcastHandler.parseIntent(intent); 这里的downloadModel 调toString打印会挂  ```    at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:601)    at dalvik.system.NativeStart.main(Native Method) Caused by: java.util.IllegalFormatConversionException: %d can't format java.util.concurrent.atomic.AtomicLong arguments    at java.util.Formatter.badArgumentType(Formatter.java:1489)    at java.util.Formatter.transformFromInteger(Formatter.java:1689)    at java.util.Formatter.transform(Formatter.java:1461)    at java.util.Formatter.doFormat(Formatter.java:1081)    at java.util.Formatter.format(Formatter.java:1042)    at java.util.Formatter.format(Formatter.java:1011)    at java.lang.String.format(String.java:1999)    at com.liulishuo.filedownloader.util.FileDownloadUtils.formatString(FileDownloadUtils.java:345)    at com.liulishuo.filedownloader.model.FileDownloadModel.toString(FileDownloadModel.java:263) ```</body>
		<created>2017-08-23 03:13:21</created>
		<closed>2017-09-11 06:50:01</closed>
	</bug>
	<bug>
		<id>737</id>
		<title>下载出现416错误</title>
		<body>从又拍云服务器下载zip压缩包的时候，始终报416错误，无法下载，用原生httpURLconnection下载没问题</body>
		<created>2017-08-21 03:20:49</created>
		<closed>2017-08-21 09:48:58</closed>
	</bug>
	<bug>
		<id>723</id>
		<title>java.lang.NullPointerException </title>
		<body>Android: 4.1.2 Manufacturer: samsung Model: GT-P3100 Thread: FileDownloader-EventPool4-8184 java.lang.NullPointerException at com.liulishuo.filedownloader.event.DownloadEventPoolImpl.trigger(DownloadEventPoolImpl.java:130) at com.liulishuo.filedownloader.event.DownloadEventPoolImpl.publish(DownloadEventPoolImpl.java:107) at com.liulishuo.filedownloader.event.DownloadEventPoolImpl$1.run(DownloadEventPoolImpl.java:121) at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1076) at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:569) at java.lang.Thread.run(Thread.java:856)  SM-G530H | 5.0.2 SM-G360H | 4.4.4 GT-P3100 | 4.1.2  HTC One | 4.4.3  K00Z | 4.3  GT-I8200 | 4.2.2 Lenovo S5000-H | 4.2.2  DownloadEventPoolImpl -&gt; trigger -&gt; if (((IDownloadListener) o).callback(event)) (IDownloadListener) o is null  </body>
		<created>2017-08-12 13:25:24</created>
		<closed>2017-08-14 14:56:27</closed>
	</bug>
	<bug>
		<id>699</id>
		<title> FileDownloadLog.w(this, "require pause this[%d] queue, but it has already been paused");</title>
		<body>MissingFormatArgumentException: Format specifier: d</body>
		<created>2017-07-28 03:40:27</created>
		<closed>2017-07-29 09:09:33</closed>
	</bug>
	<bug>
		<id>680</id>
		<title>java.lang.NullPointerException: Attempt to invoke interface method 'com.liulishuo.filedownloader.a com.liulishuo.filedownloader.a$b.P()' on a null object reference</title>
		<body>java.lang.NullPointerException: Attempt to invoke interface method 'com.liulishuo.filedownloader.a com.liulishuo.filedownloader.a$b.P()' on a null object reference at com.liulishuo.filedownloader.FileDownloadMessenger.toString(FileDownloadMessenger.java:395) at java.lang.StringBuilder.append(StringBuilder.java:202) at android.os.Message.toString(Message.java:522) at android.os.Message.toString(Message.java:493) at java.lang.StringBuilder.append(StringBuilder.java:202) at android.os.Looper.loop(Looper.java:195) at android.app.ActivityThread.main(ActivityThread.java:5619) at java.lang.reflect.Method.invoke(Method.java) at java.lang.reflect.Method.invoke(Method.java:372) at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:976) at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:771)</body>
		<created>2017-07-19 01:08:34</created>
		<closed>2017-07-23 13:45:12</closed>
	</bug>
	<bug>
		<id>669</id>
		<title>java.io.IOException: offset &lt; 0 when trying to download a file of 4GB in size </title>
		<body>``` java.io.IOException: offset &lt; 0: -791045736 W/System.err:     at java.io.RandomAccessFile.seek(RandomAccessFile.java:542) W/System.err:     at com.liulishuo.filedownloader.stream.FileDownloadRandomAccessFile.seek(FileDownloadRandomAccessFile.java:54) W/System.err:     at com.liulishuo.filedownloader.download.FetchDataTask.run(FetchDataTask.java:113) W/System.err:     at com.liulishuo.filedownloader.download.DownloadRunnable.run(DownloadRunnable.java:113)  W/System.err:     at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:428) W/System.err:     at java.util.concurrent.FutureTask.run(FutureTask.java:237) W/System.err:     at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1133) W/System.err:     at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:607) W/System.err:     at java.lang.Thread.run(Thread.java:762) ```  What might be causing this ?  I am using a modified version of the example show in demo, with FileDownloadLageFileListener. ```         return FileDownloader.getImpl().create(url)                 .setPath(path, false)                 .setCallbackProgressTimes(300)                 .setMinIntervalUpdateSpeed(400)                 .setTag(tag)                 .setListener(new FileDownloadLargeFileListener() {                      @Override                     protected void pending(BaseDownloadTask task, long soFarBytes, long totalBytes) { //                        super.pending(task, soFarBytes, totalBytes);                         ((ViewHolder) task.getTag()).updatePending(task);                     }                      @Override                     protected void progress(BaseDownloadTask task, long soFarBytes, long totalBytes) { //                        super.progress(task, soFarBytes, totalBytes); //                        super.lon                         ((ViewHolder) task.getTag()).updateProgress(soFarBytes, totalBytes,                                 task.getSpeed());                     }                      @Override                     protected void error(BaseDownloadTask task, Throwable e) { //                        super.error(task, e);                         ((ViewHolder) task.getTag()).updateError(e, task.getSpeed());                     }                      @Override                     protected void connected(BaseDownloadTask task, String etag, boolean isContinue, long soFarBytes, long totalBytes) { //                        super.connected(task, etag, isContinue, soFarBytes, totalBytes);                         ((ViewHolder) task.getTag()).updateConnected(etag, task.getFilename());                     }                      @Override                     protected void paused(BaseDownloadTask task, long soFarBytes, long totalBytes) { //                        super.paused(task, soFarBytes, totalBytes);                         ((ViewHolder) task.getTag()).updatePaused(task.getSpeed());                     }                      @Override                     protected void completed(BaseDownloadTask task) { //                        super.completed(task);                         ((ViewHolder) task.getTag()).updateCompleted(task);                     }                      @Override                     protected void warn(BaseDownloadTask task) { //                        super.warn(task);                         ((ViewHolder) task.getTag()).updateWarn();                     }                 });  ```</body>
		<created>2017-07-15 12:05:03</created>
		<closed>2017-07-15 15:19:43</closed>
	</bug>
	<bug>
		<id>641</id>
		<title>安装apk失败问题</title>
		<body>测试手机:小米5s studio版本: Android studio 2.3  报错信息: Installation failed with message INSTALL_FAILED_DUPLICATE_PERMISSION perm=filedownloader.permission.RECEIVE_STATE pkg=com.liulishuo.filedownloader.demo. It is possible that this issue is resolved by uninstalling an existing version of the apk if it is present, and then re-installing.  =========== Failure [INSTALL_FAILED_DUPLICATE_PERMISSION perm=filedownloader.permission.RECEIVE_STATE pkg=com.liulishuo.filedownloader.demo] </body>
		<created>2017-07-03 03:46:42</created>
		<closed>2017-07-04 10:09:18</closed>
	</bug>
	<bug>
		<id>631</id>
		<title>下载到最后回调两次99%但是接下来的任何进度</title>
		<body>@Gongcong @wanghaihui  #### 多次返回的总进度相同这个是有可能的  因为回调是根据是否字节数有增加，而非整体的进度百分比，而具体配置体现在[根据间隔/回调进度等配置进行回调](https://github.com/lingochamp/FileDownloader/wiki/processing-callback-frequency)。  #### 但是根据你们( @Gongcong @wanghaihui ) 的描述:   &gt; 因为我们现在用的就是最新的1.5.7版本，这个问题的复现情况是这样的，下载完后，然后再清除APP缓存数据，然后再下载，会有几率复现，我们打了log，progress是100，但是最后会出现两次progress=99, 然后，完全进度就死在那了，没有任何回调  #### 似乎是怀疑下载完成了，但是没有回调`完成`对吗？  如果是，可以告知下当遇到这种特征情况时（如你们所说在第二次progress=99时):  1. `FileDownloader.getStatus(id, path)`返回的状态如何？ 2. 本地的`FileDownloadUtils.getTempPath(task.getTargetFilePath())`文件是否存在？ 3. 本地的 `task.getTargetFilePath()`文件是否存在。 4. 留意Logcat中是否有crash日志，或者warn/error的日志  ---  #### P.S. 按照现有代码逻辑是不可能出现下载完成但不回调完成的。只有可能下载进程Crash?或者`error`的回调，因此我比较倾向于是否是下载进程Crash或者是[网络情况导致](https://github.com/lingochamp/FileDownloader/issues/628#issuecomment-310268437) </body>
		<created>2017-06-26 08:46:47</created>
		<closed>2017-07-06 13:06:22</closed>
	</bug>
	<bug>
		<id>625</id>
		<title>经常出现不下载的情况，没有回调进度，临时文件也没被创建，我之前频繁操作过暂停下载、启动下载</title>
		<body>源码： FileDownloader.getImpl().create(realUrl)                     .setPath(dir + bean.getRealName())                     .setSyncCallback(true)// 不回调在ui线程                     .setCallbackProgressTimes(3000) // 最大回调次数                     .setCallbackProgressMinInterval(500)// 设置回调最小间隔2s                     .setListener(demandListener)                     .asInQueueTask()                     .enqueue();   FileDownloader.getImpl().start(demandListener, true);</body>
		<created>2017-06-20 10:00:00</created>
		<closed>2017-06-27 02:05:29</closed>
	</bug>
	<bug>
		<id>622</id>
		<title>Broken support for BufferedOutputStream</title>
		<body>@Jacksgong Regression first appeared in 1.5.0.  FetchDataTask uses seek method even when my implementation (which worked flawlessly in 1.4.3) of OutputStream returns: ``` override fun supportSeek(): Boolean = false ``` FetchDataTask.java: ```         try {             this.outputStream = outputStream = FileDownloadUtils.createOutputStream(path);             outputStream.seek(currentOffset);             if (FileDownloadLog.NEED_LOG) {                 FileDownloadLog.d(this, "start fetch(%d): range [%d, %d), seek to[%d]",                         connectionIndex, startOffset, endOffset, currentOffset);             } ``` filedownloader.properties: ``` file.non-pre-allocation=true process.non-separate=true ```  ``` class EncryptedBufferedOutputStream @Throws(FileNotFoundException::class) constructor(file: File,             keyChain: KeyChain) : FileDownloadOutputStream {    private val bos: BufferedOutputStream = BufferedOutputStream(FileOutputStream(file, true))   private val cipherOutputStream = CipherOutputStream(bos, keyChain.encryptionCipher())    @Throws(IOException::class)   override fun write(b: ByteArray, off: Int, len: Int) {     cipherOutputStream.write(b, off, len)   }    @Throws(IOException::class)   override fun sync() {     cipherOutputStream.flush()   }    @Throws(IOException::class)   override fun close() {     cipherOutputStream.close()   }    @Throws(IllegalAccessException::class)   override fun seek(offset: Long) {     throw IllegalAccessException("Can't support 'seek' in EncryptedBufferedOutputStream.")   }    @Throws(IllegalAccessException::class)   override fun setLength(totalBytes: Long) {     throw IllegalAccessException("Can't support 'setLength' in EncryptedBufferedOutputStream.")   }    class Creator(private val keyChain: KeyChain) : FileDownloadHelper.OutputStreamCreator {      /**      * The output stream creator is used for creating {@link FileDownloadOutputStream} which is      * used to write the input stream to the file for downloading.      * &lt;p&gt;      * &lt;strong&gt;Note:&lt;/strong&gt; please create a output stream which append the content to the      * exist file, which means that bytes would be written to the end of the file rather than      * the beginning.      *      * @param file the file will used for storing the downloading content.      * @return The output stream used to write downloading byte array to the {@code file}.      * @throws FileNotFoundException if the file exists but is a directory      *                               rather than a regular file, does not exist but cannot      *                               be created, or cannot be opened for any other reason      */     @Throws(FileNotFoundException::class)     override fun create(file: File): FileDownloadOutputStream = EncryptedBufferedOutputStream(file, keyChain)      /**      * @return {@code true} if the {@link FileDownloadOutputStream} is created through      * {@link #create(File)} support {@link FileDownloadOutputStream#seek(long)} function.      * If the {@link FileDownloadOutputStream} is created through {@link #create(File)} doesn't      * support {@link FileDownloadOutputStream#seek(long)}, please return {@code false}, in      * order to let the internal mechanism can predict this situation, and handle it smoothly.      */     override fun supportSeek(): Boolean {       return false     }    }  } ```</body>
		<created>2017-06-19 14:21:23</created>
		<closed>2017-06-21 08:32:52</closed>
	</bug>
	<bug>
		<id>613</id>
		<title>java.lang.NullPointerException at FileDownloadThreadPool.findRunningTaskIdBySameTempPath 135</title>
		<body></body>
		<created>2017-06-16 07:16:22</created>
		<closed>2017-06-16 08:52:35</closed>
	</bug>
	<bug>
		<id>612</id>
		<title>java.lang.IllegalArgumentException:at DownloadStatusCallback.java:96</title>
		<body>if (oldEtag != null &amp;&amp; !oldEtag.equals(etag)) throw new IllegalArgumentException();  etag 是什么？怎么避免此异常？</body>
		<created>2017-06-16 07:15:14</created>
		<closed>2017-06-16 15:04:59</closed>
	</bug>
	<bug>
		<id>610</id>
		<title>IllegalStateException database / CursorWindow</title>
		<body>I've encounterd this issue on a Nexus 5 runing 6.0.1 :   `Caused by java.lang.IllegalStateException: Couldn't read row 0, col -1 from CursorWindow.  Make sure the Cursor is initialized correctly before accessing data from it.`  FileDownloader v1.5.5  See full crash [here](http://crashes.to/s/e972fe81d0f).   It will really help if you can look into it. </body>
		<created>2017-06-14 20:30:47</created>
		<closed>2017-06-17 15:24:51</closed>
	</bug>
	<bug>
		<id>607</id>
		<title>请教，download.max-network-thread-count=2 无效且不管我创建几个下载任务，它都进行下载，没有进行等待</title>
		<body>我用的是：   public int startDownload(DownloadInfo downloadInfo) {         BaseDownloadTask baseDownloadTask = FileDownloader.getImpl().create(downloadInfo.getDownload_url())                 .setPath(downloadInfo.getFile_path())                 .setTag(0, downloadInfo)                 .setAutoRetryTimes(3)// 当请求或下载或写文件过程中存在错误时，自动重试次数，默认为0次                 .setListener(lis);         return baseDownloadTask.start();     }</body>
		<created>2017-06-12 06:31:31</created>
		<closed>2017-06-12 09:48:03</closed>
	</bug>
	<bug>
		<id>601</id>
		<title>java.lang.ArithmeticException</title>
		<body>更新v1.5.2版本后收集到的crash  crash log: Fatal Exception: java.lang.ArithmeticException: divide by zero        at com.liulishuo.filedownloader.DownloadSpeedMonitor.end(SourceFile:57)        at com.liulishuo.filedownloader.DownloadTaskHunter.onOver(SourceFile:289)        at com.liulishuo.filedownloader.FileDownloadMessenger.notifyError(SourceFile:170)        at com.liulishuo.filedownloader.FileDownloadList.remove(SourceFile:197)        at com.liulishuo.filedownloader.DownloadTaskHunter.update(SourceFile:189)        at com.liulishuo.filedownloader.DownloadTaskHunter.updateKeepFlow(SourceFile:83)        at com.liulishuo.filedownloader.MessageSnapshotGate.transmitMessage(SourceFile:44)        at com.liulishuo.filedownloader.MessageSnapshotGate.receive(SourceFile:83)        at com.liulishuo.filedownloader.message.MessageSnapshotThreadPool$FlowSingleExecutor$1.run(SourceFile:100)        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1113)        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:588)        at java.lang.Thread.run(Thread.java:818)</body>
		<created>2017-06-08 06:13:49</created>
		<closed>2017-06-08 09:58:41</closed>
	</bug>
	<bug>
		<id>598</id>
		<title>更新v1.5.1版本之后，出现NullPointerException</title>
		<body>更新v1.5.1版本后，分别出现以下NullPointerException，这几个在使用v1.4.2版本时均未统计到，其中第一个出现次数较多。  ========crash log 1========= Fatal Exception: java.lang.NullPointerException: Attempt to read from field 'long com.liulishuo.filedownloader.download.e.a' on a null object reference        at com.liulishuo.filedownloader.download.DownloadRunnable.run(SourceFile:102)        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1112)        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:587)        at java.lang.Thread.run(Thread.java:818)   ========crash log 2========= Fatal Exception: java.lang.NullPointerException: Attempt to invoke interface method 'void com.liulishuo.filedownloader.services.g.a(int, int, long)' on a null object reference        at com.liulishuo.filedownloader.download.FetchDataTask.sync(SourceFile:202)        at com.liulishuo.filedownloader.download.FetchDataTask.pause(SourceFile:58)        at com.liulishuo.filedownloader.download.DownloadRunnable.pause(SourceFile:58)        at com.liulishuo.filedownloader.download.DownloadRunnable.discard(SourceFile:62)        at com.liulishuo.filedownloader.download.DownloadLaunchRunnable.onError(SourceFile:623)        at com.liulishuo.filedownloader.download.DownloadRunnable.run(SourceFile:106)        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1112)        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:587)        at java.lang.Thread.run(Thread.java:818)   ========crash log 3========= Fatal Exception: java.lang.NullPointerException: Attempt to invoke virtual method 'void com.liulishuo.filedownloader.download.c.a()' on a null object reference        at com.liulishuo.filedownloader.download.DownloadLaunchRunnable.pause(SourceFile:134)        at com.liulishuo.filedownloader.services.FileDownloadThreadPool.cancel(SourceFile:95)        at com.liulishuo.filedownloader.services.FileDownloadManager.pause(SourceFile:200)        at com.liulishuo.filedownloader.services.FDServiceSharedHandler.pause(SourceFile:66)        at com.liulishuo.filedownloader.FileDownloadServiceSharedTransmit.pause(SourceFile:65)        at com.liulishuo.filedownloader.FileDownloadServiceProxy.pause(SourceFile:72)        at com.liulishuo.filedownloader.DownloadTaskHunter.pause(SourceFile:419)        at com.liulishuo.filedownloader.DownloadTask.pause(SourceFile:338)        at com.liulishuo.filedownloader.FileDownloader.pauseAll(SourceFile:227)        at media.itsme.common.download.FileDownloadHelper.pauseAllDownload(SourceFile:221)        at media.itsme.common.utils.LoginHelper.logout(SourceFile:928)        at media.itsme.common.activity.setting.UserSettingActivity.logout(SourceFile:245)        at media.itsme.common.activity.setting.UserSettingActivity.onClick(SourceFile:142)        at android.view.View.performClick(View.java:5212)        at android.view.View$PerformClick.run(View.java:21214)        at android.os.Handler.handleCallback(Handler.java:739)        at android.os.Handler.dispatchMessage(Handler.java:95)        at android.os.Looper.loop(Looper.java:148)        at android.app.ActivityThread.main(ActivityThread.java:5628)        at java.lang.reflect.Method.invoke(Method.java)        at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:850)        at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:734) </body>
		<created>2017-06-07 09:19:24</created>
		<closed>2017-06-07 14:46:36</closed>
	</bug>
	<bug>
		<id>592</id>
		<title>升级1.5.0后初始化就报空指针</title>
		<body>![image](https://cloud.githubusercontent.com/assets/16240767/26767754/4b9fd096-49d5-11e7-8cd0-af5795178450.png)  FileDownloader.init(getApplicationContext());</body>
		<created>2017-06-05 01:57:11</created>
		<closed>2017-06-05 01:59:49</closed>
	</bug>
	<bug>
		<id>577</id>
		<title>sending message to a Handler on a dead thread</title>
		<body> Handler (android.os.Handler) {c7a3968} sending message to a Handler on a dead thread                                                java.lang.IllegalStateException: Handler (android.os.Handler) {c7a3968} sending message to a Handler on a dead thread</body>
		<created>2017-05-24 07:44:13</created>
		<closed>2017-06-18 08:22:50</closed>
	</bug>
	<bug>
		<id>534</id>
		<title>Fatal Exception: java.lang.IllegalArgumentException Not a primitive field: com.liulishuo.filedownloader.b.b$a com.liulishuo.filedownloader.b.b.a com.liulishuo.filedownloader.message.SmallMessageSnapshot$ErrorMessageSnapshot.writeToParcel</title>
		<body>I have got error from Crashlytics of Fabric:  ``` Fatal Exception: java.lang.IllegalArgumentException: Not a primitive field: com.liulishuo.filedownloader.b.b$a com.liulishuo.filedownloader.b.b.a        at java.lang.reflect.Field.getInt(Field.java)        at java.io.ObjectOutputStream.writeFieldValues(ObjectOutputStream.java:946)        at java.io.ObjectOutputStream.defaultWriteObject(ObjectOutputStream.java:360)        at java.io.ObjectOutputStream.writeHierarchy(ObjectOutputStream.java:1054)        at java.io.ObjectOutputStream.writeNewObject(ObjectOutputStream.java:1384)        at java.io.ObjectOutputStream.writeObjectInternal(ObjectOutputStream.java:1651)        at java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:1497)        at java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:1461)        at android.os.Parcel.writeSerializable(Parcel.java:1464)        at com.liulishuo.filedownloader.message.SmallMessageSnapshot$ErrorMessageSnapshot.writeToParcel(SmallMessageSnapshot.java:289)        at com.liulishuo.filedownloader.i.IFileDownloadIPCCallback$Stub$Proxy.callback(IFileDownloadIPCCallback.java:83)        at com.liulishuo.filedownloader.services.FDServiceSeparateHandler.callback(FDServiceSeparateHandler.java:48)        at com.liulishuo.filedownloader.services.FDServiceSeparateHandler.receive(FDServiceSeparateHandler.java:165)        at com.liulishuo.filedownloader.message.MessageSnapshotThreadPool$FlowSingleExecutor$1.run(MessageSnapshotThreadPool.java:100)        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1113)        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:588)        at java.lang.Thread.run(Thread.java:818) ```  Do you know what's wrong here? Could you please review and check this issue? Thanks</body>
		<created>2017-04-10 01:10:25</created>
		<closed>2017-06-04 16:48:31</closed>
	</bug>
	<bug>
		<id>524</id>
		<title>java.util.MissingFormatArgumentException: Format specifier: 253D</title>
		<body>java.util.MissingFormatArgumentException: Format specifier: 253D at java.util.Formatter.getArgument(Formatter.java:1111) at java.util.Formatter.doFormat(Formatter.java:1076) at java.util.Formatter.format(Formatter.java:1042) at java.util.Formatter.format(Formatter.java:1011) at java.lang.String.format(String.java:2033) at com.liulishuo.filedownloader.util.FileDownloadUtils.formatString(FileDownloadUtils.java:333) at com.liulishuo.filedownloader.util.FileDownloadLog.log(FileDownloadLog.java:67) at com.liulishuo.filedownloader.util.FileDownloadLog.log(FileDownloadLog.java:58) at com.liulishuo.filedownloader.util.FileDownloadLog.w(FileDownloadLog.java:50) at com.liulishuo.filedownloader.message.MessageSnapshotTaker.take(MessageSnapshotTaker.java:177) at com.liulishuo.filedownloader.services.FileDownloadRunnable.onStatusChanged(FileDownloadRunnable.java:827) at com.liulishuo.filedownloader.services.FileDownloadRunnable.onError(FileDownloadRunnable.java:746) at com.liulishuo.filedownloader.services.FileDownloadRunnable.loop(FileDownloadRunnable.java:402) at com.liulishuo.filedownloader.services.FileDownloadRunnable.run(FileDownloadRunnable.java:222) at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1112) at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:587) at java.lang.Thread.run(Thread.java:848)</body>
		<created>2017-03-26 10:56:48</created>
		<closed>2017-06-06 03:19:13</closed>
	</bug>
	<bug>
		<id>471</id>
		<title>Avoid two task writing to the same file</title>
		<body>setPath(url,true)的时候 传入不同的url 但是url返回下载的filename相同 文件会被覆盖</body>
		<created>2017-02-09 07:45:55</created>
		<closed>2017-03-14 16:49:52</closed>
	</bug>
	<bug>
		<id>462</id>
		<title>App crashing when try to pause</title>
		<body>Fatal Exception: java.lang.RuntimeException: Unable to destroy activity {MyApplication}: java.lang.NullPointerException: Attempt to invoke interface method 'com.liulishuo.filedownloader.BaseDownloadTask com.liulishuo.filedownloader.BaseDownloadTask$IRunningTask.getOrigin()' on a null object reference        at android.app.ActivityThread.performDestroyActivity(ActivityThread.java:5066)        at android.app.ActivityThread.handleDestroyActivity(ActivityThread.java:5089)        at android.app.ActivityThread.access$1700(ActivityThread.java:222)        at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1854)        at android.os.Handler.dispatchMessage(Handler.java:102)        at android.os.Looper.loop(Looper.java:158)        at android.app.ActivityThread.main(ActivityThread.java:7229)        at java.lang.reflect.Method.invoke(Method.java)        at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:1230)        at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:1120) Caused by java.lang.NullPointerException: Attempt to invoke interface method 'com.liulishuo.filedownloader.BaseDownloadTask com.liulishuo.filedownloader.BaseDownloadTask$IRunningTask.getOrigin()' on a null object reference        at com.liulishuo.filedownloader.FileDownloadMessenger.process(FileDownloadMessenger.java:198)        at com.liulishuo.filedownloader.FileDownloadMessenger.notifyPaused(FileDownloadMessenger.java:183)        at com.liulishuo.filedownloader.FileDownloadList.remove(FileDownloadList.java:200)        at com.liulishuo.filedownloader.DownloadTaskHunter.pause(DownloadTaskHunter.java:426)        at com.liulishuo.filedownloader.DownloadTask.pause(DownloadTask.java:338)        at com.liulishuo.filedownloader.FileDownloader.pauseAll(FileDownloader.java:229)        at br.com.MyApplication.onActivityDestroyed(MyApplication.java:162)        at android.app.Application.dispatchActivityDestroyed(Application.java:275)        at android.app.Activity.onDestroy(Activity.java:1870)        at android.support.v4.app.FragmentActivity.onDestroy(FragmentActivity.java:386)        at android.support.v7.app.AppCompatActivity.onDestroy(AppCompatActivity.java:212)        at br.com.MyApplication(MyActivity.java:217)        at android.app.Activity.performDestroy(Activity.java:7102)        at android.app.Instrumentation.callActivityOnDestroy(Instrumentation.java:1170)        at android.app.ActivityThread.performDestroyActivity(ActivityThread.java:5044)        at android.app.ActivityThread.handleDestroyActivity(ActivityThread.java:5089)        at android.app.ActivityThread.access$1700(ActivityThread.java:222)        at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1854)        at android.os.Handler.dispatchMessage(Handler.java:102)        at android.os.Looper.loop(Looper.java:158)        at android.app.ActivityThread.main(ActivityThread.java:7229)        at java.lang.reflect.Method.invoke(Method.java)        at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:1230)        at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:1120)</body>
		<created>2017-01-20 17:21:21</created>
		<closed>2017-02-02 15:42:37</closed>
	</bug>
	<bug>
		<id>458</id>
		<title>java.lang.IllegalStateException: Cannot access request header fields after connection is set</title>
		<body>``` java.lang.IllegalStateException: Cannot access request header fields after connection is set      at com.android.okhttp.internal.http.HttpURLConnectionImpl.getRequestProperties(HttpURLConnectionImpl.java:168)      at com.liulishuo.filedownloader.connection.FileDownloadUrlConnection.getRequestHeaderFields(FileDownloadUrlConnection.java:80)      at com.liulishuo.filedownloader.exception.FileDownloadHttpException.&lt;init&gt;(FileDownloadHttpException.java:36)      at com.liulishuo.filedownloader.services.FileDownloadRunnable.loop(FileDownloadRunnable.java:370)      at com.liulishuo.filedownloader.services.FileDownloadRunnable.run(FileDownloadRunnable.java:222)      at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1112)      at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:587)      at java.lang.Thread.run(Thread.java:841) ``` error in 1.4.0</body>
		<created>2017-01-17 09:15:08</created>
		<closed>2017-01-25 11:23:33</closed>
	</bug>
	<bug>
		<id>438</id>
		<title>FileDownloadHttpException存在Formatter不匹配的问题</title>
		<body>https://github.com/lingochamp/FileDownloader/blob/master/library/src/main/java/com/liulishuo/filedownloader/exception/FileDownloadHttpException.java#L34  这里有三个占位符，但是只有两个参数，最新的1.3.9存在这个问题 如果下载出现错误的话，会导致二次异常 `super(FileDownloadUtils.formatString("response code error: %d, \n request headers: %s \n " +                 "response headers: %s", code, connection));` </body>
		<created>2016-12-29 07:03:07</created>
		<closed>2017-01-09 16:40:10</closed>
	</bug>
	<bug>
		<id>420</id>
		<title>Crash: Unable to create application com.myapp.MyApplication: java.lang.IllegalStateException: the DownloadMgrInitialParams is only can be touched in the process which the download service settles on</title>
		<body>Hey there,  I'm experiencing a crash with following stack trace:  ``` Fatal Exception: java.lang.RuntimeException: Unable to create application com.myapp.MyApplication: java.lang.IllegalStateException: the DownloadMgrInitialParams is only can be touched in the process which the download service settles on        at android.app.ActivityThread.handleBindApplication(ActivityThread.java:4293)        at android.app.ActivityThread.access$1400(ActivityThread.java:143)        at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1301)        at android.os.Handler.dispatchMessage(Handler.java:99)        at android.os.Looper.loop(Looper.java:137)        at android.app.ActivityThread.main(ActivityThread.java:4960)        at java.lang.reflect.Method.invokeNative(Method.java)        at java.lang.reflect.Method.invoke(Method.java:511)        at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:1038)        at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:805)        at dalvik.system.NativeStart.main(NativeStart.java) Caused by java.lang.IllegalStateException: the DownloadMgrInitialParams is only can be touched in the process which the download service settles on        at com.liulishuo.filedownloader.util.FileDownloadHelper.initializeDownloadMgrParams(FileDownloadHelper.java:58)        at com.liulishuo.filedownloader.FileDownloader.init(FileDownloader.java:101)        at com.liulishuo.filedownloader.FileDownloader.init(FileDownloader.java:68)        at br.com.hotmart.hifire.HiFireApplication.setupFileDownloader(HiFireApplication.java:74)        at br.com.hotmart.hifire.HiFireApplication.onCreate(HiFireApplication.java:46)        at android.app.Instrumentation.callApplicationOnCreate(Instrumentation.java:1014)        at android.app.ActivityThread.handleBindApplication(ActivityThread.java:4290)        at android.app.ActivityThread.access$1400(ActivityThread.java:143)        at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1301)        at android.os.Handler.dispatchMessage(Handler.java:99)        at android.os.Looper.loop(Looper.java:137)        at android.app.ActivityThread.main(ActivityThread.java:4960)        at java.lang.reflect.Method.invokeNative(Method.java)        at java.lang.reflect.Method.invoke(Method.java:511)        at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:1038)        at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:805)        at dalvik.system.NativeStart.main(NativeStart.java) ```  Here is the main code from my Application class:  ``` public class MyApplication extends MultiDexApplication implements Application.ActivityLifecycleCallbacks {      @Override     public void onCreate() {         super.onCreate();          // some code before....         setupFileDownloader();         // some code after...     }      private void setupFileDownloader() {         FileDownloadHelper.OkHttpClientCustomMaker okHttp =                 new FileDownloadHelper.OkHttpClientCustomMaker() { // is not has to provide.                     @Override                     public OkHttpClient customMake() {                         final OkHttpClient.Builder builder = new OkHttpClient.Builder();                         builder.authenticator(new AppAuthenticator(getApplicationContext()));                         return builder.build();                     }                 };         /*          * Just for cache Application's Context, and ':filedownloader' progress will NOT be launched          * by below code, so please do not worry about performance.          */         FileDownloader.init(getApplicationContext(), okHttp);     } } ```  I get this crash reported from Crashlytics, in production. It occurs with a very low frequency, and I can't reproduce the wrong behavior in development environment. So, I would like some help about what is the expected behavior of the Library in my Application, and what could went wrong.</body>
		<created>2016-12-09 14:13:12</created>
		<closed>2017-01-09 16:27:02</closed>
	</bug>
	<bug>
		<id>402</id>
		<title>Download continues after pause is called</title>
		<body>Hi, I'm using your library and i'm having a bug where after calling the pause method, the download continues.  I'm starting the download using the following method:  ``` url = Constant.LIULISHUO_APK_URL; path = llsApkFilePath; BaseDownloadTask baseDownloadTask = FileDownloader.getImpl().create(url); baseDownloadTask.setTag(tag); int downloadId1 = baseDownloadTask.                     setListener(listener).                     setPath(path).                     asInQueueTask().                     enqueue();  path = llsApkFilePath + File.separator + "hi"; baseDownloadTask = FileDownloader.getImpl().create(url); int downloadId12 = baseDownloadTask.                     setListener(listener).                     setPath(path).                     asInQueueTask().                     enqueue(); ```  after calling   ``` FileDownloader.getImpl().pause(downloadId1); FileDownloader.getImpl().pause(downloadId12); ```  the paused method is called but in background the download is still running (i'm checking it using charles) and i'm getting a "callback event transfer 3, but is contains false" log. it keeps logging that message until the "callback event transfer -3, but is contains false" message.  I was able to reproduce it using you demo app (i can make a pull request with it if you want). if you want, you can check the implementation on my app [here](https://github.com/Aptoide/aptoide-client-v8/blob/master/downloadmanager/src/main/java/cm/aptoide/pt/downloadmanager/DownloadTask.java).</body>
		<created>2016-11-17 14:33:08</created>
		<closed>2017-01-08 11:43:40</closed>
	</bug>
	<bug>
		<id>384</id>
		<title>Pause a download task before entering Pending state</title>
		<body>当一个BaseDownloadTask调用start()方法进行启动时，大致会经历这样一个过程： downloadTask.start() --&gt; Pending -&gt; Progress... 在下载过程中调用pause()方法可以将该task暂停，并且在接下来调用start()时自动断点续传。  在我使用FileDownloader的过程中，我发现，当一个downloadTask在start()后，在到达Pending状态之前会有一个时间空隙，在这个过程中，如果调用pause()将其暂停，再通过start()继续该项下载时，看起来该项下载任务就无法正常进行了。  这种场景下，downloadTask无法再次进入Pending状态，并且无法开始下载。然后，再次对该任务调用pause()暂停以及start()启动，就可以正常下载了。  我的大致操作流程总结为： ``` 1. downloadTask.start() 2. 在进入Pending状态之前pause() --&gt; start()：此时无法下载（也没有报warn或者异常）； 3. 再次pause() --&gt; start()：下载正常。 ```  因此想请教一下，FileDownloader在start后，进入Pending状态之前处于怎样的状态？这个场景下pause()会引起怎样的问题？以及如何解决这个问题？ </body>
		<created>2016-11-03 03:27:40</created>
		<closed>2017-01-09 12:18:25</closed>
	</bug>
	<bug>
		<id>348</id>
		<title>In 1.2.0, If you don't provide the FileDownloadListener to the task, you can't receive FileDownloadMonitor.IMonitor#onTaskOver callback when the task is finished</title>
		<body>升到1.2.0之后你改掉了notifyCompleted的回调判断，不设置下载监听，连全局Monitor的成功回调都没了！！！！我说之前还是好好的，看了下源码发现改了！ </body>
		<created>2016-10-05 14:11:26</created>
		<closed>2016-10-15 10:38:30</closed>
	</bug>
	<bug>
		<id>329</id>
		<title>BaseDownloadTask#reuse is called shortly after the call to BaseDownloadTask#pause may raise a exception</title>
		<body>java.lang.IllegalStateException: the messenger is working, can't re-appointment for -756756642@com.liulishuo.filedownloader.DownloadTask@42a72b80 </body>
		<created>2016-09-26 02:18:27</created>
		<closed>2016-10-31 08:11:34</closed>
	</bug>
	<bug>
		<id>321</id>
		<title>ava.lang.StackOverflowError?</title>
		<body>#769 Binder_5  java.lang.StackOverflowError 解析原始 } 1 java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:256) 2 java.util.concurrent.LinkedBlockingQueue.offer(LinkedBlockingQueue.java:386) 3 cn.dreamtobe.threadpool.ExceedWait$Queue.putExceed(ExceedWait.java:118) 4 cn.dreamtobe.threadpool.ExceedWait$RejectedHandler.rejectedExecution(ExceedWait.java:42) 5 java.util.concurrent.ThreadPoolExecutor.reject(ThreadPoolExecutor.java:793) 6 java.util.concurrent.ThreadPoolExecutor.execute(ThreadPoolExecutor.java:1339) 7 cn.dreamtobe.threadpool.RealExecutors$ExceedWaitExecutor.execute(RealExecutors.java:59) 8 cn.dreamtobe.threadpool.ExceedWait$Queue.putExceed(ExceedWait.java:129) 9 cn.dreamtobe.threadpool.ExceedWait$RejectedHandler.rejectedExecution(ExceedWait.java:42) 10 java.util.concurrent.ThreadPoolExecutor.reject(ThreadPoolExecutor.java:793) 11 java.util.concurrent.ThreadPoolExecutor.execute(ThreadPoolExecutor.java:1339) 12 cn.dreamtobe.threadpool.RealExecutors$ExceedWaitExecutor.execute(RealExecutors.java:59) 13 cn.dreamtobe.threadpool.ExceedWait$Queue.putExceed(ExceedWait.java:129) 14 cn.dreamtobe.threadpool.ExceedWait$RejectedHandler.rejectedExecution(ExceedWait.java:42) 15 java.util.concurrent.ThreadPoolExecutor.reject(ThreadPoolExecutor.java:793) 16 java.util.concurrent.ThreadPoolExecutor.execute(ThreadPoolExecutor.java:1339) 17 cn.dreamtobe.threadpool.RealExecutors$ExceedWaitExecutor.execute(RealExecutors.java:59) 18 cn.dreamtobe.threadpool.ExceedWait$Queue.putExceed(ExceedWait.java:129) 19 cn.dreamtobe.threadpool.ExceedWait$RejectedHandler.rejectedExecution(ExceedWait.java:42) 20 java.util.concurrent.ThreadPoolExecutor.reject(ThreadPoolExecutor.java:793) 21 java.util.concurrent.ThreadPoolExecutor.execute(ThreadPoolExecutor.java:1339) 22 cn.dreamtobe.threadpool.RealExecutors$ExceedWaitExecutor.execute(RealExecutors.java:59) 23 cn.dreamtobe.threadpool.ExceedWait$Queue.putExceed(ExceedWait.java:129) 24 cn.dreamtobe.threadpool.ExceedWait$RejectedHandler.rejectedExecution(ExceedWait.java:42) 25 java.util.concurrent.ThreadPoolExecutor.reject(ThreadPoolExecutor.java:793) 26 java.util.concurrent.ThreadPoolExecutor.execute(ThreadPoolExecutor.java:1339) 27 cn.dreamtobe.threadpool.RealExecutors$ExceedWaitExecutor.execute(RealExecutors.java:59) 28 cn.dreamtobe.threadpool.ExceedWait$Queue.putExceed(ExceedWait.java:129) 29 cn.dreamtobe.threadpool.ExceedWait$RejectedHandler.rejectedExecution(ExceedWait.java:42) 30 java.util.concurrent.ThreadPoolExecutor.reject(ThreadPoolExecutor.java:793) 31 java.util.concurrent.ThreadPoolExecutor.execute(ThreadPoolExecutor.java:1339) 32 cn.dreamtobe.threadpool.RealExecutors$ExceedWaitExecutor.execute(RealExecutors.java:59) 33 cn.dreamtobe.threadpool.ExceedWait$Queue.putExceed(ExceedWait.java:129) 34 cn.dreamtobe.threadpool.ExceedWait$RejectedHandler.rejectedExecution(ExceedWait.java:42) 35 java.util.concurrent.ThreadPoolExecutor.reject(ThreadPoolExecutor.java:793) 36 java.util.concurrent.ThreadPoolExecutor.execute(ThreadPoolExecutor.java:1339) 37 cn.dreamtobe.threadpool.RealExecutors$ExceedWaitExecutor.execute(RealExecutors.java:59) 38 cn.dreamtobe.threadpool.ExceedWait$Queue.putExceed(ExceedWait.java:129) 39 cn.dreamtobe.threadpool.ExceedWait$RejectedHandler.rejectedExecution(ExceedWait.java:42) 40 java.util.concurrent.ThreadPoolExecutor.reject(ThreadPoolExecutor.java:793) 41 java.util.concurrent.ThreadPoolExecutor.execute(ThreadPoolExecutor.java:1339) 42 cn.dreamtobe.threadpool.RealExecutors$ExceedWaitExecutor.execute(RealExecutors.java:59) 43 cn.dreamtobe.threadpool.ExceedWait$Queue.putExceed(ExceedWait.java:129) 44 cn.dreamtobe.threadpool.ExceedWait$RejectedHandler.rejectedExecution(ExceedWait.java:42) 45 java.util.concurrent.ThreadPoolExecutor.reject(ThreadPoolExecutor.java:793) 46 java.util.concurrent.ThreadPoolExecutor.execute(ThreadPoolExecutor.java:1339) 47 cn.dreamtobe.threadpool.RealExecutors$ExceedWaitExecutor.execute(RealExecutors.java:59) 48 cn.dreamtobe.threadpool.ExceedWait$Queue.putExceed(ExceedWait.java:129) 49 cn.dreamtobe.threadpool.ExceedWait$RejectedHandler.rejectedExecution(ExceedWait.java:42) 50 java.util.concurrent.ThreadPoolExecutor.reject(ThreadPoolExecutor.java:793) 51 java.util.concurrent.ThreadPoolExecutor.execute(ThreadPoolExecutor.java:1339) 52 cn.dreamtobe.threadpool.RealExecutors$ExceedWaitExecutor.execute(RealExecutors.java:59) 53 cn.dreamtobe.threadpool.ExceedWait$Queue.putExceed(ExceedWait.java:129) 54 cn.dreamtobe.threadpool.ExceedWait$RejectedHandler.rejectedExecution(ExceedWait.java:42) 55 java.util.concurrent.ThreadPoolExecutor.reject(ThreadPoolExecutor.java:793) 56 java.util.concurrent.ThreadPoolExecutor.execute(ThreadPoolExecutor.java:1339) 57 cn.dreamtobe.threadpool.RealExecutors$ExceedWaitExecutor.execute(RealExecutors.java:59) 58 cn.dreamtobe.threadpool.ExceedWait$Queue.putExceed(ExceedWait.java:129) 59 cn.dreamtobe.threadpool.ExceedWait$RejectedHandler.rejectedExecution(ExceedWait.java:42) 60 java.util.concurrent.ThreadPoolExecutor.reject(ThreadPoolExecutor.java:793) 61 java.util.concurrent.ThreadPoolExecutor.execute(ThreadPoolExecutor.java:1339) 62 cn.dreamtobe.threadpool.RealExecutors$ExceedWaitExecutor.execute(RealExecutors.java:59) 63 cn.dreamtobe.threadpool.ExceedWait$Queue.putExceed(ExceedWait.java:129) 64 cn.dreamtobe.threadpool.ExceedWait$RejectedHandler.rejectedExecution(ExceedWait.java:42) 65 java.util.concurrent.ThreadPoolExecutor.reject(ThreadPoolExecutor.java:793) 66 java.util.concurrent.ThreadPoolExecutor.execute(ThreadPoolExecutor.java:1339) 67 cn.dreamtobe.threadpool.RealExecutors$ExceedWaitExecutor.execute(RealExecutors.java:59) 68 cn.dreamtobe.threadpool.ExceedWait$Queue.putExceed(ExceedWait.java:129) 69 cn.dreamtobe.threadpool.ExceedWait$RejectedHandler.rejectedExecution(ExceedWait.java:42) 70 java.util.concurrent.ThreadPoolExecutor.reject(ThreadPoolExecutor.java:793) 71 java.util.concurrent.ThreadPoolExecutor.execute(ThreadPoolExecutor.java:1339) 72 cn.dreamtobe.threadpool.RealExecutors$ExceedWaitExecutor.execute(RealExecutors.java:59) 73 cn.dreamtobe.threadpool.ExceedWait$Queue.putExceed(ExceedWait.java:129) 74 cn.dreamtobe.threadpool.ExceedWait$RejectedHandler.rejectedExecution(ExceedWait.java:42) 75 java.util.concurrent.ThreadPoolExecutor.reject(ThreadPoolExecutor.java:793) 76 java.util.concurrent.ThreadPoolExecutor.execute(ThreadPoolExecutor.java:1339) 77 cn.dreamtobe.threadpool.RealExecutors$ExceedWaitExecutor.execute(RealExecutors.java:59) 78 cn.dreamtobe.threadpool.ExceedWait$Queue.putExceed(ExceedWait.java:129) 79 cn.dreamtobe.threadpool.ExceedWait$RejectedHandler.rejectedExecution(ExceedWait.java:42) 80 java.util.concurrent.ThreadPoolExecutor.reject(ThreadPoolExecutor.java:793) 81 java.util.concurrent.ThreadPoolExecutor.execute(ThreadPoolExecutor.java:1339) 82 cn.dreamtobe.threadpool.RealExecutors$ExceedWaitExecutor.execute(RealExecutors.java:59) 83 cn.dreamtobe.threadpool.ExceedWait$Queue.putExceed(ExceedWait.java:129) 84 cn.dreamtobe.threadpool.ExceedWait$RejectedHandler.rejectedExecution(ExceedWait.java:42) 85 java.util.concurrent.ThreadPoolExecutor.reject(ThreadPoolExecutor.java:793) 86 java.util.concurrent.ThreadPoolExecutor.execute(ThreadPoolExecutor.java:1339) 87 cn.dreamtobe.threadpool.RealExecutors$ExceedWaitExecutor.execute(RealExecutors.java:59) 88 cn.dreamtobe.threadpool.ExceedWait$Queue.putExceed(ExceedWait.java:129) 89 cn.dreamtobe.threadpool.ExceedWait$RejectedHandler.rejectedExecution(ExceedWait.java:42) 90 java.util.concurrent.ThreadPoolExecutor.reject(ThreadPoolExecutor.java:793) 91 java.util.concurrent.ThreadPoolExecutor.execute(ThreadPoolExecutor.java:1339) 92 cn.dreamtobe.threadpool.RealExecutors$ExceedWaitExecutor.execute(RealExecutors.java:59) 93 cn.dreamtobe.threadpool.ExceedWait$Queue.putExceed(ExceedWait.java:129) 94 cn.dreamtobe.threadpool.ExceedWait$RejectedHandler.rejectedExecution(ExceedWait.java:42) 95 java.util.concurrent.ThreadPoolExecutor.reject(ThreadPoolExecutor.java:793) 96 java.util.concurrent.ThreadPoolExecutor.execute(ThreadPoolExecutor.java:1339) 97 cn.dreamtobe.threadpool.RealExecutors$ExceedWaitExecutor.execute(RealExecutors.java:59) 98 cn.dreamtobe.threadpool.ExceedWait$Queue.putExceed(ExceedWait.java:129) 99 cn.dreamtobe.threadpool.ExceedWait$RejectedHandler.rejectedExecution(ExceedWait.java:42) 100 java.util.concurrent.ThreadPoolExecutor.reject(ThreadPoolExecutor.java:793) 101 java.util.concurrent.ThreadPoolExecutor.execute(ThreadPoolExecutor.java:1339) 102 cn.dreamtobe.threadpool.RealExecutors$ExceedWaitExecutor.execute(RealExecutors.java:59) 103 cn.dreamtobe.threadpool.ExceedWait$Queue.putExceed(ExceedWait.java:129) 104 cn.dreamtobe.threadpool.ExceedWait$RejectedHandler.rejectedExecution(ExceedWait.java:42) 105 java.util.concurrent.ThreadPoolExecutor.reject(ThreadPoolExecutor.java:793) 106 java.util.concurrent.ThreadPoolExecutor.execute(ThreadPoolExecutor.java:1339) 107 cn.dreamtobe.threadpool.RealExecutors$ExceedWaitExecutor.execute(RealExecutors.java:59) 108 cn.dreamtobe.threadpool.ExceedWait$Queue.putExceed(ExceedWait.java:129) 109 cn.dreamtobe.threadpool.ExceedWait$RejectedHandler.rejectedExecution(ExceedWait.java:42) 110 java.util.concurrent.ThreadPoolExecutor.reject(ThreadPoolExecutor.java:793) 111 java.util.concurrent.ThreadPoolExecutor.execute(ThreadPoolExecutor.java:1339) 112 cn.dreamtobe.threadpool.RealExecutors$ExceedWaitExecutor.execute(RealExecutors.java:59) 113 cn.dreamtobe.threadpool.ExceedWait$Queue.putExceed(ExceedWait.java:129) 114 cn.dreamtobe.threadpool.ExceedWait$RejectedHandler.rejectedExecution(ExceedWait.java:42) 115 java.util.concurrent.ThreadPoolExecutor.reject(ThreadPoolExecutor.java:793) 116 java.util.concurrent.ThreadPoolExecutor.execute(ThreadPoolExecutor.java:1339) 117 cn.dreamtobe.threadpool.RealExecutors$ExceedWaitExecutor.execute(RealExecutors.java:59) 118 cn.dreamtobe.threadpool.ExceedWait$Queue.putExceed(ExceedWait.java:129) 119 cn.dreamtobe.threadpool.ExceedWait$RejectedHandler.rejectedExecution(ExceedWait.java:42) 120 java.util.concurrent.ThreadPoolExecutor.reject(ThreadPoolExecutor.java:793) 121 java.util.concurrent.ThreadPoolExecutor.execute(ThreadPoolExecutor.java:1339) 122 cn.dreamtobe.threadpool.RealExecutors$ExceedWaitExecutor.execute(RealExecutors.java:59) 123 cn.dreamtobe.threadpool.ExceedWait$Queue.putExceed(ExceedWait.java:129) 124 cn.dreamtobe.threadpool.ExceedWait$RejectedHandler.rejectedExecution(ExceedWait.java:42) 125 java.util.concurrent.ThreadPoolExecutor.reject(ThreadPoolExecutor.java:793) 126 java.util.concurrent.ThreadPoolExecutor.execute(ThreadPoolExecutor.java:1339) 127 cn.dreamtobe.threadpool.RealExecutors$ExceedWaitExecutor.execute(RealExecutors.java:59) 128 cn.dreamtobe.threadpool.ExceedWait$Queue.putExceed(ExceedWait.java:129) </body>
		<created>2016-09-21 07:15:49</created>
		<closed>2016-09-27 08:02:17</closed>
	</bug>
	<bug>
		<id>316</id>
		<title>java.lang.IllegalStateException</title>
		<body>线上的应用在bugly上面报了如下错误：  java.lang.IllegalStateException No reused downloaded file' in this message -863250521 -3 com.liulishuo.filedownloader.message.MessageSnapshot.boolean isReusedDownloadedFile()(MessageSnapshot.java:103) com.liulishuo.filedownloader.DownloadTaskHunter.void update(com.liulishuo.filedownloader.message.MessageSnapshot)(DownloadTaskHunter.java:197) com.liulishuo.filedownloader.DownloadTaskHunter.boolean updateKeepFlow(com.liulishuo.filedownloader.message.MessageSnapshot)(DownloadTaskHunter.java:82) com.liulishuo.filedownloader.MessageSnapshotGate.boolean transmitMessage(java.util.List,com.liulishuo.filedownloader.message.MessageSnapshot)(MessageSnapshotGate.java:44) com.liulishuo.filedownloader.MessageSnapshotGate.void receive(com.liulishuo.filedownloader.message.MessageSnapshot)(MessageSnapshotGate.java:84) com.liulishuo.filedownloader.message.MessageSnapshotThreadPool$FlowSingleExecutor$1.void run()(MessageSnapshotThreadPool.java:102) java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1112) java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:587) java.lang.Thread.run(Thread.java:841) </body>
		<created>2016-09-19 06:28:20</created>
		<closed>2016-09-28 15:20:09</closed>
	</bug>
	<bug>
		<id>307</id>
		<title>InQueueTask not possible to utilize Tags</title>
		<body>Am i right, that of version 1.0.0 a `BaseDownloadTask` which belongs to a `FileDownloadQueueSet` has to be created as `asInQueueTask()`?  Problem now, is that the interface does not expose the `setTag()` methods, which i would ned to set some meta-information to the task. </body>
		<created>2016-09-06 06:48:48</created>
		<closed>2016-09-06 12:29:35</closed>
	</bug>
	<bug>
		<id>282</id>
		<title>[Small probability event]Can bring on an illegalStateException when there are multiple single tasks and queues with the same listener object, and start them in the different thread</title>
		<body>异常如下： java.lang.IllegalStateException This task is running 213853733, if you want to start the same task, please create a new one by FileDownloader.create com.liulishuo.filedownloader.BaseDownloadTask.int start()(BaseDownloadTask.java:469)  same task是如何判断的？我可以在start之前判断一下。 </body>
		<created>2016-08-19 10:46:38</created>
		<closed>2016-09-05 03:09:49</closed>
	</bug>
	<bug>
		<id>243</id>
		<title>The exception 'SQLite error: disk is full'  is not submitted to `FileDownloadListener#error`</title>
		<body>``` android.database.sqlite.SQLiteConnection.nativeExecuteForChangedRowCount (SQLiteConnection.java) android.database.sqlite.SQLiteConnection.executeForChangedRowCount (SQLiteConnection.java:731) android.database.sqlite.SQLiteSession.executeForChangedRowCount (SQLiteSession.java:754) android.database.sqlite.SQLiteStatement.executeUpdateDelete (SQLiteStatement.java:64) android.database.sqlite.SQLiteDatabase.updateWithOnConflict (SQLiteDatabase.java:1565) android.database.sqlite.SQLiteDatabase.update (SQLiteDatabase.java:1514) com.liulishuo.filedownloader.services.FileDownloadDBHelper.update (SourceFile:340) com.liulishuo.filedownloader.services.FileDownloadDBHelper.updateError (SourceFile:286) com.liulishuo.filedownloader.services.FileDownloadRunnable.onError (SourceFile:701) com.liulishuo.filedownloader.services.FileDownloadRunnable.loop (SourceFile:384) com.liulishuo.filedownloader.services.FileDownloadRunnable.run (SourceFile:200) java.util.concurrent.ThreadPoolExecutor.runWorker (ThreadPoolExecutor.java:1080) java.util.concurrent.ThreadPoolExecutor$Worker.run (ThreadPoolExecutor.java:573) java.lang.Thread.run (Thread.java:838) ```  this is a stacktrace of an error I got from crash reports of firebase. It hurts some of my users. Different Android version (17-23), different devices.   I see that error themes that user is out of free space. But is that internal system partition, where application data is stored(data/data/&lt;app package name&gt;), or some other partition? And also how can this be fixed, or at least how can I get called back about this error to show some message to user? </body>
		<created>2016-08-02 06:09:22</created>
		<closed>2016-08-05 15:10:16</closed>
	</bug>
	<bug>
		<id>237</id>
		<title>When the provided path is a directory, and the task has already downloaded, start the task again, we receive completed, but the return value of getTargetFilePath may null</title>
		<body>你好，我在我的App上第一次下载完成之后，关闭app，再次打开并且下载同一个文件，`task.getTargetFilePath()` 返回为 null </body>
		<created>2016-08-01 02:37:49</created>
		<closed>2016-08-06 07:21:01</closed>
	</bug>
	<bug>
		<id>229</id>
		<title>resume after Error</title>
		<body>if a task has faced error and i call `currentTask.start()` an exception rises:  &gt; Caused by: java.lang.IllegalStateException: This task is dirty to restart, If you want to reuse this task, please invoke #reuse method manually and retry to restart again.  and if i call `reuse` there will be another exception:  &gt; java.lang.IllegalStateException: the messenger is working, can't re-appointment for 538416338@com.liulishuo.filedownloader.FileDownloadTask@1990b258  what else should i do? </body>
		<created>2016-07-25 09:55:22</created>
		<closed>2016-07-26 00:25:37</closed>
	</bug>
	<bug>
		<id>223</id>
		<title>No possibility to start two FileDownloadQueueSets in a row</title>
		<body>starting two different FileDownloadQueueSets (with different tasks) at once results in `java.lang.IllegalStateException: This task is running -781468002, if you want to start the same task, please create a new one by FileDownloader.create` </body>
		<created>2016-07-21 11:58:50</created>
		<closed>2016-07-25 03:48:08</closed>
	</bug>
	<bug>
		<id>220</id>
		<title>相同url和path的任务重复启动,totalBytes为0</title>
		<body>遇到一个奇怪的问题,在0.3.2中没有问题,在0.3.3中就出现.大概流程是:TASK A,TASK B是独立的,但是他们用相同的URL,PATH来启动一个任务,使用`forceReDownload`,首先启动TASK A,下载完成,再启动一次TASK A,在下载过程中启动TASK B, 然后TASK B的totalBytes就变成 0 了.  想写个demo复现的,结果又一直复现不了.特意打印了关键的log,能帮忙分析一下是什么原因吗?如下图,`taskId`,`modelId`是一直不变的.  根据commit的记录,我怀疑是跟几个地方可能有关:`ForceReDownload`,`getStatusIgnoreCompute(id)` ![1](https://cloud.githubusercontent.com/assets/5917446/16983123/f1eba410-4ea5-11e6-811c-d9813936092e.png)  其中`sofarBytes` 在下载完成前一直增长,没有因为TASK B 的启动而变化  整理了一份更多信息的log.希望能提供一些帮助.  ![2](https://cloud.githubusercontent.com/assets/5917446/16983210/52943462-4ea6-11e6-8f3d-6f505600c090.png) </body>
		<created>2016-07-20 10:18:51</created>
		<closed>2016-07-24 14:18:58</closed>
	</bug>
	<bug>
		<id>213</id>
		<title>AndroidRuntime exception</title>
		<body>` *****.****.*** :filedownloader E/AndroidRuntime: FATAL EXCEPTION: pool-10-thread-1                                                                                    java.lang.NullPointerException                                                                                        at com.liulishuo.filedownloader.message.MessageSnapshotThreadPool$FlowSingleExecutor$1.run(MessageSnapshotThreadPool.java:102)                                                                                        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1080)                                                                                        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:573)                                                                                        at java.lang.Thread.run(Thread.java:856) ` </body>
		<created>2016-07-13 08:54:03</created>
		<closed>2016-07-23 04:22:38</closed>
	</bug>
	<bug>
		<id>176</id>
		<title>数据库中的下载数据会定时清除吗？</title>
		<body></body>
		<created>2016-06-14 03:18:19</created>
		<closed>2016-06-14 04:26:15</closed>
	</bug>
	<bug>
		<id>171</id>
		<title>运行时置空Task的Listener可能会遇到NPE</title>
		<body>1，在TasksManagerDemoActivity 里一个下载列表展示需要下载几个文件，点击其中一个item 的开始按钮后任务正常执行。 2，现在按下返回键回到主页面（在退出后不调用pauseAll()方法，也不unbindService（））我这边log信息看到还是有任务在下载还有进度信息（这是正常的） 3，现在再点击进入TasksManagerDemoActivity 这个页面，能否实现 点击返回按钮之前页面上显示的那个任务继续下载并且正常更新进度的功能呢（目前是只有下载完成的时候会显示正常，但是progress的时候进度条不走，viewHolder对象都在 position位置也对 task！=null 但是进度条就是不走，按下暂停也不管用（实际上任务已经暂停 但是页面展示不对））请指教，要是我描述不清，我可以把改写后的demo给你发过去。PS：我使用了FileDownloader.getImpl().replaceListener(task.getId(), taskDownloadListener);这个方法设置监听 </body>
		<created>2016-06-02 09:19:55</created>
		<closed>2016-06-15 07:52:31</closed>
	</bug>
	<bug>
		<id>169</id>
		<title>setForceReDownload Not Work</title>
		<body>@244317809   ---  The `BaseDownloadTask#setForceReDownload` not work. If `setForceReDownload(true)` it will call-back `warn` when it has already downloaded, And in this case for the task has already downloaded the right logic would redownload the task. </body>
		<created>2016-05-31 08:40:43</created>
		<closed>2016-05-31 14:13:51</closed>
	</bug>
	<bug>
		<id>162</id>
		<title>你好，使用中出现bug</title>
		<body>实际使用中，似乎存在多次点击会出现这个错误（特别是下载准备完成时）。 我尝试做判断，如果为空，不调用callback,但这样，似乎又会出现其他问题  java.lang.NullPointerException     at com.liulishuo.filedownloader.FileDownloadMessenger.handoverMessage(FileDownloadMessenger.java:257)     at com.liulishuo.filedownloader.FileDownloadMessageStation$UIHandlerCallback.dispose(FileDownloadMessageStation.java:179)     at com.liulishuo.filedownloader.FileDownloadMessageStation$UIHandlerCallback.handleMessage(FileDownloadMessageStation.java:170)     at android.os.Handler.dispatchMessage(Handler.java:95)     at android.os.Looper.loop(Looper.java:153)     at android.app.ActivityThread.main(ActivityThread.java:5000)     at java.lang.reflect.Method.invokeNative(Native Method)     at java.lang.reflect.Method.invoke(Method.java:511)     at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:821)     at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:584)     at dalvik.system.NativeStart.main(Native Method)  另，麻烦修复一下： 不明白为什么跑到这个分支 ，可能 也是多次点击 ？ java.util.MissingFormatArgumentException: Format specifier: d     at java.util.Formatter.getArgument(Formatter.java:1111)     at java.util.Formatter.doFormat(Formatter.java:1076)     at java.util.Formatter.format(Formatter.java:1042)     at java.util.Formatter.format(Formatter.java:1011)     at java.lang.String.format(String.java:1999)     at com.liulishuo.filedownloader.util.FileDownloadUtils.formatString(FileDownloadUtils.java:286)     at com.liulishuo.filedownloader.services.FileDownloadRunnable.run(FileDownloadRunnable.java:166)     at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1112)     at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:587)     at java.lang.Thread.run(Thread.java:841) </body>
		<created>2016-05-27 03:17:35</created>
		<closed>2016-05-28 10:13:37</closed>
	</bug>
	<bug>
		<id>149</id>
		<title>在下载服务不在独立进程的情况，调用了 BaseDownloadTask.addHeader 后好像没作用</title>
		<body>你好，我遇到个问题，调用了 BaseDownloadTask.addHeader 后, FileDownloadRunnable 里的  ``` Java if (header != null &amp;&amp; header.getNamesAndValues() != null) {     if (FileDownloadLog.NEED_LOG) {         FileDownloadLog.v(this, "%d add outside header: %s", getId(), header);     }     builder.headers(Headers.of(header.getNamesAndValues())); } ```  这个Log没有打印出来，也就是说header为空了？ </body>
		<created>2016-05-13 10:44:09</created>
		<closed>2016-05-13 11:48:55</closed>
	</bug>
	<bug>
		<id>127</id>
		<title>Resume downloaded files throws( java.lang.IllegalArgumentException: Unexpected char )</title>
		<body>Could not resume files if the default device language does not belong to Arabic numbers Locale (such as Eastern  Arabic or Persian numbers ).  this exception happens because okhttp3 expected ascii code characters for http headers. i fixed this issue by using :  String.format(Locale.ENGLISH,........) rather than String.format(........). </body>
		<created>2016-04-25 18:37:22</created>
		<closed>2016-04-26 07:40:10</closed>
	</bug>
	<bug>
		<id>117</id>
		<title>`filedownloader.properties` not work for aar archive</title>
		<body></body>
		<created>2016-04-19 12:47:29</created>
		<closed>2016-04-19 16:18:56</closed>
	</bug>
	<bug>
		<id>111</id>
		<title>can not download when the status is pending  (if already three files being downloaded)</title>
		<body>当3个文件正在下载，点击开始下载第4,5及之后的就会进入pending状态，按逻辑来说是，当前3个其中有1个完后，第4个就会开始下载，5及之后的仍会在pending进行等待之前下载完再继续下载。但是测试了却是第4个及之后进入pending之后当前面下载完了也不会开始下载。当再次点击在pending状态的文件，文件状态也不会改变（可以多点几次试试），当然，我也用demo测试了一遍（由于demo的任务管理器案例文件都太小，下载完很快，所以我使用了`Constant.BIG_FILE_URLS`数组进行测试）。  我也想替你分担一下，于是我自己也开始尝试解决： 我在按钮点击事件里设置了断点调式，在第4个（pending状态）获取status是1（即pending），当再次点击还是pending。所以我就在`FileDownloadMgr`的`pause(final int id)`方法里强制加入了：  ``` java model.setStatus(FileDownloadStatus.paused);  ```  但问题依旧，并log：  ``` java com.liulishuo.filedownloader.demo W/FileDownloader.FileDownloadTask: warn, but no listener to receive progress, switch to pending -1011761149 -2 ```  然后定点在`BaseDownloadTask`的`update(final FileDownloadTransferModel transfer)`方法，之后我看见下面有个判断之后`getDriver().notifyPending();`进行通知，之后我又尝试： 在`FileDownloadStatus`增加了1个status：  ``` java public final static byte waiting = 7;  public static boolean isIng(final int status) {         return status &gt;= pending &amp;&amp; status &lt;= waiting;     } ```  在`FileDownloadMgr`的`pause(final int id)`：  ``` java if (getStatus(id) == FileDownloadStatus.pending) {        model.setStatus(FileDownloadStatus.waiting); } ```  最后在`FileDownloadRunnable`的`run()`：  ``` java if (model.getStatus() == FileDownloadStatus.waiting) {         model.setStatus(FileDownloadStatus.pending);  }  // Step 2, check status  在这步之前强行了setStatus ```  再次测试，第4及之后进入pending状态的文件，再次点击按钮，文件按钮状态是可以是改变的，点击`pause`后显示`start`，点击`start`之后显示`pause`。 但是，当前3个文件其中1个下载完后，第4及之后的仍不会开始下载（有情况是会继续开始下载，例如我在公司的时候，公司网络差，继续下载的几率会大大提高）。  我对这个库还没有吃透，我也感觉我这样改有点感觉不对。  我希望你能指点一下我，我可以增加对这个库的了解，同时，这对我的学习也很有帮助，谢谢。:)  另：鉴于之前的issues只有我才这样，我也担心这次也只有我。。。 </body>
		<created>2016-04-15 15:33:30</created>
		<closed>2016-04-17 15:32:57</closed>
	</bug>
	<bug>
		<id>92</id>
		<title>新问题，关于自动重试</title>
		<body>测试发现，如果设置了自动重试（比如 3次），我进行如下操作： 下载一个文件，在进行了一段时间后，这时切到后天，主动关闭手机的网络（wifi），这是切回应用，会回调 error，这时我主动重新开始 调用下载，不是（task.start()）而是： FileDownloader.getImpl().create(url).setPath(path).setCallbackProgressTimes(1000).setListener(mFileDownloadListener).start(); 因为这时还没有网络，所以会回调 retry 一次（只有一次），然后 error，这时主动去开启网络，继续重新开始下载，这时下载进度却从 0开始了，不管测试是 第一次回调 error之前重新联网还是 回调了error之后重新联网，都是这样的结果，断点续传失效了。 然后继续测试 建立下载的时候 不设置自动重试的次数，重试以上的过程，主动联网后，再次调用下载，可以断点续传，以前的下载进度存在。 </body>
		<created>2016-04-09 08:34:24</created>
		<closed>2016-04-09 12:26:25</closed>
	</bug>
	<bug>
		<id>91</id>
		<title>一些疑问</title>
		<body>1.测试一个下载，下载进行中时，主动断开了手机的网络连接（wifi），发现只回调了retry一次（初始下载时设置了 自动重试 3次） 2.然后进入了 error，我收到 error后，主动调用 task.start(); 但发现并未发生预计出现的任何事情（比如，继续回调 error 或者 retry）（这时主动调用时， 即使是我主动开启了网络连接依然如此），是机制就这这样的吗？感觉这样子，出现了异常，难道只能 主动delete下载包继续新建下载 重新下载吗？ 3.setCallbackProgressTimes 是有默认值吗？发现 设置 1000 后，回调progress会平滑很多，是否可以关闭这个限制？就以设置的回调间隔来回调 progress 呢？ 4.是否可以拓展个内部的数据，downloadSpeed 和 remainingTime，如果自己实现的话，因为 progress回调的间隔时间实在是业务层无法掌握的节奏，它是不确定的，我本想自己通过间隔来算，发现回调的不确定 算不了这个速度，剩余时间也同样算不了。是否可以在 lib 内部实现这个 速度和时间的 估算呢？这个需求应该算是很常规的需要把 </body>
		<created>2016-04-09 07:53:04</created>
		<closed>2016-04-09 11:16:34</closed>
	</bug>
	<bug>
		<id>90</id>
		<title>测试发现的问题</title>
		<body>1.建立了一个下载，下载未完成，直接关闭应用，FileDownloader的service未被kill，然后重新打开应用，重新走 start 流程，发现不会回调 progress 了，只会在一段时间后回调 completed。请问是 bug吗？要怎么才能继续回调 progress  呢？ 2. 测试下载中，默认 10ms回调，progress  里面的进度走势并不顺畅，感觉是跳动一下，然后顿一下，然后又 迅速跳几下进度，又卡顿一会， 比较了其它几个下载库，感觉不顺畅。即使时间设置为0.1s 也并无改观。是否就是这样的呢？ </body>
		<created>2016-04-09 03:02:07</created>
		<closed>2016-04-09 04:11:28</closed>
	</bug>
	<bug>
		<id>84</id>
		<title>java.io.IOException: The file is too large to store, the downloaded size:  0, requirements: 4449023, but the available space size: -568107008</title>
		<body>更新到0.2.1后点击下载就报如下错误，存储空间是够的。。  ``` java java.io.IOException: The file is too large to store, the downloaded size:  0, requirements: 4449023, but the available space size: -568107008   at com.liulishuo.filedownloader.services.FileDownloadRunnable.getRandomAccessFile(FileDownloadRunnable.java:541)   at com.liulishuo.filedownloader.services.FileDownloadRunnable.fetch(FileDownloadRunnable.java:285)   at com.liulishuo.filedownloader.services.FileDownloadRunnable.loop(FileDownloadRunnable.java:249)   at com.liulishuo.filedownloader.services.FileDownloadRunnable.run(FileDownloadRunnable.java:138)   at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1076)   at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:569)   at java.lang.Thread.run(Thread.java:856) ``` </body>
		<created>2016-04-06 01:28:51</created>
		<closed>2016-04-06 02:59:28</closed>
	</bug>
	<bug>
		<id>68</id>
		<title>unbindService() does not close OkHttp responde body</title>
		<body>When calling `FileDownloader.getImpl().unBindService();`, the OkHttp response body is not closed, following log is displayed:  ``` W/okhttp3.OkHttpClient: A connection to https://google.com/ was leaked. Did you forget to close a response body? ``` </body>
		<created>2016-03-21 10:20:09</created>
		<closed>2016-03-21 12:12:18</closed>
	</bug>
	<bug>
		<id>38</id>
		<title>com.liulishuo.filedownloader.i.IFileDownloadIPCService$Stub$Proxy.unregisterCallback(IFileDownloadIPCService.java:220)</title>
		<body>02-29 10:54:51.798    8463-8463/com.cleverm.smartpen W/System.err﹕ android.os.DeadObjectException 02-29 10:54:51.798    8463-8463/com.cleverm.smartpen W/System.err﹕ at android.os.BinderProxy.transactNative(Native Method) 02-29 10:54:51.798    8463-8463/com.cleverm.smartpen W/System.err﹕ at android.os.BinderProxy.transact(Binder.java:496) 02-29 10:54:51.798    8463-8463/com.cleverm.smartpen W/System.err﹕ at com.liulishuo.filedownloader.i.IFileDownloadIPCService$Stub$Proxy.unregisterCallback(IFileDownloadIPCService.java:220) 02-29 10:54:51.798    8463-8463/com.cleverm.smartpen W/System.err﹕ at com.liulishuo.filedownloader.FileDownloadServiceUIGuard.unregisterCallback(FileDownloadServiceUIGuard.java:66) 02-29 10:54:51.798    8463-8463/com.cleverm.smartpen W/System.err﹕ at com.liulishuo.filedownloader.FileDownloadServiceUIGuard.unregisterCallback(FileDownloadServiceUIGuard.java:35) 02-29 10:54:51.798    8463-8463/com.cleverm.smartpen W/System.err﹕ at com.liulishuo.filedownloader.services.BaseFileServiceUIGuard.releaseConnect(BaseFileServiceUIGuard.java:99) 02-29 10:54:51.798    8463-8463/com.cleverm.smartpen W/System.err﹕ at com.liulishuo.filedownloader.services.BaseFileServiceUIGuard.onServiceDisconnected(BaseFileServiceUIGuard.java:93) 02-29 10:54:51.798    8463-8463/com.cleverm.smartpen W/System.err﹕ at android.app.LoadedApk$ServiceDispatcher.doDeath(LoadedApk.java:1208) 02-29 10:54:51.798    8463-8463/com.cleverm.smartpen W/System.err﹕ at android.app.LoadedApk$ServiceDispatcher$RunConnection.run(LoadedApk.java:1222) 02-29 10:54:51.798    8463-8463/com.cleverm.smartpen W/System.err﹕ at android.os.Handler.handleCallback(Handler.java:739) 02-29 10:54:51.798    8463-8463/com.cleverm.smartpen W/System.err﹕ at android.os.Handler.dispatchMessage(Handler.java:95) 02-29 10:54:51.798    8463-8463/com.cleverm.smartpen W/System.err﹕ at android.os.Looper.loop(Looper.java:135) 02-29 10:54:51.798    8463-8463/com.cleverm.smartpen W/System.err﹕ at android.app.ActivityThread.main(ActivityThread.java:5221) 02-29 10:54:51.798    8463-8463/com.cleverm.smartpen W/System.err﹕ at java.lang.reflect.Method.invoke(Native Method) 02-29 10:54:51.798    8463-8463/com.cleverm.smartpen W/System.err﹕ at java.lang.reflect.Method.invoke(Method.java:372) 02-29 10:54:51.798    8463-8463/com.cleverm.smartpen W/System.err﹕ at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:899) 02-29 10:54:51.798    8463-8463/com.cleverm.smartpen W/System.err﹕ at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:694) </body>
		<created>2016-02-29 02:57:45</created>
		<closed>2016-03-01 06:33:40</closed>
	</bug>
	<bug>
		<id>30</id>
		<title>Fatal Exception: java.util.IllegalFormatConversionException</title>
		<body>Fatal Exception: java.util.IllegalFormatConversionException: %d can't format java.lang.String arguments        at java.util.Formatter.badArgumentType(Formatter.java:1489)        at java.util.Formatter.transformFromInteger(Formatter.java:1689)        at java.util.Formatter.transform(Formatter.java:1461)        at java.util.Formatter.doFormat(Formatter.java:1081)        at java.util.Formatter.format(Formatter.java:1042)        at java.util.Formatter.format(Formatter.java:1011)        at java.lang.String.format(String.java:1803)        at java.lang.String.format(String.java:1777)        at com.liulishuo.filedownloader.util.FileDownloadLog.log(FileDownloadLog.java:64)        at com.liulishuo.filedownloader.util.FileDownloadLog.log(FileDownloadLog.java:55)        at com.liulishuo.filedownloader.util.FileDownloadLog.d(FileDownloadLog.java:43)        at com.liulishuo.filedownloader.FileDownloadEventPool.publish(FileDownloadEventPool.java:100)        at com.liulishuo.filedownloader.FileDownloadEventPool$WaitingRunnable.loopMessage(FileDownloadEventPool.java:372)        at com.liulishuo.filedownloader.FileDownloadEventPool$WaitingRunnable.access$400(FileDownloadEventPool.java:197)        at com.liulishuo.filedownloader.FileDownloadEventPool$WaitingRunnable$1.run(FileDownloadEventPool.java:313)        at android.os.Handler.handleCallback(Handler.java:810)        at android.os.Handler.dispatchMessage(Handler.java:99)        at android.os.Looper.loop(Looper.java:189)        at android.app.ActivityThread.main(ActivityThread.java:5532)        at java.lang.reflect.Method.invoke(Method.java)        at java.lang.reflect.Method.invoke(Method.java:372)        at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:950)        at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:745) </body>
		<created>2016-02-17 16:05:45</created>
		<closed>2016-02-18 02:22:54</closed>
	</bug>
	<bug>
		<id>23</id>
		<title>Concurrent Modification Exception</title>
		<body>Logcat output: `FATAL EXCEPTION: pool-2-thread-1 Process: ir.sobhe.menbar, PID: 6187 java.util.ConcurrentModificationException at java.util.ArrayList$ArrayListIterator.next(ArrayList.java:573) at com.liulishuo.filedownloader.FileDownloadTask$FileDownloadInternalLis.callback(FileDownloadTask.java:213) at com.liulishuo.filedownloader.event.DownloadEventSampleListener.callback(DownloadEventSampleListener.java:36) at com.liulishuo.filedownloader.event.DownloadEventPoolImpl.trigger(DownloadEventPoolImpl.java:192) at com.liulishuo.filedownloader.event.DownloadEventPoolImpl.publish(DownloadEventPoolImpl.java:128) at com.liulishuo.filedownloader.FileDownloadEventPool.publish(FileDownloadEventPool.java:111) at com.liulishuo.filedownloader.event.DownloadEventPoolImpl$2.run(DownloadEventPoolImpl.java:159) at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1112) at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:587) at java.lang.Thread.run(Thread.java:818)` </body>
		<created>2016-01-31 10:21:27</created>
		<closed>2016-01-31 16:20:40</closed>
	</bug>
</bugs>
