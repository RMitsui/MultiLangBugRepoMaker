<?xml version="1.0" encoding="ISO-8859-1"?>

<bugs>
	<bug>
		<id>7481</id>
		<title>Unexpected failed test cases of PostgreSQL DQL test cases</title>
		<body>## Bug Report  **For English only**, other languages will not accept.  Before report a bug, make sure you have:  - Searched open and closed [GitHub issues](https://github.com/apache/shardingsphere/issues). - Read documentation: [ShardingSphere Doc](https://shardingsphere.apache.org/document/current/en/overview).  Please pay attention on issues you submitted, because we maybe need more details.  If no response anymore and we cannot reproduce it on current information, we will **close it**.  Please answer these questions before submitting your issue. Thanks!  ### Which version of ShardingSphere did you use?  5.0.0-RC1-SNAPSHOT  ### Which project did you use? ShardingSphere-JDBC or ShardingSphere-Proxy?  ShardingSphere-JDBC   ### Expected behavior  Integration test all pass.  ### Actual behavior  Unexpected failed test cases:  ``` D:\jdk1.8.0_202\bin\java.exe -ea -Xmx1024m -XX:MaxMetaspaceSize=256m -Xmx1024m -XX:MaxMetaspaceSize=256m -Didea.test.cyclic.buffer.size=1048576 "-javaagent:D:\Program Files\JetBrains\IntelliJ IDEA 2020.1.2\lib\idea_rt.jar=60590:D:\Program Files\JetBrains\IntelliJ IDEA 2020.1.2\bin" -Dfile.encoding=UTF-8 -classpath "D:\Program Files\JetBrains\IntelliJ IDEA 2020.1.2\lib\idea_rt.jar;D:\Program Files\JetBrains\IntelliJ IDEA 2020.1.2\plugins\junit\lib\junit5-rt.jar;D:\Program Files\JetBrains\IntelliJ IDEA 2020.1.2\plugins\junit\lib\junit-rt.jar;D:\jdk1.8.0_202\jre\lib\charsets.jar;D:\jdk1.8.0_202\jre\lib\deploy.jar;D:\jdk1.8.0_202\jre\lib\ext\access-bridge-64.jar;D:\jdk1.8.0_202\jre\lib\ext\cldrdata.jar;D:\jdk1.8.0_202\jre\lib\ext\dnsns.jar;D:\jdk1.8.0_202\jre\lib\ext\jaccess.jar;D:\jdk1.8.0_202\jre\lib\ext\jfxrt.jar;D:\jdk1.8.0_202\jre\lib\ext\localedata.jar;D:\jdk1.8.0_202\jre\lib\ext\nashorn.jar;D:\jdk1.8.0_202\jre\lib\ext\sunec.jar;D:\jdk1.8.0_202\jre\lib\ext\sunjce_provider.jar;D:\jdk1.8.0_202\jre\lib\ext\sunmscapi.jar;D:\jdk1.8.0_202\jre\lib\ext\sunpkcs11.jar;D:\jdk1.8.0_202\jre\lib\ext\zipfs.jar;D:\jdk1.8.0_202\jre\lib\javaws.jar;D:\jdk1.8.0_202\jre\lib\jce.jar;D:\jdk1.8.0_202\jre\lib\jfr.jar;D:\jdk1.8.0_202\jre\lib\jfxswt.jar;D:\jdk1.8.0_202\jre\lib\jsse.jar;D:\jdk1.8.0_202\jre\lib\management-agent.jar;D:\jdk1.8.0_202\jre\lib\plugin.jar;D:\jdk1.8.0_202\jre\lib\resources.jar;D:\jdk1.8.0_202\jre\lib\rt.jar;D:\0project\tuohai666-shardingsphere\shardingsphere-integration-test\shardingsphere-test-suite\target\test-classes;D:\0project\tuohai666-shardingsphere\shardingsphere-integration-test\shardingsphere-test-suite\target\classes;D:\0project\tuohai666-shardingsphere\shardingsphere-jdbc\shardingsphere-jdbc-core\target\classes;D:\0project\tuohai666-shardingsphere\shardingsphere-transaction\shardingsphere-transaction-core\target\classes;D:\0project\tuohai666-shardingsphere\shardingsphere-infra\shardingsphere-infra-executor\target\classes;D:\0project\tuohai666-shardingsphere\shardingsphere-sql-parser\shardingsphere-sql-parser-dialect\shardingsphere-sql-parser-sql92\target\classes;D:\0project\tuohai666-shardingsphere\shardingsphere-sql-parser\shardingsphere-sql-parser-engine\target\classes;D:\0project\tuohai666-shardingsphere\shardingsphere-sql-parser\shardingsphere-sql-parser-spi\target\classes;D:\0project\tuohai666-shardingsphere\shardingsphere-sql-parser\shardingsphere-sql-parser-statement\target\classes;C:\Users\zhangyonglun\.m2\repository\org\apache\commons\commons-collections4\4.2\commons-collections4-4.2.jar;C:\Users\zhangyonglun\.m2\repository\org\antlr\antlr4-runtime\4.7.2\antlr4-runtime-4.7.2.jar;D:\0project\tuohai666-shardingsphere\shardingsphere-sql-parser\shardingsphere-sql-parser-dialect\shardingsphere-sql-parser-mysql\target\classes;D:\0project\tuohai666-shardingsphere\shardingsphere-sql-parser\shardingsphere-sql-parser-dialect\shardingsphere-sql-parser-postgresql\target\classes;D:\0project\tuohai666-shardingsphere\shardingsphere-sql-parser\shardingsphere-sql-parser-dialect\shardingsphere-sql-parser-oracle\target\classes;D:\0project\tuohai666-shardingsphere\shardingsphere-sql-parser\shardingsphere-sql-parser-dialect\shardingsphere-sql-parser-sqlserver\target\classes;D:\0project\tuohai666-shardingsphere\shardingsphere-infra\shardingsphere-infra-context\target\classes;D:\0project\tuohai666-shardingsphere\shardingsphere-infra\shardingsphere-infra-common\target\classes;D:\0project\tuohai666-shardingsphere\shardingsphere-sql-parser\shardingsphere-sql-parser-binder\target\classes;C:\Users\zhangyonglun\.m2\repository\org\codehaus\groovy\groovy\2.4.19\groovy-2.4.19-indy.jar;C:\Users\zhangyonglun\.m2\repository\org\yaml\snakeyaml\1.16\snakeyaml-1.16.jar;C:\Users\zhangyonglun\.m2\repository\commons-codec\commons-codec\1.10\commons-codec-1.10.jar;D:\0project\tuohai666-shardingsphere\shardingsphere-rdl-parser\shardingsphere-rdl-parser-engine\target\classes;D:\0project\tuohai666-shardingsphere\shardingsphere-rdl-parser\shardingsphere-rdl-parser-sql\target\classes;D:\0project\tuohai666-shardingsphere\shardingsphere-rdl-parser\shardingsphere-rdl-parser-statement\target\classes;D:\0project\tuohai666-shardingsphere\shardingsphere-features\shardingsphere-sharding\shardingsphere-sharding-route\target\classes;D:\0project\tuohai666-shardingsphere\shardingsphere-features\shardingsphere-sharding\shardingsphere-sharding-common\target\classes;D:\0project\tuohai666-shardingsphere\shardingsphere-rdl-parser\shardingsphere-rdl-parser-binder\target\classes;D:\0project\tuohai666-shardingsphere\shardingsphere-features\shardingsphere-sharding\shardingsphere-sharding-api\target\classes;D:\0project\tuohai666-shardingsphere\shardingsphere-infra\shardingsphere-infra-route\target\classes;D:\0project\tuohai666-shardingsphere\shardingsphere-features\shardingsphere-master-slave\shardingsphere-master-slave-route\target\classes;D:\0project\tuohai666-shardingsphere\shardingsphere-features\shardingsphere-master-slave\shardingsphere-master-slave-common\target\classes;D:\0project\tuohai666-shardingsphere\shardingsphere-features\shardingsphere-master-slave\shardingsphere-master-slave-api\target\classes;D:\0project\tuohai666-shardingsphere\shardingsphere-features\shardingsphere-sharding\shardingsphere-sharding-rewrite\target\classes;D:\0project\tuohai666-shardingsphere\shardingsphere-infra\shardingsphere-infra-rewrite\shardingsphere-infra-rewrite-engine\target\classes;D:\0project\tuohai666-shardingsphere\shardingsphere-features\shardingsphere-encrypt\shardingsphere-encrypt-rewrite\target\classes;D:\0project\tuohai666-shardingsphere\shardingsphere-features\shardingsphere-encrypt\shardingsphere-encrypt-common\target\classes;D:\0project\tuohai666-shardingsphere\shardingsphere-features\shardingsphere-encrypt\shardingsphere-encrypt-api\target\classes;D:\0project\tuohai666-shardingsphere\shardingsphere-features\shardingsphere-shadow\shardingsphere-shadow-rewrite\target\classes;D:\0project\tuohai666-shardingsphere\shardingsphere-features\shardingsphere-shadow\shardingsphere-shadow-common\target\classes;D:\0project\tuohai666-shardingsphere\shardingsphere-features\shardingsphere-shadow\shardingsphere-shadow-api\target\classes;D:\0project\tuohai666-shardingsphere\shardingsphere-features\shardingsphere-shadow\shardingsphere-shadow-route\target\classes;D:\0project\tuohai666-shardingsphere\shardingsphere-features\shardingsphere-sharding\shardingsphere-sharding-merge\target\classes;D:\0project\tuohai666-shardingsphere\shardingsphere-infra\shardingsphere-infra-merge\target\classes;D:\0project\tuohai666-shardingsphere\shardingsphere-features\shardingsphere-encrypt\shardingsphere-encrypt-merge\target\classes;D:\0project\tuohai666-shardingsphere\shardingsphere-features\shardingsphere-replica\shardingsphere-replica-route\target\classes;D:\0project\tuohai666-shardingsphere\shardingsphere-features\shardingsphere-replica\shardingsphere-replica-common\target\classes;D:\0project\tuohai666-shardingsphere\shardingsphere-features\shardingsphere-replica\shardingsphere-replica-api\target\classes;D:\0project\tuohai666-shardingsphere\shardingsphere-features\shardingsphere-replica\shardingsphere-replica-execute\target\classes;D:\0project\tuohai666-shardingsphere\shardingsphere-integration-test\shardingsphere-test-fixture\target\test-classes;C:\Users\zhangyonglun\.m2\repository\com\zaxxer\HikariCP\3.4.2\HikariCP-3.4.2.jar;C:\Users\zhangyonglun\.m2\repository\org\apache\commons\commons-dbcp2\2.2.0\commons-dbcp2-2.2.0.jar;C:\Users\zhangyonglun\.m2\repository\org\apache\commons\commons-pool2\2.5.0\commons-pool2-2.5.0.jar;C:\Users\zhangyonglun\.m2\repository\commons-logging\commons-logging\1.2\commons-logging-1.2.jar;C:\Users\zhangyonglun\.m2\repository\com\h2database\h2\1.4.196\h2-1.4.196.jar;C:\Users\zhangyonglun\.m2\repository\mysql\mysql-connector-java\5.1.47\mysql-connector-java-5.1.47.jar;C:\Users\zhangyonglun\.m2\repository\org\postgresql\postgresql\42.2.5\postgresql-42.2.5.jar;C:\Users\zhangyonglun\.m2\repository\com\microsoft\sqlserver\mssql-jdbc\6.1.7.jre8-preview\mssql-jdbc-6.1.7.jre8-preview.jar;C:\Users\zhangyonglun\.m2\repository\com\google\guava\guava\29.0-jre\guava-29.0-jre.jar;C:\Users\zhangyonglun\.m2\repository\com\google\guava\failureaccess\1.0.1\failureaccess-1.0.1.jar;C:\Users\zhangyonglun\.m2\repository\com\google\guava\listenablefuture\9999.0-empty-to-avoid-conflict-with-guava\listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar;C:\Users\zhangyonglun\.m2\repository\com\google\code\findbugs\jsr305\3.0.2\jsr305-3.0.2.jar;C:\Users\zhangyonglun\.m2\repository\org\checkerframework\checker-qual\2.11.1\checker-qual-2.11.1.jar;C:\Users\zhangyonglun\.m2\repository\com\google\errorprone\error_prone_annotations\2.3.4\error_prone_annotations-2.3.4.jar;C:\Users\zhangyonglun\.m2\repository\com\google\j2objc\j2objc-annotations\1.3\j2objc-annotations-1.3.jar;C:\Users\zhangyonglun\.m2\repository\org\slf4j\slf4j-api\1.7.7\slf4j-api-1.7.7.jar;C:\Users\zhangyonglun\.m2\repository\org\slf4j\jcl-over-slf4j\1.7.7\jcl-over-slf4j-1.7.7.jar;C:\Users\zhangyonglun\.m2\repository\org\projectlombok\lombok\1.16.20\lombok-1.16.20.jar;C:\Users\zhangyonglun\.m2\repository\junit\junit\4.12\junit-4.12.jar;C:\Users\zhangyonglun\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\zhangyonglun\.m2\repository\org\hamcrest\hamcrest-library\1.3\hamcrest-library-1.3.jar;C:\Users\zhangyonglun\.m2\repository\org\mockito\mockito-core\2.7.21\mockito-core-2.7.21.jar;C:\Users\zhangyonglun\.m2\repository\net\bytebuddy\byte-buddy\1.6.11\byte-buddy-1.6.11.jar;C:\Users\zhangyonglun\.m2\repository\net\bytebuddy\byte-buddy-agent\1.6.11\byte-buddy-agent-1.6.11.jar;C:\Users\zhangyonglun\.m2\repository\org\objenesis\objenesis\2.5\objenesis-2.5.jar;C:\Users\zhangyonglun\.m2\repository\org\mockito\mockito-inline\2.7.21\mockito-inline-2.7.21.jar;C:\Users\zhangyonglun\.m2\repository\ch\qos\logback\logback-classic\1.2.0\logback-classic-1.2.0.jar;C:\Users\zhangyonglun\.m2\repository\ch\qos\logback\logback-core\1.2.0\logback-core-1.2.0.jar" com.intellij.rt.junit.JUnitStarter -ideVersion5 @w@C:\Users\zhangyonglun\AppData\Local\Temp\idea_working_dirs_junit.tmp @C:\Users\zhangyonglun\AppData\Local\Temp\idea_junit.tmp -socket60589 [ERROR] 04:11:16.213 [main] o.a.s.dbtest.engine.SingleIT - ruleType=tbl, databaseType=PostgreSQL, expectedDataFile=D:\0project\tuohai666-shardingsphere\shardingsphere-integration-test\shardingsphere-test-suite\target\test-classes\integrate\cases\dql/dataset/tbl/select_inner_join.xml, sql=SELECT t_order_item.* FROM t_order JOIN t_order_item ON t_order.order_id = t_order_item.order_id WHERE t_order.order_id = ? org.postgresql.util.PSQLException: ERROR: relation "t_order" does not exist   位置：30 at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2440) at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2183) at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:308) at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:441) at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:365) at org.postgresql.jdbc.PgPreparedStatement.executeWithFlags(PgPreparedStatement.java:143) at org.postgresql.jdbc.PgPreparedStatement.executeQuery(PgPreparedStatement.java:106) at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52) at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeQuery(HikariProxyPreparedStatement.java) at org.apache.shardingsphere.driver.executor.PreparedStatementExecutor$1.createQueryResult(PreparedStatementExecutor.java:70) at org.apache.shardingsphere.driver.executor.PreparedStatementExecutor$1.executeSQL(PreparedStatementExecutor.java:65) at org.apache.shardingsphere.driver.executor.PreparedStatementExecutor$1.executeSQL(PreparedStatementExecutor.java:61) at org.apache.shardingsphere.infra.executor.sql.resourced.jdbc.executor.impl.DefaultSQLExecutorCallback.execute0(DefaultSQLExecutorCallback.java:75) at org.apache.shardingsphere.infra.executor.sql.resourced.jdbc.executor.impl.DefaultSQLExecutorCallback.execute(DefaultSQLExecutorCallback.java:57) at org.apache.shardingsphere.infra.executor.kernel.ExecutorKernel.syncExecute(ExecutorKernel.java:99) at org.apache.shardingsphere.infra.executor.kernel.ExecutorKernel.parallelExecute(ExecutorKernel.java:95) at org.apache.shardingsphere.infra.executor.kernel.ExecutorKernel.execute(ExecutorKernel.java:78) at org.apache.shardingsphere.infra.executor.sql.resourced.jdbc.executor.SQLExecutor.execute(SQLExecutor.java:66) at org.apache.shardingsphere.infra.executor.sql.resourced.jdbc.executor.SQLExecutor.execute(SQLExecutor.java:50) at org.apache.shardingsphere.driver.executor.PreparedStatementExecutor.executeQuery(PreparedStatementExecutor.java:57) at org.apache.shardingsphere.driver.jdbc.core.statement.ShardingSpherePreparedStatement.executeQuery(ShardingSpherePreparedStatement.java:159) at org.apache.shardingsphere.dbtest.engine.dql.GeneralDQLIT.assertExecuteQueryForPreparedStatement(GeneralDQLIT.java:83) at org.apache.shardingsphere.dbtest.engine.dql.GeneralDQLIT.assertExecuteQuery(GeneralDQLIT.java:62) at sun.reflect.GeneratedMethodAccessor44.invoke(Unknown Source) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27) at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) at org.junit.runners.ParentRunner.run(ParentRunner.java:363) at org.junit.runners.Suite.runChild(Suite.java:128) at org.junit.runners.Suite.runChild(Suite.java:27) at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26) at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27) at org.junit.runners.ParentRunner.run(ParentRunner.java:363) at org.junit.runners.Suite.runChild(Suite.java:128) at org.junit.runners.Suite.runChild(Suite.java:27) at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) at org.junit.runners.ParentRunner.run(ParentRunner.java:363) at org.junit.runner.JUnitCore.run(JUnitCore.java:137) at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:69) at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:33) at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:220) at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:53)  org.postgresql.util.PSQLException: ERROR: relation "t_order" does not exist   位置：30  at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2440) at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2183) at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:308) at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:441) at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:365) at org.postgresql.jdbc.PgPreparedStatement.executeWithFlags(PgPreparedStatement.java:143) at org.postgresql.jdbc.PgPreparedStatement.executeQuery(PgPreparedStatement.java:106) at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52) at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeQuery(HikariProxyPreparedStatement.java) at org.apache.shardingsphere.driver.executor.PreparedStatementExecutor$1.createQueryResult(PreparedStatementExecutor.java:70) at org.apache.shardingsphere.driver.executor.PreparedStatementExecutor$1.executeSQL(PreparedStatementExecutor.java:65) at org.apache.shardingsphere.driver.executor.PreparedStatementExecutor$1.executeSQL(PreparedStatementExecutor.java:61) at org.apache.shardingsphere.infra.executor.sql.resourced.jdbc.executor.impl.DefaultSQLExecutorCallback.execute0(DefaultSQLExecutorCallback.java:75) at org.apache.shardingsphere.infra.executor.sql.resourced.jdbc.executor.impl.DefaultSQLExecutorCallback.execute(DefaultSQLExecutorCallback.java:57) at org.apache.shardingsphere.infra.executor.kernel.ExecutorKernel.syncExecute(ExecutorKernel.java:99) at org.apache.shardingsphere.infra.executor.kernel.ExecutorKernel.parallelExecute(ExecutorKernel.java:95) at org.apache.shardingsphere.infra.executor.kernel.ExecutorKernel.execute(ExecutorKernel.java:78) at org.apache.shardingsphere.infra.executor.sql.resourced.jdbc.executor.SQLExecutor.execute(SQLExecutor.java:66) at org.apache.shardingsphere.infra.executor.sql.resourced.jdbc.executor.SQLExecutor.execute(SQLExecutor.java:50) at org.apache.shardingsphere.driver.executor.PreparedStatementExecutor.executeQuery(PreparedStatementExecutor.java:57) at org.apache.shardingsphere.driver.jdbc.core.statement.ShardingSpherePreparedStatement.executeQuery(ShardingSpherePreparedStatement.java:159) at org.apache.shardingsphere.dbtest.engine.dql.GeneralDQLIT.assertExecuteQueryForPreparedStatement(GeneralDQLIT.java:83) at org.apache.shardingsphere.dbtest.engine.dql.GeneralDQLIT.assertExecuteQuery(GeneralDQLIT.java:62) at sun.reflect.GeneratedMethodAccessor44.invoke(Unknown Source) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27) at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) at org.junit.runners.ParentRunner.run(ParentRunner.java:363) at org.junit.runners.Suite.runChild(Suite.java:128) at org.junit.runners.Suite.runChild(Suite.java:27) at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26) at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27) at org.junit.runners.ParentRunner.run(ParentRunner.java:363) at org.junit.runners.Suite.runChild(Suite.java:128) at org.junit.runners.Suite.runChild(Suite.java:27) at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) at org.junit.runners.ParentRunner.run(ParentRunner.java:363) at org.junit.runner.JUnitCore.run(JUnitCore.java:137) at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:69) at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:33) at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:220) at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:53)  [ERROR] 04:11:16.261 [main] o.a.s.dbtest.engine.SingleIT - ruleType=tbl, databaseType=PostgreSQL, expectedDataFile=D:\0project\tuohai666-shardingsphere\shardingsphere-integration-test\shardingsphere-test-suite\target\test-classes\integrate\cases\dql/dataset/tbl/select_inner_join.xml, sql=SELECT t_order_item.* FROM t_order JOIN t_order_item ON t_order.order_id = t_order_item.order_id WHERE t_order.order_id = ? org.postgresql.util.PSQLException: ERROR: relation "t_order" does not exist   位置：30 at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2440) at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2183) at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:308) at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:441) at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:365) at org.postgresql.jdbc.PgPreparedStatement.executeWithFlags(PgPreparedStatement.java:143) at org.postgresql.jdbc.PgPreparedStatement.execute(PgPreparedStatement.java:132) at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44) at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java) at org.apache.shardingsphere.driver.executor.PreparedStatementExecutor$3.executeSQL(PreparedStatementExecutor.java:114) at org.apache.shardingsphere.driver.executor.PreparedStatementExecutor$3.executeSQL(PreparedStatementExecutor.java:110) at org.apache.shardingsphere.infra.executor.sql.resourced.jdbc.executor.impl.DefaultSQLExecutorCallback.execute0(DefaultSQLExecutorCallback.java:75) at org.apache.shardingsphere.infra.executor.sql.resourced.jdbc.executor.impl.DefaultSQLExecutorCallback.execute(DefaultSQLExecutorCallback.java:57) at org.apache.shardingsphere.infra.executor.kernel.ExecutorKernel.syncExecute(ExecutorKernel.java:99) at org.apache.shardingsphere.infra.executor.kernel.ExecutorKernel.parallelExecute(ExecutorKernel.java:95) at org.apache.shardingsphere.infra.executor.kernel.ExecutorKernel.execute(ExecutorKernel.java:78) at org.apache.shardingsphere.infra.executor.sql.resourced.jdbc.executor.SQLExecutor.execute(SQLExecutor.java:66) at org.apache.shardingsphere.infra.executor.sql.resourced.jdbc.executor.SQLExecutor.execute(SQLExecutor.java:50) at org.apache.shardingsphere.driver.executor.PreparedStatementExecutor.execute(PreparedStatementExecutor.java:101) at org.apache.shardingsphere.driver.jdbc.core.statement.ShardingSpherePreparedStatement.execute(ShardingSpherePreparedStatement.java:199) at org.apache.shardingsphere.dbtest.engine.dql.GeneralDQLIT.assertExecuteForPreparedStatement(GeneralDQLIT.java:117) at org.apache.shardingsphere.dbtest.engine.dql.GeneralDQLIT.assertExecute(GeneralDQLIT.java:95) at sun.reflect.GeneratedMethodAccessor45.invoke(Unknown Source) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27) at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) at org.junit.runners.ParentRunner.run(ParentRunner.java:363) at org.junit.runners.Suite.runChild(Suite.java:128) at org.junit.runners.Suite.runChild(Suite.java:27) at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26) at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27) at org.junit.runners.ParentRunner.run(ParentRunner.java:363) at org.junit.runners.Suite.runChild(Suite.java:128) at org.junit.runners.Suite.runChild(Suite.java:27) at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) at org.junit.runners.ParentRunner.run(ParentRunner.java:363) at org.junit.runner.JUnitCore.run(JUnitCore.java:137) at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:69) at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:33) at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:220) at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:53)  org.postgresql.util.PSQLException: ERROR: relation "t_order" does not exist   位置：30  at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2440) at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2183) at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:308) at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:441) at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:365) at org.postgresql.jdbc.PgPreparedStatement.executeWithFlags(PgPreparedStatement.java:143) at org.postgresql.jdbc.PgPreparedStatement.execute(PgPreparedStatement.java:132) at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44) at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java) at org.apache.shardingsphere.driver.executor.PreparedStatementExecutor$3.executeSQL(PreparedStatementExecutor.java:114) at org.apache.shardingsphere.driver.executor.PreparedStatementExecutor$3.executeSQL(PreparedStatementExecutor.java:110) at org.apache.shardingsphere.infra.executor.sql.resourced.jdbc.executor.impl.DefaultSQLExecutorCallback.execute0(DefaultSQLExecutorCallback.java:75) at org.apache.shardingsphere.infra.executor.sql.resourced.jdbc.executor.impl.DefaultSQLExecutorCallback.execute(DefaultSQLExecutorCallback.java:57) at org.apache.shardingsphere.infra.executor.kernel.ExecutorKernel.syncExecute(ExecutorKernel.java:99) at org.apache.shardingsphere.infra.executor.kernel.ExecutorKernel.parallelExecute(ExecutorKernel.java:95) at org.apache.shardingsphere.infra.executor.kernel.ExecutorKernel.execute(ExecutorKernel.java:78) at org.apache.shardingsphere.infra.executor.sql.resourced.jdbc.executor.SQLExecutor.execute(SQLExecutor.java:66) at org.apache.shardingsphere.infra.executor.sql.resourced.jdbc.executor.SQLExecutor.execute(SQLExecutor.java:50) at org.apache.shardingsphere.driver.executor.PreparedStatementExecutor.execute(PreparedStatementExecutor.java:101) at org.apache.shardingsphere.driver.jdbc.core.statement.ShardingSpherePreparedStatement.execute(ShardingSpherePreparedStatement.java:199) at org.apache.shardingsphere.dbtest.engine.dql.GeneralDQLIT.assertExecuteForPreparedStatement(GeneralDQLIT.java:117) at org.apache.shardingsphere.dbtest.engine.dql.GeneralDQLIT.assertExecute(GeneralDQLIT.java:95) at sun.reflect.GeneratedMethodAccessor45.invoke(Unknown Source) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27) at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) at org.junit.runners.ParentRunner.run(ParentRunner.java:363) at org.junit.runners.Suite.runChild(Suite.java:128) at org.junit.runners.Suite.runChild(Suite.java:27) at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26) at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27) at org.junit.runners.ParentRunner.run(ParentRunner.java:363) at org.junit.runners.Suite.runChild(Suite.java:128) at org.junit.runners.Suite.runChild(Suite.java:27) at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) at org.junit.runners.ParentRunner.run(ParentRunner.java:363) at org.junit.runner.JUnitCore.run(JUnitCore.java:137) at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:69) at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:33) at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:220) at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:53)  [ERROR] 04:11:16.369 [main] o.a.s.dbtest.engine.SingleIT - ruleType=dbtbl_with_masterslave, databaseType=PostgreSQL, expectedDataFile=D:\0project\tuohai666-shardingsphere\shardingsphere-integration-test\shardingsphere-test-suite\target\test-classes\integrate\cases\dql/dataset/dbtbl_with_masterslave/select_inner_join.xml, sql=SELECT t_order_item.* FROM t_order JOIN t_order_item ON t_order.order_id = t_order_item.order_id WHERE t_order.order_id = ? org.postgresql.util.PSQLException: ERROR: relation "t_order" does not exist   位置：30 at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2440) at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2183) at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:308) at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:441) at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:365) at org.postgresql.jdbc.PgPreparedStatement.executeWithFlags(PgPreparedStatement.java:143) at org.postgresql.jdbc.PgPreparedStatement.executeQuery(PgPreparedStatement.java:106) at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52) at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeQuery(HikariProxyPreparedStatement.java) at org.apache.shardingsphere.driver.executor.PreparedStatementExecutor$1.createQueryResult(PreparedStatementExecutor.java:70) at org.apache.shardingsphere.driver.executor.PreparedStatementExecutor$1.executeSQL(PreparedStatementExecutor.java:65) at org.apache.shardingsphere.driver.executor.PreparedStatementExecutor$1.executeSQL(PreparedStatementExecutor.java:61) at org.apache.shardingsphere.infra.executor.sql.resourced.jdbc.executor.impl.DefaultSQLExecutorCallback.execute0(DefaultSQLExecutorCallback.java:75) at org.apache.shardingsphere.infra.executor.sql.resourced.jdbc.executor.impl.DefaultSQLExecutorCallback.execute(DefaultSQLExecutorCallback.java:57) at org.apache.shardingsphere.infra.executor.kernel.ExecutorKernel.syncExecute(ExecutorKernel.java:99) at org.apache.shardingsphere.infra.executor.kernel.ExecutorKernel.parallelExecute(ExecutorKernel.java:95) at org.apache.shardingsphere.infra.executor.kernel.ExecutorKernel.execute(ExecutorKernel.java:78) at org.apache.shardingsphere.infra.executor.sql.resourced.jdbc.executor.SQLExecutor.execute(SQLExecutor.java:66) at org.apache.shardingsphere.infra.executor.sql.resourced.jdbc.executor.SQLExecutor.execute(SQLExecutor.java:50) at org.apache.shardingsphere.driver.executor.PreparedStatementExecutor.executeQuery(PreparedStatementExecutor.java:57) at org.apache.shardingsphere.driver.jdbc.core.statement.ShardingSpherePreparedStatement.executeQuery(ShardingSpherePreparedStatement.java:159) at org.apache.shardingsphere.dbtest.engine.dql.GeneralDQLIT.assertExecuteQueryForPreparedStatement(GeneralDQLIT.java:83) at org.apache.shardingsphere.dbtest.engine.dql.GeneralDQLIT.assertExecuteQuery(GeneralDQLIT.java:62) at sun.reflect.GeneratedMethodAccessor44.invoke(Unknown Source) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27) at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) at org.junit.runners.ParentRunner.run(ParentRunner.java:363) at org.junit.runners.Suite.runChild(Suite.java:128) at org.junit.runners.Suite.runChild(Suite.java:27) at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26) at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27) at org.junit.runners.ParentRunner.run(ParentRunner.java:363) at org.junit.runners.Suite.runChild(Suite.java:128) at org.junit.runners.Suite.runChild(Suite.java:27) at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) at org.junit.runners.ParentRunner.run(ParentRunner.java:363) at org.junit.runner.JUnitCore.run(JUnitCore.java:137) at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:69) at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:33) at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:220) at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:53)  org.postgresql.util.PSQLException: ERROR: relation "t_order" does not exist   位置：30  at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2440) at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2183) at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:308) at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:441) at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:365) at org.postgresql.jdbc.PgPreparedStatement.executeWithFlags(PgPreparedStatement.java:143) at org.postgresql.jdbc.PgPreparedStatement.executeQuery(PgPreparedStatement.java:106) at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52) at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeQuery(HikariProxyPreparedStatement.java) at org.apache.shardingsphere.driver.executor.PreparedStatementExecutor$1.createQueryResult(PreparedStatementExecutor.java:70) at org.apache.shardingsphere.driver.executor.PreparedStatementExecutor$1.executeSQL(PreparedStatementExecutor.java:65) at org.apache.shardingsphere.driver.executor.PreparedStatementExecutor$1.executeSQL(PreparedStatementExecutor.java:61) at org.apache.shardingsphere.infra.executor.sql.resourced.jdbc.executor.impl.DefaultSQLExecutorCallback.execute0(DefaultSQLExecutorCallback.java:75) at org.apache.shardingsphere.infra.executor.sql.resourced.jdbc.executor.impl.DefaultSQLExecutorCallback.execute(DefaultSQLExecutorCallback.java:57) at org.apache.shardingsphere.infra.executor.kernel.ExecutorKernel.syncExecute(ExecutorKernel.java:99) at org.apache.shardingsphere.infra.executor.kernel.ExecutorKernel.parallelExecute(ExecutorKernel.java:95) at org.apache.shardingsphere.infra.executor.kernel.ExecutorKernel.execute(ExecutorKernel.java:78) at org.apache.shardingsphere.infra.executor.sql.resourced.jdbc.executor.SQLExecutor.execute(SQLExecutor.java:66) at org.apache.shardingsphere.infra.executor.sql.resourced.jdbc.executor.SQLExecutor.execute(SQLExecutor.java:50) at org.apache.shardingsphere.driver.executor.PreparedStatementExecutor.executeQuery(PreparedStatementExecutor.java:57) at org.apache.shardingsphere.driver.jdbc.core.statement.ShardingSpherePreparedStatement.executeQuery(ShardingSpherePreparedStatement.java:159) at org.apache.shardingsphere.dbtest.engine.dql.GeneralDQLIT.assertExecuteQueryForPreparedStatement(GeneralDQLIT.java:83) at org.apache.shardingsphere.dbtest.engine.dql.GeneralDQLIT.assertExecuteQuery(GeneralDQLIT.java:62) at sun.reflect.GeneratedMethodAccessor44.invoke(Unknown Source) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27) at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) at org.junit.runners.ParentRunner.run(ParentRunner.java:363) at org.junit.runners.Suite.runChild(Suite.java:128) at org.junit.runners.Suite.runChild(Suite.java:27) at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26) at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27) at org.junit.runners.ParentRunner.run(ParentRunner.java:363) at org.junit.runners.Suite.runChild(Suite.java:128) at org.junit.runners.Suite.runChild(Suite.java:27) at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) at org.junit.runners.ParentRunner.run(ParentRunner.java:363) at org.junit.runner.JUnitCore.run(JUnitCore.java:137) at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:69) at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:33) at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:220) at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:53)  [ERROR] 04:11:16.476 [main] o.a.s.dbtest.engine.SingleIT - ruleType=dbtbl_with_masterslave, databaseType=PostgreSQL, expectedDataFile=D:\0project\tuohai666-shardingsphere\shardingsphere-integration-test\shardingsphere-test-suite\target\test-classes\integrate\cases\dql/dataset/dbtbl_with_masterslave/select_inner_join.xml, sql=SELECT t_order_item.* FROM t_order JOIN t_order_item ON t_order.order_id = t_order_item.order_id WHERE t_order.order_id = ? org.postgresql.util.PSQLException: ERROR: relation "t_order" does not exist   位置：30 at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2440) at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2183) at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:308) at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:441) at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:365) at org.postgresql.jdbc.PgPreparedStatement.executeWithFlags(PgPreparedStatement.java:143) at org.postgresql.jdbc.PgPreparedStatement.execute(PgPreparedStatement.java:132) at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44) at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java) at org.apache.shardingsphere.driver.executor.PreparedStatementExecutor$3.executeSQL(PreparedStatementExecutor.java:114) at org.apache.shardingsphere.driver.executor.PreparedStatementExecutor$3.executeSQL(PreparedStatementExecutor.java:110) at org.apache.shardingsphere.infra.executor.sql.resourced.jdbc.executor.impl.DefaultSQLExecutorCallback.execute0(DefaultSQLExecutorCallback.java:75) at org.apache.shardingsphere.infra.executor.sql.resourced.jdbc.executor.impl.DefaultSQLExecutorCallback.execute(DefaultSQLExecutorCallback.java:57) at org.apache.shardingsphere.infra.executor.kernel.ExecutorKernel.syncExecute(ExecutorKernel.java:99) at org.apache.shardingsphere.infra.executor.kernel.ExecutorKernel.parallelExecute(ExecutorKernel.java:95) at org.apache.shardingsphere.infra.executor.kernel.ExecutorKernel.execute(ExecutorKernel.java:78) at org.apache.shardingsphere.infra.executor.sql.resourced.jdbc.executor.SQLExecutor.execute(SQLExecutor.java:66) at org.apache.shardingsphere.infra.executor.sql.resourced.jdbc.executor.SQLExecutor.execute(SQLExecutor.java:50) at org.apache.shardingsphere.driver.executor.PreparedStatementExecutor.execute(PreparedStatementExecutor.java:101) at org.apache.shardingsphere.driver.jdbc.core.statement.ShardingSpherePreparedStatement.execute(ShardingSpherePreparedStatement.java:199) at org.apache.shardingsphere.dbtest.engine.dql.GeneralDQLIT.assertExecuteForPreparedStatement(GeneralDQLIT.java:117) at org.apache.shardingsphere.dbtest.engine.dql.GeneralDQLIT.assertExecute(GeneralDQLIT.java:95) at sun.reflect.GeneratedMethodAccessor45.invoke(Unknown Source) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27) at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) at org.junit.runners.ParentRunner.run(ParentRunner.java:363) at org.junit.runners.Suite.runChild(Suite.java:128) at org.junit.runners.Suite.runChild(Suite.java:27) at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26) at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27) at org.junit.runners.ParentRunner.run(ParentRunner.java:363) at org.junit.runners.Suite.runChild(Suite.java:128) at org.junit.runners.Suite.runChild(Suite.java:27) at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) at org.junit.runners.ParentRunner.run(ParentRunner.java:363) at org.junit.runner.JUnitCore.run(JUnitCore.java:137) at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:69) at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:33) at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:220) at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:53)  org.postgresql.util.PSQLException: ERROR: relation "t_order" does not exist   位置：30  at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2440) at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2183) at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:308) at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:441) at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:365) at org.postgresql.jdbc.PgPreparedStatement.executeWithFlags(PgPreparedStatement.java:143) at org.postgresql.jdbc.PgPreparedStatement.execute(PgPreparedStatement.java:132) at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44) at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java) at org.apache.shardingsphere.driver.executor.PreparedStatementExecutor$3.executeSQL(PreparedStatementExecutor.java:114) at org.apache.shardingsphere.driver.executor.PreparedStatementExecutor$3.executeSQL(PreparedStatementExecutor.java:110) at org.apache.shardingsphere.infra.executor.sql.resourced.jdbc.executor.impl.DefaultSQLExecutorCallback.execute0(DefaultSQLExecutorCallback.java:75) at org.apache.shardingsphere.infra.executor.sql.resourced.jdbc.executor.impl.DefaultSQLExecutorCallback.execute(DefaultSQLExecutorCallback.java:57) at org.apache.shardingsphere.infra.executor.kernel.ExecutorKernel.syncExecute(ExecutorKernel.java:99) at org.apache.shardingsphere.infra.executor.kernel.ExecutorKernel.parallelExecute(ExecutorKernel.java:95) at org.apache.shardingsphere.infra.executor.kernel.ExecutorKernel.execute(ExecutorKernel.java:78) at org.apache.shardingsphere.infra.executor.sql.resourced.jdbc.executor.SQLExecutor.execute(SQLExecutor.java:66) at org.apache.shardingsphere.infra.executor.sql.resourced.jdbc.executor.SQLExecutor.execute(SQLExecutor.java:50) at org.apache.shardingsphere.driver.executor.PreparedStatementExecutor.execute(PreparedStatementExecutor.java:101) at org.apache.shardingsphere.driver.jdbc.core.statement.ShardingSpherePreparedStatement.execute(ShardingSpherePreparedStatement.java:199) at org.apache.shardingsphere.dbtest.engine.dql.GeneralDQLIT.assertExecuteForPreparedStatement(GeneralDQLIT.java:117) at org.apache.shardingsphere.dbtest.engine.dql.GeneralDQLIT.assertExecute(GeneralDQLIT.java:95) at sun.reflect.GeneratedMethodAccessor45.invoke(Unknown Source) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27) at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) at org.junit.runners.ParentRunner.run(ParentRunner.java:363) at org.junit.runners.Suite.runChild(Suite.java:128) at org.junit.runners.Suite.runChild(Suite.java:27) at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26) at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27) at org.junit.runners.ParentRunner.run(ParentRunner.java:363) at org.junit.runners.Suite.runChild(Suite.java:128) at org.junit.runners.Suite.runChild(Suite.java:27) at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) at org.junit.runners.ParentRunner.run(ParentRunner.java:363) at org.junit.runner.JUnitCore.run(JUnitCore.java:137) at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:69) at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:33) at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:220) at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:53)  [ERROR] 04:11:16.735 [main] o.a.s.dbtest.engine.SingleIT - ruleType=tbl, databaseType=PostgreSQL, expectedDataFile=D:\0project\tuohai666-shardingsphere\shardingsphere-integration-test\shardingsphere-test-suite\target\test-classes\integrate\cases\dql/dataset/tbl/select_inner_join.xml, sql=SELECT i.* FROM t_order o JOIN t_order_item i USING(order_id) WHERE o.order_id = 1000 org.postgresql.util.PSQLException: ERROR: relation "t_order" does not exist   位置：17 at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2440) at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2183) at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:308) at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:441) at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:365) at org.postgresql.jdbc.PgStatement.executeWithFlags(PgStatement.java:307) at org.postgresql.jdbc.PgStatement.executeCachedSql(PgStatement.java:293) at org.postgresql.jdbc.PgStatement.executeWithFlags(PgStatement.java:270) at org.postgresql.jdbc.PgStatement.executeQuery(PgStatement.java:224) at com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111) at com.zaxxer.hikari.pool.HikariProxyStatement.executeQuery(HikariProxyStatement.java) at org.apache.shardingsphere.driver.executor.StatementExecutor$1.createQueryResult(StatementExecutor.java:63) at org.apache.shardingsphere.driver.executor.StatementExecutor$1.executeSQL(StatementExecutor.java:59) at org.apache.shardingsphere.driver.executor.StatementExecutor$1.executeSQL(StatementExecutor.java:55) at org.apache.shardingsphere.infra.executor.sql.resourced.jdbc.executor.impl.DefaultSQLExecutorCallback.execute0(DefaultSQLExecutorCallback.java:75) at org.apache.shardingsphere.infra.executor.sql.resourced.jdbc.executor.impl.DefaultSQLExecutorCallback.execute(DefaultSQLExecutorCallback.java:57) at org.apache.shardingsphere.infra.executor.kernel.ExecutorKernel.syncExecute(ExecutorKernel.java:99) at org.apache.shardingsphere.infra.executor.kernel.ExecutorKernel.parallelExecute(ExecutorKernel.java:95) at org.apache.shardingsphere.infra.executor.kernel.ExecutorKernel.execute(ExecutorKernel.java:78) at org.apache.shardingsphere.infra.executor.sql.resourced.jdbc.executor.SQLExecutor.execute(SQLExecutor.java:66) at org.apache.shardingsphere.infra.executor.sql.resourced.jdbc.executor.SQLExecutor.execute(SQLExecutor.java:50) at org.apache.shardingsphere.driver.executor.StatementExecutor.executeQuery(StatementExecutor.java:67) at org.apache.shardingsphere.driver.jdbc.core.statement.ShardingSphereStatement.executeQuery(ShardingSphereStatement.java:129) at org.apache.shardingsphere.dbtest.engine.dql.GeneralDQLIT.assertExecuteQueryForStatement(GeneralDQLIT.java:73) at org.apache.shardingsphere.dbtest.engine.dql.GeneralDQLIT.assertExecuteQuery(GeneralDQLIT.java:60) at sun.reflect.GeneratedMethodAccessor44.invoke(Unknown Source) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27) at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) at org.junit.runners.ParentRunner.run(ParentRunner.java:363) at org.junit.runners.Suite.runChild(Suite.java:128) at org.junit.runners.Suite.runChild(Suite.java:27) at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26) at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27) at org.junit.runners.ParentRunner.run(ParentRunner.java:363) at org.junit.runners.Suite.runChild(Suite.java:128) at org.junit.runners.Suite.runChild(Suite.java:27) at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) at org.junit.runners.ParentRunner.run(ParentRunner.java:363) at org.junit.runner.JUnitCore.run(JUnitCore.java:137) at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:69) at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:33) at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:220) at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:53)  org.postgresql.util.PSQLException: ERROR: relation "t_order" does not exist   位置：17  at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2440) at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2183) at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:308) at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:441) at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:365) at org.postgresql.jdbc.PgStatement.executeWithFlags(PgStatement.java:307) at org.postgresql.jdbc.PgStatement.executeCachedSql(PgStatement.java:293) at org.postgresql.jdbc.PgStatement.executeWithFlags(PgStatement.java:270) at org.postgresql.jdbc.PgStatement.executeQuery(PgStatement.java:224) at com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111) at com.zaxxer.hikari.pool.HikariProxyStatement.executeQuery(HikariProxyStatement.java) at org.apache.shardingsphere.driver.executor.StatementExecutor$1.createQueryResult(StatementExecutor.java:63) at org.apache.shardingsphere.driver.executor.StatementExecutor$1.executeSQL(StatementExecutor.java:59) at org.apache.shardingsphere.driver.executor.StatementExecutor$1.executeSQL(StatementExecutor.java:55) at org.apache.shardingsphere.infra.executor.sql.resourced.jdbc.executor.impl.DefaultSQLExecutorCallback.execute0(DefaultSQLExecutorCallback.java:75) at org.apache.shardingsphere.infra.executor.sql.resourced.jdbc.executor.impl.DefaultSQLExecutorCallback.execute(DefaultSQLExecutorCallback.java:57) at org.apache.shardingsphere.infra.executor.kernel.ExecutorKernel.syncExecute(ExecutorKernel.java:99) at org.apache.shardingsphere.infra.executor.kernel.ExecutorKernel.parallelExecute(ExecutorKernel.java:95) at org.apache.shardingsphere.infra.executor.kernel.ExecutorKernel.execute(ExecutorKernel.java:78) at org.apache.shardingsphere.infra.executor.sql.resourced.jdbc.executor.SQLExecutor.execute(SQLExecutor.java:66) at org.apache.shardingsphere.infra.executor.sql.resourced.jdbc.executor.SQLExecutor.execute(SQLExecutor.java:50) at org.apache.shardingsphere.driver.executor.StatementExecutor.executeQuery(StatementExecutor.java:67) at org.apache.shardingsphere.driver.jdbc.core.statement.ShardingSphereStatement.executeQuery(ShardingSphereStatement.java:129) at org.apache.shardingsphere.dbtest.engine.dql.GeneralDQLIT.assertExecuteQueryForStatement(GeneralDQLIT.java:73) at org.apache.shardingsphere.dbtest.engine.dql.GeneralDQLIT.assertExecuteQuery(GeneralDQLIT.java:60) at sun.reflect.GeneratedMethodAccessor44.invoke(Unknown Source) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27) at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) at org.junit.runners.ParentRunner.run(ParentRunner.java:363) at org.junit.runners.Suite.runChild(Suite.java:128) at org.junit.runners.Suite.runChild(Suite.java:27) at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26) at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27) at org.junit.runners.ParentRunner.run(ParentRunner.java:363) at org.junit.runners.Suite.runChild(Suite.java:128) at org.junit.runners.Suite.runChild(Suite.java:27) at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) at org.junit.runners.ParentRunner.run(ParentRunner.java:363) at org.junit.runner.JUnitCore.run(JUnitCore.java:137) at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:69) at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:33) at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:220) at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:53)  [ERROR] 04:11:16.783 [main] o.a.s.dbtest.engine.SingleIT - ruleType=tbl, databaseType=PostgreSQL, expectedDataFile=D:\0project\tuohai666-shardingsphere\shardingsphere-integration-test\shardingsphere-test-suite\target\test-classes\integrate\cases\dql/dataset/tbl/select_inner_join.xml, sql=SELECT i.* FROM t_order o JOIN t_order_item i USING(order_id) WHERE o.order_id = 1000 org.postgresql.util.PSQLException: ERROR: relation "t_order" does not exist   位置：17 at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2440) at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2183) at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:308) at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:441) at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:365) at org.postgresql.jdbc.PgStatement.executeWithFlags(PgStatement.java:307) at org.postgresql.jdbc.PgStatement.executeCachedSql(PgStatement.java:293) at org.postgresql.jdbc.PgStatement.executeWithFlags(PgStatement.java:270) at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:266) at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:95) at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java) at org.apache.shardingsphere.driver.executor.StatementExecutor$3.executeSQL(StatementExecutor.java:184) at org.apache.shardingsphere.driver.executor.StatementExecutor$3.executeSQL(StatementExecutor.java:180) at org.apache.shardingsphere.infra.executor.sql.resourced.jdbc.executor.impl.DefaultSQLExecutorCallback.execute0(DefaultSQLExecutorCallback.java:75) at org.apache.shardingsphere.infra.executor.sql.resourced.jdbc.executor.impl.DefaultSQLExecutorCallback.execute(DefaultSQLExecutorCallback.java:57) at org.apache.shardingsphere.infra.executor.kernel.ExecutorKernel.syncExecute(ExecutorKernel.java:99) at org.apache.shardingsphere.infra.executor.kernel.ExecutorKernel.parallelExecute(ExecutorKernel.java:95) at org.apache.shardingsphere.infra.executor.kernel.ExecutorKernel.execute(ExecutorKernel.java:78) at org.apache.shardingsphere.infra.executor.sql.resourced.jdbc.executor.SQLExecutor.execute(SQLExecutor.java:66) at org.apache.shardingsphere.infra.executor.sql.resourced.jdbc.executor.SQLExecutor.execute(SQLExecutor.java:50) at org.apache.shardingsphere.driver.executor.StatementExecutor.execute(StatementExecutor.java:187) at org.apache.shardingsphere.driver.executor.StatementExecutor.execute(StatementExecutor.java:135) at org.apache.shardingsphere.driver.jdbc.core.statement.ShardingSphereStatement.execute(ShardingSphereStatement.java:218) at org.apache.shardingsphere.dbtest.engine.dql.GeneralDQLIT.assertExecuteForStatement(GeneralDQLIT.java:105) at org.apache.shardingsphere.dbtest.engine.dql.GeneralDQLIT.assertExecute(GeneralDQLIT.java:93) at sun.reflect.GeneratedMethodAccessor45.invoke(Unknown Source) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27) at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) at org.junit.runners.ParentRunner.run(ParentRunner.java:363) at org.junit.runners.Suite.runChild(Suite.java:128) at org.junit.runners.Suite.runChild(Suite.java:27) at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26) at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27) at org.junit.runners.ParentRunner.run(ParentRunner.java:363) at org.junit.runners.Suite.runChild(Suite.java:128) at org.junit.runners.Suite.runChild(Suite.java:27) at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) at org.junit.runners.ParentRunner.run(ParentRunner.java:363) at org.junit.runner.JUnitCore.run(JUnitCore.java:137) at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:69) at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:33) at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:220) at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:53)  org.postgresql.util.PSQLException: ERROR: relation "t_order" does not exist   位置：17  at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2440) at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2183) at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:308) at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:441) at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:365) at org.postgresql.jdbc.PgStatement.executeWithFlags(PgStatement.java:307) at org.postgresql.jdbc.PgStatement.executeCachedSql(PgStatement.java:293) at org.postgresql.jdbc.PgStatement.executeWithFlags(PgStatement.java:270) at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:266) at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:95) at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java) at org.apache.shardingsphere.driver.executor.StatementExecutor$3.executeSQL(StatementExecutor.java:184) at org.apache.shardingsphere.driver.executor.StatementExecutor$3.executeSQL(StatementExecutor.java:180) at org.apache.shardingsphere.infra.executor.sql.resourced.jdbc.executor.impl.DefaultSQLExecutorCallback.execute0(DefaultSQLExecutorCallback.java:75) at org.apache.shardingsphere.infra.executor.sql.resourced.jdbc.executor.impl.DefaultSQLExecutorCallback.execute(DefaultSQLExecutorCallback.java:57) at org.apache.shardingsphere.infra.executor.kernel.ExecutorKernel.syncExecute(ExecutorKernel.java:99) at org.apache.shardingsphere.infra.executor.kernel.ExecutorKernel.parallelExecute(ExecutorKernel.java:95) at org.apache.shardingsphere.infra.executor.kernel.ExecutorKernel.execute(ExecutorKernel.java:78) at org.apache.shardingsphere.infra.executor.sql.resourced.jdbc.executor.SQLExecutor.execute(SQLExecutor.java:66) at org.apache.shardingsphere.infra.executor.sql.resourced.jdbc.executor.SQLExecutor.execute(SQLExecutor.java:50) at org.apache.shardingsphere.driver.executor.StatementExecutor.execute(StatementExecutor.java:187) at org.apache.shardingsphere.driver.executor.StatementExecutor.execute(StatementExecutor.java:135) at org.apache.shardingsphere.driver.jdbc.core.statement.ShardingSphereStatement.execute(ShardingSphereStatement.java:218) at org.apache.shardingsphere.dbtest.engine.dql.GeneralDQLIT.assertExecuteForStatement(GeneralDQLIT.java:105) at org.apache.shardingsphere.dbtest.engine.dql.GeneralDQLIT.assertExecute(GeneralDQLIT.java:93) at sun.reflect.GeneratedMethodAccessor45.invoke(Unknown Source) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27) at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) at org.junit.runners.ParentRunner.run(ParentRunner.java:363) at org.junit.runners.Suite.runChild(Suite.java:128) at org.junit.runners.Suite.runChild(Suite.java:27) at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26) at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27) at org.junit.runners.ParentRunner.run(ParentRunner.java:363) at org.junit.runners.Suite.runChild(Suite.java:128) at org.junit.runners.Suite.runChild(Suite.java:27) at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) at org.junit.runners.ParentRunner.run(ParentRunner.java:363) at org.junit.runner.JUnitCore.run(JUnitCore.java:137) at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:69) at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:33) at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:220) at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:53)  [ERROR] 04:11:16.888 [main] o.a.s.dbtest.engine.SingleIT - ruleType=dbtbl_with_masterslave, databaseType=PostgreSQL, expectedDataFile=D:\0project\tuohai666-shardingsphere\shardingsphere-integration-test\shardingsphere-test-suite\target\test-classes\integrate\cases\dql/dataset/dbtbl_with_masterslave/select_inner_join.xml, sql=SELECT i.* FROM t_order o JOIN t_order_item i USING(order_id) WHERE o.order_id = 1000 org.postgresql.util.PSQLException: ERROR: relation "t_order" does not exist   位置：17 at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2440) at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2183) at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:308) at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:441) at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:365) at org.postgresql.jdbc.PgStatement.executeWithFlags(PgStatement.java:307) at org.postgresql.jdbc.PgStatement.executeCachedSql(PgStatement.java:293) at org.postgresql.jdbc.PgStatement.executeWithFlags(PgStatement.java:270) at org.postgresql.jdbc.PgStatement.executeQuery(PgStatement.java:224) at com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111) at com.zaxxer.hikari.pool.HikariProxyStatement.executeQuery(HikariProxyStatement.java) at org.apache.shardingsphere.driver.executor.StatementExecutor$1.createQueryResult(StatementExecutor.java:63) at org.apache.shardingsphere.driver.executor.StatementExecutor$1.executeSQL(StatementExecutor.java:59) at org.apache.shardingsphere.driver.executor.StatementExecutor$1.executeSQL(StatementExecutor.java:55) at org.apache.shardingsphere.infra.executor.sql.resourced.jdbc.executor.impl.DefaultSQLExecutorCallback.execute0(DefaultSQLExecutorCallback.java:75) at org.apache.shardingsphere.infra.executor.sql.resourced.jdbc.executor.impl.DefaultSQLExecutorCallback.execute(DefaultSQLExecutorCallback.java:57) at org.apache.shardingsphere.infra.executor.kernel.ExecutorKernel.syncExecute(ExecutorKernel.java:99) at org.apache.shardingsphere.infra.executor.kernel.ExecutorKernel.parallelExecute(ExecutorKernel.java:95) at org.apache.shardingsphere.infra.executor.kernel.ExecutorKernel.execute(ExecutorKernel.java:78) at org.apache.shardingsphere.infra.executor.sql.resourced.jdbc.executor.SQLExecutor.execute(SQLExecutor.java:66) at org.apache.shardingsphere.infra.executor.sql.resourced.jdbc.executor.SQLExecutor.execute(SQLExecutor.java:50) at org.apache.shardingsphere.driver.executor.StatementExecutor.executeQuery(StatementExecutor.java:67) at org.apache.shardingsphere.driver.jdbc.core.statement.ShardingSphereStatement.executeQuery(ShardingSphereStatement.java:129) at org.apache.shardingsphere.dbtest.engine.dql.GeneralDQLIT.assertExecuteQueryForStatement(GeneralDQLIT.java:73) at org.apache.shardingsphere.dbtest.engine.dql.GeneralDQLIT.assertExecuteQuery(GeneralDQLIT.java:60) at sun.reflect.GeneratedMethodAccessor44.invoke(Unknown Source) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27) at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) at org.junit.runners.ParentRunner.run(ParentRunner.java:363) at org.junit.runners.Suite.runChild(Suite.java:128) at org.junit.runners.Suite.runChild(Suite.java:27) at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26) at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27) at org.junit.runners.ParentRunner.run(ParentRunner.java:363) at org.junit.runners.Suite.runChild(Suite.java:128) at org.junit.runners.Suite.runChild(Suite.java:27) at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) at org.junit.runners.ParentRunner.run(ParentRunner.java:363) at org.junit.runner.JUnitCore.run(JUnitCore.java:137) at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:69) at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:33) at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:220) at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:53)  org.postgresql.util.PSQLException: ERROR: relation "t_order" does not exist   位置：17  at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2440) at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2183) at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:308) at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:441) at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:365) at org.postgresql.jdbc.PgStatement.executeWithFlags(PgStatement.java:307) at org.postgresql.jdbc.PgStatement.executeCachedSql(PgStatement.java:293) at org.postgresql.jdbc.PgStatement.executeWithFlags(PgStatement.java:270) at org.postgresql.jdbc.PgStatement.executeQuery(PgStatement.java:224) at com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111) at com.zaxxer.hikari.pool.HikariProxyStatement.executeQuery(HikariProxyStatement.java) at org.apache.shardingsphere.driver.executor.StatementExecutor$1.createQueryResult(StatementExecutor.java:63) at org.apache.shardingsphere.driver.executor.StatementExecutor$1.executeSQL(StatementExecutor.java:59) at org.apache.shardingsphere.driver.executor.StatementExecutor$1.executeSQL(StatementExecutor.java:55) at org.apache.shardingsphere.infra.executor.sql.resourced.jdbc.executor.impl.DefaultSQLExecutorCallback.execute0(DefaultSQLExecutorCallback.java:75) at org.apache.shardingsphere.infra.executor.sql.resourced.jdbc.executor.impl.DefaultSQLExecutorCallback.execute(DefaultSQLExecutorCallback.java:57) at org.apache.shardingsphere.infra.executor.kernel.ExecutorKernel.syncExecute(ExecutorKernel.java:99) at org.apache.shardingsphere.infra.executor.kernel.ExecutorKernel.parallelExecute(ExecutorKernel.java:95) at org.apache.shardingsphere.infra.executor.kernel.ExecutorKernel.execute(ExecutorKernel.java:78) at org.apache.shardingsphere.infra.executor.sql.resourced.jdbc.executor.SQLExecutor.execute(SQLExecutor.java:66) at org.apache.shardingsphere.infra.executor.sql.resourced.jdbc.executor.SQLExecutor.execute(SQLExecutor.java:50) at org.apache.shardingsphere.driver.executor.StatementExecutor.executeQuery(StatementExecutor.java:67) at org.apache.shardingsphere.driver.jdbc.core.statement.ShardingSphereStatement.executeQuery(ShardingSphereStatement.java:129) at org.apache.shardingsphere.dbtest.engine.dql.GeneralDQLIT.assertExecuteQueryForStatement(GeneralDQLIT.java:73) at org.apache.shardingsphere.dbtest.engine.dql.GeneralDQLIT.assertExecuteQuery(GeneralDQLIT.java:60) at sun.reflect.GeneratedMethodAccessor44.invoke(Unknown Source) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27) at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) at org.junit.runners.ParentRunner.run(ParentRunner.java:363) at org.junit.runners.Suite.runChild(Suite.java:128) at org.junit.runners.Suite.runChild(Suite.java:27) at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26) at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27) at org.junit.runners.ParentRunner.run(ParentRunner.java:363) at org.junit.runners.Suite.runChild(Suite.java:128) at org.junit.runners.Suite.runChild(Suite.java:27) at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) at org.junit.runners.ParentRunner.run(ParentRunner.java:363) at org.junit.runner.JUnitCore.run(JUnitCore.java:137) at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:69) at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:33) at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:220) at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:53)  [ERROR] 04:11:16.991 [main] o.a.s.dbtest.engine.SingleIT - ruleType=dbtbl_with_masterslave, databaseType=PostgreSQL, expectedDataFile=D:\0project\tuohai666-shardingsphere\shardingsphere-integration-test\shardingsphere-test-suite\target\test-classes\integrate\cases\dql/dataset/dbtbl_with_masterslave/select_inner_join.xml, sql=SELECT i.* FROM t_order o JOIN t_order_item i USING(order_id) WHERE o.order_id = 1000 org.postgresql.util.PSQLException: ERROR: relation "t_order" does not exist   位置：17 at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2440) at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2183) at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:308) at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:441) at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:365) at org.postgresql.jdbc.PgStatement.executeWithFlags(PgStatement.java:307) at org.postgresql.jdbc.PgStatement.executeCachedSql(PgStatement.java:293) at org.postgresql.jdbc.PgStatement.executeWithFlags(PgStatement.java:270) at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:266) at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:95) at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java) at org.apache.shardingsphere.driver.executor.StatementExecutor$3.executeSQL(StatementExecutor.java:184) at org.apache.shardingsphere.driver.executor.StatementExecutor$3.executeSQL(StatementExecutor.java:180) at org.apache.shardingsphere.infra.executor.sql.resourced.jdbc.executor.impl.DefaultSQLExecutorCallback.execute0(DefaultSQLExecutorCallback.java:75) at org.apache.shardingsphere.infra.executor.sql.resourced.jdbc.executor.impl.DefaultSQLExecutorCallback.execute(DefaultSQLExecutorCallback.java:57) at org.apache.shardingsphere.infra.executor.kernel.ExecutorKernel.syncExecute(ExecutorKernel.java:99) at org.apache.shardingsphere.infra.executor.kernel.ExecutorKernel.parallelExecute(ExecutorKernel.java:95) at org.apache.shardingsphere.infra.executor.kernel.ExecutorKernel.execute(ExecutorKernel.java:78) at org.apache.shardingsphere.infra.executor.sql.resourced.jdbc.executor.SQLExecutor.execute(SQLExecutor.java:66) at org.apache.shardingsphere.infra.executor.sql.resourced.jdbc.executor.SQLExecutor.execute(SQLExecutor.java:50) at org.apache.shardingsphere.driver.executor.StatementExecutor.execute(StatementExecutor.java:187) at org.apache.shardingsphere.driver.executor.StatementExecutor.execute(StatementExecutor.java:135) at org.apache.shardingsphere.driver.jdbc.core.statement.ShardingSphereStatement.execute(ShardingSphereStatement.java:218) at org.apache.shardingsphere.dbtest.engine.dql.GeneralDQLIT.assertExecuteForStatement(GeneralDQLIT.java:105) at org.apache.shardingsphere.dbtest.engine.dql.GeneralDQLIT.assertExecute(GeneralDQLIT.java:93) at sun.reflect.GeneratedMethodAccessor45.invoke(Unknown Source) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27) at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) at org.junit.runners.ParentRunner.run(ParentRunner.java:363) at org.junit.runners.Suite.runChild(Suite.java:128) at org.junit.runners.Suite.runChild(Suite.java:27) at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26) at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27) at org.junit.runners.ParentRunner.run(ParentRunner.java:363) at org.junit.runners.Suite.runChild(Suite.java:128) at org.junit.runners.Suite.runChild(Suite.java:27) at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) at org.junit.runners.ParentRunner.run(ParentRunner.java:363) at org.junit.runner.JUnitCore.run(JUnitCore.java:137) at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:69) at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:33) at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:220) at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:53)  org.postgresql.util.PSQLException: ERROR: relation "t_order" does not exist   位置：17  at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2440) at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2183) at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:308) at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:441) at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:365) at org.postgresql.jdbc.PgStatement.executeWithFlags(PgStatement.java:307) at org.postgresql.jdbc.PgStatement.executeCachedSql(PgStatement.java:293) at org.postgresql.jdbc.PgStatement.executeWithFlags(PgStatement.java:270) at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:266) at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:95) at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java) at org.apache.shardingsphere.driver.executor.StatementExecutor$3.executeSQL(StatementExecutor.java:184) at org.apache.shardingsphere.driver.executor.StatementExecutor$3.executeSQL(StatementExecutor.java:180) at org.apache.shardingsphere.infra.executor.sql.resourced.jdbc.executor.impl.DefaultSQLExecutorCallback.execute0(DefaultSQLExecutorCallback.java:75) at org.apache.shardingsphere.infra.executor.sql.resourced.jdbc.executor.impl.DefaultSQLExecutorCallback.execute(DefaultSQLExecutorCallback.java:57) at org.apache.shardingsphere.infra.executor.kernel.ExecutorKernel.syncExecute(ExecutorKernel.java:99) at org.apache.shardingsphere.infra.executor.kernel.ExecutorKernel.parallelExecute(ExecutorKernel.java:95) at org.apache.shardingsphere.infra.executor.kernel.ExecutorKernel.execute(ExecutorKernel.java:78) at org.apache.shardingsphere.infra.executor.sql.resourced.jdbc.executor.SQLExecutor.execute(SQLExecutor.java:66) at org.apache.shardingsphere.infra.executor.sql.resourced.jdbc.executor.SQLExecutor.execute(SQLExecutor.java:50) at org.apache.shardingsphere.driver.executor.StatementExecutor.execute(StatementExecutor.java:187) at org.apache.shardingsphere.driver.executor.StatementExecutor.execute(StatementExecutor.java:135) at org.apache.shardingsphere.driver.jdbc.core.statement.ShardingSphereStatement.execute(ShardingSphereStatement.java:218) at org.apache.shardingsphere.dbtest.engine.dql.GeneralDQLIT.assertExecuteForStatement(GeneralDQLIT.java:105) at org.apache.shardingsphere.dbtest.engine.dql.GeneralDQLIT.assertExecute(GeneralDQLIT.java:93) at sun.reflect.GeneratedMethodAccessor45.invoke(Unknown Source) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27) at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) at org.junit.runners.ParentRunner.run(ParentRunner.java:363) at org.junit.runners.Suite.runChild(Suite.java:128) at org.junit.runners.Suite.runChild(Suite.java:27) at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26) at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27) at org.junit.runners.ParentRunner.run(ParentRunner.java:363) at org.junit.runners.Suite.runChild(Suite.java:128) at org.junit.runners.Suite.runChild(Suite.java:27) at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) at org.junit.runners.ParentRunner.run(ParentRunner.java:363) at org.junit.runner.JUnitCore.run(JUnitCore.java:137) at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:69) at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:33) at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:220) at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:53)  [ERROR] 04:11:17.255 [main] o.a.s.dbtest.engine.SingleIT - ruleType=tbl, databaseType=PostgreSQL, expectedDataFile=D:\0project\tuohai666-shardingsphere\shardingsphere-integration-test\shardingsphere-test-suite\target\test-classes\integrate\cases\dql/dataset/tbl/select_inner_join.xml, sql=SELECT i.* FROM t_order o JOIN t_order_item i USING(order_id) WHERE o.order_id = ? org.postgresql.util.PSQLException: ERROR: relation "t_order" does not exist   位置：17 at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2440) at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2183) at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:308) at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:441) at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:365) at org.postgresql.jdbc.PgPreparedStatement.executeWithFlags(PgPreparedStatement.java:143) at org.postgresql.jdbc.PgPreparedStatement.executeQuery(PgPreparedStatement.java:106) at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52) at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeQuery(HikariProxyPreparedStatement.java) at org.apache.shardingsphere.driver.executor.PreparedStatementExecutor$1.createQueryResult(PreparedStatementExecutor.java:70) at org.apache.shardingsphere.driver.executor.PreparedStatementExecutor$1.executeSQL(PreparedStatementExecutor.java:65) at org.apache.shardingsphere.driver.executor.PreparedStatementExecutor$1.executeSQL(PreparedStatementExecutor.java:61) at org.apache.shardingsphere.infra.executor.sql.resourced.jdbc.executor.impl.DefaultSQLExecutorCallback.execute0(DefaultSQLExecutorCallback.java:75) at org.apache.shardingsphere.infra.executor.sql.resourced.jdbc.executor.impl.DefaultSQLExecutorCallback.execute(DefaultSQLExecutorCallback.java:57) at org.apache.shardingsphere.infra.executor.kernel.ExecutorKernel.syncExecute(ExecutorKernel.java:99) at org.apache.shardingsphere.infra.executor.kernel.ExecutorKernel.parallelExecute(ExecutorKernel.java:95) at org.apache.shardingsphere.infra.executor.kernel.ExecutorKernel.execute(ExecutorKernel.java:78) at org.apache.shardingsphere.infra.executor.sql.resourced.jdbc.executor.SQLExecutor.execute(SQLExecutor.java:66) at org.apache.shardingsphere.infra.executor.sql.resourced.jdbc.executor.SQLExecutor.execute(SQLExecutor.java:50) at org.apache.shardingsphere.driver.executor.PreparedStatementExecutor.executeQuery(PreparedStatementExecutor.java:57) at org.apache.shardingsphere.driver.jdbc.core.statement.ShardingSpherePreparedStatement.executeQuery(ShardingSpherePreparedStatement.java:159) at org.apache.shardingsphere.dbtest.engine.dql.GeneralDQLIT.assertExecuteQueryForPreparedStatement(GeneralDQLIT.java:83) at org.apache.shardingsphere.dbtest.engine.dql.GeneralDQLIT.assertExecuteQuery(GeneralDQLIT.java:62) at sun.reflect.GeneratedMethodAccessor44.invoke(Unknown Source) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27) at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) at org.junit.runners.ParentRunner.run(ParentRunner.java:363) at org.junit.runners.Suite.runChild(Suite.java:128) at org.junit.runners.Suite.runChild(Suite.java:27) at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26) at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27) at org.junit.runners.ParentRunner.run(ParentRunner.java:363) at org.junit.runners.Suite.runChild(Suite.java:128) at org.junit.runners.Suite.runChild(Suite.java:27) at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) at org.junit.runners.ParentRunner.run(ParentRunner.java:363) at org.junit.runner.JUnitCore.run(JUnitCore.java:137) at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:69) at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:33) at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:220) at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:53)  org.postgresql.util.PSQLException: ERROR: relation "t_order" does not exist   位置：17  at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2440) at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2183) at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:308) at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:441) at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:365) at org.postgresql.jdbc.PgPreparedStatement.executeWithFlags(PgPreparedStatement.java:143) at org.postgresql.jdbc.PgPreparedStatement.executeQuery(PgPreparedStatement.java:106) at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52) at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeQuery(HikariProxyPreparedStatement.java) at org.apache.shardingsphere.driver.executor.PreparedStatementExecutor$1.createQueryResult(PreparedStatementExecutor.java:70) at org.apache.shardingsphere.driver.executor.PreparedStatementExecutor$1.executeSQL(PreparedStatementExecutor.java:65) at org.apache.shardingsphere.driver.executor.PreparedStatementExecutor$1.executeSQL(PreparedStatementExecutor.java:61) at org.apache.shardingsphere.infra.executor.sql.resourced.jdbc.executor.impl.DefaultSQLExecutorCallback.execute0(DefaultSQLExecutorCallback.java:75) at org.apache.shardingsphere.infra.executor.sql.resourced.jdbc.executor.impl.DefaultSQLExecutorCallback.execute(DefaultSQLExecutorCallback.java:57) at org.apache.shardingsphere.infra.executor.kernel.ExecutorKernel.syncExecute(ExecutorKernel.java:99) at org.apache.shardingsphere.infra.executor.kernel.ExecutorKernel.parallelExecute(ExecutorKernel.java:95) at org.apache.shardingsphere.infra.executor.kernel.ExecutorKernel.execute(ExecutorKernel.java:78) at org.apache.shardingsphere.infra.executor.sql.resourced.jdbc.executor.SQLExecutor.execute(SQLExecutor.java:66) at org.apache.shardingsphere.infra.executor.sql.resourced.jdbc.executor.SQLExecutor.execute(SQLExecutor.java:50) at org.apache.shardingsphere.driver.executor.PreparedStatementExecutor.executeQuery(PreparedStatementExecutor.java:57) at org.apache.shardingsphere.driver.jdbc.core.statement.ShardingSpherePreparedStatement.executeQuery(ShardingSpherePreparedStatement.java:159) at org.apache.shardingsphere.dbtest.engine.dql.GeneralDQLIT.assertExecuteQueryForPreparedStatement(GeneralDQLIT.java:83) at org.apache.shardingsphere.dbtest.engine.dql.GeneralDQLIT.assertExecuteQuery(GeneralDQLIT.java:62) at sun.reflect.GeneratedMethodAccessor44.invoke(Unknown Source) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27) at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) at org.junit.runners.ParentRunner.run(ParentRunner.java:363) at org.junit.runners.Suite.runChild(Suite.java:128) at org.junit.runners.Suite.runChild(Suite.java:27) at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26) at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27) at org.junit.runners.ParentRunner.run(ParentRunner.java:363) at org.junit.runners.Suite.runChild(Suite.java:128) at org.junit.runners.Suite.runChild(Suite.java:27) at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) at org.junit.runners.ParentRunner.run(ParentRunner.java:363) at org.junit.runner.JUnitCore.run(JUnitCore.java:137) at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:69) at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:33) at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:220) at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:53)  [ERROR] 04:11:17.304 [main] o.a.s.dbtest.engine.SingleIT - ruleType=tbl, databaseType=PostgreSQL, expectedDataFile=D:\0project\tuohai666-shardingsphere\shardingsphere-integration-test\shardingsphere-test-suite\target\test-classes\integrate\cases\dql/dataset/tbl/select_inner_join.xml, sql=SELECT i.* FROM t_order o JOIN t_order_item i USING(order_id) WHERE o.order_id = ? org.postgresql.util.PSQLException: ERROR: relation "t_order" does not exist   位置：17 at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2440) at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2183) at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:308) at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:441) at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:365) at org.postgresql.jdbc.PgPreparedStatement.executeWithFlags(PgPreparedStatement.java:143) at org.postgresql.jdbc.PgPreparedStatement.execute(PgPreparedStatement.java:132) at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44) at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java) at org.apache.shardingsphere.driver.executor.PreparedStatementExecutor$3.executeSQL(PreparedStatementExecutor.java:114) at org.apache.shardingsphere.driver.executor.PreparedStatementExecutor$3.executeSQL(PreparedStatementExecutor.java:110) at org.apache.shardingsphere.infra.executor.sql.resourced.jdbc.executor.impl.DefaultSQLExecutorCallback.execute0(DefaultSQLExecutorCallback.java:75) at org.apache.shardingsphere.infra.executor.sql.resourced.jdbc.executor.impl.DefaultSQLExecutorCallback.execute(DefaultSQLExecutorCallback.java:57) at org.apache.shardingsphere.infra.executor.kernel.ExecutorKernel.syncExecute(ExecutorKernel.java:99) at org.apache.shardingsphere.infra.executor.kernel.ExecutorKernel.parallelExecute(ExecutorKernel.java:95) at org.apache.shardingsphere.infra.executor.kernel.ExecutorKernel.execute(ExecutorKernel.java:78) at org.apache.shardingsphere.infra.executor.sql.resourced.jdbc.executor.SQLExecutor.execute(SQLExecutor.java:66) at org.apache.shardingsphere.infra.executor.sql.resourced.jdbc.executor.SQLExecutor.execute(SQLExecutor.java:50) at org.apache.shardingsphere.driver.executor.PreparedStatementExecutor.execute(PreparedStatementExecutor.java:101) at org.apache.shardingsphere.driver.jdbc.core.statement.ShardingSpherePreparedStatement.execute(ShardingSpherePreparedStatement.java:199) at org.apache.shardingsphere.dbtest.engine.dql.GeneralDQLIT.assertExecuteForPreparedStatement(GeneralDQLIT.java:117) at org.apache.shardingsphere.dbtest.engine.dql.GeneralDQLIT.assertExecute(GeneralDQLIT.java:95) at sun.reflect.GeneratedMethodAccessor45.invoke(Unknown Source) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27) at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) at org.junit.runners.ParentRunner.run(ParentRunner.java:363) at org.junit.runners.Suite.runChild(Suite.java:128) at org.junit.runners.Suite.runChild(Suite.java:27) at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26) at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27) at org.junit.runners.ParentRunner.run(ParentRunner.java:363) at org.junit.runners.Suite.runChild(Suite.java:128) at org.junit.runners.Suite.runChild(Suite.java:27) at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) at org.junit.runners.ParentRunner.run(ParentRunner.java:363) at org.junit.runner.JUnitCore.run(JUnitCore.java:137) at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:69) at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:33) at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:220) at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:53)  org.postgresql.util.PSQLException: ERROR: relation "t_order" does not exist   位置：17  at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2440) at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2183) at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:308) at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:441) at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:365) at org.postgresql.jdbc.PgPreparedStatement.executeWithFlags(PgPreparedStatement.java:143) at org.postgresql.jdbc.PgPreparedStatement.execute(PgPreparedStatement.java:132) at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44) at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java) at org.apache.shardingsphere.driver.executor.PreparedStatementExecutor$3.executeSQL(PreparedStatementExecutor.java:114) at org.apache.shardingsphere.driver.executor.PreparedStatementExecutor$3.executeSQL(PreparedStatementExecutor.java:110) at org.apache.shardingsphere.infra.executor.sql.resourced.jdbc.executor.impl.DefaultSQLExecutorCallback.execute0(DefaultSQLExecutorCallback.java:75) at org.apache.shardingsphere.infra.executor.sql.resourced.jdbc.executor.impl.DefaultSQLExecutorCallback.execute(DefaultSQLExecutorCallback.java:57) at org.apache.shardingsphere.infra.executor.kernel.ExecutorKernel.syncExecute(ExecutorKernel.java:99) at org.apache.shardingsphere.infra.executor.kernel.ExecutorKernel.parallelExecute(ExecutorKernel.java:95) at org.apache.shardingsphere.infra.executor.kernel.ExecutorKernel.execute(ExecutorKernel.java:78) at org.apache.shardingsphere.infra.executor.sql.resourced.jdbc.executor.SQLExecutor.execute(SQLExecutor.java:66) at org.apache.shardingsphere.infra.executor.sql.resourced.jdbc.executor.SQLExecutor.execute(SQLExecutor.java:50) at org.apache.shardingsphere.driver.executor.PreparedStatementExecutor.execute(PreparedStatementExecutor.java:101) at org.apache.shardingsphere.driver.jdbc.core.statement.ShardingSpherePreparedStatement.execute(ShardingSpherePreparedStatement.java:199) at org.apache.shardingsphere.dbtest.engine.dql.GeneralDQLIT.assertExecuteForPreparedStatement(GeneralDQLIT.java:117) at org.apache.shardingsphere.dbtest.engine.dql.GeneralDQLIT.assertExecute(GeneralDQLIT.java:95) at sun.reflect.GeneratedMethodAccessor45.invoke(Unknown Source) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27) at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) at org.junit.runners.ParentRunner.run(ParentRunner.java:363) at org.junit.runners.Suite.runChild(Suite.java:128) at org.junit.runners.Suite.runChild(Suite.java:27) at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26) at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27) at org.junit.runners.ParentRunner.run(ParentRunner.java:363) at org.junit.runners.Suite.runChild(Suite.java:128) at org.junit.runners.Suite.runChild(Suite.java:27) at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) at org.junit.runners.ParentRunner.run(ParentRunner.java:363) at org.junit.runner.JUnitCore.run(JUnitCore.java:137) at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:69) at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:33) at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:220) at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:53)  [ERROR] 04:11:17.410 [main] o.a.s.dbtest.engine.SingleIT - ruleType=dbtbl_with_masterslave, databaseType=PostgreSQL, expectedDataFile=D:\0project\tuohai666-shardingsphere\shardingsphere-integration-test\shardingsphere-test-suite\target\test-classes\integrate\cases\dql/dataset/dbtbl_with_masterslave/select_inner_join.xml, sql=SELECT i.* FROM t_order o JOIN t_order_item i USING(order_id) WHERE o.order_id = ? org.postgresql.util.PSQLException: ERROR: relation "t_order" does not exist   位置：17 at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2440) at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2183) at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:308) at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:441) at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:365) at org.postgresql.jdbc.PgPreparedStatement.executeWithFlags(PgPreparedStatement.java:143) at org.postgresql.jdbc.PgPreparedStatement.executeQuery(PgPreparedStatement.java:106) at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52) at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeQuery(HikariProxyPreparedStatement.java) at org.apache.shardingsphere.driver.executor.PreparedStatementExecutor$1.createQueryResult(PreparedStatementExecutor.java:70) at org.apache.shardingsphere.driver.executor.PreparedStatementExecutor$1.executeSQL(PreparedStatementExecutor.java:65) at org.apache.shardingsphere.driver.executor.PreparedStatementExecutor$1.executeSQL(PreparedStatementExecutor.java:61) at org.apache.shardingsphere.infra.executor.sql.resourced.jdbc.executor.impl.DefaultSQLExecutorCallback.execute0(DefaultSQLExecutorCallback.java:75) at org.apache.shardingsphere.infra.executor.sql.resourced.jdbc.executor.impl.DefaultSQLExecutorCallback.execute(DefaultSQLExecutorCallback.java:57) at org.apache.shardingsphere.infra.executor.kernel.ExecutorKernel.syncExecute(ExecutorKernel.java:99) at org.apache.shardingsphere.infra.executor.kernel.ExecutorKernel.parallelExecute(ExecutorKernel.java:95) at org.apache.shardingsphere.infra.executor.kernel.ExecutorKernel.execute(ExecutorKernel.java:78) at org.apache.shardingsphere.infra.executor.sql.resourced.jdbc.executor.SQLExecutor.execute(SQLExecutor.java:66) at org.apache.shardingsphere.infra.executor.sql.resourced.jdbc.executor.SQLExecutor.execute(SQLExecutor.java:50) at org.apache.shardingsphere.driver.executor.PreparedStatementExecutor.executeQuery(PreparedStatementExecutor.java:57) at org.apache.shardingsphere.driver.jdbc.core.statement.ShardingSpherePreparedStatement.executeQuery(ShardingSpherePreparedStatement.java:159) at org.apache.shardingsphere.dbtest.engine.dql.GeneralDQLIT.assertExecuteQueryForPreparedStatement(GeneralDQLIT.java:83) at org.apache.shardingsphere.dbtest.engine.dql.GeneralDQLIT.assertExecuteQuery(GeneralDQLIT.java:62) at sun.reflect.GeneratedMethodAccessor44.invoke(Unknown Source) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27) at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) at org.junit.runners.ParentRunner.run(ParentRunner.java:363) at org.junit.runners.Suite.runChild(Suite.java:128) at org.junit.runners.Suite.runChild(Suite.java:27) at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26) at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27) at org.junit.runners.ParentRunner.run(ParentRunner.java:363) at org.junit.runners.Suite.runChild(Suite.java:128) at org.junit.runners.Suite.runChild(Suite.java:27) at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) at org.junit.runners.ParentRunner.run(ParentRunner.java:363) at org.junit.runner.JUnitCore.run(JUnitCore.java:137) at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:69) at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:33) at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:220) at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:53)  org.postgresql.util.PSQLException: ERROR: relation "t_order" does not exist   位置：17  at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2440) at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2183) at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:308) at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:441) at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:365) at org.postgresql.jdbc.PgPreparedStatement.executeWithFlags(PgPreparedStatement.java:143) at org.postgresql.jdbc.PgPreparedStatement.executeQuery(PgPreparedStatement.java:106) at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52) at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeQuery(HikariProxyPreparedStatement.java) at org.apache.shardingsphere.driver.executor.PreparedStatementExecutor$1.createQueryResult(PreparedStatementExecutor.java:70) at org.apache.shardingsphere.driver.executor.PreparedStatementExecutor$1.executeSQL(PreparedStatementExecutor.java:65) at org.apache.shardingsphere.driver.executor.PreparedStatementExecutor$1.executeSQL(PreparedStatementExecutor.java:61) at org.apache.shardingsphere.infra.executor.sql.resourced.jdbc.executor.impl.DefaultSQLExecutorCallback.execute0(DefaultSQLExecutorCallback.java:75) at org.apache.shardingsphere.infra.executor.sql.resourced.jdbc.executor.impl.DefaultSQLExecutorCallback.execute(DefaultSQLExecutorCallback.java:57) at org.apache.shardingsphere.infra.executor.kernel.ExecutorKernel.syncExecute(ExecutorKernel.java:99) at org.apache.shardingsphere.infra.executor.kernel.ExecutorKernel.parallelExecute(ExecutorKernel.java:95) at org.apache.shardingsphere.infra.executor.kernel.ExecutorKernel.execute(ExecutorKernel.java:78) at org.apache.shardingsphere.infra.executor.sql.resourced.jdbc.executor.SQLExecutor.execute(SQLExecutor.java:66) at org.apache.shardingsphere.infra.executor.sql.resourced.jdbc.executor.SQLExecutor.execute(SQLExecutor.java:50) at org.apache.shardingsphere.driver.executor.PreparedStatementExecutor.executeQuery(PreparedStatementExecutor.java:57) at org.apache.shardingsphere.driver.jdbc.core.statement.ShardingSpherePreparedStatement.executeQuery(ShardingSpherePreparedStatement.java:159) at org.apache.shardingsphere.dbtest.engine.dql.GeneralDQLIT.assertExecuteQueryForPreparedStatement(GeneralDQLIT.java:83) at org.apache.shardingsphere.dbtest.engine.dql.GeneralDQLIT.assertExecuteQuery(GeneralDQLIT.java:62) at sun.reflect.GeneratedMethodAccessor44.invoke(Unknown Source) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27) at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) at org.junit.runners.ParentRunner.run(ParentRunner.java:363) at org.junit.runners.Suite.runChild(Suite.java:128) at org.junit.runners.Suite.runChild(Suite.java:27) at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26) at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27) at org.junit.runners.ParentRunner.run(ParentRunner.java:363) at org.junit.runners.Suite.runChild(Suite.java:128) at org.junit.runners.Suite.runChild(Suite.java:27) at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) at org.junit.runners.ParentRunner.run(ParentRunner.java:363) at org.junit.runner.JUnitCore.run(JUnitCore.java:137) at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:69) at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:33) at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:220) at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:53)  [ERROR] 04:11:17.515 [main] o.a.s.dbtest.engine.SingleIT - ruleType=dbtbl_with_masterslave, databaseType=PostgreSQL, expectedDataFile=D:\0project\tuohai666-shardingsphere\shardingsphere-integration-test\shardingsphere-test-suite\target\test-classes\integrate\cases\dql/dataset/dbtbl_with_masterslave/select_inner_join.xml, sql=SELECT i.* FROM t_order o JOIN t_order_item i USING(order_id) WHERE o.order_id = ? org.postgresql.util.PSQLException: ERROR: relation "t_order" does not exist   位置：17 at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2440) at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2183) at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:308) at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:441) at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:365) at org.postgresql.jdbc.PgPreparedStatement.executeWithFlags(PgPreparedStatement.java:143) at org.postgresql.jdbc.PgPreparedStatement.execute(PgPreparedStatement.java:132) at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44) at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java) at org.apache.shardingsphere.driver.executor.PreparedStatementExecutor$3.executeSQL(PreparedStatementExecutor.java:114) at org.apache.shardingsphere.driver.executor.PreparedStatementExecutor$3.executeSQL(PreparedStatementExecutor.java:110) at org.apache.shardingsphere.infra.executor.sql.resourced.jdbc.executor.impl.DefaultSQLExecutorCallback.execute0(DefaultSQLExecutorCallback.java:75) at org.apache.shardingsphere.infra.executor.sql.resourced.jdbc.executor.impl.DefaultSQLExecutorCallback.execute(DefaultSQLExecutorCallback.java:57) at org.apache.shardingsphere.infra.executor.kernel.ExecutorKernel.syncExecute(ExecutorKernel.java:99) at org.apache.shardingsphere.infra.executor.kernel.ExecutorKernel.parallelExecute(ExecutorKernel.java:95) at org.apache.shardingsphere.infra.executor.kernel.ExecutorKernel.execute(ExecutorKernel.java:78) at org.apache.shardingsphere.infra.executor.sql.resourced.jdbc.executor.SQLExecutor.execute(SQLExecutor.java:66) at org.apache.shardingsphere.infra.executor.sql.resourced.jdbc.executor.SQLExecutor.execute(SQLExecutor.java:50) at org.apache.shardingsphere.driver.executor.PreparedStatementExecutor.execute(PreparedStatementExecutor.java:101) at org.apache.shardingsphere.driver.jdbc.core.statement.ShardingSpherePreparedStatement.execute(ShardingSpherePreparedStatement.java:199) at org.apache.shardingsphere.dbtest.engine.dql.GeneralDQLIT.assertExecuteForPreparedStatement(GeneralDQLIT.java:117) at org.apache.shardingsphere.dbtest.engine.dql.GeneralDQLIT.assertExecute(GeneralDQLIT.java:95) at sun.reflect.GeneratedMethodAccessor45.invoke(Unknown Source) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27) at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) at org.junit.runners.ParentRunner.run(ParentRunner.java:363) at org.junit.runners.Suite.runChild(Suite.java:128) at org.junit.runners.Suite.runChild(Suite.java:27) at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26) at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27) at org.junit.runners.ParentRunner.run(ParentRunner.java:363) at org.junit.runners.Suite.runChild(Suite.java:128) at org.junit.runners.Suite.runChild(Suite.java:27) at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) at org.junit.runners.ParentRunner.run(ParentRunner.java:363) at org.junit.runner.JUnitCore.run(JUnitCore.java:137) at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:69) at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:33) at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:220) at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:53)  org.postgresql.util.PSQLException: ERROR: relation "t_order" does not exist   位置：17  at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2440) at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2183) at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:308) at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:441) at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:365) at org.postgresql.jdbc.PgPreparedStatement.executeWithFlags(PgPreparedStatement.java:143) at org.postgresql.jdbc.PgPreparedStatement.execute(PgPreparedStatement.java:132) at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44) at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java) at org.apache.shardingsphere.driver.executor.PreparedStatementExecutor$3.executeSQL(PreparedStatementExecutor.java:114) at org.apache.shardingsphere.driver.executor.PreparedStatementExecutor$3.executeSQL(PreparedStatementExecutor.java:110) at org.apache.shardingsphere.infra.executor.sql.resourced.jdbc.executor.impl.DefaultSQLExecutorCallback.execute0(DefaultSQLExecutorCallback.java:75) at org.apache.shardingsphere.infra.executor.sql.resourced.jdbc.executor.impl.DefaultSQLExecutorCallback.execute(DefaultSQLExecutorCallback.java:57) at org.apache.shardingsphere.infra.executor.kernel.ExecutorKernel.syncExecute(ExecutorKernel.java:99) at org.apache.shardingsphere.infra.executor.kernel.ExecutorKernel.parallelExecute(ExecutorKernel.java:95) at org.apache.shardingsphere.infra.executor.kernel.ExecutorKernel.execute(ExecutorKernel.java:78) at org.apache.shardingsphere.infra.executor.sql.resourced.jdbc.executor.SQLExecutor.execute(SQLExecutor.java:66) at org.apache.shardingsphere.infra.executor.sql.resourced.jdbc.executor.SQLExecutor.execute(SQLExecutor.java:50) at org.apache.shardingsphere.driver.executor.PreparedStatementExecutor.execute(PreparedStatementExecutor.java:101) at org.apache.shardingsphere.driver.jdbc.core.statement.ShardingSpherePreparedStatement.execute(ShardingSpherePreparedStatement.java:199) at org.apache.shardingsphere.dbtest.engine.dql.GeneralDQLIT.assertExecuteForPreparedStatement(GeneralDQLIT.java:117) at org.apache.shardingsphere.dbtest.engine.dql.GeneralDQLIT.assertExecute(GeneralDQLIT.java:95) at sun.reflect.GeneratedMethodAccessor45.invoke(Unknown Source) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27) at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) at org.junit.runners.ParentRunner.run(ParentRunner.java:363) at org.junit.runners.Suite.runChild(Suite.java:128) at org.junit.runners.Suite.runChild(Suite.java:27) at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26) at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27) at org.junit.runners.ParentRunner.run(ParentRunner.java:363) at org.junit.runners.Suite.runChild(Suite.java:128) at org.junit.runners.Suite.runChild(Suite.java:27) at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) at org.junit.runners.ParentRunner.run(ParentRunner.java:363) at org.junit.runner.JUnitCore.run(JUnitCore.java:137) at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:69) at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:33) at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:220) at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:53)   Process finished with exit code -1  ```  ### Reason analyze (If you can)  These cases already passed several days ago, but now fail again.  May be caused by https://github.com/apache/shardingsphere/pull/7353  ### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.  1, env.properties: databases=PostgreSQL postgresql.host=127.0.0.1 (suppose your PostgreSQL is on localhost) postgresql.password=test  2, go to shardingsphere-test-suite module  3, mvn clean install  ### Example codes for reproduce this issue (such as a github link). </body>
		<created>2020-09-16 08:53:19</created>
		<closed>2020-09-17 07:03:12</closed>
	</bug>
	<bug>
		<id>7462</id>
		<title>Route result incorrect in concurrency</title>
		<body>## Bug Report  **For English only**, other languages will not accept.  Before report a bug, make sure you have:  - Searched open and closed [GitHub issues](https://github.com/apache/shardingsphere/issues). - Read documentation: [ShardingSphere Doc](https://shardingsphere.apache.org/document/current/en/overview).  Please pay attention on issues you submitted, because we maybe need more details.  If no response anymore and we cannot reproduce it on current information, we will **close it**.  Please answer these questions before submitting your issue. Thanks!  ### Which version of ShardingSphere did you use?  5.0.0-RC1-SNAPSHOT  ### Which project did you use? ShardingSphere-JDBC or ShardingSphere-Proxy?  ShardingSphere-Proxy  ### Expected behavior  Route correctly.  ### Actual behavior  Route result incorrect in concurrency.  A client hold one connection to execute SQL:  (Either use local transaction or not.) ``` INSERT INTO t_order (order_id, user_id, status) VALUES (96322, 222, '222') UPDATE t_order SET status = 'modified' WHERE order_id = 96322 AND user_id =222 SELECT * FROM t_order WHERE order_id = 96322 AND user_id =222 DELETE FROM t_order WHERE order_id = 96322 AND user_id =222 ```  All these SQLs are expected to be routed to ds_0::t_order_0 .  But the actual route result is:  ``` 1157380:[INFO ] 15:29:19.330 [ShardingSphere-Command-75] ShardingSphere-SQL - Logic SQL: INSERT INTO t_order (order_id, user_id, status) VALUES (96322, 222, '222') 1157382:[INFO ] 15:29:19.330 [ShardingSphere-Command-75] ShardingSphere-SQL - SQLStatement: InsertStatementContext(super=CommonSQLStatementContext(sqlStatement=org.apache.shardingsphere.sql.parser.sql.dialect.statement.mysql.dml.MySQLInsertStatement@4a1e2bcd, tablesContext=TablesContext(tables=[SimpleTableSegment(tableName=TableNameSegment(startIndex=12, stopIndex=18, identifier=IdentifierValue(value=t_order, quoteCharacter=NONE)), owner=Optional.empty, alias=Optional.empty)])), tablesContext=TablesContext(tables=[SimpleTableSegment(tableName=TableNameSegment(startIndex=12, stopIndex=18, identifier=IdentifierValue(value=t_order, quoteCharacter=NONE)), owner=Optional.empty, alias=Optional.empty)]), columnNames=[order_id, user_id, status], insertValueContexts=[InsertValueContext(parameterCount=0, valueExpressions=[LiteralExpressionSegment(startIndex=56, stopIndex=60, literals=96322), LiteralExpressionSegment(startIndex=63, stopIndex=65, literals=222), LiteralExpressionSegment(startIndex=68, stopIndex=72, literals=222)], parameters=[])], insertSelectContext=null, onDuplicateKeyUpdateValueContext=null, generatedKeyContext=Optional[GeneratedKeyContext(columnName=order_id, generated=false, generatedValues=[96322])]) 1157384:[INFO ] 15:29:19.331 [ShardingSphere-Command-75] ShardingSphere-SQL - Actual SQL: ds_0 ::: INSERT INTO t_order_1 (order_id, user_id, status) VALUES (96322, 222, '222') 1157388:[INFO ] 15:29:19.332 [ShardingSphere-Command-194] ShardingSphere-SQL - Logic SQL: UPDATE t_order SET status = 'modified' WHERE order_id = 96322 AND user_id =222 1157390:[INFO ] 15:29:19.332 [ShardingSphere-Command-194] ShardingSphere-SQL - Actual SQL: ds_0 ::: UPDATE t_order_0 SET status = 'modified' WHERE order_id = 96322 AND user_id =222 1157392:[INFO ] 15:29:19.332 [ShardingSphere-Command-132] ShardingSphere-SQL - Logic SQL: SELECT * FROM t_order WHERE order_id = 96322 AND user_id =222 1157396:[INFO ] 15:29:19.332 [ShardingSphere-Command-132] ShardingSphere-SQL - Actual SQL: ds_0 ::: SELECT * FROM t_order_0 WHERE order_id = 96322 AND user_id =222 1157397:[INFO ] 15:29:19.333 [ShardingSphere-Command-19] ShardingSphere-SQL - Logic SQL: DELETE FROM t_order WHERE order_id = 96322 AND user_id =222 1157399:[INFO ] 15:29:19.333 [ShardingSphere-Command-19] ShardingSphere-SQL - Actual SQL: ds_0 ::: DELETE FROM t_order_0 WHERE order_id = 96322 AND user_id =222 ```   The config-sharding.yaml:  ``` schemaName: sharding_db  dataSourceCommon:   username: root   password:   connectionTimeoutMilliseconds: 30000   idleTimeoutMilliseconds: 60000   maxLifetimeMilliseconds: 1800000   maxPoolSize: 200   minPoolSize: 200   maintenanceIntervalMilliseconds: 30000  dataSources:   ds_0:     url: jdbc:mysql://127.0.0.1:3306/demo_ds_0?serverTimezone=UTC&amp;useSSL=false   ds_1:     url: jdbc:mysql://127.0.0.1:3306/demo_ds_1?serverTimezone=UTC&amp;useSSL=false  rules: - !SHARDING   tables:     t_order:       actualDataNodes: ds_${0..1}.t_order_${0..1}       tableStrategy:         standard:           shardingColumn: order_id           shardingAlgorithmName: t_order_inline       keyGenerateStrategy:         column: order_id         keyGeneratorName: snowflake     t_order_item:       actualDataNodes: ds_${0..1}.t_order_item_${0..1}       tableStrategy:         standard:           shardingColumn: order_id           shardingAlgorithmName: t_order_item_inline       keyGenerateStrategy:         column: order_item_id         keyGeneratorName: snowflake   bindingTables:     - t_order,t_order_item   defaultDatabaseStrategy:     standard:       shardingColumn: user_id       shardingAlgorithmName: database_inline   defaultTableStrategy:     none:      shardingAlgorithms:     database_inline:       type: INLINE       props:         algorithm-expression: ds_${user_id % 2}     t_order_inline:       type: INLINE       props:         algorithm-expression: t_order_${order_id % 2}     t_order_item_inline:       type: INLINE       props:         algorithm-expression: t_order_item_${order_id % 2}      keyGenerators:     snowflake:       type: SNOWFLAKE       props:         worker-id: 123 ```  The server.yaml:  ``` authentication:   users:     root:       password: root     sharding:       password: sharding        authorizedSchemas: sharding_db  props:   max-connections-size-per-query: 200   acceptor-size: 200  # The default value is available processors count * 2.   executor-size: 200  # Infinite by default.   proxy-frontend-flush-threshold: 128  # The default value is 128.     # LOCAL: Proxy will run with LOCAL transaction.     # XA: Proxy will run with XA transaction.     # BASE: Proxy will run with B.A.S.E transaction.   proxy-transaction-type: LOCAL   proxy-opentracing-enabled: false   proxy-hint-enabled: false   query-with-cipher-column: true   sql-show: true   allow-range-query-with-inline-sharding: false   check-table-metadata-enabled: false ```  The incorrect route results occur occasionally.  ### Reason analyze (If you can)  ### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.  ### Example codes for reproduce this issue (such as a github link). </body>
		<created>2020-09-15 10:32:00</created>
		<closed>2020-09-17 16:51:45</closed>
	</bug>
	<bug>
		<id>7421</id>
		<title>Connect to ShardingSphere-Proxy failed via PostgreSQL JDBC driver since `SET extra_float_digits = 3` can't be parsed</title>
		<body>## Bug Report  ### Which version of ShardingSphere did you use? 5.0.0-RC1-SNAPSHOT, commit: 6c91b6eb3fce8532eed0a06eceb839fa4554f5a9  ### Which project did you use? ShardingSphere-JDBC or ShardingSphere-Proxy? ShardingSphere-Proxy  ### Expected behavior JDBC connection could be created  ### Actual behavior Exception thrown: ``` Caused by: org.postgresql.util.PSQLException: Unsupported SQL of `SET extra_float_digits = 3` at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2532) at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2267) at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:312) at org.postgresql.core.SetupQueryRunner.run(SetupQueryRunner.java:53) at org.postgresql.core.v3.ConnectionFactoryImpl.runInitialQueries(ConnectionFactoryImpl.java:742) at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:270) at org.postgresql.core.ConnectionFactory.openConnection(ConnectionFactory.java:49) at org.postgresql.jdbc.PgConnection.&lt;init&gt;(PgConnection.java:217) at org.postgresql.Driver.makeConnection(Driver.java:458) at org.postgresql.Driver.connect(Driver.java:260) at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138) at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:358) at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:206) at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:477) at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:560) ... 4 more ```  ### Reason analyze (If you can) Protocol output: ``` 2020-09-12 15:22:46 [TRACE] [main] [o.p.c.v.QueryExecutorImpl][1509]  FE=&gt; Parse(stmt=null,query="SET extra_float_digits = 3",oids={}) 2020-09-12 15:22:46 [TRACE] [main] [o.p.c.v.QueryExecutorImpl][1561]  FE=&gt; Bind(stmt=null,portal=null) 2020-09-12 15:22:46 [TRACE] [main] [o.p.c.v.QueryExecutorImpl][1744]  FE=&gt; Execute(portal=null,limit=1) 2020-09-12 15:22:46 [TRACE] [main] [o.p.c.v.QueryExecutorImpl][1454]  FE=&gt; Sync 2020-09-12 15:22:47 [TRACE] [main] [o.p.c.v.QueryExecutorImpl][2529]  &lt;=BE ErrorMessage(Unsupported SQL of `SET extra_float_digits = 3`) 2020-09-12 15:22:47 [TRACE] [main] [o.p.c.v.QueryExecutorImpl][2587]  &lt;=BE ReadyForQuery(I) ```  ShardingSphere-Proxy output: ``` line 1:25 no viable alternative at input '3' line 1:25 no viable alternative at input '3' line 1:0 no viable alternative at input 'SET' line 1:0 mismatched input 'SET' expecting CREATE ```  ### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc. Open a JDBC connection. Code snippet: ```     public static DataSource getProxyDataSource() {         HikariConfig config = new HikariConfig();         config.setDriverClassName(Driver.class.getName());         config.setMaximumPoolSize(5);         config.setJdbcUrl("jdbc:postgresql://localhost:3307/sharding_db");         config.setUsername("root");         config.setPassword("root");         // for debug         config.setConnectionTimeout(TimeUnit.SECONDS.toMillis(600));         return new HikariDataSource(config);     } ```  ### Example codes for reproduce this issue (such as a github link). </body>
		<created>2020-09-12 07:30:16</created>
		<closed>2020-09-14 03:04:37</closed>
	</bug>
	<bug>
		<id>7398</id>
		<title>INSERT...RETURNING test cases failed of BatchDMLIT</title>
		<body>## Bug Report  **For English only**, other languages will not accept.  Before report a bug, make sure you have:  - Searched open and closed [GitHub issues](https://github.com/apache/shardingsphere/issues). - Read documentation: [ShardingSphere Doc](https://shardingsphere.apache.org/document/current/en/overview).  Please pay attention on issues you submitted, because we maybe need more details.  If no response anymore and we cannot reproduce it on current information, we will **close it**.  Please answer these questions before submitting your issue. Thanks!  ### Which version of ShardingSphere did you use?  5.0.0-RC1-SNAPSHOT  ### Which project did you use? ShardingSphere-JDBC or ShardingSphere-Proxy?  ShardingSphere-JDBC  ### Expected behavior  Correctly execute SQL:  `INSERT /*+ index(field1) */ INTO t_order (order_id, user_id, status) VALUES (1, 1, 'insert') RETURNING order_id`  ### Actual behavior  ``` java.lang.AssertionError:  Expected: is &lt;1&gt;      but: was &lt;0&gt; Expected :is &lt;1&gt; Actual   :&lt;0&gt; &lt;Click to see difference&gt;   at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20) at org.junit.Assert.assertThat(Assert.java:956) at org.junit.Assert.assertThat(Assert.java:923) at org.apache.shardingsphere.dbtest.engine.BatchIT.assertDataSet(BatchIT.java:112) at org.apache.shardingsphere.dbtest.engine.dml.BatchDMLIT.assertExecuteBatch(BatchDMLIT.java:70) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26) at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27) at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) at org.junit.runners.ParentRunner.run(ParentRunner.java:363) at org.junit.runners.Suite.runChild(Suite.java:128) at org.junit.runners.Suite.runChild(Suite.java:27) at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26) at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27) at org.junit.runners.ParentRunner.run(ParentRunner.java:363) at org.junit.runner.JUnitCore.run(JUnitCore.java:137) at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:69) at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:33) at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:220) at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:53) ```  ### Reason analyze (If you can)  Execute this SQL will return a row instead of an update count value as expect.  The executeBatch() interface of JDBC returns an int[] result represent all the update counts, leading to an exception.  So this SQL is not suitable for this integration test.  ### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.  1, env.properties: databases=PostgreSQL postgresql.host=127.0.0.1 (suppose your PostgreSQL is on localhost) postgresql.password=test  2, go to shardingsphere-test-suite module  3, mvn clean install  ### Example codes for reproduce this issue (such as a github link). </body>
		<created>2020-09-11 03:25:10</created>
		<closed>2020-09-11 03:36:10</closed>
	</bug>
	<bug>
		<id>7372</id>
		<title>ShardingSphere-JDBC :  line 1:154 no viable alternative at input '-&gt;'</title>
		<body>## Bug Report  ### Which version of ShardingSphere did you use? &lt;dependency&gt;             &lt;groupId&gt;org.apache.shardingsphere&lt;/groupId&gt;             &lt;artifactId&gt;sharding-jdbc-core&lt;/artifactId&gt;             &lt;version&gt;4.1.1&lt;/version&gt;         &lt;/dependency&gt;  ### Which project did you use? ShardingSphere-JDBC or ShardingSphere-Proxy? ShardingSphere-JDBC  ### Expected behavior have not log this error  ### Actual behavior 1、Only the error log was printed on the console 2、The SQL can execute correctly  ### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc. SELECT count(0) FROM op_producer_hotting_task WHERE create_time BETWEEN ? AND ? AND app_id = ? AND source IN (?, ?, ?, ?) AND status IN (?) AND data_json-&gt;'$.crowdPackageId' IS NOT NULL   </body>
		<created>2020-09-10 03:40:18</created>
		<closed>2020-09-14 07:46:19</closed>
	</bug>
	<bug>
		<id>7366</id>
		<title>Failed to get all Tables from Predicate</title>
		<body>## Bug Report  **For English only**, other languages will not accept.  Before report a bug, make sure you have:  - Searched open and closed [GitHub issues](https://github.com/apache/shardingsphere/issues). - Read documentation: [ShardingSphere Doc](https://shardingsphere.apache.org/document/current/en/overview).  Please pay attention on issues you submitted, because we maybe need more details.  If no response anymore and we cannot reproduce it on current information, we will **close it**.  Please answer these questions before submitting your issue. Thanks!  ### Which version of ShardingSphere did you use?  5.0.0-RC1-SNAPSHOT  ### Which project did you use? ShardingSphere-JDBC or ShardingSphere-Proxy?  ShardingSphere-JDBC  ### Expected behavior  Correctly execute SQL:  `select * from t_order where status="\"";`  ### Actual behavior  ```  java.lang.IllegalStateException at com.google.common.base.Preconditions.checkState(Preconditions.java:492) at org.apache.shardingsphere.sql.parser.sql.common.util.TableExtractUtils.getAllTablesFromPredicate(TableExtractUtils.java:249) at org.apache.shardingsphere.sql.parser.sql.common.util.TableExtractUtils.getAllTablesFromWhere(TableExtractUtils.java:214) at org.apache.shardingsphere.sql.parser.sql.common.util.TableExtractUtils.getTablesFromSelect(TableExtractUtils.java:67) at org.apache.shardingsphere.sql.parser.binder.statement.dml.SelectStatementContext.getAllTables(SelectStatementContext.java:181) at org.apache.shardingsphere.sharding.rewrite.token.generator.impl.TableTokenGenerator.generateSQLTokens(TableTokenGenerator.java:53) at org.apache.shardingsphere.sharding.rewrite.token.generator.impl.TableTokenGenerator.generateSQLTokens(TableTokenGenerator.java:48) at org.apache.shardingsphere.infra.rewrite.sql.token.generator.SQLTokenGenerators.generateSQLTokens(SQLTokenGenerators.java:82) at org.apache.shardingsphere.infra.rewrite.context.SQLRewriteContext.generateSQLTokens(SQLRewriteContext.java:83) at org.apache.shardingsphere.infra.rewrite.SQLRewriteEntry.createSQLRewriteContext(SQLRewriteEntry.java:75) at org.apache.shardingsphere.infra.rewrite.SQLRewriteEntry.rewrite(SQLRewriteEntry.java:67) at org.apache.shardingsphere.driver.jdbc.core.statement.ShardingSphereStatement.createExecutionContext(ShardingSphereStatement.java:289) at org.apache.shardingsphere.driver.jdbc.core.statement.ShardingSphereStatement.executeQuery(ShardingSphereStatement.java:122) ```  ### Reason analyze (If you can)  The Exception is from here:  TableExtractUtils  ```         if (predicate.getRightValue() instanceof ColumnSegment) {             Preconditions.checkState(((ColumnSegment) predicate.getRightValue()).getOwner().isPresent());             OwnerSegment segment = ((ColumnSegment) predicate.getRightValue()).getOwner().get();             result.add(new SimpleTableSegment(segment.getStartIndex(), segment.getStopIndex(), segment.getIdentifier()));         } ```  ### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.  ### Example codes for reproduce this issue (such as a github link). </body>
		<created>2020-09-09 14:25:38</created>
		<closed>2020-09-11 02:06:12</closed>
	</bug>
	<bug>
		<id>7342</id>
		<title>Proxy show tables command can't show unConfigured table</title>
		<body>## Bug Report When use show tables command in ShardingSphere-Proxy (using sharding database feature) It only show configured table, skiped the unconfigured table  Please answer these questions before submitting your issue. Thanks!  ### Which version of ShardingSphere did you use? 5.0.0-RC1-SNAPSHOT ### Which project did you use? ShardingSphere-JDBC or ShardingSphere-Proxy? ShardingSphere-Proxy using sharding feature ### Expected behavior show all the tables in current sharding db ### Actual behavior show only configuration table  ## Reason analyze (If you can) I found the bug maybe in  LogicTablesMergedResult.java  Line 56:  ```  if (shardingRule.getTableRules().isEmpty() || schemaMetaData.containsTable(actualTableName) &amp;&amp; tableNames.add(actualTableName)) {    result.add(memoryResultSetRow);   } ```</body>
		<created>2020-09-09 04:28:04</created>
		<closed>2020-09-15 11:48:30</closed>
	</bug>
	<bug>
		<id>7323</id>
		<title> CREATE TABLE IF NOT EXISTS  execute fail</title>
		<body>## Bug Report ``` ### SQL: CREATE TABLE IF NOT EXISTS t_order (order_id BIGINT AUTO_INCREMENT, user_id INT NOT NULL, address_id BIGINT NOT NULL, status VARCHAR(50), PRIMARY KEY (order_id)); ### Cause: org.apache.shardingsphere.sharding.route.engine.exception.TableExistsException: Table 't_order' already exists. at org.apache.ibatis.exceptions.ExceptionFactory.wrapException(ExceptionFactory.java:30) at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:200) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434) ... 17 more Caused by: org.apache.shardingsphere.sharding.route.engine.exception.TableExistsException: Table 't_order' already exists. at org.apache.shardingsphere.sharding.route.engine.validator.impl.ShardingCreateTableStatementValidator.preValidate(ShardingCreateTableStatementValidator.java:40) at org.apache.shardingsphere.sharding.route.engine.ShardingRouteDecorator.lambda$decorate$0(ShardingRouteDecorator.java:66) ```  **For English only**, other languages will not accept.  Please answer these questions before submitting your issue. Thanks!  ### Which version of ShardingSphere did you use? 5.0.0-RC1-SNAPSHOT ### Which project did you use? ShardingSphere-JDBC or ShardingSphere-Proxy? ShardingSphere-JDBC ### Expected behavior run and finish successfully  ### Actual behavior throws an exception   ### Reason analyze (If you can) The logic is in ShardingCreateTableStatementValidator.preValidate.  I think for it should not check if the create table contains   IF NOT EXISTS statement   ### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc. Run any the example module , with pre created table  </body>
		<created>2020-09-08 07:16:41</created>
		<closed>2020-09-10 09:47:27</closed>
	</bug>
	<bug>
		<id>7293</id>
		<title>Multi netty version caused connect fail </title>
		<body>## Bug Report I compiler the master branch,  and test the latest ShardingSphere-Proxy, found it start ok, but can't connect, caused by multi netty version problem.    **For English only**, other languages will not accept. Please pay attention on issues you submitted, because we maybe need more details.  If no response anymore and we cannot reproduce it on current information, we will **close it**.  Please answer these questions before submitting your issue. Thanks!  ### Which version of ShardingSphere did you use? 5.0.0-RC1-SNAPSHOT ### Which project did you use? ShardingSphere-JDBC or ShardingSphere-Proxy? ShardingSphere-Proxy  ### Expected behavior connect successfully  Welcome to the MySQL monitor.  Commands end with ; or \g. Your MySQL connection id is 2 Server version: 8.0.18-ShardingSphere-Proxy 5.0.0-RC1  ### Actual behavior throws exception  ` [INFO ] 18:31:53.289 [nioEventLoopGroup-2-1] i.n.handler.logging.LoggingHandler - [id: 0x0221e17b, L:/0.0.0.0:3307] READ: [id: 0x981666e9, L:/127.0.0.1:3307 - R:/127.0.0.1:60604] [INFO ] 18:31:53.308 [nioEventLoopGroup-2-1] i.n.handler.logging.LoggingHandler - [id: 0x0221e17b, L:/0.0.0.0:3307] READ COMPLETE [WARN ] 18:31:53.374 [nioEventLoopGroup-3-1] i.n.channel.DefaultChannelPipeline - An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception. java.lang.NoSuchMethodError: io.netty.buffer.ByteBuf.isContiguous()Z at io.netty.handler.codec.ByteToMessageDecoder$1.cumulate(ByteToMessageDecoder.java:83) at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:274) at io.netty.handler.codec.ByteToMessageCodec.channelRead(ByteToMessageCodec.java:103) at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374) at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360) at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352) at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1422) at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374) at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360) at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:931) at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:163) at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:700) at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:635) at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:552) at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:514) at io.netty.util.concurrent.SingleThreadEventExecutor$6.run(SingleThreadEventExecutor.java:1044) at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74) at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) at java.lang.Thread.run(Thread.java:748) `  ### Reason analyze (If you can)  **I check the maven dependency. it is caused by curator-client which required high netty version**   +- org.apache.curator:curator-client:jar:5.1.0:compile [INFO] |  |  \- org.apache.zookeeper:zookeeper:jar:3.6.0:compile [INFO] |  |     +- commons-lang:commons-lang:jar:2.6:compile [INFO] |  |     +- org.apache.zookeeper:zookeeper-jute:jar:3.6.0:compile [INFO] |  |     +- org.apache.yetus:audience-annotations:jar:0.5.0:compile [INFO] |  |     +- io.netty:netty-handler:jar:4.1.45.Final:compile [INFO] |  |     |  +- io.netty:netty-common:jar:4.1.45.Final:compile [INFO] |  |     |  +- io.netty:netty-buffer:jar:4.1.45.Final:compile [INFO] |  |     |  +- io.netty:netty-transport:jar:4.1.45.Final:compile [INFO] |  |     |  |  \- io.netty:netty-resolver:jar:4.1.45.Final:compile [INFO] |  |     |  \- io.netty:netty-codec:jar:4.1.45.Final:compile [INFO] |  |     +- io.netty:netty-transport-native-epoll:jar:4.1.45.Final:compile [INFO] |  |     |  \- io.netty:netty-transport-native-unix-common:jar:4.1.45.Final:compile [INFO] |  |     \- log4j:log4j:jar:1.2.17:compile  **the default netty version is 4.1.42, which caused the problem..**    ### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc. start proxy successfully , try use mysql client to login proxy , it hung, logs show error  mysql -h127.0.0.1 -P3307 -usharding -p ### Example codes for reproduce this issue (such as a github link). </body>
		<created>2020-09-07 10:47:26</created>
		<closed>2020-09-07 13:37:42</closed>
	</bug>
	<bug>
		<id>7284</id>
		<title>ColumnMetaDataLoader load error and proxy cannot start success</title>
		<body>## Bug Report  ``` java.sql.SQLException: Column 'DBNAME' not found. at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:965) at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:898) at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:887) at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:861) at com.mysql.jdbc.ResultSetImpl.findColumn(ResultSetImpl.java:1078) at com.zaxxer.hikari.pool.HikariProxyResultSet.findColumn(HikariProxyResultSet.java) at org.apache.shardingsphere.sql.parser.binder.metadata.column.ColumnMetaDataLoader.load(ColumnMetaDataLoader.java:78) at org.apache.shardingsphere.sql.parser.binder.metadata.table.TableMetaDataLoader.load(TableMetaDataLoader.java:46) at org.apache.shardingsphere.core.metadata.ShardingMetaDataLoader.load(ShardingMetaDataLoader.java:83) at org.apache.shardingsphere.core.metadata.ShardingMetaDataLoader.loadShardingSchemaMetaData(ShardingMetaDataLoader.java:134) at org.apache.shardingsphere.core.metadata.ShardingMetaDataLoader.load(ShardingMetaDataLoader.java:125) at org.apache.shardingsphere.shardingproxy.backend.schema.impl.ShardingSchema.loadSchemaMetaData(ShardingSchema.java:179) at org.apache.shardingsphere.shardingproxy.backend.schema.impl.ShardingSchema.createMetaData(ShardingSchema.java:88) at org.apache.shardingsphere.shardingproxy.backend.schema.impl.ShardingSchema.&lt;init&gt;(ShardingSchema.java:79) at org.apache.shardingsphere.shardingproxy.backend.schema.LogicSchemaFactory.newInstance(LogicSchemaFactory.java:56) at org.apache.shardingsphere.shardingproxy.backend.schema.LogicSchemas.initSchemas(LogicSchemas.java:102) at org.apache.shardingsphere.shardingproxy.backend.schema.LogicSchemas.init(LogicSchemas.java:91) at org.apache.shardingsphere.shardingproxy.Bootstrap.startWithRegistryCenter(Bootstrap.java:138) at org.apache.shardingsphere.shardingproxy.Bootstrap.main(Bootstrap.java:87) ``` ### Which version of ShardingSphere did you use? 4.1.1 ### Which project did you use? ShardingSphere-JDBC or ShardingSphere-Proxy? ShardingSphere-Proxy ### Expected behavior  ### Actual behavior  ### Reason analyze (If you can) ColumnMetaDataLoader load error because JDBC API `DatabaseMetaData getTables`   consider `_` as a wildcard symbol and will find all tables match the table pattern. we have two tables like this `a_b_d` and `a_bcd`.  when load 1st table's column, it also loads the second table's column, then throw `column xxx not found`.  ### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc. just create two tables match the pattern above and they should have a different columns. Then bootstrap the sharding-proxy ### Example codes for reproduce this issue (such as a github link). </body>
		<created>2020-09-07 03:17:05</created>
		<closed>2020-09-08 16:31:44</closed>
	</bug>
	<bug>
		<id>7280</id>
		<title>Judge whether shadow logic should be upgrade</title>
		<body>The current shadow judge engine logic split to `simple` and `prepared` which chosen by SQL parameters are empty.  The value will miss if there are parameters in prepared statement, but the shadow value is not in parameter.</body>
		<created>2020-09-06 15:16:44</created>
		<closed>2020-09-18 03:16:43</closed>
	</bug>
	<bug>
		<id>7245</id>
		<title>The local confugurations should be persisted to config center when overwrite=false but there is no configuration in config center</title>
		<body>## Bug Report  The following scenes will persist the configurations to the config center when there are local configurations  1.  configure `overwrite=true` 2.  configure `overwrite=false`  &amp;  no configuration in config center   </body>
		<created>2020-09-04 07:12:32</created>
		<closed>2020-09-04 08:20:35</closed>
	</bug>
	<bug>
		<id>7232</id>
		<title>What's wrong with this SQL</title>
		<body>## Bug Report  **For English only**, other languages will not accept.  Before report a bug, make sure you have:  - Searched open and closed [GitHub issues](https://github.com/apache/shardingsphere/issues). - Read documentation: [ShardingSphere Doc](https://shardingsphere.apache.org/document/current/en/overview).  Please pay attention on issues you submitted, because we maybe need more details.  If no response anymore and we cannot reproduce it on current information, we will **close it**.  Please answer these questions before submitting your issue. Thanks!  ### Which version of ShardingSphere did you use?  org.apache.shardingsphere:sharding-jdbc-core:4.1.1  ### Which project did you use? ShardingSphere-JDBC or ShardingSphere-Proxy?  ShardingSphere-JDBC  ### Expected behavior  Normal execution  ### Actual behavior  throw a NullPointerException ``` Java line 1:291 no viable alternative at input 'systemconf0_.system' line 1:291 no viable alternative at input 'systemconf0_.system' line 1:398 no viable alternative at input 'systemconf0_.system' Exception in thread "main" java.lang.NullPointerException at org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18) at org.apache.shardingsphere.sql.parser.mysql.visitor.impl.MySQLDMLVisitor.createProjection(MySQLDMLVisitor.java:446) at org.apache.shardingsphere.sql.parser.mysql.visitor.impl.MySQLDMLVisitor.visitProjection(MySQLDMLVisitor.java:434) at org.apache.shardingsphere.sql.parser.mysql.visitor.impl.MySQLDMLVisitor.visitProjection(MySQLDMLVisitor.java:127) at org.apache.shardingsphere.sql.parser.autogen.MySQLStatementParser$ProjectionContext.accept(MySQLStatementParser.java:5370) at org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18) at org.apache.shardingsphere.sql.parser.mysql.visitor.impl.MySQLDMLVisitor.visitProjections(MySQLDMLVisitor.java:410) at org.apache.shardingsphere.sql.parser.mysql.visitor.impl.MySQLDMLVisitor.visitProjections(MySQLDMLVisitor.java:127) at org.apache.shardingsphere.sql.parser.autogen.MySQLStatementParser$ProjectionsContext.accept(MySQLStatementParser.java:4865) at org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18) at org.apache.shardingsphere.sql.parser.mysql.visitor.impl.MySQLDMLVisitor.visitSelectClause(MySQLDMLVisitor.java:329) at org.apache.shardingsphere.sql.parser.mysql.visitor.impl.MySQLDMLVisitor.visitSelectClause(MySQLDMLVisitor.java:127) at org.apache.shardingsphere.sql.parser.autogen.MySQLStatementParser$SelectClauseContext.accept(MySQLStatementParser.java:4551) at org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18) at org.apache.shardingsphere.sql.parser.mysql.visitor.impl.MySQLDMLVisitor.visitUnionClause(MySQLDMLVisitor.java:322) at org.apache.shardingsphere.sql.parser.mysql.visitor.impl.MySQLDMLVisitor.visitUnionClause(MySQLDMLVisitor.java:127) at org.apache.shardingsphere.sql.parser.autogen.MySQLStatementParser$UnionClauseContext.accept(MySQLStatementParser.java:4446) at org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18) at org.apache.shardingsphere.sql.parser.mysql.visitor.impl.MySQLDMLVisitor.visitSelect(MySQLDMLVisitor.java:314) at org.apache.shardingsphere.sql.parser.mysql.visitor.impl.MySQLDMLVisitor.visitSelect(MySQLDMLVisitor.java:127) at org.apache.shardingsphere.sql.parser.autogen.MySQLStatementParser$SelectContext.accept(MySQLStatementParser.java:3098) at org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18) at org.apache.shardingsphere.sql.parser.SQLParserEngine.parse0(SQLParserEngine.java:80) at org.apache.shardingsphere.sql.parser.SQLParserEngine.parse(SQLParserEngine.java:61) at com.baidu.Test.main(Test.java:9) ```   ### Reason analyze (If you can)  The parser engine bug? Or not allow the column named 'system' ?  It works if i rename the colum.  ### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.  this table is not sharding ``` SQL select systemconf0_.id as id1_30_, systemconf0_.create_time as create_t2_30_, systemconf0_.creator as creator3_30_, systemconf0_.update_time as update_t4_30_, systemconf0_.updater as updater5_30_, systemconf0_.version as version6_30_, systemconf0_.config_name as config_n7_30_, systemconf0_.system as system8_30_, systemconf0_.value as value9_30_ from system_config systemconf0_ where systemconf0_.system="KA" and systemconf0_.config_name="test" ```  ### Example codes for reproduce this issue (such as a github link).  ``` Java public static void main(String[] args) {         SQLParserEngine sqlParserEngine = new SQLParserEngine("MySQL");         sqlParserEngine.parse("select systemconf0_.id as id1_30_, systemconf0_.create_time as create_t2_30_, "                         + "systemconf0_.creator as creator3_30_, systemconf0_.update_time as update_t4_30_, "                         + "systemconf0_.updater as updater5_30_, systemconf0_.version as version6_30_, systemconf0_"                         + ".config_name as config_n7_30_, systemconf0_.system as system8_30_, systemconf0_.value as "                         + "value9_30_ from system_config systemconf0_ where systemconf0_.system=\"KA\" and "                         + "systemconf0_.config_name=\"test\""                 , false);     } ``` </body>
		<created>2020-09-03 03:44:37</created>
		<closed>2020-09-03 06:46:45</closed>
	</bug>
	<bug>
		<id>7226</id>
		<title>Request to add words RANK and FUNCTION as MySQL unreserved Word in mysql sql parser module</title>
		<body>## Bug Report  **For English only**, other languages will not accept.  Before report a bug, make sure you have:  - Searched open and closed [GitHub issues](https://github.com/apache/shardingsphere/issues). - Read documentation: [ShardingSphere Doc](https://shardingsphere.apache.org/document/current/en/overview).  Please pay attention on issues you submitted, because we maybe need more details.  If no response anymore and we cannot reproduce it on current information, we will **close it**.  Please answer these questions before submitting your issue. Thanks!  ### Which version of ShardingSphere did you use? 5.0.0.RC1  ### Which project did you use? ShardingSphere-JDBC or ShardingSphere-Proxy? ShardingSphere-Proxy  ### Expected behavior SQL with column name RANK and FUNCTION can run without issue  ### Actual behavior ss-proxy reports unsupported sql  ### Reason analyze (If you can) The SQL contains column names like RANK and FUNCTION which were defined as reserved words in sql-parser-mysql module  ### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc. Create a table with column name rank and function Then run sql over ss-proxy to query those columns  ### Example codes for reproduce this issue (such as a github link). </body>
		<created>2020-09-02 08:31:51</created>
		<closed>2020-09-21 11:21:12</closed>
	</bug>
	<bug>
		<id>7216</id>
		<title>fix:Paging data error</title>
		<body>## Bug Report  **For English only**, other languages will not accept.  Before report a bug, make sure you have:  - Searched open and closed [GitHub issues](https://github.com/apache/shardingsphere/issues). - Read documentation: [ShardingSphere Doc](https://shardingsphere.apache.org/document/current/en/overview).  Please pay attention on issues you submitted, because we maybe need more details.  If no response anymore and we cannot reproduce it on current information, we will **close it**.  Please answer these questions before submitting your issue. Thanks!  ### Which version of ShardingSphere did you use? 4.1.0  ### Which project did you use? ShardingSphere-JDBC or ShardingSphere-Proxy? ShardingSphere-JDBC   ### Expected behavior  select id, icon, title, subtitle, notifyIndex, url, type, pushTime,params         from t_sys_message sm         where delFlag = 0 and pushStatus = 1 and uid in (#{uid}, 0)         and id not in (select mid from t_del_message dm where dm.uid = #{uid})         order by pushTime desc         limit #{page.start}, #{page.pageSize}  ### Actual behavior  2020-09-02 11:54:19.556  INFO 13468 --- [           main] ShardingSphere-SQL                       : Actual SQL: master0slave0 ::: select id, icon, title, subtitle, notifyIndex, url, type, pushTime,params         from t_sys_message0 sm         where delFlag = 0 and pushStatus = 1 and uid in (?, 0)         and id not in (select mid from t_del_message dm where dm.uid = ?)         order by pushTime desc         limit ?, ? ::: [612593098987540480, 0, 612593098987540480, 10] 2020-09-02 11:54:19.556  INFO 13468 --- [           main] ShardingSphere-SQL                       : Actual SQL: master0slave0 ::: select id, icon, title, subtitle, notifyIndex, url, type, pushTime,params         from t_sys_message1 sm         where delFlag = 0 and pushStatus = 1 and uid in (?, 0)         and id not in (select mid from t_del_message dm where dm.uid = ?)         order by pushTime desc         limit ?, ? ::: [612593098987540480, 0, 612593098987540480, 10] 2020-09-02 11:54:19.556  INFO 13468 --- [           main] ShardingSphere-SQL                       : Actual SQL: master0slave0 ::: select id, icon, title, subtitle, notifyIndex, url, type, pushTime,params         from t_sys_message2 sm         where delFlag = 0 and pushStatus = 1 and uid in (?, 0)         and id not in (select mid from t_del_message dm where dm.uid = ?)         order by pushTime desc         limit ?, ? ::: [612593098987540480, 0, 612593098987540480, 10]   ### Reason analyze (If you can) If there is a "not in" subquery, there will be problems  ### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.  spring.shardingsphere.sharding.tables.t_sys_message.actual-data-nodes=ds$-&gt;{0}.t_sys_message$-&gt;{0..2} spring.shardingsphere.sharding.tables.t_sys_message.database-strategy.inline.sharding-column=id spring.shardingsphere.sharding.tables.t_sys_message.database-strategy.inline.algorithm-expression=ds$-&gt;{0} spring.shardingsphere.sharding.tables.t_sys_message.table-strategy.inline.sharding-column=id spring.shardingsphere.sharding.tables.t_sys_message.table-strategy.inline.algorithm-expression=t_sys_message$-&gt;{id % 3} spring.shardingsphere.sharding.tables.t_sys_message.key-generator.column=id spring.shardingsphere.sharding.tables.t_sys_message.key-generator.type=SNOWFLAKE   ### Example codes for reproduce this issue (such as a github link). </body>
		<created>2020-09-02 04:01:17</created>
		<closed>2020-09-10 03:11:20</closed>
	</bug>
	<bug>
		<id>7201</id>
		<title>Unexpected SELECT DISTINCT result</title>
		<body>## Bug Report  **For English only**, other languages will not accept.  Before report a bug, make sure you have:  - Searched open and closed [GitHub issues](https://github.com/apache/shardingsphere/issues). - Read documentation: [ShardingSphere Doc](https://shardingsphere.apache.org/document/current/en/overview).  Please pay attention on issues you submitted, because we maybe need more details.  If no response anymore and we cannot reproduce it on current information, we will **close it**.  Please answer these questions before submitting your issue. Thanks!  ### Which version of ShardingSphere did you use?  5.0.0-RC1-SNAPSHOT  ### Which project did you use? ShardingSphere-JDBC or ShardingSphere-Proxy?  ShardingSphere-JDBC  ### Expected behavior  SELECT DISTINCT get correct result  ### Actual behavior  ``` [ERROR] 10:02:28.603 [main] o.a.s.dbtest.engine.dql.BaseDQLIT - [ERROR] SQL::SELECT DISTINCT item_id FROM t_order_item, Parameter::[null], Expect::select_distinct_with_single_column_without_order_by.xml  java.lang.AssertionError:  Expected: is "140001"      but: was "100001" Expected :140001 Actual   :100001 &lt;Click to see difference&gt;   at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20) at org.junit.Assert.assertThat(Assert.java:956) at org.junit.Assert.assertThat(Assert.java:923) at org.apache.shardingsphere.dbtest.engine.dql.BaseDQLIT.assertRows(BaseDQLIT.java:146) at org.apache.shardingsphere.dbtest.engine.dql.BaseDQLIT.assertResultSet(BaseDQLIT.java:114) at org.apache.shardingsphere.dbtest.engine.dql.GeneralDQLIT.assertExecuteQueryForStatement(GeneralDQLIT.java:74) at org.apache.shardingsphere.dbtest.engine.dql.GeneralDQLIT.assertExecuteQuery(GeneralDQLIT.java:60) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27) at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) at org.junit.runners.ParentRunner.run(ParentRunner.java:363) at org.junit.runners.Suite.runChild(Suite.java:128) at org.junit.runners.Suite.runChild(Suite.java:27) at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26) at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27) at org.junit.runners.ParentRunner.run(ParentRunner.java:363) at org.junit.runners.Suite.runChild(Suite.java:128) at org.junit.runners.Suite.runChild(Suite.java:27) at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) at org.junit.runners.ParentRunner.run(ParentRunner.java:363) at org.junit.runner.JUnitCore.run(JUnitCore.java:137) at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:69) at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:33) at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:220) at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:53)  [ERROR] 10:02:28.983 [main] o.a.s.dbtest.engine.dql.BaseDQLIT - [ERROR] SQL::SELECT DISTINCT item_id FROM t_order_item, Parameter::[null], Expect::select_distinct_with_single_column_without_order_by.xml  java.lang.AssertionError:  Expected: is "140001"      but: was "100001" Expected :140001 Actual   :100001 &lt;Click to see difference&gt;   at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20) at org.junit.Assert.assertThat(Assert.java:956) at org.junit.Assert.assertThat(Assert.java:923) at org.apache.shardingsphere.dbtest.engine.dql.BaseDQLIT.assertRows(BaseDQLIT.java:146) at org.apache.shardingsphere.dbtest.engine.dql.BaseDQLIT.assertResultSet(BaseDQLIT.java:114) at org.apache.shardingsphere.dbtest.engine.dql.GeneralDQLIT.assertExecuteForStatement(GeneralDQLIT.java:107) at org.apache.shardingsphere.dbtest.engine.dql.GeneralDQLIT.assertExecute(GeneralDQLIT.java:93) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27) at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) at org.junit.runners.ParentRunner.run(ParentRunner.java:363) at org.junit.runners.Suite.runChild(Suite.java:128) at org.junit.runners.Suite.runChild(Suite.java:27) at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26) at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27) at org.junit.runners.ParentRunner.run(ParentRunner.java:363) at org.junit.runners.Suite.runChild(Suite.java:128) at org.junit.runners.Suite.runChild(Suite.java:27) at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) at org.junit.runners.ParentRunner.run(ParentRunner.java:363) at org.junit.runner.JUnitCore.run(JUnitCore.java:137) at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:69) at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:33) at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:220) at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:53)  [ERROR] 10:02:31.960 [main] o.a.s.dbtest.engine.dql.BaseDQLIT - [ERROR] SQL::SELECT DISTINCT item_id FROM t_order_item, Parameter::[null], Expect::select_distinct_with_single_column_without_order_by.xml  java.lang.AssertionError:  Expected: is "140001"      but: was "100001" Expected :140001 Actual   :100001 &lt;Click to see difference&gt;   at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20) at org.junit.Assert.assertThat(Assert.java:956) at org.junit.Assert.assertThat(Assert.java:923) at org.apache.shardingsphere.dbtest.engine.dql.BaseDQLIT.assertRows(BaseDQLIT.java:146) at org.apache.shardingsphere.dbtest.engine.dql.BaseDQLIT.assertResultSet(BaseDQLIT.java:114) at org.apache.shardingsphere.dbtest.engine.dql.GeneralDQLIT.assertExecuteQueryForPreparedStatement(GeneralDQLIT.java:84) at org.apache.shardingsphere.dbtest.engine.dql.GeneralDQLIT.assertExecuteQuery(GeneralDQLIT.java:62) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27) at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) at org.junit.runners.ParentRunner.run(ParentRunner.java:363) at org.junit.runners.Suite.runChild(Suite.java:128) at org.junit.runners.Suite.runChild(Suite.java:27) at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26) at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27) at org.junit.runners.ParentRunner.run(ParentRunner.java:363) at org.junit.runners.Suite.runChild(Suite.java:128) at org.junit.runners.Suite.runChild(Suite.java:27) at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) at org.junit.runners.ParentRunner.run(ParentRunner.java:363) at org.junit.runner.JUnitCore.run(JUnitCore.java:137) at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:69) at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:33) at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:220) at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:53)  [ERROR] 10:02:32.166 [main] o.a.s.dbtest.engine.dql.BaseDQLIT - [ERROR] SQL::SELECT DISTINCT item_id FROM t_order_item, Parameter::[null], Expect::select_distinct_with_single_column_without_order_by.xml  java.lang.AssertionError:  Expected: is "140001"      but: was "220002" Expected :140001 Actual   :220002 &lt;Click to see difference&gt;   at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20) at org.junit.Assert.assertThat(Assert.java:956) at org.junit.Assert.assertThat(Assert.java:923) at org.apache.shardingsphere.dbtest.engine.dql.BaseDQLIT.assertRows(BaseDQLIT.java:146) at org.apache.shardingsphere.dbtest.engine.dql.BaseDQLIT.assertResultSet(BaseDQLIT.java:114) at org.apache.shardingsphere.dbtest.engine.dql.GeneralDQLIT.assertExecuteForPreparedStatement(GeneralDQLIT.java:119) at org.apache.shardingsphere.dbtest.engine.dql.GeneralDQLIT.assertExecute(GeneralDQLIT.java:95) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27) at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) at org.junit.runners.ParentRunner.run(ParentRunner.java:363) at org.junit.runners.Suite.runChild(Suite.java:128) at org.junit.runners.Suite.runChild(Suite.java:27) at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26) at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27) at org.junit.runners.ParentRunner.run(ParentRunner.java:363) at org.junit.runners.Suite.runChild(Suite.java:128) at org.junit.runners.Suite.runChild(Suite.java:27) at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) at org.junit.runners.ParentRunner.run(ParentRunner.java:363) at org.junit.runner.JUnitCore.run(JUnitCore.java:137) at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:69) at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:33) at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:220) at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:53)  [ERROR] 10:02:35.080 [main] o.a.s.dbtest.engine.dql.BaseDQLIT - [ERROR] SQL::SELECT DISTINCT order_id, user_id, status FROM t_order, Parameter::[null], Expect::select_distinct_with_multi_column_without_order_by.xml  java.lang.AssertionError:  Expected: is "1900"      but: was "2601" Expected :1900 Actual   :2601 &lt;Click to see difference&gt;   at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20) at org.junit.Assert.assertThat(Assert.java:956) at org.junit.Assert.assertThat(Assert.java:923) at org.apache.shardingsphere.dbtest.engine.dql.BaseDQLIT.assertRows(BaseDQLIT.java:146) at org.apache.shardingsphere.dbtest.engine.dql.BaseDQLIT.assertResultSet(BaseDQLIT.java:114) at org.apache.shardingsphere.dbtest.engine.dql.GeneralDQLIT.assertExecuteQueryForStatement(GeneralDQLIT.java:74) at org.apache.shardingsphere.dbtest.engine.dql.GeneralDQLIT.assertExecuteQuery(GeneralDQLIT.java:60) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27) at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) at org.junit.runners.ParentRunner.run(ParentRunner.java:363) at org.junit.runners.Suite.runChild(Suite.java:128) at org.junit.runners.Suite.runChild(Suite.java:27) at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26) at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27) at org.junit.runners.ParentRunner.run(ParentRunner.java:363) at org.junit.runners.Suite.runChild(Suite.java:128) at org.junit.runners.Suite.runChild(Suite.java:27) at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) at org.junit.runners.ParentRunner.run(ParentRunner.java:363) at org.junit.runner.JUnitCore.run(JUnitCore.java:137) at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:69) at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:33) at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:220) at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:53)  [ERROR] 10:02:35.293 [main] o.a.s.dbtest.engine.dql.BaseDQLIT - [ERROR] SQL::SELECT DISTINCT order_id, user_id, status FROM t_order, Parameter::[null], Expect::select_distinct_with_multi_column_without_order_by.xml  java.lang.AssertionError:  Expected: is "1900"      but: was "2601" Expected :1900 Actual   :2601 &lt;Click to see difference&gt;   at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20) at org.junit.Assert.assertThat(Assert.java:956) at org.junit.Assert.assertThat(Assert.java:923) at org.apache.shardingsphere.dbtest.engine.dql.BaseDQLIT.assertRows(BaseDQLIT.java:146) at org.apache.shardingsphere.dbtest.engine.dql.BaseDQLIT.assertResultSet(BaseDQLIT.java:114) at org.apache.shardingsphere.dbtest.engine.dql.GeneralDQLIT.assertExecuteForStatement(GeneralDQLIT.java:107) at org.apache.shardingsphere.dbtest.engine.dql.GeneralDQLIT.assertExecute(GeneralDQLIT.java:93) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27) at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) at org.junit.runners.ParentRunner.run(ParentRunner.java:363) at org.junit.runners.Suite.runChild(Suite.java:128) at org.junit.runners.Suite.runChild(Suite.java:27) at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26) at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27) at org.junit.runners.ParentRunner.run(ParentRunner.java:363) at org.junit.runners.Suite.runChild(Suite.java:128) at org.junit.runners.Suite.runChild(Suite.java:27) at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) at org.junit.runners.ParentRunner.run(ParentRunner.java:363) at org.junit.runner.JUnitCore.run(JUnitCore.java:137) at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:69) at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:33) at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:220) at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:53)  [ERROR] 10:02:38.170 [main] o.a.s.dbtest.engine.dql.BaseDQLIT - [ERROR] SQL::SELECT DISTINCT order_id, user_id, status FROM t_order, Parameter::[null], Expect::select_distinct_with_multi_column_without_order_by.xml  java.lang.AssertionError:  Expected: is "1900"      but: was "2601" Expected :1900 Actual   :2601 &lt;Click to see difference&gt;   at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20) at org.junit.Assert.assertThat(Assert.java:956) at org.junit.Assert.assertThat(Assert.java:923) at org.apache.shardingsphere.dbtest.engine.dql.BaseDQLIT.assertRows(BaseDQLIT.java:146) at org.apache.shardingsphere.dbtest.engine.dql.BaseDQLIT.assertResultSet(BaseDQLIT.java:114) at org.apache.shardingsphere.dbtest.engine.dql.GeneralDQLIT.assertExecuteQueryForPreparedStatement(GeneralDQLIT.java:84) at org.apache.shardingsphere.dbtest.engine.dql.GeneralDQLIT.assertExecuteQuery(GeneralDQLIT.java:62) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27) at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) at org.junit.runners.ParentRunner.run(ParentRunner.java:363) at org.junit.runners.Suite.runChild(Suite.java:128) at org.junit.runners.Suite.runChild(Suite.java:27) at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26) at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27) at org.junit.runners.ParentRunner.run(ParentRunner.java:363) at org.junit.runners.Suite.runChild(Suite.java:128) at org.junit.runners.Suite.runChild(Suite.java:27) at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) at org.junit.runners.ParentRunner.run(ParentRunner.java:363) at org.junit.runner.JUnitCore.run(JUnitCore.java:137) at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:69) at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:33) at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:220) at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:53)  [ERROR] 10:02:38.409 [main] o.a.s.dbtest.engine.dql.BaseDQLIT - [ERROR] SQL::SELECT DISTINCT order_id, user_id, status FROM t_order, Parameter::[null], Expect::select_distinct_with_multi_column_without_order_by.xml  java.lang.AssertionError:  Expected: is "1900"      but: was "2601" Expected :1900 Actual   :2601 &lt;Click to see difference&gt;   at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20) at org.junit.Assert.assertThat(Assert.java:956) at org.junit.Assert.assertThat(Assert.java:923) at org.apache.shardingsphere.dbtest.engine.dql.BaseDQLIT.assertRows(BaseDQLIT.java:146) at org.apache.shardingsphere.dbtest.engine.dql.BaseDQLIT.assertResultSet(BaseDQLIT.java:114) at org.apache.shardingsphere.dbtest.engine.dql.GeneralDQLIT.assertExecuteForPreparedStatement(GeneralDQLIT.java:119) at org.apache.shardingsphere.dbtest.engine.dql.GeneralDQLIT.assertExecute(GeneralDQLIT.java:95) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27) at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) at org.junit.runners.ParentRunner.run(ParentRunner.java:363) at org.junit.runners.Suite.runChild(Suite.java:128) at org.junit.runners.Suite.runChild(Suite.java:27) at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26) at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27) at org.junit.runners.ParentRunner.run(ParentRunner.java:363) at org.junit.runners.Suite.runChild(Suite.java:128) at org.junit.runners.Suite.runChild(Suite.java:27) at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) at org.junit.runners.ParentRunner.run(ParentRunner.java:363) at org.junit.runner.JUnitCore.run(JUnitCore.java:137) at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:69) at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:33) at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:220) at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:53) ```  ### Reason analyze (If you can)  Maybe caused by https://github.com/apache/shardingsphere/pull/4597  ### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.  1, env.properties: databases=PostgreSQL postgresql.host=127.0.0.1 (suppose your PostgreSQL is on localhost) postgresql.password=test  2, go to shardingsphere-test-suite module  3, mvn clean install  ### Example codes for reproduce this issue (such as a github link). </body>
		<created>2020-09-01 10:10:29</created>
		<closed>2020-09-04 09:59:03</closed>
	</bug>
	<bug>
		<id>7200</id>
		<title>LockSegment absent of PostgreSQL parser </title>
		<body>## Bug Report  **For English only**, other languages will not accept.  Before report a bug, make sure you have:  - Searched open and closed [GitHub issues](https://github.com/apache/shardingsphere/issues). - Read documentation: [ShardingSphere Doc](https://shardingsphere.apache.org/document/current/en/overview).  Please pay attention on issues you submitted, because we maybe need more details.  If no response anymore and we cannot reproduce it on current information, we will **close it**.  Please answer these questions before submitting your issue. Thanks!  ### Which version of ShardingSphere did you use?  5.0.0-RC1-SNAPSHOT  ### Which project did you use? ShardingSphere-JDBC or ShardingSphere-Proxy?  ShardingSphere-JDBC  ### Expected behavior  Under MasterSlave rule:  `SELECT * FROM t_order WHERE user_id = ? FOR UPDATE`  should be routed to Master node  ### Actual behavior  The SQL is routed to Slave node  ### Reason analyze (If you can)  LockSegment absent of PostgreSQL parser   Please refer to the route logic in MasterSlaveDataSourceRouter:   ```     private boolean isMasterRoute(final SQLStatement sqlStatement) {         return containsLockSegment(sqlStatement) || !(sqlStatement instanceof SelectStatement) || MasterVisitedManager.isMasterVisited() || HintManager.isMasterRouteOnly();     }          private boolean containsLockSegment(final SQLStatement sqlStatement) {         return sqlStatement instanceof SelectStatement &amp;&amp; ((SelectStatement) sqlStatement).getLock().isPresent();     } ```  ### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.  ### Example codes for reproduce this issue (such as a github link). </body>
		<created>2020-09-01 09:54:00</created>
		<closed>2020-09-15 08:26:53</closed>
	</bug>
	<bug>
		<id>7187</id>
		<title>Unsupported SQL of `SELECT current_user()`</title>
		<body>## Bug Report  **For English only**, other languages will not accept.  Before report a bug, make sure you have:  - Searched open and closed [GitHub issues](https://github.com/apache/shardingsphere/issues). - Read documentation: [ShardingSphere Doc](https://shardingsphere.apache.org/document/current/en/overview).  Please pay attention on issues you submitted, because we maybe need more details.  If no response anymore and we cannot reproduce it on current information, we will **close it**.  Please answer these questions before submitting your issue. Thanks!  ### Which version of ShardingSphere did you use?  5.0.0-RC1-SNAPSHOT  ### Which project did you use? ShardingSphere-JDBC or ShardingSphere-Proxy?  ShardingSphere-Proxy  ### Expected behavior  Support SQL:  `SELECT current_user()`  ### Actual behavior ```  line 1:7 no viable alternative at input 'current_user' line 1:7 no viable alternative at input 'current_user' line 1:0 no viable alternative at input 'SELECT' line 1:0 mismatched input 'SELECT' expecting CREATE [ERROR] 19:40:02.718 [ShardingSphere-Command-2] o.a.s.p.f.c.CommandExecutorTask - Exception occur:  org.apache.shardingsphere.sql.parser.exception.SQLParsingException: Unsupported SQL of `SELECT current_user()` at org.apache.shardingsphere.rdl.parser.engine.executor.RDLSQLParserExecutor.execute(RDLSQLParserExecutor.java:55) at org.apache.shardingsphere.rdl.parser.engine.engine.RDLSQLParserEngine.parse0(RDLSQLParserEngine.java:70) at org.apache.shardingsphere.rdl.parser.engine.engine.RDLSQLParserEngine.parse(RDLSQLParserEngine.java:52) at org.apache.shardingsphere.rdl.parser.engine.ShardingSphereSQLParserEngine.parse(ShardingSphereSQLParserEngine.java:47) at org.apache.shardingsphere.proxy.backend.text.TextProtocolBackendHandlerFactory.newInstance(TextProtocolBackendHandlerFactory.java:75) at org.apache.shardingsphere.proxy.frontend.mysql.command.query.text.query.MySQLComQueryPacketExecutor.&lt;init&gt;(MySQLComQueryPacketExecutor.java:71) at org.apache.shardingsphere.proxy.frontend.mysql.command.MySQLCommandExecutorFactory.newInstance(MySQLCommandExecutorFactory.java:70) at org.apache.shardingsphere.proxy.frontend.mysql.command.MySQLCommandExecuteEngine.getCommandExecutor(MySQLCommandExecuteEngine.java:60) at org.apache.shardingsphere.proxy.frontend.command.CommandExecutorTask.executeCommand(CommandExecutorTask.java:94) at org.apache.shardingsphere.proxy.frontend.command.CommandExecutorTask.run(CommandExecutorTask.java:73) at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) at java.lang.Thread.run(Thread.java:748)  ```  ### Reason analyze (If you can)  ### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.  ### Example codes for reproduce this issue (such as a github link). </body>
		<created>2020-08-31 11:56:51</created>
		<closed>2020-09-21 09:41:52</closed>
	</bug>
	<bug>
		<id>7141</id>
		<title>Navicat or MySQL Workbench: No database selected</title>
		<body>## Bug Report  **For English only**, other languages will not accept.  Before report a bug, make sure you have:  - Searched open and closed [GitHub issues](https://github.com/apache/shardingsphere/issues). - Read documentation: [ShardingSphere Doc](https://shardingsphere.apache.org/document/current/en/overview).  Please pay attention on issues you submitted, because we maybe need more details.  If no response anymore and we cannot reproduce it on current information, we will **close it**.  Please answer these questions before submitting your issue. Thanks!  ### Which version of ShardingSphere did you use?  5.0.0-RC1-SNAPSHOT  ### Which project did you use? ShardingSphere-JDBC or ShardingSphere-Proxy?  ShardingSphere-Proxy  ### Expected behavior  Compat with Navicat or MySQL Workbench.  ### Actual behavior  When use Navicat or MySQL Workbench connect ShardingSphere-Proxy, the client promp "No database selected".  ### Reason analyze (If you can)  Maybe caused by https://github.com/apache/shardingsphere/pull/6281  ### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.  ### Example codes for reproduce this issue (such as a github link). </body>
		<created>2020-08-28 15:22:53</created>
		<closed>2020-08-31 11:42:09</closed>
	</bug>
	<bug>
		<id>7137</id>
		<title>Unsupported SQL of `CREATE PROCEDURE` and `CREATE FUNCTION`</title>
		<body>## Bug Report  **For English only**, other languages will not accept.  Before report a bug, make sure you have:  - Searched open and closed [GitHub issues](https://github.com/apache/shardingsphere/issues). - Read documentation: [ShardingSphere Doc](https://shardingsphere.apache.org/document/current/en/overview).  Please pay attention on issues you submitted, because we maybe need more details.  If no response anymore and we cannot reproduce it on current information, we will **close it**.  Please answer these questions before submitting your issue. Thanks!  ### Which version of ShardingSphere did you use?  5.0.0-RC1-SNAPSHOT  ### Which project did you use? ShardingSphere-JDBC or ShardingSphere-Proxy?  ShardingSphere-Proxy  ### Expected behavior  Support SQL:  ``` delimiter $$  CREATE PROCEDURE delete_matches(IN p_playerno INTEGER)      BEGIN DELETE FROM t_order WHERE id = p_playerno;  END$$  CREATE FUNCTION fun1(v_id INT) RETURNS varchar(50) begin DECLARE v_userName varchar(50); select c into v_userName FROM t_order where id=v_id; return v_userName; END$$  delimiter ; ```  ### Actual behavior  ``` line 1:54 no viable alternative at input '&lt;EOF&gt;' line 1:54 no viable alternative at input '&lt;EOF&gt;' line 1:7 no viable alternative at input 'CREATEPROCEDURE' line 1:7 no viable alternative at input 'CREATEPROCEDURE' [ERROR] 21:52:32.117 [ShardingSphere-Command-5] o.a.s.p.f.c.CommandExecutorTask - Exception occur:  org.apache.shardingsphere.sql.parser.exception.SQLParsingException: Unsupported SQL of `CREATE PROCEDURE delete_matches(IN p_playerno INTEGER)` at org.apache.shardingsphere.rdl.parser.engine.executor.RDLSQLParserExecutor.execute(RDLSQLParserExecutor.java:55) at org.apache.shardingsphere.rdl.parser.engine.engine.RDLSQLParserEngine.parse0(RDLSQLParserEngine.java:70) at org.apache.shardingsphere.rdl.parser.engine.engine.RDLSQLParserEngine.parse(RDLSQLParserEngine.java:52) at org.apache.shardingsphere.rdl.parser.engine.ShardingSphereSQLParserEngine.parse(ShardingSphereSQLParserEngine.java:47) at org.apache.shardingsphere.proxy.backend.text.TextProtocolBackendHandlerFactory.newInstance(TextProtocolBackendHandlerFactory.java:75) at org.apache.shardingsphere.proxy.frontend.mysql.command.query.text.query.MySQLComQueryPacketExecutor.&lt;init&gt;(MySQLComQueryPacketExecutor.java:71) at org.apache.shardingsphere.proxy.frontend.mysql.command.MySQLCommandExecutorFactory.newInstance(MySQLCommandExecutorFactory.java:70) at org.apache.shardingsphere.proxy.frontend.mysql.command.MySQLCommandExecuteEngine.getCommandExecutor(MySQLCommandExecuteEngine.java:60) at org.apache.shardingsphere.proxy.frontend.command.CommandExecutorTask.executeCommand(CommandExecutorTask.java:94) at org.apache.shardingsphere.proxy.frontend.command.CommandExecutorTask.run(CommandExecutorTask.java:73) at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) at java.lang.Thread.run(Thread.java:748) line 1:87 no viable alternative at input 'beginDECLAREv_userNamevarchar(50)' line 1:87 no viable alternative at input 'beginDECLAREv_userNamevarchar(50)' line 1:7 no viable alternative at input 'CREATEFUNCTION' line 1:7 no viable alternative at input 'CREATEFUNCTION' [ERROR] 21:53:21.147 [ShardingSphere-Command-6] o.a.s.p.f.c.CommandExecutorTask - Exception occur:  org.apache.shardingsphere.sql.parser.exception.SQLParsingException: Unsupported SQL of `CREATE FUNCTION fun1(v_id INT) RETURNS varchar(50) begin DECLARE v_userName varchar(50)` at org.apache.shardingsphere.rdl.parser.engine.executor.RDLSQLParserExecutor.execute(RDLSQLParserExecutor.java:55) at org.apache.shardingsphere.rdl.parser.engine.engine.RDLSQLParserEngine.parse0(RDLSQLParserEngine.java:70) at org.apache.shardingsphere.rdl.parser.engine.engine.RDLSQLParserEngine.parse(RDLSQLParserEngine.java:52) at org.apache.shardingsphere.rdl.parser.engine.ShardingSphereSQLParserEngine.parse(ShardingSphereSQLParserEngine.java:47) at org.apache.shardingsphere.proxy.backend.text.TextProtocolBackendHandlerFactory.newInstance(TextProtocolBackendHandlerFactory.java:75) at org.apache.shardingsphere.proxy.frontend.mysql.command.query.text.query.MySQLComQueryPacketExecutor.&lt;init&gt;(MySQLComQueryPacketExecutor.java:71) at org.apache.shardingsphere.proxy.frontend.mysql.command.MySQLCommandExecutorFactory.newInstance(MySQLCommandExecutorFactory.java:70) at org.apache.shardingsphere.proxy.frontend.mysql.command.MySQLCommandExecuteEngine.getCommandExecutor(MySQLCommandExecuteEngine.java:60) at org.apache.shardingsphere.proxy.frontend.command.CommandExecutorTask.executeCommand(CommandExecutorTask.java:94) at org.apache.shardingsphere.proxy.frontend.command.CommandExecutorTask.run(CommandExecutorTask.java:73) at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) at java.lang.Thread.run(Thread.java:748) ```  ### Reason analyze (If you can)  ### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.  ### Example codes for reproduce this issue (such as a github link). </body>
		<created>2020-08-28 14:12:11</created>
		<closed>2020-09-09 13:17:44</closed>
	</bug>
	<bug>
		<id>7091</id>
		<title>sharding jdbc the sql of select DISTINCT in version 4.0.0 is support but in version 4.1.1 is not support</title>
		<body>sql: select count(1) count from (select DISTINCT         header.id,         header.uuid,         header.machining_no,         header.machining_type,         header.tenant_id,         header.warehouse_no,         header. STATUS,         header.create_user,         header.update_user,         header.create_time,         header.update_time,         header.is_delete,         header.memo,         header.oper_location_no,         header.fail_reason,         header.order_origin,         header.end_time         from machining_header header         LEFT JOIN machining_src_detail src ON src.machining_no = header.machining_no         AND src.tenant_id = header.tenant_id         AND src.warehouse_no = header.warehouse_no         LEFT JOIN machining_dest_detail dest ON dest.machining_no = header.machining_no         AND dest.tenant_id = header.tenant_id         AND dest.warehouse_no = header.warehouse_no         where         header.is_delete=0                   and header.machining_no = 'MA18012110000001'                  and header.tenant_id = 'aa'                     and header.warehouse_no = '26' ) t  use version 4.0.0, it can route to right db, but use 4.1.1, it  route to wrong db mybatis + spring </body>
		<created>2020-08-26 15:21:40</created>
		<closed>2020-09-21 11:35:57</closed>
	</bug>
	<bug>
		<id>7052</id>
		<title>sql cannot be sharded using Group BY</title>
		<body>SpringBoot2.3 +mybatis+mysql8 integration sharding 4.1.1, Use read/write separation + sharding.When there is Group BY in the SQL statement, sharding fails and cannot be routed to a specific physical table.After removing Group BY.You can route to a specific table and execute successfully.  The Springboot YAML configuration is as follows：  ![image](https://user-images.githubusercontent.com/46375421/91142973-59b22300-e6e4-11ea-9c20-686ad2148854.png)  Some of the important code (with GRUop by) is as follows：  ![image](https://user-images.githubusercontent.com/46375421/91142989-60409a80-e6e4-11ea-8da2-aaa24a7d6695.png)   The output log is executed as follows (cannot be routed to CONSUMER_link_8 and consumer_link_9)：  ![image](https://user-images.githubusercontent.com/46375421/91143022-6c2c5c80-e6e4-11ea-9f0e-07fd417d8ce4.png)   Some of the important code (without GRUop BY) is as follows： ![image](https://user-images.githubusercontent.com/46375421/91143034-76e6f180-e6e4-11ea-8c6e-07d818cd1b3c.png)   The output log is executed as follows (successfully routed to CONSUMER_link_8 and consumer_link_9)： ![image](https://user-images.githubusercontent.com/46375421/91143064-823a1d00-e6e4-11ea-80dd-46053a43196f.png) </body>
		<created>2020-08-25 07:06:17</created>
		<closed>2020-09-14 13:13:27</closed>
	</bug>
	<bug>
		<id>7032</id>
		<title>SQLServer OFFSET FETCH pagination return wrong results</title>
		<body>### Which version of ShardingSphere did you use? Version 4.0.0 or above  ### Which project did you use? ShardingSphere-JDBC or ShardingSphere-Proxy? ShardingSphere-JDBC  ### Expected behavior SQL with "OFFSET 0 ROW FETCH NEXT 5ROWS ONLY" returns 5 items.  ### Actual behavior SQL with "OFFSET 0 ROW FETCH NEXT 5 ROWS ONLY" returns 10 items.  ### Reason analyze (If you can) The question that was raised earlier([SQLServer OFFSET FETCH pagination return wrong results](https://github.com/apache/shardingsphere/issues/2987)), SteNicholas flag has been fixed，But the problem still exists when I use it  ### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc. 1. sharding rule configuration：  TableRuleConfiguration dealDataRuleConfig = new TableRuleConfiguration(                 "ras_enterprise_financing_tools_trade_sharding",                 "enterpriseShardingDataSource.ras_enterprise_financing_tools_trade_${1991..2030}");          ShardingRuleConfiguration shardingRuleConfig = new ShardingRuleConfiguration();         shardingRuleConfig.getBindingTableGroups().add("ras_enterprise_financing_tools_trade_sharding");         shardingRuleConfig.setDefaultDatabaseShardingStrategyConfig(new NoneShardingStrategyConfiguration());         shardingRuleConfig.setDefaultTableShardingStrategyConfig(                 new ComplexShardingStrategyConfiguration("date_year",new DealDataWorkComplexKeyAlgorithm()));         shardingRuleConfig.getTableRuleConfigs().add(dealDataRuleConfig);  2.SQL  to execute:  SELECT date_year,trade_date,create_time         FROM ras_enterprise_financing_tools_trade_sharding         WHERE date_year IN('2017','2018')         order by trade_date offset 0 row fetch next 5 rows only  3.Ouput:  24 八月 2020 18:01:33,672 32321 [http-nio-9020-exec-1] INFO  [] - Actual SQL: enterpriseShardingDataSource ::: SELECT date_year,trade_date,create_time         FROM ras_enterprise_financing_tools_trade_2017         WHERE date_year IN('2017','2018')         order by trade_date offset 0 row fetch next 5 rows only 24 八月 2020 18:01:33,672 32321 [http-nio-9020-exec-1] INFO  [] - Actual SQL: enterpriseShardingDataSource ::: SELECT date_year,trade_date,create_time         FROM ras_enterprise_financing_tools_trade_2018         WHERE date_year IN('2017','2018')         order by trade_date offset 0 row fetch next 5 rows only &lt;==    Columns: date_year, trade_date, create_time &lt;==        Row: 2017, 2017-01-01, 2020-08-20 14:31:23.91 &lt;==        Row: 2017, 2017-01-01, 2020-08-21 16:26:31.863 &lt;==        Row: 2017, 2017-01-01, 2020-08-21 16:44:36.68 &lt;==        Row: 2017, 2017-01-02, 2020-08-21 16:44:37.09 &lt;==        Row: 2017, 2017-01-02, 2020-08-21 16:26:32.247 &lt;==        Row: 2018, 2018-01-01, 2020-08-20 14:33:54.537 &lt;==        Row: 2018, 2018-01-01, 2020-08-21 16:17:32.677 &lt;==        Row: 2018, 2018-01-01, 2020-08-21 16:29:02.973 &lt;==        Row: 2018, 2018-01-01, 2020-08-21 16:36:33.037 &lt;==        Row: 2018, 2018-01-01, 2020-08-21 16:47:05.333 &lt;==      Total: 10  ### Example codes for reproduce this issue (such as a github link). </body>
		<created>2020-08-24 09:55:23</created>
		<closed>2020-08-27 02:55:52</closed>
	</bug>
	<bug>
		<id>7017</id>
		<title>[ShardingSphere-Proxy] Empty data packet</title>
		<body>## Bug Report ### Which version of ShardingSphere did you use? master branch  ### Which project did you use? ShardingSphere-JDBC or ShardingSphere-Proxy? ShardingSphere-Proxy  The data packet may be empty in some scenarios, for example, the login password is empty.  I'm not sure it is correct  as the follow modification(replace `&gt;=` with `&gt;`)   ```java     @Override     public boolean isValidHeader(final int readableBytes) {         return readableBytes &gt;= MySQLPacket.PAYLOAD_LENGTH + MySQLPacket.SEQUENCE_LENGTH;     } ``` </body>
		<created>2020-08-24 02:55:12</created>
		<closed>2020-08-25 03:51:39</closed>
	</bug>
	<bug>
		<id>7003</id>
		<title>No exception is thrown when there is  a bad SQL parsing.</title>
		<body>As #7002 mentioned, if there is a wrong SQL parsed result,  which means SQL definitions do not cover the inputted SQL. No exception is thrown up but only some error info in log.  We have to consider fixing this issue since it is the SQL Parser engine's responsibility to warn users that the inputted SQL does not fit the SQL definitions.</body>
		<created>2020-08-23 02:10:10</created>
		<closed>2020-09-21 12:40:00</closed>
	</bug>
	<bug>
		<id>7002</id>
		<title>Unsupported SQL Parsing</title>
		<body>Start ShardingProxy and run the SQL below, you will get the following exception information. ```sql CREATE TABLE `t_order` (   `order_id` int NOT NULL,   `user_id` int NOT NULL,   `status` varchar(45) DEFAULT NULL,   PRIMARY KEY (`order_id`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4  ``` &lt;img width="1007" alt="image" src="https://user-images.githubusercontent.com/27757146/90968998-bca98b80-e525-11ea-8530-81085096456d.png"&gt; </body>
		<created>2020-08-23 01:49:35</created>
		<closed>2020-08-26 01:25:20</closed>
	</bug>
	<bug>
		<id>6996</id>
		<title>ShardingSphere-JDBC not work , when used't Precompiled parameter sharding value </title>
		<body>### Which version of ShardingSphere did you use? 4.0.1  ### Which project did you use? ShardingSphere-JDBC or ShardingSphere-Proxy?  &gt; ShardingSphere-JDBC  ### Expected behavior  When i used a same sharding value can work, regardless i used  Precompiled statement sql or not Precompiled statement sql.  ### Actual behavior  Sharding inner checkSubqueryShardingValues fail. throw a exception . **java.lang.IllegalStateException: Sharding value must same with subquery**   ``` log org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.PersistenceException:  ### Error querying database.  Cause: java.lang.IllegalStateException: Sharding value must same with subquery. ### The error may exist in **/**/**/order/dal/service/impl/mapper/StoreItemMapper.java (best guess) ### The error may involve defaultParameterMap ### The error occurred while setting parameters ### SQL: SELECT  id,item_name,item_code,store_id,status  FROM test_store_Item     WHERE (id IN (select id from test_store_Item where store_id = 1006) AND store_id IN (?)) ### Cause: java.lang.IllegalStateException: Sharding value must same with subquery. at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:78) at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:440) at **.sun.proxy.$Proxy171.selectList(Unknown Source) at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:223) at **.baomidou.mybatisplus.core.override.MybatisMapperMethod.executeForMany(MybatisMapperMethod.java:158) at **.baomidou.mybatisplus.core.override.MybatisMapperMethod.execute(MybatisMapperMethod.java:76) at **.baomidou.mybatisplus.core.override.MybatisMapperProxy.invoke(MybatisMapperProxy.java:61) at **.sun.proxy.$Proxy200.selectList(Unknown Source) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343) at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198) at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139) at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) at **.sun.proxy.$Proxy201.selectList(Unknown Source) at **.**.**.order.impl.OrderServiceImpl.testSubQuery(OrderServiceImpl.java:185) at **.**.**.order.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$3541015a.invoke(&lt;generated&gt;) at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218) at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:750) at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93) at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689) at **.**.**.order.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$569c60c1.testSubQuery(&lt;generated&gt;) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190) at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138) at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105) at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:893) at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:798) at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040) at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943) at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909) at javax.servlet.http.HttpServlet.service(HttpServlet.java:665) at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) at javax.servlet.http.HttpServlet.service(HttpServlet.java:750) at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231) at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53) at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:88) at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320) at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127) at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91) at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119) at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137) at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111) at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170) at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63) at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) at org.springframework.security.oauth2.provider.authentication.OAuth2AuthenticationProcessingFilter.doFilter(OAuth2AuthenticationProcessingFilter.java:176) at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116) at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:74) at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105) at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56) at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215) at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178) at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358) at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271) at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:94) at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) at **.**.**.starter.filter.CustomSpanFilter.doFilter(CustomSpanFilter.java:81) at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) at org.springframework.cloud.sleuth.instrument.web.ExceptionLoggingFilter.doFilter(ExceptionLoggingFilter.java:50) at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) at brave.servlet.TracingFilter.doFilter(TracingFilter.java:86) at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:114) at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:104) at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202) at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526) at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139) at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92) at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408) at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66) at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860) at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1589) at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) at java.lang.Thread.run(Thread.java:748) Caused by: org.apache.ibatis.exceptions.PersistenceException:  ### Error querying database.  Cause: java.lang.IllegalStateException: Sharding value must same with subquery. ### The error may exist in **/**/**/order/dal/service/impl/mapper/StoreItemMapper.java (best guess) ### The error may involve defaultParameterMap ### The error occurred while setting parameters ### SQL: SELECT  id,item_name,item_code,store_id,status  FROM test_store_Item     WHERE (id IN (select id from test_store_Item where store_id = 1006) AND store_id IN (?)) ### Cause: java.lang.IllegalStateException: Sharding value must same with subquery. at org.apache.ibatis.exceptions.ExceptionFactory.wrapException(ExceptionFactory.java:30) at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:149) at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:426) ... 130 **mon frames omitted Caused by: java.lang.IllegalStateException: Sharding value must same with subquery. at **.google.**mon.base.Preconditions.checkState(Preconditions.java:456) at org.apache.shardingsphere.core.route.router.sharding.ShardingRouter.checkSubqueryShardingValues(ShardingRouter.java:150) at org.apache.shardingsphere.core.route.router.sharding.ShardingRouter.route(ShardingRouter.java:109) at org.apache.shardingsphere.core.route.PreparedStatementRoutingEngine.route(PreparedStatementRoutingEngine.java:63) at org.apache.shardingsphere.core.PreparedQueryShardingEngine.route(PreparedQueryShardingEngine.java:59) at org.apache.shardingsphere.core.BaseShardingEngine.executeRoute(BaseShardingEngine.java:85) at org.apache.shardingsphere.core.BaseShardingEngine.shard(BaseShardingEngine.java:68) at org.apache.shardingsphere.shardingjdbc.jdbc.core.statement.ShardingPreparedStatement.shard(ShardingPreparedStatement.java:249) at org.apache.shardingsphere.shardingjdbc.jdbc.core.statement.ShardingPreparedStatement.execute(ShardingPreparedStatement.java:190) at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:64) at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63) at **.sun.proxy.$Proxy266.query(Unknown Source) at **.baomidou.mybatisplus.core.executor.MybatisSimpleExecutor.doQuery(MybatisSimpleExecutor.java:67) at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324) at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156) at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109) at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83) at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147) ... 136 **mon frames omitted    ```  ### Reason analyze (If you can)  By i debug finded,when used't Precompiled method (${store_id}) define parameter . ShardingSphere-JDBC inner method  ConditionValueCompareOperatorGenerator.generate get ListRouteValue result incorrect .  Return ListRouteValue's value Collection element DataType is java.lang.Integer. (sharding value parameter in java.lang.Integer range  )  In WhereClauseShardingConditionEngine.createShardingConditions method , &gt; Collection&lt;SubqueryPredicateSegment&gt; subqueryPredicateSegments = sqlStatement.findSQLSegments(SubqueryPredicateSegment.class); statement build'result , sharding value DataType is java.lang.Integer.  But my sharding value column real DataType is **java.lang.Long**.   So ShardingSphere-JDBC throw a Exception. Because ShardingRouter.checkSubqueryShardingValues fail.  ### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc. very easy .   1. configuration a sharding table, sharding value DataType is Long .  2. used twice sharding value as sql parameter in statement sql .  3. two parameter used different method define, used #{} and ${}    ``` java     /**     * normal work      **/     @Select("select * from test_store_Item where store_id = #{store_id} and id in (select id from test_store_Item where store_id = #{store_id} )")     public List&lt;StoreItemEntity&gt; searchItemListBySubQuery(@Param("store_id") Long storeId);      /**     * throw Exception      **/     @Select("select * from test_store_Item where store_id = #{store_id} and id in (select id from test_store_Item where store_id = ${store_id} )")     public List&lt;StoreItemEntity&gt; searchItemListBySubQueryTwo(@Param("store_id") Long storeId);  ```    ### Example codes for reproduce this issue (such as a github link). reproduce the behavior is very easy, so not need Example codes.  </body>
		<created>2020-08-22 12:08:01</created>
		<closed>2020-08-25 03:21:23</closed>
	</bug>
	<bug>
		<id>6976</id>
		<title>Failure test cases of SQL92 parser test</title>
		<body>TODO:  - [x] create_table_with_out_of_line_check - [x] insert_on_duplicate_key_update_with_placeholders - [x] select_count_with_sub_with_whitespace - [x] select_distinct_function - [x] update_with_case_when - [x] update_with_where_calculation  The following SQL is not supported by SQL 92 and should be remove from the tests:  - [x] Unsupported SQL of `CREATE INDEX order_index ON t_order (order_id, user_id, status)` - [x] Unsupported SQL of `CREATE INDEX t_log_index ON t_log (id)` - [x] Unsupported SQL of `CREATE UNIQUE INDEX t_log_index ON t_log (id)` - [x] Unsupported SQL of `CREATE USER user1 IDENTIFIED BY RANDOM password default role role1` - [x] Unsupported SQL of `CREATE USER user1 IDENTIFIED BY RANDOM password default role role1 PASSWORD EXPIRE ACCOUNT LOCK` - [x] Unsupported SQL of `TRUNCATE TABLE t_log`   ## Bug Report  **For English only**, other languages will not accept.  Before report a bug, make sure you have:  - Searched open and closed [GitHub issues](https://github.com/apache/shardingsphere/issues). - Read documentation: [ShardingSphere Doc](https://shardingsphere.apache.org/document/current/en/overview).  Please pay attention on issues you submitted, because we maybe need more details.  If no response anymore and we cannot reproduce it on current information, we will **close it**.  Please answer these questions before submitting your issue. Thanks!  ### Which version of ShardingSphere did you use?  5.0.0-RC1-SNAPSHOT  ### Which project did you use? ShardingSphere-JDBC or ShardingSphere-Proxy?  Both  ### Expected behavior  SQL 92 parser test pass  ### Actual behavior  ``` [INFO] --- maven-surefire-plugin:2.22.0:test (default-test) @ shardingsphere-sql-parser-test --- [INFO]  [INFO] ------------------------------------------------------- [INFO]  T E S T S [INFO] ------------------------------------------------------- [INFO] Running org.apache.shardingsphere.sql.parser.integrate.engine.SQLParserParameterizedTest line 1:7 no viable alternative at input 'CREATEINDEX' line 1:7 no viable alternative at input 'CREATEINDEX' line 1:7 no viable alternative at input 'CREATEINDEX' line 1:7 no viable alternative at input 'CREATEINDEX' line 1:145 no viable alternative at input 'HASH' line 1:145 mismatched input 'HASH' expecting {LINEAR, LIST, RANGE} line 1:7 no viable alternative at input 'CREATEUNIQUE' line 1:7 no viable alternative at input 'CREATEUNIQUE' line 1:7 no viable alternative at input 'CREATEUSER' line 1:7 no viable alternative at input 'CREATEUSER' line 1:7 no viable alternative at input 'CREATEUSER' line 1:7 no viable alternative at input 'CREATEUSER' line 1:0 no viable alternative at input 'TRUNCATE' line 1:0 mismatched input 'TRUNCATE' expecting {SELECT, INSERT, UPDATE, DELETE, CREATE, ALTER, DROP, GRANT, REVOKE, SET, COMMIT, ROLLBACK} [ERROR] Tests run: 1899, Failures: 7, Errors: 6, Skipped: 0, Time elapsed: 7.002 s &lt;&lt;&lt; FAILURE! - in org.apache.shardingsphere.sql.parser.integrate.engine.SQLParserParameterizedTest [ERROR] assertSupportedSQL[create_composite_index (Literal) -&gt; SQL92](org.apache.shardingsphere.sql.parser.integrate.engine.SQLParserParameterizedTest)  Time elapsed: 0.007 s  &lt;&lt;&lt; ERROR! org.apache.shardingsphere.sql.parser.exception.SQLParsingException: Unsupported SQL of `CREATE INDEX order_index ON t_order (order_id, user_id, status)` at org.apache.shardingsphere.sql.parser.integrate.engine.SQLParserParameterizedTest.assertSupportedSQL(SQLParserParameterizedTest.java:93)  [ERROR] assertSupportedSQL[create_index (Literal) -&gt; SQL92](org.apache.shardingsphere.sql.parser.integrate.engine.SQLParserParameterizedTest)  Time elapsed: 0.001 s  &lt;&lt;&lt; ERROR! org.apache.shardingsphere.sql.parser.exception.SQLParsingException: Unsupported SQL of `CREATE INDEX t_log_index ON t_log (id)` at org.apache.shardingsphere.sql.parser.integrate.engine.SQLParserParameterizedTest.assertSupportedSQL(SQLParserParameterizedTest.java:93)  [ERROR] assertSupportedSQL[create_table_with_out_of_line_check (Literal) -&gt; SQL92](org.apache.shardingsphere.sql.parser.integrate.engine.SQLParserParameterizedTest)  Time elapsed: 0.017 s  &lt;&lt;&lt; FAILURE! java.lang.AssertionError:   SQL Case ID : create_table_with_out_of_line_check SQL         : CREATE TABLE t_order (order_id INT, user_id INT, status VARCHAR(10), column1 VARCHAR(10), column2 VARCHAR(10), column3 VARCHAR(10), CHECK (order_id &gt; 0)) Constraint definitions size assertion error:   Expected: is &lt;1&gt;      but: was &lt;0&gt; at org.apache.shardingsphere.sql.parser.integrate.engine.SQLParserParameterizedTest.assertSupportedSQL(SQLParserParameterizedTest.java:94)  [ERROR] assertSupportedSQL[create_unique_index (Literal) -&gt; SQL92](org.apache.shardingsphere.sql.parser.integrate.engine.SQLParserParameterizedTest)  Time elapsed: 0.001 s  &lt;&lt;&lt; ERROR! org.apache.shardingsphere.sql.parser.exception.SQLParsingException: Unsupported SQL of `CREATE UNIQUE INDEX t_log_index ON t_log (id)` at org.apache.shardingsphere.sql.parser.integrate.engine.SQLParserParameterizedTest.assertSupportedSQL(SQLParserParameterizedTest.java:93)  [ERROR] assertSupportedSQL[create_user_with_password (Literal) -&gt; SQL92](org.apache.shardingsphere.sql.parser.integrate.engine.SQLParserParameterizedTest)  Time elapsed: 0.001 s  &lt;&lt;&lt; ERROR! org.apache.shardingsphere.sql.parser.exception.SQLParsingException: Unsupported SQL of `CREATE USER user1 IDENTIFIED BY RANDOM password default role role1` at org.apache.shardingsphere.sql.parser.integrate.engine.SQLParserParameterizedTest.assertSupportedSQL(SQLParserParameterizedTest.java:93)  [ERROR] assertSupportedSQL[create_user_with_password_expire_lock (Literal) -&gt; SQL92](org.apache.shardingsphere.sql.parser.integrate.engine.SQLParserParameterizedTest)  Time elapsed: 0.001 s  &lt;&lt;&lt; ERROR! org.apache.shardingsphere.sql.parser.exception.SQLParsingException: Unsupported SQL of `CREATE USER user1 IDENTIFIED BY RANDOM password default role role1 PASSWORD EXPIRE ACCOUNT LOCK` at org.apache.shardingsphere.sql.parser.integrate.engine.SQLParserParameterizedTest.assertSupportedSQL(SQLParserParameterizedTest.java:93)  [ERROR] assertSupportedSQL[insert_on_duplicate_key_update_with_placeholders (Placeholder) -&gt; MySQL](org.apache.shardingsphere.sql.parser.integrate.engine.SQLParserParameterizedTest)  Time elapsed: 0.001 s  &lt;&lt;&lt; FAILURE! java.lang.AssertionError:   SQL Case ID : insert_on_duplicate_key_update_with_placeholders SQL         : INSERT INTO t_order (order_id, user_id, status) VALUES (?, ?, ?) ON DUPLICATE KEY UPDATE status = ? SQL Params  : [1, 1, 'init', 'init']  Parameter markers count assertion error:   Expected: is &lt;4&gt;      but: was &lt;5&gt; at org.apache.shardingsphere.sql.parser.integrate.engine.SQLParserParameterizedTest.assertSupportedSQL(SQLParserParameterizedTest.java:94)  [ERROR] assertSupportedSQL[select_count_with_sub_with_whitespace (Literal) -&gt; SQL92](org.apache.shardingsphere.sql.parser.integrate.engine.SQLParserParameterizedTest)  Time elapsed: 0 s  &lt;&lt;&lt; FAILURE! java.lang.AssertionError:   SQL Case ID : select_count_with_sub_with_whitespace SQL         : SELECT COUNT(*) AS orders_count FROM t_order WHERE order_id &gt; 1 - 1 Common expression text assertion error:   Expected: is "1 - 1"      but: was "1-1" at org.apache.shardingsphere.sql.parser.integrate.engine.SQLParserParameterizedTest.assertSupportedSQL(SQLParserParameterizedTest.java:94)  [ERROR] assertSupportedSQL[select_distinct_function (Literal) -&gt; SQL92](org.apache.shardingsphere.sql.parser.integrate.engine.SQLParserParameterizedTest)  Time elapsed: 0 s  &lt;&lt;&lt; FAILURE! java.lang.AssertionError:   SQL Case ID : select_distinct_function SQL         : SELECT DISTINCT(item_id) FROM t_order_item ORDER BY item_id Projection type assertion error:   Expected: an instance of org.apache.shardingsphere.sql.parser.integrate.jaxb.cases.domain.segment.impl.projection.impl.expression.ExpectedExpressionProjection      but: &lt;org.apache.shardingsphere.sql.parser.integrate.jaxb.cases.domain.segment.impl.projection.impl.column.ExpectedColumnProjection@163c7925&gt; is a org.apache.shardingsphere.sql.parser.integrate.jaxb.cases.domain.segment.impl.projection.impl.column.ExpectedColumnProjection at org.apache.shardingsphere.sql.parser.integrate.engine.SQLParserParameterizedTest.assertSupportedSQL(SQLParserParameterizedTest.java:94)  [ERROR] assertSupportedSQL[truncate_table (Literal) -&gt; SQL92](org.apache.shardingsphere.sql.parser.integrate.engine.SQLParserParameterizedTest)  Time elapsed: 0.001 s  &lt;&lt;&lt; ERROR! org.apache.shardingsphere.sql.parser.exception.SQLParsingException: Unsupported SQL of `TRUNCATE TABLE t_log` at org.apache.shardingsphere.sql.parser.integrate.engine.SQLParserParameterizedTest.assertSupportedSQL(SQLParserParameterizedTest.java:93)  [ERROR] assertSupportedSQL[update_with_case_when (Placeholder) -&gt; MySQL](org.apache.shardingsphere.sql.parser.integrate.engine.SQLParserParameterizedTest)  Time elapsed: 0.001 s  &lt;&lt;&lt; FAILURE! java.lang.AssertionError:   SQL Case ID : update_with_case_when SQL         : update stock_freeze_detail set row_status=case WHEN (id=?) THEN ? WHEN (id=?) THEN ? WHEN (id=?) THEN ? end,     update_user=case WHEN (id=?) THEN ? WHEN (id=?) THEN ? WHEN (id=?) THEN ? end, update_time=case WHEN (id=?) THEN ? end where  tenant_id = ? SQL Params  : [3, 2, 4, 2, 10, 2, 3, 'll', 4, 'll', 10, 'll', 3, '2020-08-10T17:15:25.979+0800', 'jd']  Parameter markers count assertion error:   Expected: is &lt;15&gt;      but: was &lt;1&gt; at org.apache.shardingsphere.sql.parser.integrate.engine.SQLParserParameterizedTest.assertSupportedSQL(SQLParserParameterizedTest.java:94)  [ERROR] assertSupportedSQL[update_with_where_calculation (Literal) -&gt; SQL92](org.apache.shardingsphere.sql.parser.integrate.engine.SQLParserParameterizedTest)  Time elapsed: 0.001 s  &lt;&lt;&lt; FAILURE! java.lang.AssertionError:   SQL Case ID : update_with_where_calculation SQL         : UPDATE t_order SET status = 1 WHERE order_id = order_id - 2 AND user_id = 3 Common expression text assertion error:   Expected: is "order_id - 2"      but: was "order_id-2" at org.apache.shardingsphere.sql.parser.integrate.engine.SQLParserParameterizedTest.assertSupportedSQL(SQLParserParameterizedTest.java:94)  [ERROR] assertSupportedSQL[update_with_where_calculation (Placeholder) -&gt; SQL92](org.apache.shardingsphere.sql.parser.integrate.engine.SQLParserParameterizedTest)  Time elapsed: 0.001 s  &lt;&lt;&lt; FAILURE! java.lang.AssertionError:   SQL Case ID : update_with_where_calculation SQL         : UPDATE t_order SET status = ? WHERE order_id = order_id - ? AND user_id = ? SQL Params  : [1, 2, 3]  Common expression text assertion error:   Expected: is "order_id - ?"      but: was "order_id-?" at org.apache.shardingsphere.sql.parser.integrate.engine.SQLParserParameterizedTest.assertSupportedSQL(SQLParserParameterizedTest.java:94)  [INFO] Running org.apache.shardingsphere.sql.parser.integrate.engine.UnsupportedSQLParserParameterizedTest [INFO] Tests run: 0, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.006 s - in org.apache.shardingsphere.sql.parser.integrate.engine.UnsupportedSQLParserParameterizedTest [INFO] Running org.apache.shardingsphere.sql.parser.integrate.jaxb.cases.SQLCasesLoaderTest [INFO] Tests run: 6, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0 s - in org.apache.shardingsphere.sql.parser.integrate.jaxb.cases.SQLCasesLoaderTest [INFO]  [INFO] Results: [INFO]  [ERROR] Failures:  [ERROR]   SQLParserParameterizedTest.assertSupportedSQL:94  SQL Case ID : create_table_with_out_of_line_check SQL         : CREATE TABLE t_order (order_id INT, user_id INT, status VARCHAR(10), column1 VARCHAR(10), column2 VARCHAR(10), column3 VARCHAR(10), CHECK (order_id &gt; 0)) Constraint definitions size assertion error:   Expected: is &lt;1&gt;      but: was &lt;0&gt; [ERROR]   SQLParserParameterizedTest.assertSupportedSQL:94  SQL Case ID : insert_on_duplicate_key_update_with_placeholders SQL         : INSERT INTO t_order (order_id, user_id, status) VALUES (?, ?, ?) ON DUPLICATE KEY UPDATE status = ? SQL Params  : [1, 1, 'init', 'init']  Parameter markers count assertion error:   Expected: is &lt;4&gt;      but: was &lt;5&gt; [ERROR]   SQLParserParameterizedTest.assertSupportedSQL:94  SQL Case ID : select_count_with_sub_with_whitespace SQL         : SELECT COUNT(*) AS orders_count FROM t_order WHERE order_id &gt; 1 - 1 Common expression text assertion error:   Expected: is "1 - 1"      but: was "1-1" [ERROR]   SQLParserParameterizedTest.assertSupportedSQL:94  SQL Case ID : select_distinct_function SQL         : SELECT DISTINCT(item_id) FROM t_order_item ORDER BY item_id Projection type assertion error:   Expected: an instance of org.apache.shardingsphere.sql.parser.integrate.jaxb.cases.domain.segment.impl.projection.impl.expression.ExpectedExpressionProjection      but: &lt;org.apache.shardingsphere.sql.parser.integrate.jaxb.cases.domain.segment.impl.projection.impl.column.ExpectedColumnProjection@163c7925&gt; is a org.apache.shardingsphere.sql.parser.integrate.jaxb.cases.domain.segment.impl.projection.impl.column.ExpectedColumnProjection [ERROR]   SQLParserParameterizedTest.assertSupportedSQL:94  SQL Case ID : update_with_case_when SQL         : update stock_freeze_detail set row_status=case WHEN (id=?) THEN ? WHEN (id=?) THEN ? WHEN (id=?) THEN ? end,     update_user=case WHEN (id=?) THEN ? WHEN (id=?) THEN ? WHEN (id=?) THEN ? end, update_time=case WHEN (id=?) THEN ? end where  tenant_id = ? SQL Params  : [3, 2, 4, 2, 10, 2, 3, 'll', 4, 'll', 10, 'll', 3, '2020-08-10T17:15:25.979+0800', 'jd']  Parameter markers count assertion error:   Expected: is &lt;15&gt;      but: was &lt;1&gt; [ERROR]   SQLParserParameterizedTest.assertSupportedSQL:94  SQL Case ID : update_with_where_calculation SQL         : UPDATE t_order SET status = 1 WHERE order_id = order_id - 2 AND user_id = 3 Common expression text assertion error:   Expected: is "order_id - 2"      but: was "order_id-2" [ERROR]   SQLParserParameterizedTest.assertSupportedSQL:94  SQL Case ID : update_with_where_calculation SQL         : UPDATE t_order SET status = ? WHERE order_id = order_id - ? AND user_id = ? SQL Params  : [1, 2, 3]  Common expression text assertion error:   Expected: is "order_id - ?"      but: was "order_id-?" [ERROR] Errors:  [ERROR]   SQLParserParameterizedTest.assertSupportedSQL:93 » SQLParsing Unsupported SQL ... [ERROR]   SQLParserParameterizedTest.assertSupportedSQL:93 » SQLParsing Unsupported SQL ... [ERROR]   SQLParserParameterizedTest.assertSupportedSQL:93 » SQLParsing Unsupported SQL ... [ERROR]   SQLParserParameterizedTest.assertSupportedSQL:93 » SQLParsing Unsupported SQL ... [ERROR]   SQLParserParameterizedTest.assertSupportedSQL:93 » SQLParsing Unsupported SQL ... [ERROR]   SQLParserParameterizedTest.assertSupportedSQL:93 » SQLParsing Unsupported SQL ... [INFO]  [ERROR] Tests run: 1905, Failures: 7, Errors: 6, Skipped: 0 ```  ### Reason analyze (If you can)  ### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.  In SQLCasesLoader.java:  Modify the method to ```     private static Collection&lt;String&gt; getALlDatabaseTypes() {         return Arrays.asList("H2", "MySQL", "PostgreSQL", "Oracle", "SQLServer", "SQL92");     } ```  ### Example codes for reproduce this issue (such as a github link). </body>
		<created>2020-08-21 09:14:36</created>
		<closed>2020-08-21 13:51:36</closed>
	</bug>
	<bug>
		<id>6973</id>
		<title>Bad route result for `explain SQL`</title>
		<body>This bug is in the master branch. Run ShardingProxy and execute `desc t_order`, the following exception will come up.  ```sql mysql&gt; show create table t_order; ERROR 1146 (42S02): Table 'demo_ds_2.t_order_0' doesn't exist mysql&gt; show create table t_order; ERROR 1146 (42S02): Table 'demo_ds_2.t_order_0' doesn't exist ```</body>
		<created>2020-08-21 08:33:08</created>
		<closed>2020-08-21 10:26:51</closed>
	</bug>
	<bug>
		<id>6970</id>
		<title>schemaContext status synchronized in BackendConnection</title>
		<body>Master branch.  Bug: Refer to the title.</body>
		<created>2020-08-21 07:47:06</created>
		<closed>2020-08-21 07:48:02</closed>
	</bug>
	<bug>
		<id>6943</id>
		<title>PostgreSQL current login user's password changed by DCL integration test</title>
		<body>## Bug Report  ### Which version of ShardingSphere did you use? master branch, 5.0.0-RC1-SNAPSHOT  ### Which project did you use? ShardingSphere-JDBC or ShardingSphere-Proxy? ShardingSphere-JDBC  ### Expected behavior Keep original password unchanged.  ### Actual behavior DCL integration test hang up.  From PostgreSQL log `postgresql-2020-08-18_071719`: ``` 2020-08-18 22:20:00.431 HKT [17060] STATEMENT:  DROP USER user_dev 2020-08-18 22:20:00.432 HKT [17060] ERROR:  role "user_dev_new" does not exist 2020-08-18 22:20:00.432 HKT [17060] STATEMENT:  DROP USER user_dev_new 2020-08-18 22:20:00.670 HKT [1216] FATAL:  password authentication failed for user "postgres" 2020-08-18 22:20:00.670 HKT [1216] DETAIL:  Password does not match for user "postgres". Connection matched pg_hba.conf line 80: "host    all             all             127.0.0.1/32            md5" ... 2020-08-18 23:00:34.293 HKT [3340] DETAIL:  Password does not match for user "postgres". Connection matched pg_hba.conf line 80: "host    all             all             127.0.0.1/32            md5" 2020-08-18 23:01:05.986 HKT [2032] FATAL:  password authentication failed for user "root" 2020-08-18 23:01:05.986 HKT [2032] DETAIL:  Role "root" does not exist. Connection matched pg_hba.conf line 82: "host    all             all             ::1/128                 md5" ```  ### Reason analyze (If you can) ALTER PASSWORD statement executed.  ### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc. 1, env.properties: databases=PostgreSQL postgresql.host=127.0.0.1 postgresql.password=test  2, go to shardingsphere-test-suite module  3, mvn clean install  ### Example codes for reproduce this issue (such as a github link). </body>
		<created>2020-08-19 14:49:47</created>
		<closed>2020-08-21 04:11:25</closed>
	</bug>
	<bug>
		<id>6942</id>
		<title>Parameterized ON DUPLICATE KEY UPDATE in insert statement doesn't work on MySQL proxy</title>
		<body>## Bug Report  ### Which version of ShardingSphere did you use? 5.0.0-RC1-SNAPSHOT  ### Which project did you use? ShardingSphere-JDBC or ShardingSphere-Proxy? ShardingSphere-Proxy  ### Expected behavior Sql could be executed correctly, just like MySQL 5.7 server.  ### Actual behavior Exception thrown: ``` Exception in thread "main" java.sql.SQLException: Statement parameter 5 not set. at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:965) at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:898) at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:887) at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:861) at com.mysql.jdbc.ServerPreparedStatement.serverExecute(ServerPreparedStatement.java:1174) at com.mysql.jdbc.ServerPreparedStatement.executeInternal(ServerPreparedStatement.java:787) at com.mysql.jdbc.PreparedStatement.executeUpdateInternal(PreparedStatement.java:2133) at com.mysql.jdbc.PreparedStatement.executeUpdateInternal(PreparedStatement.java:2067) at com.mysql.jdbc.PreparedStatement.executeLargeUpdate(PreparedStatement.java:5175) at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2052) ```  ### Reason analyze (If you can) ``` mysql-connector-java-5.1.48 ServerPreparedStatement.java, serverPrepare(String sql)                 Buffer prepareResultPacket = mysql.sendCommand(MysqlDefs.COM_PREPARE, sql, null, false, characterEncoding, 0);                  if (this.connection.versionMeetsMinimum(4, 1, 1)) {                     // 4.1.1 and newer use the first byte as an 'ok' or 'error' flag, so move the buffer pointer past it to start reading the statement id.                     prepareResultPacket.setPosition(1);                 } else {                     // 4.1.0 doesn't use the first byte as an 'ok' or 'error' flag                     prepareResultPacket.setPosition(0);                 }                  this.serverStatementId = prepareResultPacket.readLong();                 this.fieldCount = prepareResultPacket.readInt();                 this.parameterCount = prepareResultPacket.readInt();                 this.parameterBindings = new BindValue[this.parameterCount]; this.parameterCount is 5, which is from proxy server side, but it's 4 in fact ```  ``` org.apache.shardingsphere.proxy.frontend.mysql.command.query.binary.prepare.MySQLComStmtPrepareExecutor.java, execute()         SQLStatement sqlStatement = schema.getRuntimeContext().getSqlParserEngine().parse(packet.getSql(), true);         if (!MySQLComStmtPrepareChecker.isStatementAllowed(sqlStatement)) {             result.add(new MySQLErrPacket(++currentSequenceId, MySQLServerErrorCode.ER_UNSUPPORTED_PS));             return result;         }         int parametersCount = sqlStatement.getParameterCount(); parametersCount is 5 after parsing ```  ### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc. Run sql via jdbc: ``` jdbcUrl: jdbc:mysql://127.0.0.1:3307/sharding_db?serverTimezone=UTC&amp;useSSL=false&amp;useServerPrepStmts=true&amp;cachePrepStmts=true  try (PreparedStatement statement = connection.prepareStatement(         "insert into t_order (order_id, user_id, status) values (?, ?, ?) ON DUPLICATE KEY UPDATE status = ?")) { statement.setInt(1, orderId); statement.setInt(2, userId); statement.setString(3, status); statement.setString(4, "DUPLICATED"); statement.executeUpdate(); } ```  ### Example codes for reproduce this issue (such as a github link). </body>
		<created>2020-08-19 12:51:37</created>
		<closed>2020-08-21 04:25:26</closed>
	</bug>
	<bug>
		<id>6912</id>
		<title>BaseIT.createTables:131 exception, support keyword table name for different databases</title>
		<body>## Bug Report  **For English only**, other languages will not accept.  Before report a bug, make sure you have:  - Searched open and closed [GitHub issues](https://github.com/apache/shardingsphere/issues). - Read documentation: [ShardingSphere Doc](https://shardingsphere.apache.org/document/current/en/overview).  Please pay attention on issues you submitted, because we maybe need more details.  If no response anymore and we cannot reproduce it on current information, we will **close it**.  Please answer these questions before submitting your issue. Thanks!  ### Which version of ShardingSphere did you use?  master branch, 5.0.0-RC1-SNAPSHOT  ### Which project did you use? ShardingSphere-JDBC or ShardingSphere-Proxy?  ShardingSphere-JDBC  ### Expected behavior  CREATE TABLE with keyword name for PostgreSQL correct.  ### Actual behavior  org.postgresql.util.PSQLException: ERROR: syntax error at or near "`"  ### Reason analyze (If you can)  CREATE TABLE `select` is not appropriate for PostgreSQL  ### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.  ### Example codes for reproduce this issue (such as a github link). </body>
		<created>2020-08-18 08:30:43</created>
		<closed>2020-08-18 09:54:45</closed>
	</bug>
	<bug>
		<id>6749</id>
		<title>AbstractResumeBreakPointManagerTest sometimes execute fail.</title>
		<body>AbstractResumeBreakPointManager.incrementalPositionManagerMap is a hashMap which key is unordered. AbstractResumeBreakPointManager.assertGetInventoryPositionData() sometimes execute fail by unexpected json order.</body>
		<created>2020-08-10 07:46:50</created>
		<closed>2020-08-10 08:33:04</closed>
	</bug>
	<bug>
		<id>6729</id>
		<title>PostgreSQL plain insert doesn't work</title>
		<body>## Bug Report  ### Which version of ShardingSphere did you use? 5.0.0-RC1-SNAPSHOT . Commit: acc64bdf0b9b994ca465c2a63a06e6db8221935c  ### Which project did you use? ShardingSphere-JDBC or ShardingSphere-Proxy? ShardingSphere-JDBC, and part of ShardingSphere-Proxy  ### Expected behavior Insert data without exception, insert once.  ### Actual behavior Exception got: ``` 2020-08-08 21:35:26 [INFO] [main] [ShardingSphere-SQL][73] Actual SQL: ds ::: insert into varchar_tc_0 (id, real_name) values ((?, ?)) 2020-08-08 21:35:26 [INFO] [main] [ShardingSphere-SQL][73] Actual SQL: ds ::: insert into varchar_tc_1 (id, real_name) values ((?, ?)) Exception in thread "main" org.postgresql.util.PSQLException: 未设定参数值 1 的内容。 at org.postgresql.core.v3.SimpleParameterList.checkAllParametersSet(SimpleParameterList.java:270) at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:296) at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:448) at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:369) at org.postgresql.jdbc.PgPreparedStatement.executeWithFlags(PgPreparedStatement.java:153) at org.postgresql.jdbc.PgPreparedStatement.executeUpdate(PgPreparedStatement.java:119) at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61) at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeUpdate(HikariProxyPreparedStatement.java) at org.apache.shardingsphere.driver.executor.PreparedStatementExecutor$2.executeSQL(PreparedStatementExecutor.java:117) at org.apache.shardingsphere.driver.executor.PreparedStatementExecutor$2.executeSQL(PreparedStatementExecutor.java:113) at org.apache.shardingsphere.infra.executor.sql.resourced.jdbc.executor.impl.DefaultSQLExecutorCallback.execute0(DefaultSQLExecutorCallback.java:75) at org.apache.shardingsphere.infra.executor.sql.resourced.jdbc.executor.impl.DefaultSQLExecutorCallback.execute(DefaultSQLExecutorCallback.java:57) at org.apache.shardingsphere.infra.executor.kernel.ExecutorKernel.syncExecute(ExecutorKernel.java:99) at org.apache.shardingsphere.infra.executor.kernel.ExecutorKernel.parallelExecute(ExecutorKernel.java:95) at org.apache.shardingsphere.infra.executor.kernel.ExecutorKernel.execute(ExecutorKernel.java:78) at org.apache.shardingsphere.infra.executor.sql.resourced.jdbc.executor.SQLExecutor.execute(SQLExecutor.java:66) at org.apache.shardingsphere.infra.executor.sql.resourced.jdbc.executor.SQLExecutor.execute(SQLExecutor.java:50) at org.apache.shardingsphere.driver.executor.PreparedStatementExecutor.executeUpdate(PreparedStatementExecutor.java:105) at org.apache.shardingsphere.driver.jdbc.core.statement.ShardingSpherePreparedStatement.executeUpdate(ShardingSpherePreparedStatement.java:179) at test.shardingsphere.sharding.pg.varchar.PgVarcharTcDao.insert(PgVarcharTcDao.java:41) at test.shardingsphere.sharding.pg.varchar.ShardingPgVarcharJdbcTest.main(ShardingPgVarcharJdbcTest.java:25) ```  Three problems from log and debugging: 1. sql parameters not set 2. sql route to 2 physics tables, but not one 3. rewritten sql with wrong values clause "((?, ?))", it cause syntax error, it should be "(?, ?)"  ### Reason analyze (If you can) PostgreSQL grammar parsing. Details see following comments  ### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc. Run following example, `ShardingPgVarcharJdbcTest` / `ShardingPgVarcharProxyTest`  ### Example codes for reproduce this issue (such as a github link). https://github.com/sandynz/shardingsphere-test </body>
		<created>2020-08-09 03:49:09</created>
		<closed>2020-08-21 06:40:12</closed>
	</bug>
	<bug>
		<id>6664</id>
		<title>CREATE USER parse error</title>
		<body>## Bug Report  **For English only**, other languages will not accept.  Before report a bug, make sure you have:  - Searched open and closed [GitHub issues](https://github.com/apache/shardingsphere/issues). - Read documentation: [ShardingSphere Doc](https://shardingsphere.apache.org/document/current/en/overview).  Please pay attention on issues you submitted, because we maybe need more details.  If no response anymore and we cannot reproduce it on current information, we will **close it**.  Please answer these questions before submitting your issue. Thanks!  ### Which version of ShardingSphere did you use?  5.0.0-RC1-SNAPSHOT  ### Which project did you use? ShardingSphere-JDBC or ShardingSphere-Proxy?  Both  ### Expected behavior  Correctly parse the SQL:  ``` CREATE USER 'user_dev_new'@'localhost' ```  ### Actual behavior  Parse the SQL:  ``` CREATE USER 'user_dev_new'@'localhost' ```  Respond an error:  ``` line 1:38 mismatched input '&lt;EOF&gt;' expecting {',', DEFAULT, DISCARD, IDENTIFIED} ```  ### Reason analyze (If you can)  ### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.  Refer to **Actual behavior**  ### Example codes for reproduce this issue (such as a github link).  Refer to #6600 </body>
		<created>2020-08-06 07:26:02</created>
		<closed>2020-08-07 08:54:22</closed>
	</bug>
	<bug>
		<id>6658</id>
		<title>SELECT DISTINCT test cases error</title>
		<body>## Bug Report  **For English only**, other languages will not accept.  Before report a bug, make sure you have:  - Searched open and closed [GitHub issues](https://github.com/apache/shardingsphere/issues). - Read documentation: [ShardingSphere Doc](https://shardingsphere.apache.org/document/current/en/overview).  Please pay attention on issues you submitted, because we maybe need more details.  If no response anymore and we cannot reproduce it on current information, we will **close it**.  Please answer these questions before submitting your issue. Thanks!  ### Which version of ShardingSphere did you use?  5.0.0-RC1-SNAPSHOT  ### Which project did you use? ShardingSphere-JDBC or ShardingSphere-Proxy?  Both  ### Expected behavior  SELECT DISTINCT test cases pass.  ### Actual behavior  When execute the integration test with MySQL, some of the SELECT DISTINCT cases failed.  ### Reason analyze (If you can)  Maybe caused by https://github.com/apache/shardingsphere/pull/4597  ### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.  1. env.properties: databases=MySQL  2. hosts: (suppose your MySQL is on localhost) add 127.0.0.1 db.mysql  3. mvn clean install  ### Example codes for reproduce this issue (such as a github link).  Refer to #6603</body>
		<created>2020-08-06 03:31:47</created>
		<closed>2020-09-04 09:59:05</closed>
	</bug>
	<bug>
		<id>6656</id>
		<title>SQL-Parse-LimitSegment: PaginationContext.getValue(PaginationContext.java:57):  Cause: java.lang.ClassCastException: java.lang.String cannot be cast to java.lang.Integer</title>
		<body>## Bug Report  **For English only**, other languages will not accept.  Before report a bug, make sure you have:  - Searched open and closed [GitHub issues](https://github.com/apache/shardingsphere/issues). - Read documentation: [ShardingSphere Doc](https://shardingsphere.apache.org/document/current/en/overview).  Please pay attention on issues you submitted, because we maybe need more details.  If no response anymore and we cannot reproduce it on current information, we will **close it**.  Please answer these questions before submitting your issue. Thanks!  ### Which version of ShardingSphere did you use? 4.1.1  ### Which project did you use? ShardingSphere-JDBC or ShardingSphere-Proxy? ShardingSphere-JDBC.   ### Expected behavior work on.  ### Actual behavior  org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.PersistenceException:  ### Error querying database.  Cause: java.lang.ClassCastException: java.lang.String cannot be cast to java.lang.Integer ### The error may exist in com/**/mapper/**Mapper.xml ### The error may involve defaultParameterMap ### The error occurred while setting parameters ### SQL: SELECT t.agent_code FROM t_user_cbs_agent t WHERE (t.depart_date &gt;= ? OR t.depart_date = '' OR t.depart_date IS NULL) AND (t.approve_date &lt;= ? AND t.approve_date IS NOT NULL AND t.approve_date != '') AND t.grade_code IN ('S01', 'M04', 'M03', 'M02', 'M01', 'C99', 'A04', 'A03', 'A01') AND t.agent_code NOT IN (SELECT b.exchange_of_agent_code FROM t_user_cbs_agent b WHERE (b.exchange_agent_success_date &gt;= ? AND b.exchange_agent_success_date &lt;= ?) AND (b.exchange_of_agent_code != '' AND b.exchange_of_agent_code IS NOT NULL) AND b.exchange_sts = '01') LIMIT ?, ? ### Cause: java.lang.ClassCastException: java.lang.String cannot be cast to java.lang.Integer at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:77) at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446) at com.sun.proxy.$Proxy147.selectList(Unknown Source) at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:230) at com.baomidou.mybatisplus.core.override.MybatisMapperMethod.executeForMany(MybatisMapperMethod.java:158) at com.baomidou.mybatisplus.core.override.MybatisMapperMethod.execute(MybatisMapperMethod.java:76) at com.baomidou.mybatisplus.core.override.MybatisMapperProxy.invoke(MybatisMapperProxy.java:62) at com.sun.proxy.$Proxy162.findAgentCodesPageListByTargetDateAndCondition(Unknown Source) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:497) at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343) at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198) at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139) at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) at com.sun.proxy.$Proxy163.findAgentCodesPageListByTargetDateAndCondition(Unknown Source) at com.**.service.back.AssessAggrateQuotaServiceImpl.findDataList(AssessAggrateQuotaServiceImpl.java:144) at com.**.service.back.AssessAggrateQuotaServiceImpl$$FastClassBySpringCGLIB$$c54d1342.invoke(&lt;generated&gt;) at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218) at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749) at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:295) at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98) at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688) at com.**.service.back.AssessAggrateQuotaServiceImpl$$EnhancerBySpringCGLIB$$17be2515.findDataList(&lt;generated&gt;) at com.**.back.AssessAggrateQuotaServiceTest.findDataList(AssessAggrateQuotaServiceTest.java:29) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:497) at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) at org.springframework.test.context.junit4.statements.RunBeforeTestExecutionCallbacks.evaluate(RunBeforeTestExecutionCallbacks.java:74) at org.springframework.test.context.junit4.statements.RunAfterTestExecutionCallbacks.evaluate(RunAfterTestExecutionCallbacks.java:84) at org.springframework.test.context.junit4.statements.RunBeforeTestMethodCallbacks.evaluate(RunBeforeTestMethodCallbacks.java:75) at org.springframework.test.context.junit4.statements.RunAfterTestMethodCallbacks.evaluate(RunAfterTestMethodCallbacks.java:86) at org.springframework.test.context.junit4.statements.SpringRepeat.evaluate(SpringRepeat.java:84) at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:251) at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97) at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61) at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70) at org.junit.runners.ParentRunner.run(ParentRunner.java:363) at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190) at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86) at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38) at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:459) at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:675) at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:382) at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:192) Caused by: org.apache.ibatis.exceptions.PersistenceException:  ### Error querying database.  Cause: java.lang.ClassCastException: java.lang.String cannot be cast to java.lang.Integer ### The error may exist in com/**/mapper/**Mapper.xml ### The error may involve defaultParameterMap ### The error occurred while setting parameters ### SQL: SELECT t.agent_code FROM t_user_cbs_agent t WHERE (t.depart_date &gt;= ? OR t.depart_date = '' OR t.depart_date IS NULL) AND (t.approve_date &lt;= ? AND t.approve_date IS NOT NULL AND t.approve_date != '') AND t.grade_code IN ('S01', 'M04', 'M03', 'M02', 'M01', 'C99', 'A04', 'A03', 'A01') AND t.agent_code NOT IN (SELECT b.exchange_of_agent_code FROM t_user_cbs_agent b WHERE (b.exchange_agent_success_date &gt;= ? AND b.exchange_agent_success_date &lt;= ?) AND (b.exchange_of_agent_code != '' AND b.exchange_of_agent_code IS NOT NULL) AND b.exchange_sts = '01') LIMIT ?, ? ### Cause: java.lang.ClassCastException: java.lang.String cannot be cast to java.lang.Integer at org.apache.ibatis.exceptions.ExceptionFactory.wrapException(ExceptionFactory.java:30) at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:149) at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:497) at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433) ... 59 more Caused by: java.lang.ClassCastException: java.lang.String cannot be cast to java.lang.Integer at org.apache.shardingsphere.sql.parser.binder.segment.select.pagination.PaginationContext.getValue(PaginationContext.java:57) at org.apache.shardingsphere.sql.parser.binder.segment.select.pagination.PaginationContext.&lt;init&gt;(PaginationContext.java:50) at org.apache.shardingsphere.sql.parser.binder.segment.select.pagination.engine.LimitPaginationContextEngine.createPaginationContext(LimitPaginationContextEngine.java:38) at org.apache.shardingsphere.sql.parser.binder.segment.select.pagination.engine.PaginationContextEngine.createPaginationContext(PaginationContextEngine.java:48) at org.apache.shardingsphere.sql.parser.binder.statement.dml.SelectStatementContext.&lt;init&gt;(SelectStatementContext.java:100) at org.apache.shardingsphere.sql.parser.binder.SQLStatementContextFactory.getDMLStatementContext(SQLStatementContextFactory.java:103) at org.apache.shardingsphere.sql.parser.binder.SQLStatementContextFactory.newInstance(SQLStatementContextFactory.java:87) at org.apache.shardingsphere.underlying.route.DataNodeRouter.createRouteContext(DataNodeRouter.java:99) at org.apache.shardingsphere.underlying.route.DataNodeRouter.executeRoute(DataNodeRouter.java:89) at org.apache.shardingsphere.underlying.route.DataNodeRouter.route(DataNodeRouter.java:76) at org.apache.shardingsphere.underlying.pluggble.prepare.PreparedQueryPrepareEngine.route(PreparedQueryPrepareEngine.java:54) at org.apache.shardingsphere.underlying.pluggble.prepare.BasePrepareEngine.executeRoute(BasePrepareEngine.java:96) at org.apache.shardingsphere.underlying.pluggble.prepare.BasePrepareEngine.prepare(BasePrepareEngine.java:83) at org.apache.shardingsphere.shardingjdbc.jdbc.core.statement.ShardingPreparedStatement.prepare(ShardingPreparedStatement.java:183) at org.apache.shardingsphere.shardingjdbc.jdbc.core.statement.ShardingPreparedStatement.execute(ShardingPreparedStatement.java:143) at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:64) at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:497) at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63) at com.sun.proxy.$Proxy416.query(Unknown Source) at com.baomidou.mybatisplus.core.executor.MybatisSimpleExecutor.doQuery(MybatisSimpleExecutor.java:67) at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324) at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156) at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109) at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83) at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147) ... 65 more    ### Reason analyze (If you can) sql parse: Limit clause parameter index (-2) error.   ### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.    SELECT t.agent_code   FROM t_user_cbs_agent t   WHERE (t.depart_date &gt;= ? OR t.depart_date = '' OR t.depart_date IS NULL)     AND (t.approve_date &lt;= ? AND t.approve_date IS NOT NULL AND t.approve_date != '')     AND t.grade_code IN ('S01', 'M04', 'M03', 'M02', 'M01', 'C99', 'A04', 'A03', 'A01')     AND t.agent_code NOT IN (    SELECT b.exchange_of_agent_code     FROM t_user_cbs_agent b     WHERE ( b.exchange_agent_success_date &gt;= ?  AND b.exchange_agent_success_date &lt;= ?)       AND (b.exchange_of_agent_code != '' AND b.exchange_of_agent_code IS NOT NULL)       AND b.exchange_sts = '01'    )    LIMIT ?, ? ;    ### Example codes for reproduce this issue (such as a github link).  debug var:  limit.offset: 2 limit.rowCount: 3 SelectStatement.parameterCount: 4 List&lt;Object&gt; parameters: [2020-05-26, 2020-06-25, 2020-05-26, 2020-06-25, 0, 20]        </body>
		<created>2020-08-06 02:16:09</created>
		<closed>2020-09-20 13:47:26</closed>
	</bug>
	<bug>
		<id>6643</id>
		<title>Rewrite error of derived alias</title>
		<body>## Bug Report  **For English only**, other languages will not accept.  Before report a bug, make sure you have:  - Searched open and closed [GitHub issues](https://github.com/apache/shardingsphere/issues). - Read documentation: [ShardingSphere Doc](https://shardingsphere.apache.org/document/current/en/overview).  Please pay attention on issues you submitted, because we maybe need more details.  If no response anymore and we cannot reproduce it on current information, we will **close it**.  Please answer these questions before submitting your issue. Thanks!  ### Which version of ShardingSphere did you use?  5.0.0-RC1-SNAPSHOT  ### Which project did you use? ShardingSphere-JDBC or ShardingSphere-Proxy?  Both  ### Expected behavior  Correctly rewrite the following SQL:  ``` SELECT SUM(order_id) AS orders_sum, user_id as `key` FROM t_order GROUP BY `key` ```  ### Actual behavior  The logical SQL is rewritten to:  ``` Actual SQL: ds_0 ::: SELECT SUM(order_id) AS orders_sum, user_id as `key` , `key` AS GROUP_BY_DERIVED_0 FROM t_order_0 GROUP BY `key` ORDER BY `key` ASC  Actual SQL: ds_0 ::: SELECT SUM(order_id) AS orders_sum, user_id as `key` , `key` AS GROUP_BY_DERIVED_0 FROM t_order_1 GROUP BY `key` ORDER BY `key` ASC  Actual SQL: ds_1 ::: SELECT SUM(order_id) AS orders_sum, user_id as `key` , `key` AS GROUP_BY_DERIVED_0 FROM t_order_0 GROUP BY `key` ORDER BY `key` ASC  Actual SQL: ds_1 ::: SELECT SUM(order_id) AS orders_sum, user_id as `key` , `key` AS GROUP_BY_DERIVED_0 FROM t_order_1 GROUP BY `key` ORDER BY `key` ASC  ```  Lead to MySQL server respond error:  `ERROR 1054 (42S22): Unknown column 'key' in 'field list'`  ### Reason analyze (If you can)  Rewrite error of derived alias  ### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.  Refer to **Actual behavior**  ### Example codes for reproduce this issue (such as a github link).  Refer to https://github.com/apache/shardingsphere/issues/6603</body>
		<created>2020-08-05 10:40:54</created>
		<closed>2020-09-15 23:32:44</closed>
	</bug>
	<bug>
		<id>6611</id>
		<title>sharding scaling sync realtime data not surpport union pk</title>
		<body>### Which version of ShardingSphere did you use? scaling&amp;proxy 4.1.1, MSQL 5.7.26 ### Which project did you use? ShardingSphere-JDBC or ShardingSphere-Proxy? scaling,proxy ### Expected behavior sync realtime data ### Actual behavior scaling got an exception,and proxy trace some log ### Reason analyze (If you can) not surpport union pk well,binlog explain SQL statement wrong and update statement not surpport sharding column ### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc. 1、sharding target table use union pk; 2、use scaling&amp;proxy sync data，history task sync work well； 3、sync realtime data，test update SQL such as: `UPDATE `t_qrcode_consume_details` SET `amount`=100 WHERE `order_no`='15362822300000061787990021341006' AND `user_id`='101001191';`  some log: **scaling exception:** `[ERROR] 14:21:26.375 [pool-1-thread-8] o.a.s.s.c.e.e.SyncTaskExecuteCallback - RealtimeDataSyncTask realtime-appbiz_data_test execute exception exit org.apache.shardingsphere.shardingscaling.core.exception.SyncTaskExecuteException: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '`code_type` = '00',`channel` = '00'' at line 1 at org.apache.shardingsphere.shardingscaling.core.execute.executor.writer.AbstractJDBCWriter.write(AbstractJDBCWriter.java:90) at org.apache.shardingsphere.shardingscaling.core.execute.executor.writer.AbstractJDBCWriter.run(AbstractJDBCWriter.java:72) at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) at java.util.concurrent.FutureTask.run(FutureTask.java:266) at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) at java.lang.Thread.run(Thread.java:748) Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '`code_type` = '00',`channel` = '00'' at line 1 at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) at java.lang.reflect.Constructor.newInstance(Constructor.java:423) at com.mysql.jdbc.Util.handleNewInstance(Util.java:425) at com.mysql.jdbc.Util.getInstance(Util.java:408) at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:943) at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3973) at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3909) at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2527) at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2680) at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2490) at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858) at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197) at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44) at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java) at org.apache.shardingsphere.shardingscaling.core.execute.executor.writer.AbstractJDBCWriter.executeUpdate(AbstractJDBCWriter.java:142) at org.apache.shardingsphere.shardingscaling.core.execute.executor.writer.AbstractJDBCWriter.flush(AbstractJDBCWriter.java:106) at org.apache.shardingsphere.shardingscaling.core.execute.executor.writer.AbstractJDBCWriter.write(AbstractJDBCWriter.java:81) ... 6 common frames omitted`  **proxy log:** `[INFO ] 14:21:26.355 [ShardingSphere-Command-3] ShardingSphere-SQL - Logic SQL: UPDATE `t_qrcode_consume_details` SET `amount` = 100 WHERE `order_no` = '15362822300000061787990021341006',`code_type` = '00',`channel` = '00' [INFO ] 14:21:26.355 [ShardingSphere-Command-3] ShardingSphere-SQL - SQLStatement: UpdateStatementContext(super=CommonSQLStatementContext(sqlStatement=org.apache.shardingsphere.sql.parser.sql.statement.dml.UpdateStatement@3924366e, tablesContext=org.apache.shardingsphere.sql.parser.binder.segment.table.TablesContext@503bd098), tablesContext=org.apache.shardingsphere.sql.parser.binder.segment.table.TablesContext@503bd098) [INFO ] 14:21:26.356 [ShardingSphere-Command-3] ShardingSphere-SQL - Actual SQL: ds_0 ::: UPDATE `t_qrcode_consume_details_0` SET `amount` = 100 WHERE `order_no` = '15362822300000061787990021341006',`code_type` = '00',`channel` = '00' [INFO ] 14:21:26.356 [ShardingSphere-Command-3] ShardingSphere-SQL - Actual SQL: ds_0 ::: UPDATE `t_qrcode_consume_details_1` SET `amount` = 100 WHERE `order_no` = '15362822300000061787990021341006',`code_type` = '00',`channel` = '00' [INFO ] 14:21:26.356 [ShardingSphere-Command-3] ShardingSphere-SQL - Actual SQL: ds_0 ::: UPDATE `t_qrcode_consume_details_2` SET `amount` = 100 WHERE `order_no` = '15362822300000061787990021341006',`code_type` = '00',`channel` = '00' [INFO ] 14:21:26.356 [ShardingSphere-Command-3] ShardingSphere-SQL - Actual SQL: ds_0 ::: UPDATE `t_qrcode_consume_details_3` SET `amount` = 100 WHERE `order_no` = '15362822300000061787990021341006',`code_type` = '00',`channel` = '00' [INFO ] 14:21:26.356 [ShardingSphere-Command-3] ShardingSphere-SQL - Actual SQL: ds_0 ::: UPDATE `t_qrcode_consume_details_4` SET `amount` = 100 WHERE `order_no` = '15362822300000061787990021341006',`code_type` = '00',`channel` = '00' [INFO ] 14:21:26.356 [ShardingSphere-Command-3] ShardingSphere-SQL - Actual SQL: ds_0 ::: UPDATE `t_qrcode_consume_details_5` SET `amount` = 100 WHERE `order_no` = '15362822300000061787990021341006',`code_type` = '00',`channel` = '00' [INFO ] 14:21:26.356 [ShardingSphere-Command-3] ShardingSphere-SQL - Actual SQL: ds_0 ::: UPDATE `t_qrcode_consume_details_6` SET `amount` = 100 WHERE `order_no` = '15362822300000061787990021341006',`code_type` = '00',`channel` = '00' [INFO ] 14:21:26.356 [ShardingSphere-Command-3] ShardingSphere-SQL - Actual SQL: ds_0 ::: UPDATE `t_qrcode_consume_details_7` SET `amount` = 100 WHERE `order_no` = '15362822300000061787990021341006',`code_type` = '00',`channel` = '00' [INFO ] 14:21:26.356 [ShardingSphere-Command-3] ShardingSphere-SQL - Actual SQL: ds_0 ::: UPDATE `t_qrcode_consume_details_8` SET `amount` = 100 WHERE `order_no` = '15362822300000061787990021341006',`code_type` = '00',`channel` = '00' [INFO ] 14:21:26.356 [ShardingSphere-Command-3] ShardingSphere-SQL - Actual SQL: ds_0 ::: UPDATE `t_qrcode_consume_details_9` SET `amount` = 100 WHERE `order_no` = '15362822300000061787990021341006',`code_type` = '00',`channel` = '00' [INFO ] 14:21:26.356 [ShardingSphere-Command-3] ShardingSphere-SQL - Actual SQL: ds_0 ::: UPDATE `t_qrcode_consume_details_10` SET `amount` = 100 WHERE `order_no` = '15362822300000061787990021341006',`code_type` = '00',`channel` = '00' [INFO ] 14:21:26.356 [ShardingSphere-Command-3] ShardingSphere-SQL - Actual SQL: ds_0 ::: UPDATE `t_qrcode_consume_details_11` SET `amount` = 100 WHERE `order_no` = '15362822300000061787990021341006',`code_type` = '00',`channel` = '00' [INFO ] 14:21:26.356 [ShardingSphere-Command-3] ShardingSphere-SQL - Actual SQL: ds_0 ::: UPDATE `t_qrcode_consume_details_12` SET `amount` = 100 WHERE `order_no` = '15362822300000061787990021341006',`code_type` = '00',`channel` = '00' [INFO ] 14:21:26.356 [ShardingSphere-Command-3] ShardingSphere-SQL - Actual SQL: ds_0 ::: UPDATE `t_qrcode_consume_details_13` SET `amount` = 100 WHERE `order_no` = '15362822300000061787990021341006',`code_type` = '00',`channel` = '00' [INFO ] 14:21:26.356 [ShardingSphere-Command-3] ShardingSphere-SQL - Actual SQL: ds_0 ::: UPDATE `t_qrcode_consume_details_14` SET `amount` = 100 WHERE `order_no` = '15362822300000061787990021341006',`code_type` = '00',`channel` = '00' [INFO ] 14:21:26.356 [ShardingSphere-Command-3] ShardingSphere-SQL - Actual SQL: ds_0 ::: UPDATE `t_qrcode_consume_details_15` SET `amount` = 100 WHERE `order_no` = '15362822300000061787990021341006',`code_type` = '00',`channel` = '00' [INFO ] 14:21:26.356 [ShardingSphere-Command-3] ShardingSphere-SQL - Actual SQL: ds_0 ::: UPDATE `t_qrcode_consume_details_16` SET `amount` = 100 WHERE `order_no` = '15362822300000061787990021341006',`code_type` = '00',`channel` = '00' [INFO ] 14:21:26.356 [ShardingSphere-Command-3] ShardingSphere-SQL - Actual SQL: ds_0 ::: UPDATE `t_qrcode_consume_details_17` SET `amount` = 100 WHERE `order_no` = '15362822300000061787990021341006',`code_type` = '00',`channel` = '00' [INFO ] 14:21:26.356 [ShardingSphere-Command-3] ShardingSphere-SQL - Actual SQL: ds_0 ::: UPDATE `t_qrcode_consume_details_18` SET `amount` = 100 WHERE `order_no` = '15362822300000061787990021341006',`code_type` = '00',`channel` = '00' [INFO ] 14:21:26.356 [ShardingSphere-Command-3] ShardingSphere-SQL - Actual SQL: ds_0 ::: UPDATE `t_qrcode_consume_details_19` SET `amount` = 100 WHERE `order_no` = '15362822300000061787990021341006',`code_type` = '00',`channel` = '00' [INFO ] 14:21:29.269 [epollEventLoopGroup-2-1] i.n.handler.logging.LoggingHandler - [id: 0x19a8f131, L:/0.0.0.0:3307] READ: [id: 0x1fe8faa7, L:/192.168.100.217:3307 - R:/192.168.100.217:44742] [INFO ] 14:21:29.270 [epollEventLoopGroup-2-1] i.n.handler.logging.LoggingHandler - [id: 0x19a8f131, L:/0.0.0.0:3307] READ COMPLETE`  </body>
		<created>2020-08-04 07:45:53</created>
		<closed>2020-08-12 01:32:21</closed>
	</bug>
	<bug>
		<id>6604</id>
		<title>sharding scaling&amp;proxy sync realtimedata in mysql with fieldtype text occur exception</title>
		<body>### sharding scaling&amp;proxy version sharding scaling&amp;proxy 4.1.1, MYSQL 5.7.26 ### Expected behavior sync realtimedata ### Actual behavior scaling got an exception,and proxy trace log find some log: ### Reason analyze (If you can) realtimeTask sync binlog data explain SQL field text error,got an special char with sql statement ### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc. 1、use scaling&amp;proxy sync data，history task sync work well； 2、sync realtime data，when sync row fieldtype is text，seam explain sql statement wrong.  some log:  **scaling exception:** ` [INFO ] 10:19:51.635 [pool-1-thread-2] o.a.s.s.c.e.e.SyncTaskExecuteCallback - HistoryDataSyncTask history-appbiz_data_test-t_qrcode_consume_details#0 execute finish [INFO ] 10:19:51.636 [pool-1-thread-2] o.a.s.s.c.c.task.SyncTaskController - history data migrate task historyGroup-appbiz_data_test finished, execute result: FINISHED [INFO ] 10:19:51.812 [pool-1-thread-3] com.zaxxer.hikari.HikariDataSource - HikariPool-6 - Starting... [INFO ] 10:19:51.862 [pool-1-thread-3] com.zaxxer.hikari.HikariDataSource - HikariPool-6 - Start completed. [INFO ] 10:19:53.675 [nioEventLoopGroup-2-1] i.n.handler.logging.LoggingHandler - [id: 0xa2f9b16a, L:/0.0.0.0:8888] READ: [id: 0x9c894650, L:/127.0.0.1:8888 - R:/127.0.0.1:45070] [INFO ] 10:19:53.675 [nioEventLoopGroup-2-1] i.n.handler.logging.LoggingHandler - [id: 0xa2f9b16a, L:/0.0.0.0:8888] READ COMPLETE [ERROR] 10:19:54.833 [pool-1-thread-8] o.a.s.s.c.e.e.SyncTaskExecuteCallback - RealtimeDataSyncTask realtime-appbiz_data_test execute exception exit org.apache.shardingsphere.shardingscaling.core.exception.SyncTaskExecuteException: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '01', '01', '2019-07-25 17:39:44', '2019-07-25 17:39:44', null, '00', 'ch_17itblm' at line 1 at org.apache.shardingsphere.shardingscaling.core.execute.executor.writer.AbstractJDBCWriter.write(AbstractJDBCWriter.java:90) at org.apache.shardingsphere.shardingscaling.core.execute.executor.writer.AbstractJDBCWriter.run(AbstractJDBCWriter.java:72) at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) at java.util.concurrent.FutureTask.run(FutureTask.java:266) at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) at java.lang.Thread.run(Thread.java:748) Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '01', '01', '2019-07-25 17:39:44', '2019-07-25 17:39:44', null, '00', 'ch_17itblm' at line 1 at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) at java.lang.reflect.Constructor.newInstance(Constructor.java:423) at com.mysql.jdbc.Util.handleNewInstance(Util.java:425) at com.mysql.jdbc.Util.getInstance(Util.java:408) at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:943) at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3973) at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3909) at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2527) at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2680) at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2490) at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858) at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197) at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44) at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java) at org.apache.shardingsphere.shardingscaling.core.execute.executor.writer.AbstractJDBCWriter.executeInsert(AbstractJDBCWriter.java:128) at org.apache.shardingsphere.shardingscaling.core.execute.executor.writer.AbstractJDBCWriter.flush(AbstractJDBCWriter.java:103) at org.apache.shardingsphere.shardingscaling.core.execute.executor.writer.AbstractJDBCWriter.write(AbstractJDBCWriter.java:81) ... 6 common frames omitted ` **proxy log:** ` [INFO ] 10:19:54.676 [ShardingSphere-Command-1] ShardingSphere-SQL - Logic SQL: select @@session.tx_read_only [INFO ] 10:19:54.676 [ShardingSphere-Command-1] ShardingSphere-SQL - SQLStatement: SelectStatementContext(super=CommonSQLStatementContext(sqlStatement=org.apache.shardingsphere.sql.parser.sql.statement.dml.SelectStatement@79b0e6cd, tablesContext=org.apache.shardingsphere.sql.parser.binder.segment.table.TablesContext@e6b0ee6), tablesContext=org.apache.shardingsphere.sql.parser.binder.segment.table.TablesContext@e6b0ee6, projectionsContext=ProjectionsContext(startIndex=7, stopIndex=28, distinctRow=false, projections=[ExpressionProjection(expression=@@session.tx_read_only, alias=Optional.empty)]), groupByContext=org.apache.shardingsphere.sql.parser.binder.segment.select.groupby.GroupByContext@557ba7cf, orderByContext=org.apache.shardingsphere.sql.parser.binder.segment.select.orderby.OrderByContext@ab82903, paginationContext=org.apache.shardingsphere.sql.parser.binder.segment.select.pagination.PaginationContext@74403017, containsSubquery=false) [INFO ] 10:19:54.676 [ShardingSphere-Command-1] ShardingSphere-SQL - Actual SQL: ds_0 ::: select @@session.tx_read_only [INFO ] 10:19:54.816 [ShardingSphere-Command-10] ShardingSphere-SQL - Logic SQL: INSERT INTO `t_qrcode_consume_details`(`order_no`,`user_id`,`code_type`,`channel`,`update_time`,`amount`,`scene`,`extra`,`paid_charge_id`,`init_status`,`status`,`gmt_create`,`gmt_modify`,`rev`,`pay_channel`,`pay_order_no`) VALUES('00028361564047575000010272479377','1','00','02','2019-07-25 17:39:35',200,'正常乘车扣费',x'',null,'01','01','2019-07-25 17:39:44','2019-07-25 17:39:44',null,'00','ch_17itblm9nkaehv9jc27277') [INFO ] 10:19:54.816 [ShardingSphere-Command-10] ShardingSphere-SQL - SQLStatement: InsertStatementContext(super=CommonSQLStatementContext(sqlStatement=org.apache.shardingsphere.sql.parser.sql.statement.dml.InsertStatement@64c000ae, tablesContext=org.apache.shardingsphere.sql.parser.binder.segment.table.TablesContext@4f6a3bc6), tablesContext=org.apache.shardingsphere.sql.parser.binder.segment.table.TablesContext@4f6a3bc6, columnNames=[order_no, user_id, code_type, channel, update_time, amount, scene, extra, paid_charge_id, init_status, status, gmt_create, gmt_modify, rev, pay_channel, pay_order_no], insertValueContexts=[InsertValueContext(parametersCount=0, valueExpressions=[LiteralExpressionSegment(startIndex=230, stopIndex=263, literals=00028361564047575000010272479377), LiteralExpressionSegment(startIndex=265, stopIndex=267, literals=1), LiteralExpressionSegment(startIndex=269, stopIndex=272, literals=00), LiteralExpressionSegment(startIndex=274, stopIndex=277, literals=02), LiteralExpressionSegment(startIndex=279, stopIndex=299, literals=2019-07-25 17:39:35), LiteralExpressionSegment(startIndex=301, stopIndex=303, literals=200), LiteralExpressionSegment(startIndex=305, stopIndex=312, literals=正常乘车扣费), LiteralExpressionSegment(startIndex=314, stopIndex=316, literals='), CommonExpressionSegment(startIndex=318, stopIndex=321, text=null), LiteralExpressionSegment(startIndex=323, stopIndex=326, literals=01), LiteralExpressionSegment(startIndex=328, stopIndex=331, literals=01), LiteralExpressionSegment(startIndex=333, stopIndex=353, literals=2019-07-25 17:39:44), LiteralExpressionSegment(startIndex=355, stopIndex=375, literals=2019-07-25 17:39:44), CommonExpressionSegment(startIndex=377, stopIndex=380, text=null), LiteralExpressionSegment(startIndex=382, stopIndex=385, literals=00), LiteralExpressionSegment(startIndex=387, stopIndex=413, literals=ch_17itblm9nkaehv9jc27277)], parameters=[])], generatedKeyContext=Optional.empty) [INFO ] 10:19:54.817 [ShardingSphere-Command-10] ShardingSphere-SQL - Actual SQL: ds_0 ::: INSERT INTO `t_qrcode_consume_details_1`(`order_no`,`user_id`,`code_type`,`channel`,`update_time`,`amount`,`scene`,`extra`,`paid_charge_id`,`init_status`,`status`,`gmt_create`,`gmt_modify`,`rev`,`pay_channel`,`pay_order_no`) VALUES('00028361564047575000010272479377', '1', '00', '02', '2019-07-25 17:39:35', 200, '正常乘车扣费', ''', null, '01', '01', '2019-07-25 17:39:44', '2019-07-25 17:39:44', null, '00', 'ch_17itblm9nkaehv9jc27277') [INFO ] 10:19:57.684 [epollEventLoopGroup-2-1] i.n.handler.logging.LoggingHandler - [id: 0xd054fba8, L:/0.0.0.0:3307] READ: [id: 0x6101b320, L:/192.168.100.217:3307 - R:/192.168.100.217:37556] [INFO ] 10:19:57.685 [epollEventLoopGroup-2-1] i.n.handler.logging.LoggingHandler - [id: 0xd054fba8, L:/0.0.0.0:3307] READ COMPLETE ` </body>
		<created>2020-08-04 03:54:47</created>
		<closed>2020-08-12 11:24:46</closed>
	</bug>
	<bug>
		<id>6603</id>
		<title>Failure test cases of DQL BaseIT for MySQL</title>
		<body>TODO:  - [x] Rewrite error of derived alias (#6643) - [x] Incompatible with sql_mode=only_full_group_by when test with MySQL 5.7.x or above. - [x] SELECT DISTINCT test cases error (#6658)  ## Bug Report  **For English only**, other languages will not accept.  Before report a bug, make sure you have:  - Searched open and closed [GitHub issues](https://github.com/apache/shardingsphere/issues). - Read documentation: [ShardingSphere Doc](https://shardingsphere.apache.org/document/current/en/overview).  Please pay attention on issues you submitted, because we maybe need more details.  If no response anymore and we cannot reproduce it on current information, we will **close it**.  Please answer these questions before submitting your issue. Thanks!  ### Which version of ShardingSphere did you use? built from master branch  ### Which project did you use? ShardingSphere-JDBC or ShardingSphere-Proxy? ShardingSphere-JDBC  ### Expected behavior Integration test using MySQL instead of H2. Expect all test cases pass.  ### Actual behavior There're several DQL cases failed.  ### Reason analyze (If you can)  ### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.  1. env.properties: databases=MySQL  2. mysql.host: 127.0.0.1 (suppose your MySQL is on localhost)  3. mvn clean install  ### Example codes for reproduce this issue (such as a github link).  ``` [INFO] Running org.apache.shardingsphere.dbtest.engine.dql.GeneralDQLIT [INFO] ======= Test Plan ======= [WARN] Total: 6752, Active: MySQL(1664), Disabled: H2(1312), Oracle(1232), SQLServer(1216), PostgreSQL(1328)  [ERROR] SQL::SELECT DISTINCT item_id FROM t_order_item, Parameter::[null], Expect::select_distinct_with_single_column_without_order_by.xml [ERROR] SQL::SELECT DISTINCT item_id FROM t_order_item, Parameter::[null], Expect::select_distinct_with_single_column_without_order_by.xml [ERROR] SQL::SELECT DISTINCT item_id FROM t_order_item, Parameter::[null], Expect::select_distinct_with_single_column_without_order_by.xml [ERROR] SQL::SELECT DISTINCT item_id FROM t_order_item, Parameter::[null], Expect::select_distinct_with_single_column_without_order_by.xml [ERROR] SQL::SELECT DISTINCT order_id, user_id, status FROM t_order, Parameter::[null], Expect::select_distinct_with_multi_column_without_order_by.xml [ERROR] SQL::SELECT DISTINCT order_id, user_id, status FROM t_order, Parameter::[null], Expect::select_distinct_with_multi_column_without_order_by.xml [ERROR] SQL::SELECT DISTINCT order_id, user_id, status FROM t_order, Parameter::[null], Expect::select_distinct_with_multi_column_without_order_by.xml [ERROR] SQL::SELECT DISTINCT order_id, user_id, status FROM t_order, Parameter::[null], Expect::select_distinct_with_multi_column_without_order_by.xml [ERROR] SQL::SELECT AVG(DISTINCT order_id) FROM t_order WHERE order_id &lt; 1100, Parameter::[null], Expect::select_distinct_with_avg.xml [ERROR] SQL::SELECT AVG(DISTINCT order_id) FROM t_order WHERE order_id &lt; 1100, Parameter::[null], Expect::select_distinct_with_avg.xml [ERROR] SQL::SELECT AVG(DISTINCT order_id) FROM t_order WHERE order_id &lt; 1100, Parameter::[null], Expect::select_distinct_with_avg.xml [ERROR] SQL::SELECT AVG(DISTINCT order_id) FROM t_order WHERE order_id &lt; 1100, Parameter::[null], Expect::select_distinct_with_avg.xml [ERROR] SQL::SELECT AVG(DISTINCT order_id) FROM t_order WHERE order_id &lt; 1100, Parameter::[null], Expect::select_distinct_with_avg.xml [ERROR] SQL::SELECT AVG(DISTINCT order_id) FROM t_order WHERE order_id &lt; 1100, Parameter::[null], Expect::select_distinct_with_avg.xml [ERROR] SQL::SELECT AVG(DISTINCT order_id) FROM t_order WHERE order_id &lt; 1100, Parameter::[null], Expect::select_distinct_with_avg.xml [ERROR] SQL::SELECT AVG(DISTINCT order_id) FROM t_order WHERE order_id &lt; 1100, Parameter::[null], Expect::select_distinct_with_avg.xml [ERROR] SQL::SELECT AVG(DISTINCT order_id) FROM t_order WHERE order_id &lt; 1100, Parameter::[null], Expect::select_distinct_with_avg.xml [ERROR] SQL::SELECT AVG(DISTINCT order_id) FROM t_order WHERE order_id &lt; 1100, Parameter::[null], Expect::select_distinct_with_avg.xml [ERROR] SQL::SELECT AVG(DISTINCT order_id) FROM t_order WHERE order_id &lt; 1100, Parameter::[null], Expect::select_distinct_with_avg.xml [ERROR] SQL::SELECT AVG(DISTINCT order_id) FROM t_order WHERE order_id &lt; 1100, Parameter::[null], Expect::select_distinct_with_avg.xml [ERROR] Tests run: 1664, Failures: 20, Errors: 28, Skipped: 0, Time elapsed: 472.36 s &lt;&lt;&lt; FAILURE! - in org.apache.shardingsphere.dbtest.engine.dql.GeneralDQLIT [ERROR] assertExecuteQuery[db -&gt; MySQL -&gt; Literal -&gt; select_group_by_with_keyword_alias.xml -&gt; SELECT SUM(order_id) AS orders_sum, user_id as `key` FROM t_order GROUP BY `key`](org.apache.shardingsphere.dbtest.engine.dql.GeneralDQLIT)  Time elapsed: 0.004 s  &lt;&lt;&lt; ERROR! com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'key' in 'field list' at org.apache.shardingsphere.dbtest.engine.dql.GeneralDQLIT.assertExecuteQueryForStatement(GeneralDQLIT.java:70) at org.apache.shardingsphere.dbtest.engine.dql.GeneralDQLIT.assertExecuteQuery(GeneralDQLIT.java:60) [ERROR] assertExecute[db -&gt; MySQL -&gt; Literal -&gt; select_group_by_with_keyword_alias.xml -&gt; SELECT SUM(order_id) AS orders_sum, user_id as `key` FROM t_order GROUP BY `key`](org.apache.shardingsphere.dbtest.engine.dql.GeneralDQLIT)  Time elapsed: 0.004 s  &lt;&lt;&lt; ERROR! com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'key' in 'field list' at org.apache.shardingsphere.dbtest.engine.dql.GeneralDQLIT.assertExecuteForStatement(GeneralDQLIT.java:99) at org.apache.shardingsphere.dbtest.engine.dql.GeneralDQLIT.assertExecute(GeneralDQLIT.java:90) [ERROR] assertExecuteQuery[tbl -&gt; MySQL -&gt; Literal -&gt; select_group_by_with_keyword_alias.xml -&gt; SELECT SUM(order_id) AS orders_sum, user_id as `key` FROM t_order GROUP BY `key`](org.apache.shardingsphere.dbtest.engine.dql.GeneralDQLIT)  Time elapsed: 0.001 s  &lt;&lt;&lt; ERROR! com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'key' in 'field list' at org.apache.shardingsphere.dbtest.engine.dql.GeneralDQLIT.assertExecuteQueryForStatement(GeneralDQLIT.java:70) at org.apache.shardingsphere.dbtest.engine.dql.GeneralDQLIT.assertExecuteQuery(GeneralDQLIT.java:60) [ERROR] assertExecute[tbl -&gt; MySQL -&gt; Literal -&gt; select_group_by_with_keyword_alias.xml -&gt; SELECT SUM(order_id) AS orders_sum, user_id as `key` FROM t_order GROUP BY `key`](org.apache.shardingsphere.dbtest.engine.dql.GeneralDQLIT)  Time elapsed: 0.001 s  &lt;&lt;&lt; ERROR! com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'key' in 'field list' at org.apache.shardingsphere.dbtest.engine.dql.GeneralDQLIT.assertExecuteForStatement(GeneralDQLIT.java:99) at org.apache.shardingsphere.dbtest.engine.dql.GeneralDQLIT.assertExecute(GeneralDQLIT.java:90) [ERROR] assertExecuteQuery[dbtbl_with_masterslave -&gt; MySQL -&gt; Literal -&gt; select_group_by_with_keyword_alias.xml -&gt; SELECT SUM(order_id) AS orders_sum, user_id as `key` FROM t_order GROUP BY `key`](org.apache.shardingsphere.dbtest.engine.dql.GeneralDQLIT)  Time elapsed: 0.006 s  &lt;&lt;&lt; ERROR! com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'key' in 'field list' at org.apache.shardingsphere.dbtest.engine.dql.GeneralDQLIT.assertExecuteQueryForStatement(GeneralDQLIT.java:70) at org.apache.shardingsphere.dbtest.engine.dql.GeneralDQLIT.assertExecuteQuery(GeneralDQLIT.java:60) [ERROR] assertExecute[dbtbl_with_masterslave -&gt; MySQL -&gt; Literal -&gt; select_group_by_with_keyword_alias.xml -&gt; SELECT SUM(order_id) AS orders_sum, user_id as `key` FROM t_order GROUP BY `key`](org.apache.shardingsphere.dbtest.engine.dql.GeneralDQLIT)  Time elapsed: 0.004 s  &lt;&lt;&lt; ERROR! com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'key' in 'field list' at org.apache.shardingsphere.dbtest.engine.dql.GeneralDQLIT.assertExecuteForStatement(GeneralDQLIT.java:99) at org.apache.shardingsphere.dbtest.engine.dql.GeneralDQLIT.assertExecute(GeneralDQLIT.java:90) [ERROR] assertExecuteQuery[db -&gt; MySQL -&gt; Placeholder -&gt; select_group_by_with_keyword_alias.xml -&gt; SELECT SUM(order_id) AS orders_sum, user_id as `key` FROM t_order GROUP BY `key`](org.apache.shardingsphere.dbtest.engine.dql.GeneralDQLIT)  Time elapsed: 0.004 s  &lt;&lt;&lt; ERROR! com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'key' in 'field list' at org.apache.shardingsphere.dbtest.engine.dql.GeneralDQLIT.assertExecuteQueryForPreparedStatement(GeneralDQLIT.java:80) at org.apache.shardingsphere.dbtest.engine.dql.GeneralDQLIT.assertExecuteQuery(GeneralDQLIT.java:62) [ERROR] assertExecute[db -&gt; MySQL -&gt; Placeholder -&gt; select_group_by_with_keyword_alias.xml -&gt; SELECT SUM(order_id) AS orders_sum, user_id as `key` FROM t_order GROUP BY `key`](org.apache.shardingsphere.dbtest.engine.dql.GeneralDQLIT)  Time elapsed: 0.004 s  &lt;&lt;&lt; ERROR! com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'key' in 'field list' at org.apache.shardingsphere.dbtest.engine.dql.GeneralDQLIT.assertExecuteForPreparedStatement(GeneralDQLIT.java:111) at org.apache.shardingsphere.dbtest.engine.dql.GeneralDQLIT.assertExecute(GeneralDQLIT.java:92) [ERROR] assertExecuteQuery[tbl -&gt; MySQL -&gt; Placeholder -&gt; select_group_by_with_keyword_alias.xml -&gt; SELECT SUM(order_id) AS orders_sum, user_id as `key` FROM t_order GROUP BY `key`](org.apache.shardingsphere.dbtest.engine.dql.GeneralDQLIT)  Time elapsed: 0.002 s  &lt;&lt;&lt; ERROR! com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'key' in 'field list' at org.apache.shardingsphere.dbtest.engine.dql.GeneralDQLIT.assertExecuteQueryForPreparedStatement(GeneralDQLIT.java:80) at org.apache.shardingsphere.dbtest.engine.dql.GeneralDQLIT.assertExecuteQuery(GeneralDQLIT.java:62) [ERROR] assertExecute[tbl -&gt; MySQL -&gt; Placeholder -&gt; select_group_by_with_keyword_alias.xml -&gt; SELECT SUM(order_id) AS orders_sum, user_id as `key` FROM t_order GROUP BY `key`](org.apache.shardingsphere.dbtest.engine.dql.GeneralDQLIT)  Time elapsed: 0.002 s  &lt;&lt;&lt; ERROR! com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'key' in 'field list' at org.apache.shardingsphere.dbtest.engine.dql.GeneralDQLIT.assertExecuteForPreparedStatement(GeneralDQLIT.java:111) at org.apache.shardingsphere.dbtest.engine.dql.GeneralDQLIT.assertExecute(GeneralDQLIT.java:92) [ERROR] assertExecuteQuery[dbtbl_with_masterslave -&gt; MySQL -&gt; Placeholder -&gt; select_group_by_with_keyword_alias.xml -&gt; SELECT SUM(order_id) AS orders_sum, user_id as `key` FROM t_order GROUP BY `key`](org.apache.shardingsphere.dbtest.engine.dql.GeneralDQLIT)  Time elapsed: 0.004 s  &lt;&lt;&lt; ERROR! com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'key' in 'field list' at org.apache.shardingsphere.dbtest.engine.dql.GeneralDQLIT.assertExecuteQueryForPreparedStatement(GeneralDQLIT.java:80) at org.apache.shardingsphere.dbtest.engine.dql.GeneralDQLIT.assertExecuteQuery(GeneralDQLIT.java:62) [ERROR] assertExecute[dbtbl_with_masterslave -&gt; MySQL -&gt; Placeholder -&gt; select_group_by_with_keyword_alias.xml -&gt; SELECT SUM(order_id) AS orders_sum, user_id as `key` FROM t_order GROUP BY `key`](org.apache.shardingsphere.dbtest.engine.dql.GeneralDQLIT)  Time elapsed: 0.005 s  &lt;&lt;&lt; ERROR! com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'key' in 'field list' at org.apache.shardingsphere.dbtest.engine.dql.GeneralDQLIT.assertExecuteForPreparedStatement(GeneralDQLIT.java:111) at org.apache.shardingsphere.dbtest.engine.dql.GeneralDQLIT.assertExecute(GeneralDQLIT.java:92) [ERROR] assertExecuteQuery[db -&gt; MySQL -&gt; Literal -&gt; select_pagination_with_diff_group_by_and_order_by.xml -&gt; SELECT i.user_id FROM t_order o JOIN t_order_item i ON o.user_id = i.user_id AND o.order_id = i.order_id WHERE o.user_id IN (?, ?) AND o.order_id BETWEEN ? AND ? GROUP BY i.user_id ORDER BY i.item_id DESC LIMIT ?, ?](org.apache.shardingsphere.dbtest.engine.dql.GeneralDQLIT)  Time elapsed: 0.002 s  &lt;&lt;&lt; ERROR! com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Expression #2 of SELECT list is not in GROUP BY clause and contains nonaggregated column 'db_0.i.item_id' which is not functionally dependent on columns in GROUP BY clause; this is incompatible with sql_mode=only_full_group_by at org.apache.shardingsphere.dbtest.engine.dql.GeneralDQLIT.assertExecuteQueryForStatement(GeneralDQLIT.java:70) at org.apache.shardingsphere.dbtest.engine.dql.GeneralDQLIT.assertExecuteQuery(GeneralDQLIT.java:60) [ERROR] assertExecute[db -&gt; MySQL -&gt; Literal -&gt; select_pagination_with_diff_group_by_and_order_by.xml -&gt; SELECT i.user_id FROM t_order o JOIN t_order_item i ON o.user_id = i.user_id AND o.order_id = i.order_id WHERE o.user_id IN (?, ?) AND o.order_id BETWEEN ? AND ? GROUP BY i.user_id ORDER BY i.item_id DESC LIMIT ?, ?](org.apache.shardingsphere.dbtest.engine.dql.GeneralDQLIT)  Time elapsed: 0.002 s  &lt;&lt;&lt; ERROR! com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Expression #2 of SELECT list is not in GROUP BY clause and contains nonaggregated column 'db_0.i.item_id' which is not functionally dependent on columns in GROUP BY clause; this is incompatible with sql_mode=only_full_group_by at org.apache.shardingsphere.dbtest.engine.dql.GeneralDQLIT.assertExecuteForStatement(GeneralDQLIT.java:99) at org.apache.shardingsphere.dbtest.engine.dql.GeneralDQLIT.assertExecute(GeneralDQLIT.java:90) [ERROR] assertExecuteQuery[tbl -&gt; MySQL -&gt; Literal -&gt; select_pagination_with_diff_group_by_and_order_by.xml -&gt; SELECT i.user_id FROM t_order o JOIN t_order_item i ON o.user_id = i.user_id AND o.order_id = i.order_id WHERE o.user_id IN (?, ?) AND o.order_id BETWEEN ? AND ? GROUP BY i.user_id ORDER BY i.item_id DESC LIMIT ?, ?](org.apache.shardingsphere.dbtest.engine.dql.GeneralDQLIT)  Time elapsed: 0.003 s  &lt;&lt;&lt; ERROR! com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Expression #2 of SELECT list is not in GROUP BY clause and contains nonaggregated column 'tbl.i.item_id' which is not functionally dependent on columns in GROUP BY clause; this is incompatible with sql_mode=only_full_group_by at org.apache.shardingsphere.dbtest.engine.dql.GeneralDQLIT.assertExecuteQueryForStatement(GeneralDQLIT.java:70) at org.apache.shardingsphere.dbtest.engine.dql.GeneralDQLIT.assertExecuteQuery(GeneralDQLIT.java:60) [ERROR] assertExecute[tbl -&gt; MySQL -&gt; Literal -&gt; select_pagination_with_diff_group_by_and_order_by.xml -&gt; SELECT i.user_id FROM t_order o JOIN t_order_item i ON o.user_id = i.user_id AND o.order_id = i.order_id WHERE o.user_id IN (?, ?) AND o.order_id BETWEEN ? AND ? GROUP BY i.user_id ORDER BY i.item_id DESC LIMIT ?, ?](org.apache.shardingsphere.dbtest.engine.dql.GeneralDQLIT)  Time elapsed: 0.002 s  &lt;&lt;&lt; ERROR! com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Expression #2 of SELECT list is not in GROUP BY clause and contains nonaggregated column 'tbl.i.item_id' which is not functionally dependent on columns in GROUP BY clause; this is incompatible with sql_mode=only_full_group_by at org.apache.shardingsphere.dbtest.engine.dql.GeneralDQLIT.assertExecuteForStatement(GeneralDQLIT.java:99) at org.apache.shardingsphere.dbtest.engine.dql.GeneralDQLIT.assertExecute(GeneralDQLIT.java:90) [ERROR] assertExecuteQuery[dbtbl_with_masterslave -&gt; MySQL -&gt; Literal -&gt; select_pagination_with_diff_group_by_and_order_by.xml -&gt; SELECT i.user_id FROM t_order o JOIN t_order_item i ON o.user_id = i.user_id AND o.order_id = i.order_id WHERE o.user_id IN (?, ?) AND o.order_id BETWEEN ? AND ? GROUP BY i.user_id ORDER BY i.item_id DESC LIMIT ?, ?](org.apache.shardingsphere.dbtest.engine.dql.GeneralDQLIT)  Time elapsed: 0.003 s  &lt;&lt;&lt; ERROR! com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Expression #2 of SELECT list is not in GROUP BY clause and contains nonaggregated column 'slave_db_0.i.item_id' which is not functionally dependent on columns in GROUP BY clause; this is incompatible with sql_mode=only_full_group_by at org.apache.shardingsphere.dbtest.engine.dql.GeneralDQLIT.assertExecuteQueryForStatement(GeneralDQLIT.java:70) at org.apache.shardingsphere.dbtest.engine.dql.GeneralDQLIT.assertExecuteQuery(GeneralDQLIT.java:60) [ERROR] assertExecute[dbtbl_with_masterslave -&gt; MySQL -&gt; Literal -&gt; select_pagination_with_diff_group_by_and_order_by.xml -&gt; SELECT i.user_id FROM t_order o JOIN t_order_item i ON o.user_id = i.user_id AND o.order_id = i.order_id WHERE o.user_id IN (?, ?) AND o.order_id BETWEEN ? AND ? GROUP BY i.user_id ORDER BY i.item_id DESC LIMIT ?, ?](org.apache.shardingsphere.dbtest.engine.dql.GeneralDQLIT)  Time elapsed: 0.003 s  &lt;&lt;&lt; ERROR! com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Expression #2 of SELECT list is not in GROUP BY clause and contains nonaggregated column 'slave_db_0.i.item_id' which is not functionally dependent on columns in GROUP BY clause; this is incompatible with sql_mode=only_full_group_by at org.apache.shardingsphere.dbtest.engine.dql.GeneralDQLIT.assertExecuteForStatement(GeneralDQLIT.java:99) at org.apache.shardingsphere.dbtest.engine.dql.GeneralDQLIT.assertExecute(GeneralDQLIT.java:90) [ERROR] assertExecuteQuery[masterslave -&gt; MySQL -&gt; Literal -&gt; select_pagination_with_diff_group_by_and_order_by.xml -&gt; SELECT i.user_id FROM t_order o JOIN t_order_item i ON o.user_id = i.user_id AND o.order_id = i.order_id WHERE o.user_id IN (?, ?) AND o.order_id BETWEEN ? AND ? GROUP BY i.user_id ORDER BY i.item_id DESC LIMIT ?, ?](org.apache.shardingsphere.dbtest.engine.dql.GeneralDQLIT)  Time elapsed: 0.001 s  &lt;&lt;&lt; ERROR! com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Expression #1 of ORDER BY clause is not in GROUP BY clause and contains nonaggregated column 'slave_0.i.item_id' which is not functionally dependent on columns in GROUP BY clause; this is incompatible with sql_mode=only_full_group_by at org.apache.shardingsphere.dbtest.engine.dql.GeneralDQLIT.assertExecuteQueryForStatement(GeneralDQLIT.java:70) at org.apache.shardingsphere.dbtest.engine.dql.GeneralDQLIT.assertExecuteQuery(GeneralDQLIT.java:60) [ERROR] assertExecute[masterslave -&gt; MySQL -&gt; Literal -&gt; select_pagination_with_diff_group_by_and_order_by.xml -&gt; SELECT i.user_id FROM t_order o JOIN t_order_item i ON o.user_id = i.user_id AND o.order_id = i.order_id WHERE o.user_id IN (?, ?) AND o.order_id BETWEEN ? AND ? GROUP BY i.user_id ORDER BY i.item_id DESC LIMIT ?, ?](org.apache.shardingsphere.dbtest.engine.dql.GeneralDQLIT)  Time elapsed: 0.001 s  &lt;&lt;&lt; ERROR! com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Expression #1 of ORDER BY clause is not in GROUP BY clause and contains nonaggregated column 'slave_1.i.item_id' which is not functionally dependent on columns in GROUP BY clause; this is incompatible with sql_mode=only_full_group_by at org.apache.shardingsphere.dbtest.engine.dql.GeneralDQLIT.assertExecuteForStatement(GeneralDQLIT.java:99) at org.apache.shardingsphere.dbtest.engine.dql.GeneralDQLIT.assertExecute(GeneralDQLIT.java:90) [ERROR] assertExecuteQuery[db -&gt; MySQL -&gt; Placeholder -&gt; select_pagination_with_diff_group_by_and_order_by.xml -&gt; SELECT i.user_id FROM t_order o JOIN t_order_item i ON o.user_id = i.user_id AND o.order_id = i.order_id WHERE o.user_id IN (?, ?) AND o.order_id BETWEEN ? AND ? GROUP BY i.user_id ORDER BY i.item_id DESC LIMIT ?, ?](org.apache.shardingsphere.dbtest.engine.dql.GeneralDQLIT)  Time elapsed: 0.003 s  &lt;&lt;&lt; ERROR! com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Expression #2 of SELECT list is not in GROUP BY clause and contains nonaggregated column 'db_0.i.item_id' which is not functionally dependent on columns in GROUP BY clause; this is incompatible with sql_mode=only_full_group_by at org.apache.shardingsphere.dbtest.engine.dql.GeneralDQLIT.assertExecuteQueryForPreparedStatement(GeneralDQLIT.java:80) at org.apache.shardingsphere.dbtest.engine.dql.GeneralDQLIT.assertExecuteQuery(GeneralDQLIT.java:62) [ERROR] assertExecute[db -&gt; MySQL -&gt; Placeholder -&gt; select_pagination_with_diff_group_by_and_order_by.xml -&gt; SELECT i.user_id FROM t_order o JOIN t_order_item i ON o.user_id = i.user_id AND o.order_id = i.order_id WHERE o.user_id IN (?, ?) AND o.order_id BETWEEN ? AND ? GROUP BY i.user_id ORDER BY i.item_id DESC LIMIT ?, ?](org.apache.shardingsphere.dbtest.engine.dql.GeneralDQLIT)  Time elapsed: 0.002 s  &lt;&lt;&lt; ERROR! com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Expression #2 of SELECT list is not in GROUP BY clause and contains nonaggregated column 'db_0.i.item_id' which is not functionally dependent on columns in GROUP BY clause; this is incompatible with sql_mode=only_full_group_by at org.apache.shardingsphere.dbtest.engine.dql.GeneralDQLIT.assertExecuteForPreparedStatement(GeneralDQLIT.java:111) at org.apache.shardingsphere.dbtest.engine.dql.GeneralDQLIT.assertExecute(GeneralDQLIT.java:92) [ERROR] assertExecuteQuery[tbl -&gt; MySQL -&gt; Placeholder -&gt; select_pagination_with_diff_group_by_and_order_by.xml -&gt; SELECT i.user_id FROM t_order o JOIN t_order_item i ON o.user_id = i.user_id AND o.order_id = i.order_id WHERE o.user_id IN (?, ?) AND o.order_id BETWEEN ? AND ? GROUP BY i.user_id ORDER BY i.item_id DESC LIMIT ?, ?](org.apache.shardingsphere.dbtest.engine.dql.GeneralDQLIT)  Time elapsed: 0.002 s  &lt;&lt;&lt; ERROR! com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Expression #2 of SELECT list is not in GROUP BY clause and contains nonaggregated column 'tbl.i.item_id' which is not functionally dependent on columns in GROUP BY clause; this is incompatible with sql_mode=only_full_group_by at org.apache.shardingsphere.dbtest.engine.dql.GeneralDQLIT.assertExecuteQueryForPreparedStatement(GeneralDQLIT.java:80) at org.apache.shardingsphere.dbtest.engine.dql.GeneralDQLIT.assertExecuteQuery(GeneralDQLIT.java:62) [ERROR] assertExecute[tbl -&gt; MySQL -&gt; Placeholder -&gt; select_pagination_with_diff_group_by_and_order_by.xml -&gt; SELECT i.user_id FROM t_order o JOIN t_order_item i ON o.user_id = i.user_id AND o.order_id = i.order_id WHERE o.user_id IN (?, ?) AND o.order_id BETWEEN ? AND ? GROUP BY i.user_id ORDER BY i.item_id DESC LIMIT ?, ?](org.apache.shardingsphere.dbtest.engine.dql.GeneralDQLIT)  Time elapsed: 0.003 s  &lt;&lt;&lt; ERROR! com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Expression #2 of SELECT list is not in GROUP BY clause and contains nonaggregated column 'tbl.i.item_id' which is not functionally dependent on columns in GROUP BY clause; this is incompatible with sql_mode=only_full_group_by at org.apache.shardingsphere.dbtest.engine.dql.GeneralDQLIT.assertExecuteForPreparedStatement(GeneralDQLIT.java:111) at org.apache.shardingsphere.dbtest.engine.dql.GeneralDQLIT.assertExecute(GeneralDQLIT.java:92) [ERROR] assertExecuteQuery[dbtbl_with_masterslave -&gt; MySQL -&gt; Placeholder -&gt; select_pagination_with_diff_group_by_and_order_by.xml -&gt; SELECT i.user_id FROM t_order o JOIN t_order_item i ON o.user_id = i.user_id AND o.order_id = i.order_id WHERE o.user_id IN (?, ?) AND o.order_id BETWEEN ? AND ? GROUP BY i.user_id ORDER BY i.item_id DESC LIMIT ?, ?](org.apache.shardingsphere.dbtest.engine.dql.GeneralDQLIT)  Time elapsed: 0.002 s  &lt;&lt;&lt; ERROR! com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Expression #2 of SELECT list is not in GROUP BY clause and contains nonaggregated column 'slave_db_0.i.item_id' which is not functionally dependent on columns in GROUP BY clause; this is incompatible with sql_mode=only_full_group_by at org.apache.shardingsphere.dbtest.engine.dql.GeneralDQLIT.assertExecuteQueryForPreparedStatement(GeneralDQLIT.java:80) at org.apache.shardingsphere.dbtest.engine.dql.GeneralDQLIT.assertExecuteQuery(GeneralDQLIT.java:62) [ERROR] assertExecute[dbtbl_with_masterslave -&gt; MySQL -&gt; Placeholder -&gt; select_pagination_with_diff_group_by_and_order_by.xml -&gt; SELECT i.user_id FROM t_order o JOIN t_order_item i ON o.user_id = i.user_id AND o.order_id = i.order_id WHERE o.user_id IN (?, ?) AND o.order_id BETWEEN ? AND ? GROUP BY i.user_id ORDER BY i.item_id DESC LIMIT ?, ?](org.apache.shardingsphere.dbtest.engine.dql.GeneralDQLIT)  Time elapsed: 0.004 s  &lt;&lt;&lt; ERROR! com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Expression #2 of SELECT list is not in GROUP BY clause and contains nonaggregated column 'slave_db_0.i.item_id' which is not functionally dependent on columns in GROUP BY clause; this is incompatible with sql_mode=only_full_group_by at org.apache.shardingsphere.dbtest.engine.dql.GeneralDQLIT.assertExecuteForPreparedStatement(GeneralDQLIT.java:111) at org.apache.shardingsphere.dbtest.engine.dql.GeneralDQLIT.assertExecute(GeneralDQLIT.java:92) [ERROR] assertExecuteQuery[masterslave -&gt; MySQL -&gt; Placeholder -&gt; select_pagination_with_diff_group_by_and_order_by.xml -&gt; SELECT i.user_id FROM t_order o JOIN t_order_item i ON o.user_id = i.user_id AND o.order_id = i.order_id WHERE o.user_id IN (?, ?) AND o.order_id BETWEEN ? AND ? GROUP BY i.user_id ORDER BY i.item_id DESC LIMIT ?, ?](org.apache.shardingsphere.dbtest.engine.dql.GeneralDQLIT)  Time elapsed: 0.002 s  &lt;&lt;&lt; ERROR! com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Expression #1 of ORDER BY clause is not in GROUP BY clause and contains nonaggregated column 'slave_0.i.item_id' which is not functionally dependent on columns in GROUP BY clause; this is incompatible with sql_mode=only_full_group_by at org.apache.shardingsphere.dbtest.engine.dql.GeneralDQLIT.assertExecuteQueryForPreparedStatement(GeneralDQLIT.java:80) at org.apache.shardingsphere.dbtest.engine.dql.GeneralDQLIT.assertExecuteQuery(GeneralDQLIT.java:62) [ERROR] assertExecute[masterslave -&gt; MySQL -&gt; Placeholder -&gt; select_pagination_with_diff_group_by_and_order_by.xml -&gt; SELECT i.user_id FROM t_order o JOIN t_order_item i ON o.user_id = i.user_id AND o.order_id = i.order_id WHERE o.user_id IN (?, ?) AND o.order_id BETWEEN ? AND ? GROUP BY i.user_id ORDER BY i.item_id DESC LIMIT ?, ?](org.apache.shardingsphere.dbtest.engine.dql.GeneralDQLIT)  Time elapsed: 0.001 s  &lt;&lt;&lt; ERROR! com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Expression #1 of ORDER BY clause is not in GROUP BY clause and contains nonaggregated column 'slave_1.i.item_id' which is not functionally dependent on columns in GROUP BY clause; this is incompatible with sql_mode=only_full_group_by at org.apache.shardingsphere.dbtest.engine.dql.GeneralDQLIT.assertExecuteForPreparedStatement(GeneralDQLIT.java:111) at org.apache.shardingsphere.dbtest.engine.dql.GeneralDQLIT.assertExecute(GeneralDQLIT.java:92) [ERROR] assertExecuteQuery[masterslave -&gt; MySQL -&gt; Literal -&gt; select_distinct_with_single_column_without_order_by.xml -&gt; SELECT DISTINCT item_id FROM t_order_item](org.apache.shardingsphere.dbtest.engine.dql.GeneralDQLIT)  Time elapsed: 0.004 s  &lt;&lt;&lt; FAILURE! java.lang.AssertionError:  Expected: is "140001"      but: was "100001" at org.apache.shardingsphere.dbtest.engine.dql.GeneralDQLIT.assertExecuteQueryForStatement(GeneralDQLIT.java:71) at org.apache.shardingsphere.dbtest.engine.dql.GeneralDQLIT.assertExecuteQuery(GeneralDQLIT.java:60) [ERROR] assertExecute[masterslave -&gt; MySQL -&gt; Literal -&gt; select_distinct_with_single_column_without_order_by.xml -&gt; SELECT DISTINCT item_id FROM t_order_item](org.apache.shardingsphere.dbtest.engine.dql.GeneralDQLIT)  Time elapsed: 0.003 s  &lt;&lt;&lt; FAILURE! java.lang.AssertionError:  Expected: is "140001"      but: was "100001" at org.apache.shardingsphere.dbtest.engine.dql.GeneralDQLIT.assertExecuteForStatement(GeneralDQLIT.java:101) at org.apache.shardingsphere.dbtest.engine.dql.GeneralDQLIT.assertExecute(GeneralDQLIT.java:90) [ERROR] assertExecuteQuery[masterslave -&gt; MySQL -&gt; Placeholder -&gt; select_distinct_with_single_column_without_order_by.xml -&gt; SELECT DISTINCT item_id FROM t_order_item](org.apache.shardingsphere.dbtest.engine.dql.GeneralDQLIT)  Time elapsed: 0.003 s  &lt;&lt;&lt; FAILURE! java.lang.AssertionError:  Expected: is "140001"      but: was "100001" at org.apache.shardingsphere.dbtest.engine.dql.GeneralDQLIT.assertExecuteQueryForPreparedStatement(GeneralDQLIT.java:81) at org.apache.shardingsphere.dbtest.engine.dql.GeneralDQLIT.assertExecuteQuery(GeneralDQLIT.java:62) [ERROR] assertExecute[masterslave -&gt; MySQL -&gt; Placeholder -&gt; select_distinct_with_single_column_without_order_by.xml -&gt; SELECT DISTINCT item_id FROM t_order_item](org.apache.shardingsphere.dbtest.engine.dql.GeneralDQLIT)  Time elapsed: 0.002 s  &lt;&lt;&lt; FAILURE! java.lang.AssertionError:  Expected: is "140001"      but: was "100001" at org.apache.shardingsphere.dbtest.engine.dql.GeneralDQLIT.assertExecuteForPreparedStatement(GeneralDQLIT.java:113) at org.apache.shardingsphere.dbtest.engine.dql.GeneralDQLIT.assertExecute(GeneralDQLIT.java:92) [ERROR] assertExecuteQuery[masterslave -&gt; MySQL -&gt; Literal -&gt; select_distinct_with_multi_column_without_order_by.xml -&gt; SELECT DISTINCT order_id, user_id, status FROM t_order](org.apache.shardingsphere.dbtest.engine.dql.GeneralDQLIT)  Time elapsed: 0.003 s  &lt;&lt;&lt; FAILURE! java.lang.AssertionError:  Expected: is "1900"      but: was "1000" at org.apache.shardingsphere.dbtest.engine.dql.GeneralDQLIT.assertExecuteQueryForStatement(GeneralDQLIT.java:71) at org.apache.shardingsphere.dbtest.engine.dql.GeneralDQLIT.assertExecuteQuery(GeneralDQLIT.java:60) [ERROR] assertExecute[masterslave -&gt; MySQL -&gt; Literal -&gt; select_distinct_with_multi_column_without_order_by.xml -&gt; SELECT DISTINCT order_id, user_id, status FROM t_order](org.apache.shardingsphere.dbtest.engine.dql.GeneralDQLIT)  Time elapsed: 0.003 s  &lt;&lt;&lt; FAILURE! java.lang.AssertionError:  Expected: is "1900"      but: was "1000" at org.apache.shardingsphere.dbtest.engine.dql.GeneralDQLIT.assertExecuteForStatement(GeneralDQLIT.java:101) at org.apache.shardingsphere.dbtest.engine.dql.GeneralDQLIT.assertExecute(GeneralDQLIT.java:90) [ERROR] assertExecuteQuery[masterslave -&gt; MySQL -&gt; Placeholder -&gt; select_distinct_with_multi_column_without_order_by.xml -&gt; SELECT DISTINCT order_id, user_id, status FROM t_order](org.apache.shardingsphere.dbtest.engine.dql.GeneralDQLIT)  Time elapsed: 0.003 s  &lt;&lt;&lt; FAILURE! java.lang.AssertionError:  Expected: is "1900"      but: was "1000" at org.apache.shardingsphere.dbtest.engine.dql.GeneralDQLIT.assertExecuteQueryForPreparedStatement(GeneralDQLIT.java:81) at org.apache.shardingsphere.dbtest.engine.dql.GeneralDQLIT.assertExecuteQuery(GeneralDQLIT.java:62) [ERROR] assertExecute[masterslave -&gt; MySQL -&gt; Placeholder -&gt; select_distinct_with_multi_column_without_order_by.xml -&gt; SELECT DISTINCT order_id, user_id, status FROM t_order](org.apache.shardingsphere.dbtest.engine.dql.GeneralDQLIT)  Time elapsed: 0.003 s  &lt;&lt;&lt; FAILURE! java.lang.AssertionError:  Expected: is "1900"      but: was "1000" at org.apache.shardingsphere.dbtest.engine.dql.GeneralDQLIT.assertExecuteForPreparedStatement(GeneralDQLIT.java:113) at org.apache.shardingsphere.dbtest.engine.dql.GeneralDQLIT.assertExecute(GeneralDQLIT.java:92) [ERROR] assertExecuteQuery[db -&gt; MySQL -&gt; Literal -&gt; select_distinct_with_avg.xml -&gt; SELECT AVG(DISTINCT order_id) FROM t_order WHERE order_id &lt; 1100](org.apache.shardingsphere.dbtest.engine.dql.GeneralDQLIT)  Time elapsed: 0.006 s  &lt;&lt;&lt; FAILURE! java.lang.AssertionError:  Expected: is "1000.5000"      but: was "1.0000" at org.apache.shardingsphere.dbtest.engine.dql.GeneralDQLIT.assertExecuteQueryForStatement(GeneralDQLIT.java:71) at org.apache.shardingsphere.dbtest.engine.dql.GeneralDQLIT.assertExecuteQuery(GeneralDQLIT.java:60) [ERROR] assertExecute[db -&gt; MySQL -&gt; Literal -&gt; select_distinct_with_avg.xml -&gt; SELECT AVG(DISTINCT order_id) FROM t_order WHERE order_id &lt; 1100](org.apache.shardingsphere.dbtest.engine.dql.GeneralDQLIT)  Time elapsed: 0.008 s  &lt;&lt;&lt; FAILURE! java.lang.AssertionError:  Expected: is "1000.5000"      but: was "1.0000" at org.apache.shardingsphere.dbtest.engine.dql.GeneralDQLIT.assertExecuteForStatement(GeneralDQLIT.java:101) at org.apache.shardingsphere.dbtest.engine.dql.GeneralDQLIT.assertExecute(GeneralDQLIT.java:90) [ERROR] assertExecuteQuery[tbl -&gt; MySQL -&gt; Literal -&gt; select_distinct_with_avg.xml -&gt; SELECT AVG(DISTINCT order_id) FROM t_order WHERE order_id &lt; 1100](org.apache.shardingsphere.dbtest.engine.dql.GeneralDQLIT)  Time elapsed: 0.012 s  &lt;&lt;&lt; FAILURE! java.lang.AssertionError:  Expected: is "1004.5000"      but: was "1.0000" at org.apache.shardingsphere.dbtest.engine.dql.GeneralDQLIT.assertExecuteQueryForStatement(GeneralDQLIT.java:71) at org.apache.shardingsphere.dbtest.engine.dql.GeneralDQLIT.assertExecuteQuery(GeneralDQLIT.java:60) [ERROR] assertExecute[tbl -&gt; MySQL -&gt; Literal -&gt; select_distinct_with_avg.xml -&gt; SELECT AVG(DISTINCT order_id) FROM t_order WHERE order_id &lt; 1100](org.apache.shardingsphere.dbtest.engine.dql.GeneralDQLIT)  Time elapsed: 0.009 s  &lt;&lt;&lt; FAILURE! java.lang.AssertionError:  Expected: is "1004.5000"      but: was "1.0000" at org.apache.shardingsphere.dbtest.engine.dql.GeneralDQLIT.assertExecuteForStatement(GeneralDQLIT.java:101) at org.apache.shardingsphere.dbtest.engine.dql.GeneralDQLIT.assertExecute(GeneralDQLIT.java:90) [ERROR] assertExecuteQuery[dbtbl_with_masterslave -&gt; MySQL -&gt; Literal -&gt; select_distinct_with_avg.xml -&gt; SELECT AVG(DISTINCT order_id) FROM t_order WHERE order_id &lt; 1100](org.apache.shardingsphere.dbtest.engine.dql.GeneralDQLIT)  Time elapsed: 0.036 s  &lt;&lt;&lt; FAILURE! java.lang.AssertionError:  Expected: is "1004.5000"      but: was "1.0000" at org.apache.shardingsphere.dbtest.engine.dql.GeneralDQLIT.assertExecuteQueryForStatement(GeneralDQLIT.java:71) at org.apache.shardingsphere.dbtest.engine.dql.GeneralDQLIT.assertExecuteQuery(GeneralDQLIT.java:60) [ERROR] assertExecute[dbtbl_with_masterslave -&gt; MySQL -&gt; Literal -&gt; select_distinct_with_avg.xml -&gt; SELECT AVG(DISTINCT order_id) FROM t_order WHERE order_id &lt; 1100](org.apache.shardingsphere.dbtest.engine.dql.GeneralDQLIT)  Time elapsed: 0.036 s  &lt;&lt;&lt; FAILURE! java.lang.AssertionError:  Expected: is "1004.5000"      but: was "1.0000" at org.apache.shardingsphere.dbtest.engine.dql.GeneralDQLIT.assertExecuteForStatement(GeneralDQLIT.java:101) at org.apache.shardingsphere.dbtest.engine.dql.GeneralDQLIT.assertExecute(GeneralDQLIT.java:90) [ERROR] assertExecuteQuery[db -&gt; MySQL -&gt; Placeholder -&gt; select_distinct_with_avg.xml -&gt; SELECT AVG(DISTINCT order_id) FROM t_order WHERE order_id &lt; 1100](org.apache.shardingsphere.dbtest.engine.dql.GeneralDQLIT)  Time elapsed: 0.007 s  &lt;&lt;&lt; FAILURE! java.lang.AssertionError:  Expected: is "1000.5000"      but: was "1.0000" at org.apache.shardingsphere.dbtest.engine.dql.GeneralDQLIT.assertExecuteQueryForPreparedStatement(GeneralDQLIT.java:81) at org.apache.shardingsphere.dbtest.engine.dql.GeneralDQLIT.assertExecuteQuery(GeneralDQLIT.java:62) [ERROR] assertExecute[db -&gt; MySQL -&gt; Placeholder -&gt; select_distinct_with_avg.xml -&gt; SELECT AVG(DISTINCT order_id) FROM t_order WHERE order_id &lt; 1100](org.apache.shardingsphere.dbtest.engine.dql.GeneralDQLIT)  Time elapsed: 0.006 s  &lt;&lt;&lt; FAILURE! java.lang.AssertionError:  Expected: is "1000.5000"      but: was "1.0000" at org.apache.shardingsphere.dbtest.engine.dql.GeneralDQLIT.assertExecuteForPreparedStatement(GeneralDQLIT.java:113) at org.apache.shardingsphere.dbtest.engine.dql.GeneralDQLIT.assertExecute(GeneralDQLIT.java:92) [ERROR] assertExecuteQuery[tbl -&gt; MySQL -&gt; Placeholder -&gt; select_distinct_with_avg.xml -&gt; SELECT AVG(DISTINCT order_id) FROM t_order WHERE order_id &lt; 1100](org.apache.shardingsphere.dbtest.engine.dql.GeneralDQLIT)  Time elapsed: 0.009 s  &lt;&lt;&lt; FAILURE! java.lang.AssertionError:  Expected: is "1004.5000"      but: was "1.0000" at org.apache.shardingsphere.dbtest.engine.dql.GeneralDQLIT.assertExecuteQueryForPreparedStatement(GeneralDQLIT.java:81) at org.apache.shardingsphere.dbtest.engine.dql.GeneralDQLIT.assertExecuteQuery(GeneralDQLIT.java:62) [ERROR] assertExecute[tbl -&gt; MySQL -&gt; Placeholder -&gt; select_distinct_with_avg.xml -&gt; SELECT AVG(DISTINCT order_id) FROM t_order WHERE order_id &lt; 1100](org.apache.shardingsphere.dbtest.engine.dql.GeneralDQLIT)  Time elapsed: 0.008 s  &lt;&lt;&lt; FAILURE! java.lang.AssertionError:  Expected: is "1004.5000"      but: was "1.0000" at org.apache.shardingsphere.dbtest.engine.dql.GeneralDQLIT.assertExecuteForPreparedStatement(GeneralDQLIT.java:113) at org.apache.shardingsphere.dbtest.engine.dql.GeneralDQLIT.assertExecute(GeneralDQLIT.java:92) [ERROR] assertExecuteQuery[dbtbl_with_masterslave -&gt; MySQL -&gt; Placeholder -&gt; select_distinct_with_avg.xml -&gt; SELECT AVG(DISTINCT order_id) FROM t_order WHERE order_id &lt; 1100](org.apache.shardingsphere.dbtest.engine.dql.GeneralDQLIT)  Time elapsed: 0.047 s  &lt;&lt;&lt; FAILURE! java.lang.AssertionError:  Expected: is "1004.5000"      but: was "1.0000" at org.apache.shardingsphere.dbtest.engine.dql.GeneralDQLIT.assertExecuteQueryForPreparedStatement(GeneralDQLIT.java:81) at org.apache.shardingsphere.dbtest.engine.dql.GeneralDQLIT.assertExecuteQuery(GeneralDQLIT.java:62) [ERROR] assertExecute[dbtbl_with_masterslave -&gt; MySQL -&gt; Placeholder -&gt; select_distinct_with_avg.xml -&gt; SELECT AVG(DISTINCT order_id) FROM t_order WHERE order_id &lt; 1100](org.apache.shardingsphere.dbtest.engine.dql.GeneralDQLIT)  Time elapsed: 0.035 s  &lt;&lt;&lt; FAILURE! java.lang.AssertionError:  Expected: is "1004.5000"      but: was "1.0000" at org.apache.shardingsphere.dbtest.engine.dql.GeneralDQLIT.assertExecuteForPreparedStatement(GeneralDQLIT.java:113) at org.apache.shardingsphere.dbtest.engine.dql.GeneralDQLIT.assertExecute(GeneralDQLIT.java:92) [INFO]  [INFO] Results: [INFO]  [ERROR] Failures:  [ERROR]   GeneralDQLIT.assertExecuteQuery:60-&gt;assertExecuteQueryForStatement:71-&gt;BaseDQLIT.assertResultSet:112-&gt;BaseDQLIT.assertRows:144  Expected: is "1000.5000"      but: was "1.0000" [ERROR]   GeneralDQLIT.assertExecuteQuery:62-&gt;assertExecuteQueryForPreparedStatement:81-&gt;BaseDQLIT.assertResultSet:112-&gt;BaseDQLIT.assertRows:144  Expected: is "1000.5000"      but: was "1.0000" [ERROR]   GeneralDQLIT.assertExecuteQuery:60-&gt;assertExecuteQueryForStatement:71-&gt;BaseDQLIT.assertResultSet:112-&gt;BaseDQLIT.assertRows:144  Expected: is "1004.5000"      but: was "1.0000" [ERROR]   GeneralDQLIT.assertExecuteQuery:62-&gt;assertExecuteQueryForPreparedStatement:81-&gt;BaseDQLIT.assertResultSet:112-&gt;BaseDQLIT.assertRows:144  Expected: is "1004.5000"      but: was "1.0000" [ERROR]   GeneralDQLIT.assertExecuteQuery:60-&gt;assertExecuteQueryForStatement:71-&gt;BaseDQLIT.assertResultSet:112-&gt;BaseDQLIT.assertRows:144  Expected: is "1900"      but: was "1000" [ERROR]   GeneralDQLIT.assertExecuteQuery:60-&gt;assertExecuteQueryForStatement:71-&gt;BaseDQLIT.assertResultSet:112-&gt;BaseDQLIT.assertRows:144  Expected: is "140001"      but: was "100001" [ERROR]   GeneralDQLIT.assertExecuteQuery:62-&gt;assertExecuteQueryForPreparedStatement:81-&gt;BaseDQLIT.assertResultSet:112-&gt;BaseDQLIT.assertRows:144  Expected: is "1900"      but: was "1000" [ERROR]   GeneralDQLIT.assertExecuteQuery:62-&gt;assertExecuteQueryForPreparedStatement:81-&gt;BaseDQLIT.assertResultSet:112-&gt;BaseDQLIT.assertRows:144  Expected: is "140001"      but: was "100001" [ERROR]   GeneralDQLIT.assertExecuteQuery:60-&gt;assertExecuteQueryForStatement:71-&gt;BaseDQLIT.assertResultSet:112-&gt;BaseDQLIT.assertRows:144  Expected: is "1004.5000"      but: was "1.0000" [ERROR]   GeneralDQLIT.assertExecuteQuery:62-&gt;assertExecuteQueryForPreparedStatement:81-&gt;BaseDQLIT.assertResultSet:112-&gt;BaseDQLIT.assertRows:144  Expected: is "1004.5000"      but: was "1.0000" [ERROR]   GeneralDQLIT.assertExecute:90-&gt;assertExecuteForStatement:101-&gt;BaseDQLIT.assertResultSet:112-&gt;BaseDQLIT.assertRows:144  Expected: is "1000.5000"      but: was "1.0000" [ERROR]   GeneralDQLIT.assertExecute:92-&gt;assertExecuteForPreparedStatement:113-&gt;BaseDQLIT.assertResultSet:112-&gt;BaseDQLIT.assertRows:144  Expected: is "1000.5000"      but: was "1.0000" [ERROR]   GeneralDQLIT.assertExecute:90-&gt;assertExecuteForStatement:101-&gt;BaseDQLIT.assertResultSet:112-&gt;BaseDQLIT.assertRows:144  Expected: is "1004.5000"      but: was "1.0000" [ERROR]   GeneralDQLIT.assertExecute:92-&gt;assertExecuteForPreparedStatement:113-&gt;BaseDQLIT.assertResultSet:112-&gt;BaseDQLIT.assertRows:144  Expected: is "1004.5000"      but: was "1.0000" [ERROR]   GeneralDQLIT.assertExecute:90-&gt;assertExecuteForStatement:101-&gt;BaseDQLIT.assertResultSet:112-&gt;BaseDQLIT.assertRows:144  Expected: is "1900"      but: was "1000" [ERROR]   GeneralDQLIT.assertExecute:90-&gt;assertExecuteForStatement:101-&gt;BaseDQLIT.assertResultSet:112-&gt;BaseDQLIT.assertRows:144  Expected: is "140001"      but: was "100001" [ERROR]   GeneralDQLIT.assertExecute:92-&gt;assertExecuteForPreparedStatement:113-&gt;BaseDQLIT.assertResultSet:112-&gt;BaseDQLIT.assertRows:144  Expected: is "1900"      but: was "1000" [ERROR]   GeneralDQLIT.assertExecute:92-&gt;assertExecuteForPreparedStatement:113-&gt;BaseDQLIT.assertResultSet:112-&gt;BaseDQLIT.assertRows:144  Expected: is "140001"      but: was "100001" [ERROR]   GeneralDQLIT.assertExecute:90-&gt;assertExecuteForStatement:101-&gt;BaseDQLIT.assertResultSet:112-&gt;BaseDQLIT.assertRows:144  Expected: is "1004.5000"      but: was "1.0000" [ERROR]   GeneralDQLIT.assertExecute:92-&gt;assertExecuteForPreparedStatement:113-&gt;BaseDQLIT.assertResultSet:112-&gt;BaseDQLIT.assertRows:144  Expected: is "1004.5000"      but: was "1.0000" [ERROR] Errors:  [ERROR]   GeneralDCLIT.assertExecuteUpdate:51 » SQL Operation ALTER USER failed for 'use... [ERROR]   GeneralDCLIT.assertExecuteUpdate:51 » SQL Operation DROP ROLE failed for 'role... [ERROR]   GeneralDCLIT.assertExecuteUpdate:51 » MySQLSyntaxError There is no such grant ... [ERROR]   GeneralDCLIT.assertExecuteUpdate:53 » SQL Operation ALTER USER failed for 'use... [ERROR]   GeneralDCLIT.assertExecuteUpdate:53 » SQL Operation CREATE ROLE failed for 'ro... [ERROR]   GeneralDCLIT.assertExecuteUpdate:53 » SQL Operation DROP ROLE failed for 'role... [ERROR]   GeneralDCLIT.assertExecuteUpdate:53 » MySQLSyntaxError There is no such grant ... [ERROR]   GeneralDCLIT.assertExecuteUpdate:51 » SQL Operation ALTER USER failed for 'use... [ERROR]   GeneralDCLIT.assertExecuteUpdate:51 » SQL Operation CREATE ROLE failed for 'ro... [ERROR]   GeneralDCLIT.assertExecuteUpdate:51 » SQL Operation DROP ROLE failed for 'role... [ERROR]   GeneralDCLIT.assertExecuteUpdate:51 » MySQLSyntaxError There is no such grant ... [ERROR]   GeneralDCLIT.assertExecuteUpdate:53 » SQL Operation ALTER USER failed for 'use... [ERROR]   GeneralDCLIT.assertExecuteUpdate:53 » SQL Operation CREATE ROLE failed for 'ro... [ERROR]   GeneralDCLIT.assertExecuteUpdate:53 » SQL Operation DROP ROLE failed for 'role... [ERROR]   GeneralDCLIT.assertExecuteUpdate:53 » MySQLSyntaxError There is no such grant ... [ERROR]   GeneralDCLIT.assertExecuteUpdate:51 » SQL Operation ALTER USER failed for 'use... [ERROR]   GeneralDCLIT.assertExecuteUpdate:51 » SQL Operation CREATE ROLE failed for 'ro... [ERROR]   GeneralDCLIT.assertExecuteUpdate:51 » SQL Operation DROP ROLE failed for 'role... [ERROR]   GeneralDCLIT.assertExecuteUpdate:51 » MySQLSyntaxError There is no such grant ... [ERROR]   GeneralDCLIT.assertExecuteUpdate:53 » SQL Operation ALTER USER failed for 'use... [ERROR]   GeneralDCLIT.assertExecuteUpdate:53 » SQL Operation CREATE ROLE failed for 'ro... [ERROR]   GeneralDCLIT.assertExecuteUpdate:53 » SQL Operation DROP ROLE failed for 'role... [ERROR]   GeneralDCLIT.assertExecuteUpdate:53 » MySQLSyntaxError There is no such grant ... [ERROR]   GeneralDCLIT.assertExecuteUpdate:51 » SQL Operation ALTER USER failed for 'use... [ERROR]   GeneralDCLIT.assertExecuteUpdate:51 » SQL Operation CREATE ROLE failed for 'ro... [ERROR]   GeneralDCLIT.assertExecuteUpdate:51 » SQL Operation DROP ROLE failed for 'role... [ERROR]   GeneralDCLIT.assertExecuteUpdate:51 » MySQLSyntaxError There is no such grant ... [ERROR]   GeneralDCLIT.assertExecuteUpdate:53 » SQL Operation ALTER USER failed for 'use... [ERROR]   GeneralDCLIT.assertExecuteUpdate:53 » SQL Operation CREATE ROLE failed for 'ro... [ERROR]   GeneralDCLIT.assertExecuteUpdate:53 » SQL Operation DROP ROLE failed for 'role... [ERROR]   GeneralDCLIT.assertExecuteUpdate:53 » MySQLSyntaxError There is no such grant ... [ERROR]   GeneralDCLIT.assertExecute:62 » SQL Operation ALTER USER failed for 'user1'@'l... [ERROR]   GeneralDCLIT.assertExecute:62 » SQL Operation CREATE ROLE failed for 'role1'@'... [ERROR]   GeneralDCLIT.assertExecute:62 » SQL Operation DROP ROLE failed for 'role1'@'%' [ERROR]   GeneralDCLIT.assertExecute:62 » MySQLSyntaxError There is no such grant define... [ERROR]   GeneralDCLIT.assertExecute:64 » SQL Operation ALTER USER failed for 'user1'@'l... [ERROR]   GeneralDCLIT.assertExecute:64 » SQL Operation CREATE ROLE failed for 'role1'@'... [ERROR]   GeneralDCLIT.assertExecute:64 » SQL Operation DROP ROLE failed for 'role1'@'%' [ERROR]   GeneralDCLIT.assertExecute:64 » MySQLSyntaxError There is no such grant define... [ERROR]   GeneralDCLIT.assertExecute:62 » SQL Operation ALTER USER failed for 'user1'@'l... [ERROR]   GeneralDCLIT.assertExecute:62 » SQL Operation CREATE ROLE failed for 'role1'@'... [ERROR]   GeneralDCLIT.assertExecute:62 » SQL Operation DROP ROLE failed for 'role1'@'%' [ERROR]   GeneralDCLIT.assertExecute:62 » MySQLSyntaxError There is no such grant define... [ERROR]   GeneralDCLIT.assertExecute:64 » SQL Operation ALTER USER failed for 'user1'@'l... [ERROR]   GeneralDCLIT.assertExecute:64 » SQL Operation CREATE ROLE failed for 'role1'@'... [ERROR]   GeneralDCLIT.assertExecute:64 » SQL Operation DROP ROLE failed for 'role1'@'%' [ERROR]   GeneralDCLIT.assertExecute:64 » MySQLSyntaxError There is no such grant define... [ERROR]   GeneralDCLIT.assertExecute:62 » SQL Operation ALTER USER failed for 'user1'@'l... [ERROR]   GeneralDCLIT.assertExecute:62 » SQL Operation CREATE ROLE failed for 'role1'@'... [ERROR]   GeneralDCLIT.assertExecute:62 » SQL Operation DROP ROLE failed for 'role1'@'%' [ERROR]   GeneralDCLIT.assertExecute:62 » MySQLSyntaxError There is no such grant define... [ERROR]   GeneralDCLIT.assertExecute:64 » SQL Operation ALTER USER failed for 'user1'@'l... [ERROR]   GeneralDCLIT.assertExecute:64 » SQL Operation CREATE ROLE failed for 'role1'@'... [ERROR]   GeneralDCLIT.assertExecute:64 » SQL Operation DROP ROLE failed for 'role1'@'%' [ERROR]   GeneralDCLIT.assertExecute:64 » MySQLSyntaxError There is no such grant define... [ERROR]   GeneralDCLIT.assertExecute:62 » SQL Operation ALTER USER failed for 'user1'@'l... [ERROR]   GeneralDCLIT.assertExecute:62 » SQL Operation CREATE ROLE failed for 'role1'@'... [ERROR]   GeneralDCLIT.assertExecute:62 » SQL Operation DROP ROLE failed for 'role1'@'%' [ERROR]   GeneralDCLIT.assertExecute:62 » MySQLSyntaxError There is no such grant define... [ERROR]   GeneralDCLIT.assertExecute:64 » SQL Operation ALTER USER failed for 'user1'@'l... [ERROR]   GeneralDCLIT.assertExecute:64 » SQL Operation CREATE ROLE failed for 'role1'@'... [ERROR]   GeneralDCLIT.assertExecute:64 » SQL Operation DROP ROLE failed for 'role1'@'%' [ERROR]   GeneralDCLIT.assertExecute:64 » MySQLSyntaxError There is no such grant define... [ERROR]   GeneralDQLIT.assertExecuteQuery:60-&gt;assertExecuteQueryForStatement:70 » MySQLSyntaxError [ERROR]   GeneralDQLIT.assertExecuteQuery:60-&gt;assertExecuteQueryForStatement:70 » MySQLSyntaxError [ERROR]   GeneralDQLIT.assertExecuteQuery:62-&gt;assertExecuteQueryForPreparedStatement:80 » MySQLSyntaxError [ERROR]   GeneralDQLIT.assertExecuteQuery:62-&gt;assertExecuteQueryForPreparedStatement:80 » MySQLSyntaxError [ERROR]   GeneralDQLIT.assertExecuteQuery:60-&gt;assertExecuteQueryForStatement:70 » MySQLSyntaxError [ERROR]   GeneralDQLIT.assertExecuteQuery:60-&gt;assertExecuteQueryForStatement:70 » MySQLSyntaxError [ERROR]   GeneralDQLIT.assertExecuteQuery:62-&gt;assertExecuteQueryForPreparedStatement:80 » MySQLSyntaxError [ERROR]   GeneralDQLIT.assertExecuteQuery:62-&gt;assertExecuteQueryForPreparedStatement:80 » MySQLSyntaxError [ERROR]   GeneralDQLIT.assertExecuteQuery:60-&gt;assertExecuteQueryForStatement:70 » MySQLSyntaxError [ERROR]   GeneralDQLIT.assertExecuteQuery:62-&gt;assertExecuteQueryForPreparedStatement:80 » MySQLSyntaxError [ERROR]   GeneralDQLIT.assertExecuteQuery:60-&gt;assertExecuteQueryForStatement:70 » MySQLSyntaxError [ERROR]   GeneralDQLIT.assertExecuteQuery:60-&gt;assertExecuteQueryForStatement:70 » MySQLSyntaxError [ERROR]   GeneralDQLIT.assertExecuteQuery:62-&gt;assertExecuteQueryForPreparedStatement:80 » MySQLSyntaxError [ERROR]   GeneralDQLIT.assertExecuteQuery:62-&gt;assertExecuteQueryForPreparedStatement:80 » MySQLSyntaxError [ERROR]   GeneralDQLIT.assertExecute:90-&gt;assertExecuteForStatement:99 » MySQLSyntaxError [ERROR]   GeneralDQLIT.assertExecute:90-&gt;assertExecuteForStatement:99 » MySQLSyntaxError [ERROR]   GeneralDQLIT.assertExecute:92-&gt;assertExecuteForPreparedStatement:111 » MySQLSyntaxError [ERROR]   GeneralDQLIT.assertExecute:92-&gt;assertExecuteForPreparedStatement:111 » MySQLSyntaxError [ERROR]   GeneralDQLIT.assertExecute:90-&gt;assertExecuteForStatement:99 » MySQLSyntaxError [ERROR]   GeneralDQLIT.assertExecute:90-&gt;assertExecuteForStatement:99 » MySQLSyntaxError [ERROR]   GeneralDQLIT.assertExecute:92-&gt;assertExecuteForPreparedStatement:111 » MySQLSyntaxError [ERROR]   GeneralDQLIT.assertExecute:92-&gt;assertExecuteForPreparedStatement:111 » MySQLSyntaxError [ERROR]   GeneralDQLIT.assertExecute:90-&gt;assertExecuteForStatement:99 » MySQLSyntaxError [ERROR]   GeneralDQLIT.assertExecute:92-&gt;assertExecuteForPreparedStatement:111 » MySQLSyntaxError [ERROR]   GeneralDQLIT.assertExecute:90-&gt;assertExecuteForStatement:99 » MySQLSyntaxError [ERROR]   GeneralDQLIT.assertExecute:90-&gt;assertExecuteForStatement:99 » MySQLSyntaxError [ERROR]   GeneralDQLIT.assertExecute:92-&gt;assertExecuteForPreparedStatement:111 » MySQLSyntaxError [ERROR]   GeneralDQLIT.assertExecute:92-&gt;assertExecuteForPreparedStatement:111 » MySQLSyntaxError [INFO]  [ERROR] Tests run: 2880, Failures: 20, Errors: 91, Skipped: 0 [INFO]  [INFO]  [INFO] --- maven-source-plugin:2.4:jar-no-fork (attach-sources) @ shardingsphere-test-suite --- [INFO]  [INFO] --- apache-rat-plugin:0.12:check (default) @ shardingsphere-test-suite --- [INFO] Enabled default license matchers. [INFO] Will parse SCM ignores for exclusions... [INFO] Finished adding exclusions from SCM ignore files. [INFO] 61 implicit excludes (use -debug for more details). [INFO] Exclude: **/target/** [INFO] Exclude: **/logs/** [INFO] Exclude: **/*.log [INFO] Exclude: **/*.iml [INFO] Exclude: **/.idea/** [INFO] Exclude: **/*.classpath [INFO] Exclude: **/.project [INFO] Exclude: **/.settings/** [INFO] Exclude: **/dependency-reduced-pom.xml [INFO] Exclude: **/.gitignore [INFO] Exclude: **/.gitmodules [INFO] Exclude: **/.git/** [INFO] Exclude: **/.travis.yml [INFO] Exclude: **/.mvn/jvm.config [INFO] Exclude: **/.mvn/wrapper/maven-wrapper.properties [INFO] Exclude: **/.github/** [INFO] Exclude: **/*.md [INFO] Exclude: **/*.MD [INFO] Exclude: **/*.txt [INFO] Exclude: **/docs/** [INFO] Exclude: **/.babelrc [INFO] Exclude: **/.editorconfig [INFO] Exclude: **/.eslintignore [INFO] Exclude: **/package.json [INFO] Exclude: **/assets/** [INFO] Exclude: **/dist/** [INFO] Exclude: **/etc/** [INFO] Exclude: **/node/** [INFO] Exclude: **/node_modules/** [INFO] Exclude: **/test/coverage/** [INFO] Exclude: **/package-lock.json [INFO] Exclude: /examples/** [INFO] 631 resources included (use -debug for more details) [INFO] Rat check: Summary over all files. Unapproved: 0, unknown: 0, generated: 0, approved: 631 licenses. [INFO]  [INFO] --- maven-failsafe-plugin:2.22.0:verify (integration-tests) @ shardingsphere-test-suite --- ``` </body>
		<created>2020-08-04 01:49:11</created>
		<closed>2020-09-16 04:05:54</closed>
	</bug>
	<bug>
		<id>6600</id>
		<title>Failure test cases of DCL BaseIT for MySQL</title>
		<body>TODO:  - [x] CREATE USER parse error (#6664) - [x] Fix xml format error - [x] Reduce time cost from 1 hour to  5 minutes - [x] Clean ROLE resources for each test  ## Bug Report  **For English only**, other languages will not accept.  Before report a bug, make sure you have:  - Searched open and closed [GitHub issues](https://github.com/apache/shardingsphere/issues). - Read documentation: [ShardingSphere Doc](https://shardingsphere.apache.org/document/current/en/overview).  Please pay attention on issues you submitted, because we maybe need more details.  If no response anymore and we cannot reproduce it on current information, we will **close it**.  Please answer these questions before submitting your issue. Thanks!  ### Which version of ShardingSphere did you use? built from master branch  ### Which project did you use? ShardingSphere-JDBC or ShardingSphere-Proxy? ShardingSphere-JDBC  ### Expected behavior Integration test using MySQL instead of H2. Expect all test cases pass.  ### Actual behavior There're several DCL cases failed.  ### Reason analyze (If you can)  ### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.  1. env.properties: databases=MySQL  2. mysql.host: 127.0.0.1 (suppose your MySQL is on localhost)  3. mvn clean install  ### Example codes for reproduce this issue (such as a github link).  ``` [INFO] Scanning for projects... [INFO] ------------------------------------------------------------------------ [INFO] Detecting the operating system and CPU architecture [INFO] ------------------------------------------------------------------------ [INFO] os.detected.name: windows [INFO] os.detected.arch: x86_64 [INFO] os.detected.version: 10.0 [INFO] os.detected.version.major: 10 [INFO] os.detected.version.minor: 0 [INFO] os.detected.classifier: windows-x86_64 [INFO]  [INFO] --------&lt; org.apache.shardingsphere:shardingsphere-test-suite &gt;--------- [INFO] Building shardingsphere-test-suite 5.0.0-RC1-SNAPSHOT [INFO] --------------------------------[ jar ]--------------------------------- [INFO]  [INFO] --- maven-enforcer-plugin:1.4:enforce (enforce-maven-version) @ shardingsphere-test-suite --- [INFO]  [INFO] --- maven-enforcer-plugin:1.4:enforce (enforce-banned-dependencies) @ shardingsphere-test-suite --- [INFO]  [INFO] --- maven-checkstyle-plugin:3.1.0:check (validate) @ shardingsphere-test-suite --- [INFO]  [INFO] --- maven-resources-plugin:2.7:copy-resources (copy-resources) @ shardingsphere-test-suite --- [INFO] Using 'UTF-8' encoding to copy filtered resources. [INFO] Copying 578 resources [INFO]  [INFO] --- jacoco-maven-plugin:0.8.5:prepare-agent (default) @ shardingsphere-test-suite --- [INFO]  [INFO] --- maven-remote-resources-plugin:1.5:process (process-resource-bundles) @ shardingsphere-test-suite --- [INFO]  [INFO] --- maven-resources-plugin:2.7:resources (default-resources) @ shardingsphere-test-suite --- [INFO] Using 'UTF-8' encoding to copy filtered resources. [INFO] Copying 3 resources [INFO]  [INFO] --- maven-compiler-plugin:3.3:compile (default-compile) @ shardingsphere-test-suite --- [INFO] No sources to compile [INFO]  [INFO] --- maven-resources-plugin:2.7:testResources (default-testResources) @ shardingsphere-test-suite --- [INFO] Using 'UTF-8' encoding to copy filtered resources. [INFO] Copying 578 resources [INFO] Copying 3 resources [INFO]  [INFO] --- maven-compiler-plugin:3.3:testCompile (default-testCompile) @ shardingsphere-test-suite --- [INFO] Nothing to compile - all classes are up to date [INFO]  [INFO] --- maven-surefire-plugin:2.22.0:test (default-test) @ shardingsphere-test-suite --- [INFO]  [INFO] ------------------------------------------------------- [INFO]  T E S T S [INFO] ------------------------------------------------------- [INFO]  [INFO] Results: [INFO]  [INFO] Tests run: 0, Failures: 0, Errors: 0, Skipped: 0 [INFO]  [INFO]  [INFO] --- jacoco-maven-plugin:0.8.5:report (report) @ shardingsphere-test-suite --- [INFO] Analyzed bundle 'shardingsphere-test-suite' with 0 classes [INFO]  [INFO] --- maven-jar-plugin:2.6:jar (default-jar) @ shardingsphere-test-suite --- [INFO]  [INFO] --- maven-javadoc-plugin:2.10.3:jar (attach-javadocs) @ shardingsphere-test-suite --- [INFO]  [INFO] --- maven-site-plugin:3.4:attach-descriptor (attach-descriptor) @ shardingsphere-test-suite --- [INFO]  [INFO] --- maven-failsafe-plugin:2.22.0:integration-test (integration-tests) @ shardingsphere-test-suite --- [INFO]  [INFO] ------------------------------------------------------- [INFO]  T E S T S [INFO] ------------------------------------------------------- [INFO] Running org.apache.shardingsphere.dbtest.engine.dcl.GeneralDCLIT [INFO] ======= Test Plan ======= [WARN] Total: 3760, Active: MySQL(416), Disabled: PostgreSQL(1664), Oracle(832), SQLServer(848)   line 1:38 mismatched input '&lt;EOF&gt;' expecting {',', DEFAULT, DISCARD, IDENTIFIED} line 1:38 mismatched input '&lt;EOF&gt;' expecting {',', DEFAULT, DISCARD, IDENTIFIED} line 1:38 mismatched input '&lt;EOF&gt;' expecting {',', DEFAULT, DISCARD, IDENTIFIED} line 1:38 mismatched input '&lt;EOF&gt;' expecting {',', DEFAULT, DISCARD, IDENTIFIED} line 1:38 mismatched input '&lt;EOF&gt;' expecting {',', DEFAULT, DISCARD, IDENTIFIED} line 1:38 mismatched input '&lt;EOF&gt;' expecting {',', DEFAULT, DISCARD, IDENTIFIED} line 1:38 mismatched input '&lt;EOF&gt;' expecting {',', DEFAULT, DISCARD, IDENTIFIED} line 1:38 mismatched input '&lt;EOF&gt;' expecting {',', DEFAULT, DISCARD, IDENTIFIED} line 1:38 mismatched input '&lt;EOF&gt;' expecting {',', DEFAULT, DISCARD, IDENTIFIED} line 1:65 mismatched input '&lt;EOF&gt;' expecting {',', DEFAULT} line 1:65 mismatched input '&lt;EOF&gt;' expecting {',', DEFAULT} line 1:65 mismatched input '&lt;EOF&gt;' expecting {',', DEFAULT} line 1:65 mismatched input '&lt;EOF&gt;' expecting {',', DEFAULT} line 1:65 mismatched input '&lt;EOF&gt;' expecting {',', DEFAULT} line 1:65 mismatched input '&lt;EOF&gt;' expecting {',', DEFAULT} line 1:65 mismatched input '&lt;EOF&gt;' expecting {',', DEFAULT} line 1:65 mismatched input '&lt;EOF&gt;' expecting {',', DEFAULT} line 1:65 mismatched input '&lt;EOF&gt;' expecting {',', DEFAULT} [ERROR] Tests run: 416, Failures: 0, Errors: 63, Skipped: 0, Time elapsed: 4,355.159 s &lt;&lt;&lt; FAILURE! - in org.apache.shardingsphere.dbtest.engine.dcl.GeneralDCLIT [ERROR] assertExecute[db -&gt; MySQL -&gt; Literal -&gt; CREATE ROLE role1](org.apache.shardingsphere.dbtest.engine.dcl.GeneralDCLIT)  Time elapsed: 3.003 s  &lt;&lt;&lt; ERROR! java.sql.SQLException: Operation CREATE ROLE failed for 'role1'@'%' at org.apache.shardingsphere.dbtest.engine.dcl.GeneralDCLIT.assertExecute(GeneralDCLIT.java:62)  [ERROR] assertExecuteUpdate[tbl -&gt; MySQL -&gt; Literal -&gt; CREATE ROLE role1](org.apache.shardingsphere.dbtest.engine.dcl.GeneralDCLIT)  Time elapsed: 1.741 s  &lt;&lt;&lt; ERROR! java.sql.SQLException: Operation CREATE ROLE failed for 'role1'@'%' at org.apache.shardingsphere.dbtest.engine.dcl.GeneralDCLIT.assertExecuteUpdate(GeneralDCLIT.java:51)  [ERROR] assertExecute[tbl -&gt; MySQL -&gt; Literal -&gt; CREATE ROLE role1](org.apache.shardingsphere.dbtest.engine.dcl.GeneralDCLIT)  Time elapsed: 1.98 s  &lt;&lt;&lt; ERROR! java.sql.SQLException: Operation CREATE ROLE failed for 'role1'@'%' at org.apache.shardingsphere.dbtest.engine.dcl.GeneralDCLIT.assertExecute(GeneralDCLIT.java:62)  [ERROR] assertExecuteUpdate[dbtbl_with_masterslave -&gt; MySQL -&gt; Literal -&gt; CREATE ROLE role1](org.apache.shardingsphere.dbtest.engine.dcl.GeneralDCLIT)  Time elapsed: 31.275 s  &lt;&lt;&lt; ERROR! java.sql.SQLException: Operation CREATE ROLE failed for 'role1'@'%' at org.apache.shardingsphere.dbtest.engine.dcl.GeneralDCLIT.assertExecuteUpdate(GeneralDCLIT.java:51)  [ERROR] assertExecute[dbtbl_with_masterslave -&gt; MySQL -&gt; Literal -&gt; CREATE ROLE role1](org.apache.shardingsphere.dbtest.engine.dcl.GeneralDCLIT)  Time elapsed: 30.508 s  &lt;&lt;&lt; ERROR! java.sql.SQLException: Operation CREATE ROLE failed for 'role1'@'%' at org.apache.shardingsphere.dbtest.engine.dcl.GeneralDCLIT.assertExecute(GeneralDCLIT.java:62)  [ERROR] assertExecuteUpdate[masterslave -&gt; MySQL -&gt; Literal -&gt; CREATE ROLE role1](org.apache.shardingsphere.dbtest.engine.dcl.GeneralDCLIT)  Time elapsed: 3.176 s  &lt;&lt;&lt; ERROR! java.sql.SQLException: Operation CREATE ROLE failed for 'role1'@'%' at org.apache.shardingsphere.dbtest.engine.dcl.GeneralDCLIT.assertExecuteUpdate(GeneralDCLIT.java:51)  [ERROR] assertExecute[masterslave -&gt; MySQL -&gt; Literal -&gt; CREATE ROLE role1](org.apache.shardingsphere.dbtest.engine.dcl.GeneralDCLIT)  Time elapsed: 3.855 s  &lt;&lt;&lt; ERROR! java.sql.SQLException: Operation CREATE ROLE failed for 'role1'@'%' at org.apache.shardingsphere.dbtest.engine.dcl.GeneralDCLIT.assertExecute(GeneralDCLIT.java:62)  [ERROR] assertExecuteUpdate[db -&gt; MySQL -&gt; Placeholder -&gt; CREATE ROLE role1](org.apache.shardingsphere.dbtest.engine.dcl.GeneralDCLIT)  Time elapsed: 3.392 s  &lt;&lt;&lt; ERROR! java.sql.SQLException: Operation CREATE ROLE failed for 'role1'@'%' at org.apache.shardingsphere.dbtest.engine.dcl.GeneralDCLIT.assertExecuteUpdate(GeneralDCLIT.java:53)  [ERROR] assertExecute[db -&gt; MySQL -&gt; Placeholder -&gt; CREATE ROLE role1](org.apache.shardingsphere.dbtest.engine.dcl.GeneralDCLIT)  Time elapsed: 3.167 s  &lt;&lt;&lt; ERROR! java.sql.SQLException: Operation CREATE ROLE failed for 'role1'@'%' at org.apache.shardingsphere.dbtest.engine.dcl.GeneralDCLIT.assertExecute(GeneralDCLIT.java:64)  [ERROR] assertExecuteUpdate[tbl -&gt; MySQL -&gt; Placeholder -&gt; CREATE ROLE role1](org.apache.shardingsphere.dbtest.engine.dcl.GeneralDCLIT)  Time elapsed: 1.973 s  &lt;&lt;&lt; ERROR! java.sql.SQLException: Operation CREATE ROLE failed for 'role1'@'%' at org.apache.shardingsphere.dbtest.engine.dcl.GeneralDCLIT.assertExecuteUpdate(GeneralDCLIT.java:53)  [ERROR] assertExecute[tbl -&gt; MySQL -&gt; Placeholder -&gt; CREATE ROLE role1](org.apache.shardingsphere.dbtest.engine.dcl.GeneralDCLIT)  Time elapsed: 2.062 s  &lt;&lt;&lt; ERROR! java.sql.SQLException: Operation CREATE ROLE failed for 'role1'@'%' at org.apache.shardingsphere.dbtest.engine.dcl.GeneralDCLIT.assertExecute(GeneralDCLIT.java:64)  [ERROR] assertExecuteUpdate[dbtbl_with_masterslave -&gt; MySQL -&gt; Placeholder -&gt; CREATE ROLE role1](org.apache.shardingsphere.dbtest.engine.dcl.GeneralDCLIT)  Time elapsed: 30.744 s  &lt;&lt;&lt; ERROR! java.sql.SQLException: Operation CREATE ROLE failed for 'role1'@'%' at org.apache.shardingsphere.dbtest.engine.dcl.GeneralDCLIT.assertExecuteUpdate(GeneralDCLIT.java:53)  [ERROR] assertExecute[dbtbl_with_masterslave -&gt; MySQL -&gt; Placeholder -&gt; CREATE ROLE role1](org.apache.shardingsphere.dbtest.engine.dcl.GeneralDCLIT)  Time elapsed: 31.559 s  &lt;&lt;&lt; ERROR! java.sql.SQLException: Operation CREATE ROLE failed for 'role1'@'%' at org.apache.shardingsphere.dbtest.engine.dcl.GeneralDCLIT.assertExecute(GeneralDCLIT.java:64)  [ERROR] assertExecuteUpdate[masterslave -&gt; MySQL -&gt; Placeholder -&gt; CREATE ROLE role1](org.apache.shardingsphere.dbtest.engine.dcl.GeneralDCLIT)  Time elapsed: 4.404 s  &lt;&lt;&lt; ERROR! java.sql.SQLException: Operation CREATE ROLE failed for 'role1'@'%' at org.apache.shardingsphere.dbtest.engine.dcl.GeneralDCLIT.assertExecuteUpdate(GeneralDCLIT.java:53)  [ERROR] assertExecute[masterslave -&gt; MySQL -&gt; Placeholder -&gt; CREATE ROLE role1](org.apache.shardingsphere.dbtest.engine.dcl.GeneralDCLIT)  Time elapsed: 3.334 s  &lt;&lt;&lt; ERROR! java.sql.SQLException: Operation CREATE ROLE failed for 'role1'@'%' at org.apache.shardingsphere.dbtest.engine.dcl.GeneralDCLIT.assertExecute(GeneralDCLIT.java:64)  [ERROR] assertExecuteUpdate[db -&gt; MySQL -&gt; Literal -&gt; ALTER USER 'user1'@'localhost'](org.apache.shardingsphere.dbtest.engine.dcl.GeneralDCLIT)  Time elapsed: 3.154 s  &lt;&lt;&lt; ERROR! java.sql.SQLException: Operation ALTER USER failed for 'user1'@'localhost' at org.apache.shardingsphere.dbtest.engine.dcl.GeneralDCLIT.assertExecuteUpdate(GeneralDCLIT.java:51)  [ERROR] assertExecute[db -&gt; MySQL -&gt; Literal -&gt; ALTER USER 'user1'@'localhost'](org.apache.shardingsphere.dbtest.engine.dcl.GeneralDCLIT)  Time elapsed: 3.46 s  &lt;&lt;&lt; ERROR! java.sql.SQLException: Operation ALTER USER failed for 'user1'@'localhost' at org.apache.shardingsphere.dbtest.engine.dcl.GeneralDCLIT.assertExecute(GeneralDCLIT.java:62)  [ERROR] assertExecuteUpdate[tbl -&gt; MySQL -&gt; Literal -&gt; ALTER USER 'user1'@'localhost'](org.apache.shardingsphere.dbtest.engine.dcl.GeneralDCLIT)  Time elapsed: 2.012 s  &lt;&lt;&lt; ERROR! java.sql.SQLException: Operation ALTER USER failed for 'user1'@'localhost' at org.apache.shardingsphere.dbtest.engine.dcl.GeneralDCLIT.assertExecuteUpdate(GeneralDCLIT.java:51)  [ERROR] assertExecute[tbl -&gt; MySQL -&gt; Literal -&gt; ALTER USER 'user1'@'localhost'](org.apache.shardingsphere.dbtest.engine.dcl.GeneralDCLIT)  Time elapsed: 1.702 s  &lt;&lt;&lt; ERROR! java.sql.SQLException: Operation ALTER USER failed for 'user1'@'localhost' at org.apache.shardingsphere.dbtest.engine.dcl.GeneralDCLIT.assertExecute(GeneralDCLIT.java:62)  [ERROR] assertExecuteUpdate[dbtbl_with_masterslave -&gt; MySQL -&gt; Literal -&gt; ALTER USER 'user1'@'localhost'](org.apache.shardingsphere.dbtest.engine.dcl.GeneralDCLIT)  Time elapsed: 39.027 s  &lt;&lt;&lt; ERROR! java.sql.SQLException: Operation ALTER USER failed for 'user1'@'localhost' at org.apache.shardingsphere.dbtest.engine.dcl.GeneralDCLIT.assertExecuteUpdate(GeneralDCLIT.java:51)  [ERROR] assertExecute[dbtbl_with_masterslave -&gt; MySQL -&gt; Literal -&gt; ALTER USER 'user1'@'localhost'](org.apache.shardingsphere.dbtest.engine.dcl.GeneralDCLIT)  Time elapsed: 31.861 s  &lt;&lt;&lt; ERROR! java.sql.SQLException: Operation ALTER USER failed for 'user1'@'localhost' at org.apache.shardingsphere.dbtest.engine.dcl.GeneralDCLIT.assertExecute(GeneralDCLIT.java:62)  [ERROR] assertExecuteUpdate[masterslave -&gt; MySQL -&gt; Literal -&gt; ALTER USER 'user1'@'localhost'](org.apache.shardingsphere.dbtest.engine.dcl.GeneralDCLIT)  Time elapsed: 3.858 s  &lt;&lt;&lt; ERROR! java.sql.SQLException: Operation ALTER USER failed for 'user1'@'localhost' at org.apache.shardingsphere.dbtest.engine.dcl.GeneralDCLIT.assertExecuteUpdate(GeneralDCLIT.java:51)  [ERROR] assertExecute[masterslave -&gt; MySQL -&gt; Literal -&gt; ALTER USER 'user1'@'localhost'](org.apache.shardingsphere.dbtest.engine.dcl.GeneralDCLIT)  Time elapsed: 3.251 s  &lt;&lt;&lt; ERROR! java.sql.SQLException: Operation ALTER USER failed for 'user1'@'localhost' at org.apache.shardingsphere.dbtest.engine.dcl.GeneralDCLIT.assertExecute(GeneralDCLIT.java:62)  [ERROR] assertExecuteUpdate[db -&gt; MySQL -&gt; Placeholder -&gt; ALTER USER 'user1'@'localhost'](org.apache.shardingsphere.dbtest.engine.dcl.GeneralDCLIT)  Time elapsed: 4.532 s  &lt;&lt;&lt; ERROR! java.sql.SQLException: Operation ALTER USER failed for 'user1'@'localhost' at org.apache.shardingsphere.dbtest.engine.dcl.GeneralDCLIT.assertExecuteUpdate(GeneralDCLIT.java:53)  [ERROR] assertExecute[db -&gt; MySQL -&gt; Placeholder -&gt; ALTER USER 'user1'@'localhost'](org.apache.shardingsphere.dbtest.engine.dcl.GeneralDCLIT)  Time elapsed: 3.439 s  &lt;&lt;&lt; ERROR! java.sql.SQLException: Operation ALTER USER failed for 'user1'@'localhost' at org.apache.shardingsphere.dbtest.engine.dcl.GeneralDCLIT.assertExecute(GeneralDCLIT.java:64)  [ERROR] assertExecuteUpdate[tbl -&gt; MySQL -&gt; Placeholder -&gt; ALTER USER 'user1'@'localhost'](org.apache.shardingsphere.dbtest.engine.dcl.GeneralDCLIT)  Time elapsed: 1.705 s  &lt;&lt;&lt; ERROR! java.sql.SQLException: Operation ALTER USER failed for 'user1'@'localhost' at org.apache.shardingsphere.dbtest.engine.dcl.GeneralDCLIT.assertExecuteUpdate(GeneralDCLIT.java:53)  [ERROR] assertExecute[tbl -&gt; MySQL -&gt; Placeholder -&gt; ALTER USER 'user1'@'localhost'](org.apache.shardingsphere.dbtest.engine.dcl.GeneralDCLIT)  Time elapsed: 2.148 s  &lt;&lt;&lt; ERROR! java.sql.SQLException: Operation ALTER USER failed for 'user1'@'localhost' at org.apache.shardingsphere.dbtest.engine.dcl.GeneralDCLIT.assertExecute(GeneralDCLIT.java:64)  [ERROR] assertExecuteUpdate[dbtbl_with_masterslave -&gt; MySQL -&gt; Placeholder -&gt; ALTER USER 'user1'@'localhost'](org.apache.shardingsphere.dbtest.engine.dcl.GeneralDCLIT)  Time elapsed: 31.871 s  &lt;&lt;&lt; ERROR! java.sql.SQLException: Operation ALTER USER failed for 'user1'@'localhost' at org.apache.shardingsphere.dbtest.engine.dcl.GeneralDCLIT.assertExecuteUpdate(GeneralDCLIT.java:53)  [ERROR] assertExecute[dbtbl_with_masterslave -&gt; MySQL -&gt; Placeholder -&gt; ALTER USER 'user1'@'localhost'](org.apache.shardingsphere.dbtest.engine.dcl.GeneralDCLIT)  Time elapsed: 30.816 s  &lt;&lt;&lt; ERROR! java.sql.SQLException: Operation ALTER USER failed for 'user1'@'localhost' at org.apache.shardingsphere.dbtest.engine.dcl.GeneralDCLIT.assertExecute(GeneralDCLIT.java:64)  [ERROR] assertExecuteUpdate[masterslave -&gt; MySQL -&gt; Placeholder -&gt; ALTER USER 'user1'@'localhost'](org.apache.shardingsphere.dbtest.engine.dcl.GeneralDCLIT)  Time elapsed: 3.53 s  &lt;&lt;&lt; ERROR! java.sql.SQLException: Operation ALTER USER failed for 'user1'@'localhost' at org.apache.shardingsphere.dbtest.engine.dcl.GeneralDCLIT.assertExecuteUpdate(GeneralDCLIT.java:53)  [ERROR] assertExecute[masterslave -&gt; MySQL -&gt; Placeholder -&gt; ALTER USER 'user1'@'localhost'](org.apache.shardingsphere.dbtest.engine.dcl.GeneralDCLIT)  Time elapsed: 3.787 s  &lt;&lt;&lt; ERROR! java.sql.SQLException: Operation ALTER USER failed for 'user1'@'localhost' at org.apache.shardingsphere.dbtest.engine.dcl.GeneralDCLIT.assertExecute(GeneralDCLIT.java:64)  [ERROR] assertExecuteUpdate[db -&gt; MySQL -&gt; Literal -&gt; DROP ROLE role1](org.apache.shardingsphere.dbtest.engine.dcl.GeneralDCLIT)  Time elapsed: 3.167 s  &lt;&lt;&lt; ERROR! java.sql.SQLException: Operation DROP ROLE failed for 'role1'@'%' at org.apache.shardingsphere.dbtest.engine.dcl.GeneralDCLIT.assertExecuteUpdate(GeneralDCLIT.java:51)  [ERROR] assertExecute[db -&gt; MySQL -&gt; Literal -&gt; DROP ROLE role1](org.apache.shardingsphere.dbtest.engine.dcl.GeneralDCLIT)  Time elapsed: 3.232 s  &lt;&lt;&lt; ERROR! java.sql.SQLException: Operation DROP ROLE failed for 'role1'@'%' at org.apache.shardingsphere.dbtest.engine.dcl.GeneralDCLIT.assertExecute(GeneralDCLIT.java:62)  [ERROR] assertExecuteUpdate[tbl -&gt; MySQL -&gt; Literal -&gt; DROP ROLE role1](org.apache.shardingsphere.dbtest.engine.dcl.GeneralDCLIT)  Time elapsed: 2.164 s  &lt;&lt;&lt; ERROR! java.sql.SQLException: Operation DROP ROLE failed for 'role1'@'%' at org.apache.shardingsphere.dbtest.engine.dcl.GeneralDCLIT.assertExecuteUpdate(GeneralDCLIT.java:51)  [ERROR] assertExecute[tbl -&gt; MySQL -&gt; Literal -&gt; DROP ROLE role1](org.apache.shardingsphere.dbtest.engine.dcl.GeneralDCLIT)  Time elapsed: 2.051 s  &lt;&lt;&lt; ERROR! java.sql.SQLException: Operation DROP ROLE failed for 'role1'@'%' at org.apache.shardingsphere.dbtest.engine.dcl.GeneralDCLIT.assertExecute(GeneralDCLIT.java:62)  [ERROR] assertExecuteUpdate[dbtbl_with_masterslave -&gt; MySQL -&gt; Literal -&gt; DROP ROLE role1](org.apache.shardingsphere.dbtest.engine.dcl.GeneralDCLIT)  Time elapsed: 30.055 s  &lt;&lt;&lt; ERROR! java.sql.SQLException: Operation DROP ROLE failed for 'role1'@'%' at org.apache.shardingsphere.dbtest.engine.dcl.GeneralDCLIT.assertExecuteUpdate(GeneralDCLIT.java:51)  [ERROR] assertExecute[dbtbl_with_masterslave -&gt; MySQL -&gt; Literal -&gt; DROP ROLE role1](org.apache.shardingsphere.dbtest.engine.dcl.GeneralDCLIT)  Time elapsed: 31.709 s  &lt;&lt;&lt; ERROR! java.sql.SQLException: Operation DROP ROLE failed for 'role1'@'%' at org.apache.shardingsphere.dbtest.engine.dcl.GeneralDCLIT.assertExecute(GeneralDCLIT.java:62)  [ERROR] assertExecuteUpdate[masterslave -&gt; MySQL -&gt; Literal -&gt; DROP ROLE role1](org.apache.shardingsphere.dbtest.engine.dcl.GeneralDCLIT)  Time elapsed: 4.001 s  &lt;&lt;&lt; ERROR! java.sql.SQLException: Operation DROP ROLE failed for 'role1'@'%' at org.apache.shardingsphere.dbtest.engine.dcl.GeneralDCLIT.assertExecuteUpdate(GeneralDCLIT.java:51)  [ERROR] assertExecute[masterslave -&gt; MySQL -&gt; Literal -&gt; DROP ROLE role1](org.apache.shardingsphere.dbtest.engine.dcl.GeneralDCLIT)  Time elapsed: 3.397 s  &lt;&lt;&lt; ERROR! java.sql.SQLException: Operation DROP ROLE failed for 'role1'@'%' at org.apache.shardingsphere.dbtest.engine.dcl.GeneralDCLIT.assertExecute(GeneralDCLIT.java:62)  [ERROR] assertExecuteUpdate[db -&gt; MySQL -&gt; Placeholder -&gt; DROP ROLE role1](org.apache.shardingsphere.dbtest.engine.dcl.GeneralDCLIT)  Time elapsed: 3.505 s  &lt;&lt;&lt; ERROR! java.sql.SQLException: Operation DROP ROLE failed for 'role1'@'%' at org.apache.shardingsphere.dbtest.engine.dcl.GeneralDCLIT.assertExecuteUpdate(GeneralDCLIT.java:53)  [ERROR] assertExecute[db -&gt; MySQL -&gt; Placeholder -&gt; DROP ROLE role1](org.apache.shardingsphere.dbtest.engine.dcl.GeneralDCLIT)  Time elapsed: 3.581 s  &lt;&lt;&lt; ERROR! java.sql.SQLException: Operation DROP ROLE failed for 'role1'@'%' at org.apache.shardingsphere.dbtest.engine.dcl.GeneralDCLIT.assertExecute(GeneralDCLIT.java:64)  [ERROR] assertExecuteUpdate[tbl -&gt; MySQL -&gt; Placeholder -&gt; DROP ROLE role1](org.apache.shardingsphere.dbtest.engine.dcl.GeneralDCLIT)  Time elapsed: 1.721 s  &lt;&lt;&lt; ERROR! java.sql.SQLException: Operation DROP ROLE failed for 'role1'@'%' at org.apache.shardingsphere.dbtest.engine.dcl.GeneralDCLIT.assertExecuteUpdate(GeneralDCLIT.java:53)  [ERROR] assertExecute[tbl -&gt; MySQL -&gt; Placeholder -&gt; DROP ROLE role1](org.apache.shardingsphere.dbtest.engine.dcl.GeneralDCLIT)  Time elapsed: 2.045 s  &lt;&lt;&lt; ERROR! java.sql.SQLException: Operation DROP ROLE failed for 'role1'@'%' at org.apache.shardingsphere.dbtest.engine.dcl.GeneralDCLIT.assertExecute(GeneralDCLIT.java:64)  [ERROR] assertExecuteUpdate[dbtbl_with_masterslave -&gt; MySQL -&gt; Placeholder -&gt; DROP ROLE role1](org.apache.shardingsphere.dbtest.engine.dcl.GeneralDCLIT)  Time elapsed: 31.916 s  &lt;&lt;&lt; ERROR! java.sql.SQLException: Operation DROP ROLE failed for 'role1'@'%' at org.apache.shardingsphere.dbtest.engine.dcl.GeneralDCLIT.assertExecuteUpdate(GeneralDCLIT.java:53)  [ERROR] assertExecute[dbtbl_with_masterslave -&gt; MySQL -&gt; Placeholder -&gt; DROP ROLE role1](org.apache.shardingsphere.dbtest.engine.dcl.GeneralDCLIT)  Time elapsed: 32.185 s  &lt;&lt;&lt; ERROR! java.sql.SQLException: Operation DROP ROLE failed for 'role1'@'%' at org.apache.shardingsphere.dbtest.engine.dcl.GeneralDCLIT.assertExecute(GeneralDCLIT.java:64)  [ERROR] assertExecuteUpdate[masterslave -&gt; MySQL -&gt; Placeholder -&gt; DROP ROLE role1](org.apache.shardingsphere.dbtest.engine.dcl.GeneralDCLIT)  Time elapsed: 4.159 s  &lt;&lt;&lt; ERROR! java.sql.SQLException: Operation DROP ROLE failed for 'role1'@'%' at org.apache.shardingsphere.dbtest.engine.dcl.GeneralDCLIT.assertExecuteUpdate(GeneralDCLIT.java:53)  [ERROR] assertExecute[masterslave -&gt; MySQL -&gt; Placeholder -&gt; DROP ROLE role1](org.apache.shardingsphere.dbtest.engine.dcl.GeneralDCLIT)  Time elapsed: 3.252 s  &lt;&lt;&lt; ERROR! java.sql.SQLException: Operation DROP ROLE failed for 'role1'@'%' at org.apache.shardingsphere.dbtest.engine.dcl.GeneralDCLIT.assertExecute(GeneralDCLIT.java:64)  [ERROR] assertExecuteUpdate[db -&gt; MySQL -&gt; Literal -&gt; REVOKE SELECT ON  *.* FROM 'user1'@'localhost'](org.apache.shardingsphere.dbtest.engine.dcl.GeneralDCLIT)  Time elapsed: 3.668 s  &lt;&lt;&lt; ERROR! com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: There is no such grant defined for user 'user1' on host 'localhost' at org.apache.shardingsphere.dbtest.engine.dcl.GeneralDCLIT.assertExecuteUpdate(GeneralDCLIT.java:51)  [ERROR] assertExecute[db -&gt; MySQL -&gt; Literal -&gt; REVOKE SELECT ON  *.* FROM 'user1'@'localhost'](org.apache.shardingsphere.dbtest.engine.dcl.GeneralDCLIT)  Time elapsed: 3.707 s  &lt;&lt;&lt; ERROR! com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: There is no such grant defined for user 'user1' on host 'localhost' at org.apache.shardingsphere.dbtest.engine.dcl.GeneralDCLIT.assertExecute(GeneralDCLIT.java:62)  [ERROR] assertExecuteUpdate[tbl -&gt; MySQL -&gt; Literal -&gt; REVOKE SELECT ON  *.* FROM 'user1'@'localhost'](org.apache.shardingsphere.dbtest.engine.dcl.GeneralDCLIT)  Time elapsed: 1.666 s  &lt;&lt;&lt; ERROR! com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: There is no such grant defined for user 'user1' on host 'localhost' at org.apache.shardingsphere.dbtest.engine.dcl.GeneralDCLIT.assertExecuteUpdate(GeneralDCLIT.java:51)  [ERROR] assertExecute[tbl -&gt; MySQL -&gt; Literal -&gt; REVOKE SELECT ON  *.* FROM 'user1'@'localhost'](org.apache.shardingsphere.dbtest.engine.dcl.GeneralDCLIT)  Time elapsed: 1.67 s  &lt;&lt;&lt; ERROR! com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: There is no such grant defined for user 'user1' on host 'localhost' at org.apache.shardingsphere.dbtest.engine.dcl.GeneralDCLIT.assertExecute(GeneralDCLIT.java:62)  [ERROR] assertExecuteUpdate[dbtbl_with_masterslave -&gt; MySQL -&gt; Literal -&gt; REVOKE SELECT ON  *.* FROM 'user1'@'localhost'](org.apache.shardingsphere.dbtest.engine.dcl.GeneralDCLIT)  Time elapsed: 31.257 s  &lt;&lt;&lt; ERROR! com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: There is no such grant defined for user 'user1' on host 'localhost' at org.apache.shardingsphere.dbtest.engine.dcl.GeneralDCLIT.assertExecuteUpdate(GeneralDCLIT.java:51)  [ERROR] assertExecute[dbtbl_with_masterslave -&gt; MySQL -&gt; Literal -&gt; REVOKE SELECT ON  *.* FROM 'user1'@'localhost'](org.apache.shardingsphere.dbtest.engine.dcl.GeneralDCLIT)  Time elapsed: 31.294 s  &lt;&lt;&lt; ERROR! com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: There is no such grant defined for user 'user1' on host 'localhost' at org.apache.shardingsphere.dbtest.engine.dcl.GeneralDCLIT.assertExecute(GeneralDCLIT.java:62)  [ERROR] assertExecuteUpdate[masterslave -&gt; MySQL -&gt; Literal -&gt; REVOKE SELECT ON  *.* FROM 'user1'@'localhost'](org.apache.shardingsphere.dbtest.engine.dcl.GeneralDCLIT)  Time elapsed: 3.154 s  &lt;&lt;&lt; ERROR! com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: There is no such grant defined for user 'user1' on host 'localhost' at org.apache.shardingsphere.dbtest.engine.dcl.GeneralDCLIT.assertExecuteUpdate(GeneralDCLIT.java:51)  [ERROR] assertExecute[masterslave -&gt; MySQL -&gt; Literal -&gt; REVOKE SELECT ON  *.* FROM 'user1'@'localhost'](org.apache.shardingsphere.dbtest.engine.dcl.GeneralDCLIT)  Time elapsed: 3.308 s  &lt;&lt;&lt; ERROR! com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: There is no such grant defined for user 'user1' on host 'localhost' at org.apache.shardingsphere.dbtest.engine.dcl.GeneralDCLIT.assertExecute(GeneralDCLIT.java:62)  [ERROR] assertExecuteUpdate[db -&gt; MySQL -&gt; Placeholder -&gt; REVOKE SELECT ON  *.* FROM 'user1'@'localhost'](org.apache.shardingsphere.dbtest.engine.dcl.GeneralDCLIT)  Time elapsed: 3.599 s  &lt;&lt;&lt; ERROR! com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: There is no such grant defined for user 'user1' on host 'localhost' at org.apache.shardingsphere.dbtest.engine.dcl.GeneralDCLIT.assertExecuteUpdate(GeneralDCLIT.java:53)  [ERROR] assertExecute[db -&gt; MySQL -&gt; Placeholder -&gt; REVOKE SELECT ON  *.* FROM 'user1'@'localhost'](org.apache.shardingsphere.dbtest.engine.dcl.GeneralDCLIT)  Time elapsed: 3.459 s  &lt;&lt;&lt; ERROR! com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: There is no such grant defined for user 'user1' on host 'localhost' at org.apache.shardingsphere.dbtest.engine.dcl.GeneralDCLIT.assertExecute(GeneralDCLIT.java:64)  [ERROR] assertExecuteUpdate[tbl -&gt; MySQL -&gt; Placeholder -&gt; REVOKE SELECT ON  *.* FROM 'user1'@'localhost'](org.apache.shardingsphere.dbtest.engine.dcl.GeneralDCLIT)  Time elapsed: 1.665 s  &lt;&lt;&lt; ERROR! com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: There is no such grant defined for user 'user1' on host 'localhost' at org.apache.shardingsphere.dbtest.engine.dcl.GeneralDCLIT.assertExecuteUpdate(GeneralDCLIT.java:53)  [ERROR] assertExecute[tbl -&gt; MySQL -&gt; Placeholder -&gt; REVOKE SELECT ON  *.* FROM 'user1'@'localhost'](org.apache.shardingsphere.dbtest.engine.dcl.GeneralDCLIT)  Time elapsed: 1.902 s  &lt;&lt;&lt; ERROR! com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: There is no such grant defined for user 'user1' on host 'localhost' at org.apache.shardingsphere.dbtest.engine.dcl.GeneralDCLIT.assertExecute(GeneralDCLIT.java:64)  [ERROR] assertExecuteUpdate[dbtbl_with_masterslave -&gt; MySQL -&gt; Placeholder -&gt; REVOKE SELECT ON  *.* FROM 'user1'@'localhost'](org.apache.shardingsphere.dbtest.engine.dcl.GeneralDCLIT)  Time elapsed: 30.663 s  &lt;&lt;&lt; ERROR! com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: There is no such grant defined for user 'user1' on host 'localhost' at org.apache.shardingsphere.dbtest.engine.dcl.GeneralDCLIT.assertExecuteUpdate(GeneralDCLIT.java:53)  [ERROR] assertExecute[dbtbl_with_masterslave -&gt; MySQL -&gt; Placeholder -&gt; REVOKE SELECT ON  *.* FROM 'user1'@'localhost'](org.apache.shardingsphere.dbtest.engine.dcl.GeneralDCLIT)  Time elapsed: 32.218 s  &lt;&lt;&lt; ERROR! com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: There is no such grant defined for user 'user1' on host 'localhost' at org.apache.shardingsphere.dbtest.engine.dcl.GeneralDCLIT.assertExecute(GeneralDCLIT.java:64)  [ERROR] assertExecuteUpdate[masterslave -&gt; MySQL -&gt; Placeholder -&gt; REVOKE SELECT ON  *.* FROM 'user1'@'localhost'](org.apache.shardingsphere.dbtest.engine.dcl.GeneralDCLIT)  Time elapsed: 3.107 s  &lt;&lt;&lt; ERROR! com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: There is no such grant defined for user 'user1' on host 'localhost' at org.apache.shardingsphere.dbtest.engine.dcl.GeneralDCLIT.assertExecuteUpdate(GeneralDCLIT.java:53)  [ERROR] assertExecute[masterslave -&gt; MySQL -&gt; Placeholder -&gt; REVOKE SELECT ON  *.* FROM 'user1'@'localhost'](org.apache.shardingsphere.dbtest.engine.dcl.GeneralDCLIT)  Time elapsed: 3.585 s  &lt;&lt;&lt; ERROR! com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: There is no such grant defined for user 'user1' on host 'localhost' at org.apache.shardingsphere.dbtest.engine.dcl.GeneralDCLIT.assertExecute(GeneralDCLIT.java:64)  [INFO] Running org.apache.shardingsphere.dbtest.engine.ddl.GeneralDDLIT [INFO] ======= Test Plan ======= [INFO] Total: 0, Active: 0, Disabled: 0   [INFO] Tests run: 0, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0 s - in org.apache.shardingsphere.dbtest.engine.ddl.GeneralDDLIT [INFO] Running org.apache.shardingsphere.dbtest.engine.dml.AdditionalDMLIT [INFO] Tests run: 0, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0 s - in org.apache.shardingsphere.dbtest.engine.dml.AdditionalDMLIT [INFO] Running org.apache.shardingsphere.dbtest.engine.dml.BatchDMLIT [INFO] ======= Test Plan ======= [WARN] Total: 832, Active: MySQL(240), Disabled: H2(152), Oracle(160), SQLServer(136), PostgreSQL(144)  ``` </body>
		<created>2020-08-03 10:26:38</created>
		<closed>2020-08-07 08:59:19</closed>
	</bug>
	<bug>
		<id>6583</id>
		<title>sqlException.getCause is null </title>
		<body>## Bug Report  **For English only**, other languages will not accept.  Before report a bug, make sure you have:  - Searched open and closed [GitHub issues](https://github.com/apache/shardingsphere/issues). - Read documentation: [ShardingSphere Doc](https://shardingsphere.apache.org/document/current/en/overview).  Please pay attention on issues you submitted, because we maybe need more details.  If no response anymore and we cannot reproduce it on current information, we will **close it**.  Please answer these questions before submitting your issue. Thanks!  ### Which version of ShardingSphere did you use?  ### Which project did you use? ShardingSphere-JDBC or ShardingSphere-Proxy?  ### Expected behavior  ### Actual behavior  ### Reason analyze (If you can)  ### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.  ### Example codes for reproduce this issue (such as a github link). </body>
		<created>2020-08-03 06:04:05</created>
		<closed>2020-08-05 11:02:25</closed>
	</bug>
	<bug>
		<id>6579</id>
		<title>Cannot find PostgreSQL type 'POSTGRESQL_TYPE_UNSPECIFIED' in column type when process binary protocol value</title>
		<body>## Bug Report  How to solve this problem,It seems to be a matter of time resolution,Because it's normal when there's no time。  ``` Cannot find PostgreSQL type 'POSTGRESQL_TYPE_UNSPECIFIED' in column type when process binary protocol value ``` ### Which version of ShardingSphere did you use?  sharding-proxy-4.1.1  ### Which project did you use? ShardingSphere-JDBC or ShardingSphere-Proxy?  ShardingSphere-Proxy  ### Expected behavior  insert a record with time  ### Actual behavior  An error occured in sharding-proxy when i insert a record with time  ``` [ERROR] 10:56:43.120 [pool-1-thread-1] o.a.s.s.f.c.CommandExecutorTask - Exception occur:  java.lang.IllegalArgumentException: Cannot find PostgreSQL type 'POSTGRESQL_TYPE_UNSPECIFIED' in column type when process binary protocol value at com.google.common.base.Preconditions.checkArgument(Preconditions.java:145) at org.apache.shardingsphere.database.protocol.postgresql.packet.command.query.binary.bind.protocol.PostgreSQLBinaryProtocolValueFactory.getBinaryProtocolValue(PostgreSQLBinaryProtocolValueFactory.java:94) at org.apache.shardingsphere.database.protocol.postgresql.packet.command.query.binary.bind.PostgreSQLComBindPacket.getParameters(PostgreSQLComBindPacket.java:74) at org.apache.shardingsphere.database.protocol.postgresql.packet.command.query.binary.bind.PostgreSQLComBindPacket.&lt;init&gt;(PostgreSQLComBindPacket.java:61) at org.apache.shardingsphere.database.protocol.postgresql.packet.command.PostgreSQLCommandPacketFactory.newInstance(PostgreSQLCommandPacketFactory.java:57) at org.apache.shardingsphere.shardingproxy.frontend.postgresql.command.PostgreSQLCommandExecuteEngine.getCommandPacket(PostgreSQLCommandExecuteEngine.java:55) at org.apache.shardingsphere.shardingproxy.frontend.postgresql.command.PostgreSQLCommandExecuteEngine.getCommandPacket(PostgreSQLCommandExecuteEngine.java:46) at org.apache.shardingsphere.shardingproxy.frontend.command.CommandExecutorTask.executeCommand(CommandExecutorTask.java:91) at org.apache.shardingsphere.shardingproxy.frontend.command.CommandExecutorTask.run(CommandExecutorTask.java:71) at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) at java.lang.Thread.run(Thread.java:748) ```  ### Reason analyze (If you can)  time parse, it`s ok when i insert a record without time  ### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.  * sharding-proxy-4.1.1(4.1.0、4.0.1 have same error) * jdbc: postgresql-42.2.5 * jdk 1.8  table ```sql CREATE TABLE "public"."book" (     "id"          int8                           NOT NULL,     "name"        varchar(255) COLLATE "default" NOT NULL,     "tenant_no"   int4                           NOT NULL,     "create_time" timestamp(6)                   NOT NULL,     CONSTRAINT "book_pkey" PRIMARY KEY ("id") )     WITH (OIDS= FALSE) ; ```  server.yaml ```yaml authentication:   users:     root:       password: root     sharding:       password: sharding       authorizedSchemas: sharding-demo  props:   proxy.hint.enabled: true ```  config-demo ```yaml schemaName: sharding-demo  dataSources:   ds-1:     url: jdbc:postgresql://192.168.159.128:5432/sharding-proxy-1?serverTimezone=UTC&amp;characterEncoding=utf8&amp;useSSL=false     username: postgres     password: postgres     connectionTimeoutMilliseconds: 30000     idleTimeoutMilliseconds: 60000     maxLifetimeMilliseconds: 1800000     maxPoolSize: 10   ds-2:     url: jdbc:postgresql://192.168.159.128:5432/sharding-proxy-2?serverTimezone=UTC&amp;characterEncoding=utf8&amp;useSSL=false     username: postgres     password: postgres     connectionTimeoutMilliseconds: 30000     idleTimeoutMilliseconds: 60000     maxLifetimeMilliseconds: 1800000     maxPoolSize: 10  shardingRule:   defaultDatabaseStrategy:     standard:       shardingColumn: tenant_no       preciseAlgorithmClassName: demo.CustomPreciseShardingAlgorithm   defaultDataSourceName: ds-1   tables:     book:       actualDataNodes: ds-$-&gt;{1..2}.book       keyGenerator:         column: id         type: SNOWFLAKE       logicTable: book ```  CustomPreciseShardingAlgorithm.java ```java public String doSharding(Collection&lt;String&gt; availableTargetNames, PreciseShardingValue&lt;Integer&gt; shardingValue) {     String result = null;     for (String dbName : availableTargetNames) {         if (("ds-" + shardingValue.getValue()).equals(dbName)) {             result = dbName;             break;         }     }     return result; } ```  jdbc ```java String sql = "INSERT INTO book (id,name,tenant_no,create_time) VALUES (?,?,?,?)"; PreparedStatement preparedStatement = conn.prepareStatement(sql); preparedStatement.setLong(1,1); preparedStatement.setString(2,"test_book"); preparedStatement.setInt(3,1); preparedStatement.setTimestamp(4, new Timestamp(System.currentTimeMillis())); ```  ### Example codes for reproduce this issue (such as a github link). </body>
		<created>2020-08-03 02:54:22</created>
		<closed>2020-08-25 09:57:25</closed>
	</bug>
	<bug>
		<id>6541</id>
		<title>support select '' as a from order</title>
		<body></body>
		<created>2020-07-31 02:18:35</created>
		<closed>2020-07-31 08:28:33</closed>
	</bug>
	<bug>
		<id>6527</id>
		<title>Mysql limit does not support variant</title>
		<body>## Bug Report  ### Which version of ShardingSphere did you use? The latest version: Shardingsphere-ui-4.1.1 ### Which project did you use? ShardingSphere-JDBC or ShardingSphere-Proxy? ShardingSphere-Proxy ### Expected behavior limit/offset can use variants. ### Actual behavior ERROR: Statement parameter 1 not set., SqlState: S1009, code:0 ### Reason analyze (If you can) I searched internet, someone says that Mysql does not support limit variant before 5.5 version.  ### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.  ### Example codes for reproduce this issue (such as a github link). ```java     static void testLimit() throws Exception {         Class.forName("com.mysql.jdbc.Driver");         String url ="jdbc:mysql://192.168.1.46:3307/test?user=root&amp;password=test&amp;serverTimezone=UTC&amp;useSSL=false&amp;useServerPrepStmts=true";         //url = "jdbc:mysql://192.168.0.108:3306/test?user=root&amp;password=test&amp;zeroDateTimeBehavior=convertToNull&amp;useServerPrepStmts=true";                                                                                                                                             //String user= java.util.Base64.getEncoder().encodeToString(url.getBytes("UTF-8"));         //url ="jdbc:mysql://192.168.1.46:3307/test?user="+user+"&amp;password=test&amp;useServerPrepStmts=true";         Connection conn = DriverManager.getConnection(url);         List&lt;Object&gt; params = new ArrayList&lt;Object&gt;();         params.add(20); params.add(0);          selectSql(conn, "select * from sys_migrate ", params, 0);          selectSql(conn, "select * from sys_migrate limit ? offset ?", params, 2);      }          static void selectSql(Connection conn, String sql, List&lt;Object&gt; paramValues, int paramValuesCount) throws SQLException {         PreparedStatement stmt = null;         try {             System.out.println("selectSql PREPARE: " + sql);             stmt = conn.prepareStatement(sql);             paramValuesCount = paramValues == null ? 0 : paramValuesCount;             for (int i = 0; i &lt; paramValuesCount; i++) {                 stmt.setObject(i + 1, paramValues.get(i));             }             ResultSet rs = stmt.executeQuery();             ResultSetMetaData rsmd = rs.getMetaData();             int count = rsmd.getColumnCount();             while (rs.next()) {                 for (int i = 1; i &lt;= count; i++) {                     String key = rsmd.getColumnLabel(i);                     Object value = rs.getObject(i);                     System.out.println("key:" + key + ", value:" + (value==null?"null":value));                 }             }             rs.close();         } catch (SQLException e) {             System.out.println("===Error:" + e.getMessage()+", SqlState: " + e.getSQLState() + ", code:" + e.getErrorCode());         } finally {             if (stmt != null) {                 stmt.close();             }         }     }   ```</body>
		<created>2020-07-30 07:40:38</created>
		<closed>2020-07-31 05:33:31</closed>
	</bug>
	<bug>
		<id>6495</id>
		<title>HikariPool declares multiple JSON fields named logger</title>
		<body>### Which version of ShardingSphere did you use? 5.0.0-RC1-SNAPSHOT  ### Which project did you use? ShardingSphere-JDBC or ShardingSphere-Proxy? ShardingSphere-Scaling  ### Expected behavior ShardingScalingJob serialization goes well  ### Actual behavior When serializing ScalingScalingJob, throw exception java.lang.IllegalArgumentException: class com.zaxxer.hikari.pool.HikariPool declares multiple JSON fields named logger ``` java.lang.IllegalArgumentException: class com.zaxxer.hikari.pool.HikariPool declares multiple JSON fields named logger at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:172) at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(ReflectiveTypeAdapterFactory.java:102) at com.google.gson.Gson.getAdapter(Gson.java:458) at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(ReflectiveTypeAdapterFactory.java:117) at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:166) at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(ReflectiveTypeAdapterFactory.java:102) at com.google.gson.Gson.getAdapter(Gson.java:458) at com.google.gson.internal.bind.MapTypeAdapterFactory.create(MapTypeAdapterFactory.java:126) at com.google.gson.Gson.getAdapter(Gson.java:458) at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(ReflectiveTypeAdapterFactory.java:117) at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:166) at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(ReflectiveTypeAdapterFactory.java:102) at com.google.gson.Gson.getAdapter(Gson.java:458) at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(ReflectiveTypeAdapterFactory.java:117) at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:166) at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(ReflectiveTypeAdapterFactory.java:102) at com.google.gson.Gson.getAdapter(Gson.java:458) at com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.write(TypeAdapterRuntimeTypeWrapper.java:56) at com.google.gson.internal.bind.CollectionTypeAdapterFactory$Adapter.write(CollectionTypeAdapterFactory.java:97) at com.google.gson.internal.bind.CollectionTypeAdapterFactory$Adapter.write(CollectionTypeAdapterFactory.java:61) at com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.write(TypeAdapterRuntimeTypeWrapper.java:69) at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$1.write(ReflectiveTypeAdapterFactory.java:127) at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter.write(ReflectiveTypeAdapterFactory.java:245) at com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.write(TypeAdapterRuntimeTypeWrapper.java:69) at com.google.gson.internal.bind.CollectionTypeAdapterFactory$Adapter.write(CollectionTypeAdapterFactory.java:97) at com.google.gson.internal.bind.CollectionTypeAdapterFactory$Adapter.write(CollectionTypeAdapterFactory.java:61) at com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.write(TypeAdapterRuntimeTypeWrapper.java:69) at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$1.write(ReflectiveTypeAdapterFactory.java:127) at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter.write(ReflectiveTypeAdapterFactory.java:245) at com.google.gson.internal.bind.ObjectTypeAdapter.write(ObjectTypeAdapter.java:107) at com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.write(TypeAdapterRuntimeTypeWrapper.java:69) at com.google.gson.internal.bind.CollectionTypeAdapterFactory$Adapter.write(CollectionTypeAdapterFactory.java:97) at com.google.gson.internal.bind.CollectionTypeAdapterFactory$Adapter.write(CollectionTypeAdapterFactory.java:61) at com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.write(TypeAdapterRuntimeTypeWrapper.java:69) at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$1.write(ReflectiveTypeAdapterFactory.java:127) at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter.write(ReflectiveTypeAdapterFactory.java:245) at com.google.gson.Gson.toJson(Gson.java:704) at com.google.gson.Gson.toJson(Gson.java:683) at com.google.gson.Gson.toJson(Gson.java:638) at com.google.gson.Gson.toJson(Gson.java:618) at org.apache.shardingsphere.scaling.web.HttpServerHandler.listAllJobs(HttpServerHandler.java:110) at org.apache.shardingsphere.scaling.web.HttpServerHandler.channelRead0(HttpServerHandler.java:78) at org.apache.shardingsphere.scaling.web.HttpServerHandler.channelRead0(HttpServerHandler.java:50) at io.netty.channel.SimpleChannelInboundHandler.channelRead(SimpleChannelInboundHandler.java:105) at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374) at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360) at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352) at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102) at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374) at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360) at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352) at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:438) at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:328) at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:302) at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:253) at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374) at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360) at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352) at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1422) at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374) at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360) at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:931) at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:163) at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:700) at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:635) at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:552) at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:514) at io.netty.util.concurrent.SingleThreadEventExecutor$6.run(SingleThreadEventExecutor.java:1044) at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74) at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) at java.lang.Thread.run(Thread.java:748)  ```  ### Reason analyze (If you can) Since ShardingScalingJob refers to the HikariDataSource field, and HikariDataSource and its inherited parent classes both define the Logger field, GSON reports an error when serializing declares multiple JSON fields named logger.  ### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc. After starting ScalingScaling, create a ScalingScalingJob. Then call its listAllJobs API to get this exception. </body>
		<created>2020-07-28 16:08:47</created>
		<closed>2020-07-29 02:50:38</closed>
	</bug>
	<bug>
		<id>6408</id>
		<title>Cannot find JDBC type '2003' in PostgreSQL column type</title>
		<body>SELECT d.oid, d.datname AS databasename, d.datacl, pg_get_userbyid(d.datdba) AS databaseowner, d.datcollate, d.datctype, shobj_description(d.oid, 'pg_database') AS description, d.datconnlimit, t.spcname, d.encoding, pg_encoding_to_char(d.encoding) AS encodingname FROM pg_database d LEFT JOIN pg_tablespace t ON d.dattablespace = t.oid ::: DataSources: initds_master [ERROR] 02:51:14.421 [pool-4-thread-1] o.a.s.s.f.c.CommandExecutorTask - Exception occur:  java.lang.IllegalArgumentException: Cannot find JDBC type '2003' in PostgreSQL column type </body>
		<created>2020-07-23 02:52:10</created>
		<closed>2020-07-29 02:27:02</closed>
	</bug>
	<bug>
		<id>6362</id>
		<title>Bug for oracle when application starting</title>
		<body>We create many users in our oracle database ( 12C ), I use shardingsphere-jdbc in our project which is based on springcloud.  When I startup application, an error occurred: ORA-00942 table or view not exsist. I read codes and found that function getSchema in class JdbcUtil has an problem:      `if ("Oracle".equals(databaseType)) {                 return null;             }` This is ok when database just has one user, so I fixed it like this: `if ("Oracle".equals(databaseType)) {                 return connection.getMetaData().getUserName().toUpperCase();             }` Problem is resolved.</body>
		<created>2020-07-16 01:38:31</created>
		<closed>2020-07-20 10:18:10</closed>
	</bug>
	<bug>
		<id>6351</id>
		<title>Just return one ID when batch insert at shardingsphere 4.1.1</title>
		<body>Mysql Server version : 5.7.22; shardingsphere version: 4.1.1 The maven info as follow:    &lt;dependency&gt;             &lt;groupId&gt;org.apache.shardingsphere&lt;/groupId&gt;             &lt;artifactId&gt;sharding-core-common&lt;/artifactId&gt;             &lt;version&gt;4.1.1&lt;/version&gt;         &lt;/dependency&gt;   &lt;dependency&gt;         &lt;groupId&gt;org.apache.shardingsphere&lt;/groupId&gt;         &lt;artifactId&gt;sharding-jdbc-core&lt;/artifactId&gt;         &lt;version&gt;4.1.1&lt;/version&gt;     &lt;/dependency&gt;      &lt;dependency&gt;         &lt;groupId&gt;org.apache.shardingsphere&lt;/groupId&gt;         &lt;artifactId&gt;sharding-jdbc-spring-namespace&lt;/artifactId&gt;         &lt;version&gt;4.1.1&lt;/version&gt;     &lt;/dependency&gt;      &lt;dependency&gt;         &lt;groupId&gt;org.apache.shardingsphere&lt;/groupId&gt;         &lt;artifactId&gt;sharding-jdbc-orchestration-spring-namespace&lt;/artifactId&gt;         &lt;version&gt;4.1.1&lt;/version&gt;     &lt;/dependency&gt;  The sql is :   insert into consume_374 (user_id, user_type,         balance_id, order_id, amount,         consume_at, consume_key, consume_token,product_code, citys, categorys,         status, created_at, modified_at,extension1, extension2, keep_at,info_id         , id)         values             (37744590551312, 2, 482568302627979264, 482568302422458368, 1.00, 1594781777191, '2020_04_23_wyk_997', 'token_004', '3', '', '', 1,               1594781777191, 1594781777191, '', '', null, null, 490113583909240833),   (37744590551312, 2, 482568813330628609, 482568813192216577, 1.00, 1594781777207, '2020_04_23_wyk_997', 'token_004', '3', '', '', 1,   1594781777207, 1594781777207, '', '', null, null, 490113583909240832). ![image](https://user-images.githubusercontent.com/21120592/87498456-645fae00-c68a-11ea-9152-f06485a8e74b.png)  ![image](https://user-images.githubusercontent.com/21120592/87498490-75a8ba80-c68a-11ea-8171-44310d05efa1.png)  When i insert one record ,I want the id return to me.But it will return only one Id when execute  batch insert! So,what can I do to solve this problem?  So,what can I do to solve this problem? </body>
		<created>2020-07-15 03:03:58</created>
		<closed>2020-07-16 09:57:59</closed>
	</bug>
	<bug>
		<id>6347</id>
		<title>Running a strange exception to the project exception.tomcat7 and tomcat8 </title>
		<body> ``` java.lang.NullPointerException         at org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)         at org.apache.shardingsphere.sql.parser.mysql.visitor.MySQLVisitor.visitPredicate(MySQLVisitor.java:316)         at org.apache.shardingsphere.sql.parser.mysql.visitor.MySQLVisitor.visitPredicate(MySQLVisitor.java:121)         at org.apache.shardingsphere.sql.parser.autogen.MySQLStatementParser$PredicateContext.accept(MySQLStatementParser.java:11690)         at org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)         at org.apache.shardingsphere.sql.parser.mysql.visitor.MySQLVisitor.visitBooleanPrimary(MySQLVisitor.java:273)         at org.apache.shardingsphere.sql.parser.mysql.visitor.MySQLVisitor.visitBooleanPrimary(MySQLVisitor.java:121)         at org.apache.shardingsphere.sql.parser.autogen.MySQLStatementParser$BooleanPrimaryContext.accept(MySQLStatementParser.java:11463)         at org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)         at org.apache.shardingsphere.sql.parser.mysql.visitor.MySQLVisitor.visitExpr(MySQLVisitor.java:258)         at org.apache.shardingsphere.sql.parser.mysql.visitor.MySQLVisitor.visitExpr(MySQLVisitor.java:121)         at org.apache.shardingsphere.sql.parser.autogen.MySQLStatementParser$ExprContext.accept(MySQLStatementParser.java:11241)         at org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)         at org.apache.shardingsphere.sql.parser.mysql.visitor.impl.MySQLDMLVisitor.visitAssignmentValue(MySQLDMLVisitor.java:250)         at org.apache.shardingsphere.sql.parser.mysql.visitor.impl.MySQLDMLVisitor.visitAssignmentValue(MySQLDMLVisitor.java:127)         at org.apache.shardingsphere.sql.parser.autogen.MySQLStatementParser$AssignmentValueContext.accept(MySQLStatementParser.java:1941)         at org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)         at org.apache.shardingsphere.sql.parser.mysql.visitor.impl.MySQLDMLVisitor.visitAssignment(MySQLDMLVisitor.java:242)         at org.apache.shardingsphere.sql.parser.mysql.visitor.impl.MySQLDMLVisitor.visitAssignment(MySQLDMLVisitor.java:127)         at org.apache.shardingsphere.sql.parser.autogen.MySQLStatementParser$AssignmentContext.accept(MySQLStatementParser.java:1753)         at org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)         at org.apache.shardingsphere.sql.parser.mysql.visitor.impl.MySQLDMLVisitor.visitSetAssignmentsClause(MySQLDMLVisitor.java:225)         at org.apache.shardingsphere.sql.parser.mysql.visitor.impl.MySQLDMLVisitor.visitSetAssignmentsClause(MySQLDMLVisitor.java:127)         at org.apache.shardingsphere.sql.parser.autogen.MySQLStatementParser$SetAssignmentsClauseContext.accept(MySQLStatementParser.java:1801)         at org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)         at org.apache.shardingsphere.sql.parser.mysql.visitor.impl.MySQLDMLVisitor.visitUpdate(MySQLDMLVisitor.java:213)         at org.apache.shardingsphere.sql.parser.mysql.visitor.impl.MySQLDMLVisitor.visitUpdate(MySQLDMLVisitor.java:127)         at org.apache.shardingsphere.sql.parser.autogen.MySQLStatementParser$UpdateContext.accept(MySQLStatementParser.java:1622)         at org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)         at org.apache.shardingsphere.sql.parser.SQLParserEngine.parse0(SQLParserEngine.java:80)         at org.apache.shardingsphere.sql.parser.SQLParserEngine.parse(SQLParserEngine.java:61)         at org.apache.shardingsphere.underlying.route.DataNodeRouter.createRouteContext(DataNodeRouter.java:97)         at org.apache.shardingsphere.underlying.route.DataNodeRouter.executeRoute(DataNodeRouter.java:89)         at org.apache.shardingsphere.underlying.route.DataNodeRouter.route(DataNodeRouter.java:76)         at org.apache.shardingsphere.underlying.pluggble.prepare.SimpleQueryPrepareEngine.route(SimpleQueryPrepareEngine.java:54)         at org.apache.shardingsphere.underlying.pluggble.prepare.BasePrepareEngine.executeRoute(BasePrepareEngine.java:96)         at org.apache.shardingsphere.underlying.pluggble.prepare.BasePrepareEngine.prepare(BasePrepareEngine.java:83)         at org.apache.shardingsphere.shardingjdbc.jdbc.core.statement.ShardingStatement.prepare(ShardingStatement.java:224)         at org.apache.shardingsphere.shardingjdbc.jdbc.core.statement.ShardingStatement.executeUpdate(ShardingStatement.java:101)         at org.springframework.jdbc.core.JdbcTemplate$1UpdateStatementCallback.doInStatement(JdbcTemplate.java:532)         at org.springframework.jdbc.core.JdbcTemplate$1UpdateStatementCallback.doInStatement(JdbcTemplate.java:529)         at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:408)         at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:544)         at com.badu.bdsaas.aa.service.impl.AbstractSubjectServiceImpl.updateLastLgnInfo(AbstractSubjectServiceImpl.java:158)         at com.badu.bdsaas.aa.service.impl.AbstractSubjectServiceImpl.logon(AbstractSubjectServiceImpl.java:253)         at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)         at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)         at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)         at java.lang.reflect.Method.invoke(Method.java:498)         at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)         at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)         at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)         at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)         at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:282)         at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)         at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)         at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)         at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)         at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:213) ```    why?</body>
		<created>2020-07-14 09:53:29</created>
		<closed>2020-07-29 09:30:55</closed>
	</bug>
	<bug>
		<id>6324</id>
		<title>ShardingSphere-Proxy will be blocked when query big blob data</title>
		<body>### Which version of ShardingSphere did you use? Shardingsphere-ui-4.1.1 Previous version 4.0.0-RC1 also has the same issue. ### Which project did you use? ShardingSphere-JDBC or ShardingSphere-Proxy? ShardingSphere-Proxy ### Expected behavior ShardingSphere-Proxy can receive connection and process sql statements. ### Actual behavior ShardingSphere-Proxy continues to receive connections, and the connections all logined successfully. But it stops here. It doesn't process the following sql statements.  Following is part of the outputs(We modified according our purpose).  ``` [INFO ] 19:49:41.596 [epollEventLoopGroup-2-1] i.n.handler.logging.LoggingHandler - [id: 0xd66b03e6, L:/0.0.0.0:3307] READ: [id: 0x60558169, L:/192.168.1.46:3307 - R:/192.168.1.46:44510] [INFO ] 19:49:41.597 [epollEventLoopGroup-2-1] i.n.handler.logging.LoggingHandler - [id: 0xd66b03e6, L:/0.0.0.0:3307] READ COMPLETE [INFO ] 19:49:41.601 [epollEventLoopGroup-3-2] o.a.s.s.f.m.a.MySQLAuthenticationEngine - ===Username: amRiYzpteXNxbDovLzE5Mi4xNjguMC4xMDg6MzMwNi90ZXN0P3VzZXI9cm9vdCZwYXNzd29yZD10ZXN0JnNlcnZlclRpbWV6b25lPVVUQyZ1c2VTU0w9ZmFsc2U= [INFO ] 19:49:41.601 [epollEventLoopGroup-3-2] o.a.s.s.f.m.a.MySQLAuthenticationEngine - ===Auth  connection url=jdbc:mysql://192.168.0.108:3306/test?user=root&amp;password=test&amp;serverTimezone=UTC&amp;useSSL=false [INFO ] 19:49:41.602 [epollEventLoopGroup-3-2] o.a.s.s.f.m.a.MySQLAuthenticationEngine - ===Login succeed [INFO ] 19:49:44.597 [epollEventLoopGroup-2-1] i.n.handler.logging.LoggingHandler - [id: 0xd66b03e6, L:/0.0.0.0:3307] READ: [id: 0xafd94de4, L:/192.168.1.46:3307 - R:/192.168.1.46:44512] [INFO ] 19:49:44.597 [epollEventLoopGroup-2-1] i.n.handler.logging.LoggingHandler - [id: 0xd66b03e6, L:/0.0.0.0:3307] READ COMPLETE [INFO ] 19:49:44.601 [epollEventLoopGroup-3-3] o.a.s.s.f.m.a.MySQLAuthenticationEngine - ===Username: amRiYzpteXNxbDovLzE5Mi4xNjguMC4xMDg6MzMwNi90ZXN0P3VzZXI9cm9vdCZwYXNzd29yZD10ZXN0JnNlcnZlclRpbWV6b25lPVVUQyZ1c2VTU0w9ZmFsc2U= [INFO ] 19:49:44.602 [epollEventLoopGroup-3-3] o.a.s.s.f.m.a.MySQLAuthenticationEngine - ===Auth  connection url=jdbc:mysql://192.168.0.108:3306/test?user=root&amp;password=test&amp;serverTimezone=UTC&amp;useSSL=false [INFO ] 19:49:44.602 [epollEventLoopGroup-3-3] o.a.s.s.f.m.a.MySQLAuthenticationEngine - ===Login succeed ``` After the client application is killed. The blocked sql statement will be processed. ``` [INFO ] 19:50:06.662 [ShardingSphere-Command-1] o.a.s.s.b.c.j.w.StatementExecutorWrapperJustep - ===Modified Sql:SELECT * FROM sa_taskrelation [INFO ] 19:50:06.662 [ShardingSphere-Command-2] o.a.s.s.f.m.c.MySQLCommandExecutorFactory - Execute packet type: COM_QUERY, value: MySQLComQueryPacket(sql=select * from sa_sign) [INFO ] 19:50:06.662 [ShardingSphere-Command-2] o.a.s.s.b.c.j.w.StatementExecutorWrapperJustep - ===Modified Sql:SELECT * FROM sa_sign [INFO ] 19:50:06.662 [ShardingSphere-Command-0] o.a.s.s.f.m.c.MySQLCommandExecutorFactory - Execute packet type: COM_QUERY, value: MySQLComQueryPacket(sql=select * from document_subscriptions) [INFO ] 19:50:06.663 [ShardingSphere-Command-0] o.a.s.s.b.c.j.w.StatementExecutorWrapperJustep - ===Modified Sql:SELECT * FROM document_subscriptions [INFO ] 19:50:06.663 [ShardingSphere-Command-3] o.a.s.s.f.m.c.MySQLCommandExecutorFactory - Execute packet type: COM_QUERY, value: MySQLComQueryPacket(sql=select * from selectionlist_data) [INFO ] 19:50:06.664 [ShardingSphere-Command-1] o.a.s.s.f.m.c.MySQLCommandExecutorFactory - Execute packet type: COM_QUERY, value: MySQLComQueryPacket(sql=select * from sa_remindactionparameter) [INFO ] 19:50:06.664 [ShardingSphere-Command-3] o.a.s.s.b.c.j.w.StatementExecutorWrapperJustep - ===Modified Sql:SELECT * FROM selectionlist_data ```  ### Reason analyze (If you can)  ### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc. The test client application is a multi-thread application. In a thread, it does following work. 1. connection to shardingsphere-proxy 2. get all table names of the database. 3. for each table, executeQuery("select * from " + tablename) and print the result set, sleep 2 seconds. 4. close the connection 5. goto 1  100 threads are created to test. when shardingsphere-proxy is blocked, part of the client outputs: ``` Fri Jul 10 19:49:27 CST 2020 WARN: Establishing SSL connection without server's identity verification is not recommended. According to MySQL 5.5.45+, 5.6.26+ and 5.7.6+ requirements SSL connection must be established by default if explicit option isn't set. For compliance with existing applications not using SSL the verifyServerCertificate property is set to 'false'. You need either to explicitly disable SSL by setting useSSL=false, or set useSSL=true and provide truststore for server certificate verification. ``` It seems client is connecting to server, but cannot get response. ### Example codes for reproduce this issue (such as a github link). </body>
		<created>2020-07-10 12:05:26</created>
		<closed>2020-07-14 14:30:33</closed>
	</bug>
	<bug>
		<id>6299</id>
		<title>NPE when the query contains a MATCH AGAINST expression</title>
		<body>## Bug Report  **For English only**, other languages will not accept.  Before report a bug, make sure you have:  - Searched open and closed [GitHub issues](https://github.com/apache/shardingsphere/issues). - Read documentation: [ShardingSphere Doc](https://shardingsphere.apache.org/document/current/en/overview).  Please pay attention on issues you submitted, because we maybe need more details.  If no response anymore and we cannot reproduce it on current information, we will **close it**.  Please answer these questions before submitting your issue. Thanks!  ### Which version of ShardingSphere did you use? 4.1.1 ### Which project did you use? ShardingSphere-JDBC or ShardingSphere-Proxy? ShardingSphere-JDBC ### Expected behavior The query runs normally against the DB and returns the values. ### Actual behavior A NullPonterException is thrown by the sql parser ``` java.lang.NullPointerException at org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18) at org.apache.shardingsphere.sql.parser.mysql.visitor.MySQLVisitor.createInSegment(MySQLVisitor.java:322) at org.apache.shardingsphere.sql.parser.mysql.visitor.MySQLVisitor.visitPredicate(MySQLVisitor.java:310) at org.apache.shardingsphere.sql.parser.mysql.visitor.MySQLVisitor.visitPredicate(MySQLVisitor.java:121) at org.apache.shardingsphere.sql.parser.autogen.MySQLStatementParser$PredicateContext.accept(MySQLStatementParser.java:11690) at org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18) at org.apache.shardingsphere.sql.parser.mysql.visitor.MySQLVisitor.visitBooleanPrimary(MySQLVisitor.java:273) at org.apache.shardingsphere.sql.parser.mysql.visitor.MySQLVisitor.visitBooleanPrimary(MySQLVisitor.java:121) at org.apache.shardingsphere.sql.parser.autogen.MySQLStatementParser$BooleanPrimaryContext.accept(MySQLStatementParser.java:11463) at org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18) at org.apache.shardingsphere.sql.parser.mysql.visitor.MySQLVisitor.createCompareSegment(MySQLVisitor.java:283) at org.apache.shardingsphere.sql.parser.mysql.visitor.MySQLVisitor.visitBooleanPrimary(MySQLVisitor.java:270) at org.apache.shardingsphere.sql.parser.mysql.visitor.MySQLVisitor.visitBooleanPrimary(MySQLVisitor.java:121) at org.apache.shardingsphere.sql.parser.autogen.MySQLStatementParser$BooleanPrimaryContext.accept(MySQLStatementParser.java:11463) at org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18) at org.apache.shardingsphere.sql.parser.mysql.visitor.MySQLVisitor.visitExpr(MySQLVisitor.java:258) at org.apache.shardingsphere.sql.parser.mysql.visitor.MySQLVisitor.visitExpr(MySQLVisitor.java:121) at org.apache.shardingsphere.sql.parser.autogen.MySQLStatementParser$ExprContext.accept(MySQLStatementParser.java:11241) at org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18) at org.apache.shardingsphere.sql.parser.mysql.visitor.impl.MySQLDMLVisitor.visitWhereClause(MySQLDMLVisitor.java:580) at org.apache.shardingsphere.sql.parser.mysql.visitor.impl.MySQLDMLVisitor.visitWhereClause(MySQLDMLVisitor.java:127) at org.apache.shardingsphere.sql.parser.autogen.MySQLStatementParser$WhereClauseContext.accept(MySQLStatementParser.java:6981) at org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18) at org.apache.shardingsphere.sql.parser.mysql.visitor.impl.MySQLDMLVisitor.visitSelectClause(MySQLDMLVisitor.java:340) at org.apache.shardingsphere.sql.parser.mysql.visitor.impl.MySQLDMLVisitor.visitSelectClause(MySQLDMLVisitor.java:127) at org.apache.shardingsphere.sql.parser.autogen.MySQLStatementParser$SelectClauseContext.accept(MySQLStatementParser.java:4551) at org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18) at org.apache.shardingsphere.sql.parser.mysql.visitor.impl.MySQLDMLVisitor.visitUnionClause(MySQLDMLVisitor.java:322) at org.apache.shardingsphere.sql.parser.mysql.visitor.impl.MySQLDMLVisitor.visitUnionClause(MySQLDMLVisitor.java:127) at org.apache.shardingsphere.sql.parser.autogen.MySQLStatementParser$UnionClauseContext.accept(MySQLStatementParser.java:4446) at org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18) at org.apache.shardingsphere.sql.parser.mysql.visitor.impl.MySQLDMLVisitor.visitSelect(MySQLDMLVisitor.java:314) at org.apache.shardingsphere.sql.parser.mysql.visitor.impl.MySQLDMLVisitor.visitSelect(MySQLDMLVisitor.java:127) at org.apache.shardingsphere.sql.parser.autogen.MySQLStatementParser$SelectContext.accept(MySQLStatementParser.java:3098) at org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18) at org.apache.shardingsphere.sql.parser.SQLParserEngine.parse0(SQLParserEngine.java:80) at org.apache.shardingsphere.sql.parser.SQLParserEngine.parse(SQLParserEngine.java:61) at org.apache.shardingsphere.underlying.route.DataNodeRouter.createRouteContext(DataNodeRouter.java:97) at org.apache.shardingsphere.underlying.route.DataNodeRouter.executeRoute(DataNodeRouter.java:89) at org.apache.shardingsphere.underlying.route.DataNodeRouter.route(DataNodeRouter.java:76) at org.apache.shardingsphere.underlying.pluggble.prepare.PreparedQueryPrepareEngine.route(PreparedQueryPrepareEngine.java:54) at org.apache.shardingsphere.underlying.pluggble.prepare.BasePrepareEngine.executeRoute(BasePrepareEngine.java:96) at org.apache.shardingsphere.underlying.pluggble.prepare.BasePrepareEngine.prepare(BasePrepareEngine.java:83) at org.apache.shardingsphere.shardingjdbc.jdbc.core.statement.ShardingPreparedStatement.prepare(ShardingPreparedStatement.java:183) at org.apache.shardingsphere.shardingjdbc.jdbc.core.statement.ShardingPreparedStatement.executeQuery(ShardingPreparedStatement.java:116) ``` ### Reason analyze (If you can) The current grammar is wrong, at [BaseRule.g4#L456](https://github.com/apache/shardingsphere/blob/dev-4.x/shardingsphere-sql-parser/shardingsphere-sql-parser-dialect/shardingsphere-sql-parser-mysql/src/main/antlr4/imports/mysql/BaseRule.g4#L456) ``` MATCH columnNames AGAINST (expr matchSearchModifier_?) ``` should be ``` MATCH columnNames AGAINST LP_ expr matchSearchModifier_? RP_ ``` Those parentheses tokens are needed and not optional (see [MySQL doc](https://dev.mysql.com/doc/refman/5.7/en/fulltext-search.html#function_match) or [MySQL-Workbench grammar](https://github.com/mysql/mysql-workbench/blob/8.0/library/parsers/grammars/MySQLParser.g4#L2423))  ### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc. A query with a MATCH (...) AGAINST(...) expression, for example: `SELECT * FROM user_messages WHERE MATCH(description, name) AGAINST (? IN NATURAL LANGUAGE MODE) &gt; 0.0`  ### Patch We are using 4.1.1 so we made a fix over dev-4.x branch that we are using internally. The fix is like this: https://github.com/KoxAlen/shardingsphere/commit/d98ae1f4ad91a5053a4e04bc76e74cd62b753394 A fix for the grammar and code to consume the expr as it can contain parameter markers. Just tell us if you want a PR for this and if you want it over `dev-4.x` or over `master` branch. </body>
		<created>2020-07-08 10:21:06</created>
		<closed>2020-07-09 10:43:02</closed>
	</bug>
	<bug>
		<id>6294</id>
		<title>shardingjdbc 4.1.1 mysql sql parse support "for update", but oracle not support </title>
		<body>shardingjdbc 4.1.1 mysql sql parse support "for update", but oracle not support </body>
		<created>2020-07-07 10:38:51</created>
		<closed>2020-07-31 02:45:19</closed>
	</bug>
	<bug>
		<id>6251</id>
		<title>sharding 4.1.1 spring boot hikari oracle start</title>
		<body># Which version of ShardingSphere did you use? 4.1.1 ### Which project did you use? ShardingSphere-JDBC or ShardingSphere-Proxy? ShardingSphere-JDBC ### Expected behavior insert into oracle with data encrypted and get it decrypted ### Actual behavior `Caused by: java.sql.SQLSyntaxErrorException: ORA-00942: 表或视图不存在  at oracle.jdbc.driver.T4CTTIoer.processError(T4CTTIoer.java:447) ~[ojdbc6-11.2.0.3.jar:11.2.0.4.0] at oracle.jdbc.driver.T4CTTIoer.processError(T4CTTIoer.java:396) ~[ojdbc6-11.2.0.3.jar:11.2.0.4.0] at oracle.jdbc.driver.T4C8Oall.processError(T4C8Oall.java:951) ~[ojdbc6-11.2.0.3.jar:11.2.0.4.0] at oracle.jdbc.driver.T4CTTIfun.receive(T4CTTIfun.java:513) ~[ojdbc6-11.2.0.3.jar:11.2.0.4.0] at oracle.jdbc.driver.T4CTTIfun.doRPC(T4CTTIfun.java:227) ~[ojdbc6-11.2.0.3.jar:11.2.0.4.0] at oracle.jdbc.driver.T4C8Oall.doOALL(T4C8Oall.java:531) ~[ojdbc6-11.2.0.3.jar:11.2.0.4.0] at oracle.jdbc.driver.T4CStatement.doOall8(T4CStatement.java:195) ~[ojdbc6-11.2.0.3.jar:11.2.0.4.0] at oracle.jdbc.driver.T4CStatement.executeForRows(T4CStatement.java:1036) ~[ojdbc6-11.2.0.3.jar:11.2.0.4.0] at oracle.jdbc.driver.OracleStatement.doExecuteWithTimeout(OracleStatement.java:1336) ~[ojdbc6-11.2.0.3.jar:11.2.0.4.0] at oracle.jdbc.driver.OracleStatement.executeUpdateInternal(OracleStatement.java:1845) ~[ojdbc6-11.2.0.3.jar:11.2.0.4.0] at oracle.jdbc.driver.OracleStatement.executeUpdate(OracleStatement.java:1810) ~[ojdbc6-11.2.0.3.jar:11.2.0.4.0] at oracle.jdbc.driver.OracleStatementWrapper.executeUpdate(OracleStatementWrapper.java:294) ~[ojdbc6-11.2.0.3.jar:11.2.0.4.0] at oracle.jdbc.OracleDatabaseMetaData.getIndexInfo(OracleDatabaseMetaData.java:4138) ~[ojdbc6-11.2.0.3.jar:11.2.0.4.0] at com.zaxxer.hikari.pool.ProxyDatabaseMetaData.getIndexInfo(ProxyDatabaseMetaData.java:209) ~[HikariCP-3.4.5.jar:na] at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.getIndexInfo(HikariProxyDatabaseMetaData.java) ~[HikariCP-3.4.5.jar:na] at org.apache.shardingsphere.sql.parser.binder.metadata.index.IndexMetaDataLoader.load(IndexMetaDataLoader.java:49) ~[shardingsphere-sql-parser-binder-4.1.1.jar:4.1.1] at org.apache.shardingsphere.sql.parser.binder.metadata.schema.SchemaMetaDataLoader.load(SchemaMetaDataLoader.java:84) ~[shardingsphere-sql-parser-binder-4.1.1.jar:4.1.1] at org.apache.shardingsphere.sql.parser.binder.metadata.schema.SchemaMetaDataLoader.load(SchemaMetaDataLoader.java:76) ~[shardingsphere-sql-parser-binder-4.1.1.jar:4.1.1] at org.apache.shardingsphere.shardingjdbc.jdbc.core.context.EncryptRuntimeContext.loadSchemaMetaData(EncryptRuntimeContext.java:44) ~[sharding-jdbc-core-4.1.1.jar:4.1.1] at org.apache.shardingsphere.shardingjdbc.jdbc.core.context.SingleDataSourceRuntimeContext.createMetaData(SingleDataSourceRuntimeContext.java:56) ~[sharding-jdbc-core-4.1.1.jar:4.1.1] at org.apache.shardingsphere.shardingjdbc.jdbc.core.context.SingleDataSourceRuntimeContext.&lt;init&gt;(SingleDataSourceRuntimeContext.java:50) ~[sharding-jdbc-core-4.1.1.jar:4.1.1] at org.apache.shardingsphere.shardingjdbc.jdbc.core.context.EncryptRuntimeContext.&lt;init&gt;(EncryptRuntimeContext.java:38) ~[sharding-jdbc-core-4.1.1.jar:4.1.1] at org.apache.shardingsphere.shardingjdbc.jdbc.core.datasource.EncryptDataSource.&lt;init&gt;(EncryptDataSource.java:48) ~[sharding-jdbc-core-4.1.1.jar:4.1.1] at org.apache.shardingsphere.shardingjdbc.api.EncryptDataSourceFactory.createDataSource(EncryptDataSourceFactory.java:46) ~[sharding-jdbc-core-4.1.1.jar:4.1.1] at org.apache.shardingsphere.shardingjdbc.spring.boot.SpringBootConfiguration.encryptDataSource(SpringBootConfiguration.java:127) ~[sharding-jdbc-spring-boot-starter-4.1.1.jar:4.1.1]` **IF i change the sharding version to 4.0.1, i can start it error........** ### Reason analyze (If you can) i think the reason is oracle cannot return the right schema and sharding get much more system object  ### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc. the sharding rule is  ```     encrypt:       tables:         CONFIG:           columns:             NAME:               cipherColumn: NAME               encryptor: order_encryptor       encryptors:         order_encryptor:           type: aes           props:             aes.key.value: 22fcf0cd2cf07841d4214d6a14b2b28c ``` ### Example codes for reproduce this issue (such as a github link). https://github.com/wuguowei19880907/kotlin-spring-boot.git</body>
		<created>2020-07-03 03:41:44</created>
		<closed>2020-07-30 06:45:21</closed>
	</bug>
	<bug>
		<id>6239</id>
		<title>Make the version of ShardingProxy and DB cluster consistent</title>
		<body>**usage:** sqoop-1.4.6-cdh5.16.2 +sharding-proxy-4.1.1 + mysql 5.6  **==== sqoop script：** sqoop import \ --hive-drop-import-delims \ --connect "jdbc:mysql://xxx:3307/sharding_db?useSSL=false" \ --username root \ --password 'root' \ --split-by id \ --boundary-query "select min(id),max(id) from answer_report" \ --hive-import \ --hive-table tmp.test_sharding_proxy \ --query "select id,table_index,report_id,paper_id,paper_title from answer_report where "'$CONDITIONS' \ --fields-terminated-by '\001' \ --target-dir /tmp/sqoop_test_sharding_proxy_`date +%s` \ --hive-partition-key day \ --hive-partition-value ${bizdate}  **=== sqoop error info:**  ERROR manager.SqlManager: Error executing statement: java.sql.SQLException: Unknown system variable 'transaction_isolation' java.sql.SQLException: Unknown system variable 'transaction_isolation' at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:965) at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3978) at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3914) at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530) at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683) ......  **=== sharding-proxy log:**  [INFO ] 17:46:19.896 [ShardingSphere-Command-4] ShardingSphere-SQL - Logic SQL: /* mysql-connector-java-5.1.47 ( Revision: fe1903b1ecb4a96a917f7ed3190d80c049b1de29 ) */SELECT  @@session.auto_increment_increment AS auto_increment_increment, @@character_set_client AS character_set_client, @@character_set_connection AS character_set_connection, @@character_set_results AS character_set_results, @@character_set_server AS character_set_server, @@collation_server AS collation_server, @@collation_connection AS collation_connection, @@init_connect AS init_connect, @@interactive_timeout AS interactive_timeout, @@license AS license, @@lower_case_table_names AS lower_case_table_names, @@max_allowed_packet AS max_allowed_packet, @@net_buffer_length AS net_buffer_length, @@net_write_timeout AS net_write_timeout, @@sql_mode AS sql_mode, @@system_time_zone AS system_time_zone, @@time_zone AS time_zone, **@@transaction_isolation** AS transaction_isolation, @@wait_timeout AS wait_timeout  **===== error analysis** sharding-proxy are trying to find the variable ‘’transaction_isolation‘’，but mysql 5.6 don't have the variable 'transaction_isolation'  instead of 'tx_isolation'。  **then I test another version ：sharding-proxy-4.0.1。**  **==== sqoop error info：** 20/07/02 18:28:13 ERROR manager.SqlManager: Error executing statement: java.sql.SQLException: 2Unknown exception: [Failed to switch schema, please terminate current transaction.] java.sql.SQLException: 2Unknown exception: [Failed to switch schema, please terminate current transaction.] at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:965) at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3978)  **===sharding-proxy info：** [INFO ] 18:28:12.417 [ShardingSphere-Command-6] ShardingSphere-SQL - Logic SQL: /* mysql-connector-java-5.1.47 ( Revision: fe1903b1ecb4a96a917f7ed3190d80c049b1de29 ) */SELECT  @@session.auto_increment_increment AS auto_increment_increment, @@character_set_client AS character_set_client, @@character_set_connection AS character_set_connection, @@character_set_results AS character_set_results, @@character_set_server AS character_set_server, @@collation_server AS collation_server, @@collation_connection AS collation_connection, @@init_connect AS init_connect, @@interactive_timeout AS interactive_timeout, @@license AS license, @@lower_case_table_names AS lower_case_table_names, @@max_allowed_packet AS max_allowed_packet, @@net_buffer_length AS net_buffer_length, @@net_write_timeout AS net_write_timeout, @@query_cache_size AS query_cache_size, @@query_cache_type AS query_cache_type, @@sql_mode AS sql_mode, @@system_time_zone AS system_time_zone, @@time_zone AS time_zone, **@@tx_isolation** AS transaction_isolation, @@wait_timeout AS wait_timeout ...... [ERROR] 18:28:13.467 [ShardingSphere-Command-2] o.a.s.s.f.c.CommandExecutorTask - Exception occur: org.apache.shardingsphere.core.exception.ShardingException: Failed to switch schema, please terminate current transaction.         at org.apache.shardingsphere.shardingproxy.backend.communication.jdbc.connection.BackendConnection.setCurrentSchema(BackendConnection.java:116)         at org.apache.shardingsphere.shardingproxy.backend.text.admin.BroadcastBackendHandler.execute(BroadcastBackendHandler.java:53)         at org.apache.shardingsphere.shardingproxy.frontend.mysql.command.query.text.query.MySQLComQueryPacketExecutor.execute(MySQLComQueryPacketExecutor.java:73)         at org.apache.shardingsphere.shardingproxy.frontend.command.CommandExecutorTask.executeCommand(CommandExecutorTask.java:92)         at org.apache.shardingsphere.shardingproxy.frontend.command.CommandExecutorTask.run(CommandExecutorTask.java:72)         at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)         at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)         at java.lang.Thread.run(Thread.java:748)   === the sharding-proxy-4.0.1  correctly identified parameter ‘tx_isolation’, but have the error  [Failed to switch schema, please terminate current transaction.] ; the sharding-proxy-4.0.1  did not recognize parameter  ‘tx_isolation’,      </body>
		<created>2020-07-02 09:26:08</created>
		<closed>2020-07-06 09:32:09</closed>
	</bug>
	<bug>
		<id>6228</id>
		<title>table name is not rewrited correctly in subquery</title>
		<body>I have a SQL `        SELECT min(id) AS min_id, max(id) AS max_id         from (             select id             FROM msg             WHERE id &amp;gt; #{minId}             AND date = #{date}             ORDER BY id             limit #{step}         ) a ` In version 4.0.0, the actual in log is  ` SELECT min(id) AS min_id, max(id) AS max_id         from (             select id             FROM msg_10             WHERE id &gt; ?             AND date = ?             ORDER BY id             limit ?         ) a ::: [-1, 2019-04-26 00:00:00.0, 1] ` But when I upgrade to 4.0.1, the actual sql in log is ` SELECT min(id) AS min_id, max(id) AS max_id         from (             select id             FROM msg             WHERE id &gt; ?             AND date = ?             ORDER BY id             limit ?         ) a ::: [-1, 2019-04-26 00:00:00.0, 1] `</body>
		<created>2020-07-01 04:10:03</created>
		<closed>2020-07-03 13:01:15</closed>
	</bug>
	<bug>
		<id>6181</id>
		<title>Sharding Proxy can not start without Metrics configuration.</title>
		<body>AFAIK, metrics configuration is not necessary for Sharding Proxy.  But currently, Sharding Proxy can not start without Metrics configuration. Obviously, it is not what we expect and needs handling. </body>
		<created>2020-06-24 03:42:52</created>
		<closed>2020-06-24 08:14:17</closed>
	</bug>
	<bug>
		<id>6098</id>
		<title>Sharding rules can not be persisted to config center with spring namespace</title>
		<body>Because the root bean definition was changed from `ShardingRuleConfiguration.class` to `AlgorithmProvidedShardingRuleConfiguration.class` when parsing the namespace,   so there is no suitable converter to convert `AlgorithmProvidedShardingRuleConfiguration` to `Yaml` configuration when persisting `Sharding`  rules to config center.   The `MasterSlave` and `Encrypt` rules are the same as above.  There are code segments:   `ShardingRuleBeanDefinitionParser.java` ``` @Override     protected AbstractBeanDefinition parseInternal(final Element element, final ParserContext parserContext) {         BeanDefinitionBuilder factory = BeanDefinitionBuilder.rootBeanDefinition(AlgorithmProvidedShardingRuleConfiguration.class);         factory.addConstructorArgValue(parseTableRulesConfiguration(element));         factory.addConstructorArgValue(parseAutoTableRulesConfiguration(element));         factory.addConstructorArgValue(parseBindingTablesConfiguration(element));         factory.addConstructorArgValue(parseBroadcastTables(element));         addDefaultDatabaseShardingStrategyRef(element, factory);         addDefaultTableShardingStrategyRef(element, factory);         addDefaultKeyGenerateStrategyRef(element, factory);         factory.addConstructorArgValue(ShardingSphereAlgorithmBeanRegistry.getAlgorithmBeanReferences(parserContext, ShardingAlgorithmFactoryBean.class));         factory.addConstructorArgValue(ShardingSphereAlgorithmBeanRegistry.getAlgorithmBeanReferences(parserContext, KeyGenerateAlgorithmFactoryBean.class));         return factory.getBeanDefinition();     } ```  `ConfigCenter.java`  ``` private void persistRuleConfigurations(final String shardingSchemaName, final Collection&lt;RuleConfiguration&gt; ruleConfigurations) {         Collection&lt;RuleConfiguration&gt; configurations = new LinkedList&lt;&gt;();         for (RuleConfiguration each : ruleConfigurations) {             if (each instanceof ShardingRuleConfiguration) {                 ShardingRuleConfiguration config = (ShardingRuleConfiguration) each;                 Preconditions.checkState(!config.getTables().isEmpty() || null != config.getDefaultTableShardingStrategy(),                         "No available sharding rule configuration in `%s` for orchestration.", shardingSchemaName);                 configurations.add(each);             } else if (each instanceof MasterSlaveRuleConfiguration) {                 MasterSlaveRuleConfiguration config = (MasterSlaveRuleConfiguration) each;                 config.getDataSources().forEach(group -&gt; Preconditions.checkState(                         !group.getMasterDataSourceName().isEmpty(), "No available master-slave rule configuration in `%s` for orchestration.", shardingSchemaName));                 configurations.add(each);             } else if (each instanceof EncryptRuleConfiguration) {                 EncryptRuleConfiguration config = (EncryptRuleConfiguration) each;                 Preconditions.checkState(!config.getEncryptors().isEmpty(), "No available encrypt rule configuration in `%s` for orchestration.", shardingSchemaName);                 configurations.add(each);             } else if (each instanceof ShadowRuleConfiguration) {                 ShadowRuleConfiguration config = (ShadowRuleConfiguration) each;                 Preconditions.checkState(!config.getColumn().isEmpty() &amp;&amp; null != config.getShadowMappings(), "No available shadow rule configuration in `%s` for orchestration.", shardingSchemaName);                 configurations.add(each);             }         }         YamlRootRuleConfigurations yamlRuleConfigurations = new YamlRootRuleConfigurations();         yamlRuleConfigurations.setRules(new YamlRuleConfigurationSwapperEngine().swapToYamlConfigurations(configurations));         repository.persist(node.getRulePath(shardingSchemaName), YamlEngine.marshal(yamlRuleConfigurations));     } ```  I will try to fix it later.</body>
		<created>2020-06-17 10:01:02</created>
		<closed>2020-06-22 02:19:38</closed>
	</bug>
	<bug>
		<id>5957</id>
		<title>sharding scaling didn't sync the increment data</title>
		<body>## Bug Report  Please answer these questions before submitting your issue. Thanks!  ### Which version of ShardingSphere did you use?  4.1.0 or 5.0.0 SNAPSHOT , MySQL 5.7.28  ### Which project did you use? ShardingSphere-JDBC or ShardingSphere-Proxy?  sharding scaling  ### Expected behavior  Sync increment data  ### Actual behavior  Does'n work  ### Reason analyze (If you can)  Maybe the `handleUpdateRowsEvent` doesn't work well   ### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.  before start this issue , I already ensure the binlog sync mode is ROW , and test table has PK  1. insert some test data into  table `source_schema.test` 2. start sharding scaling, and post the `scaling/job/start` request 3. scaling start to sync the inventory data , this works well 4. during scaling sync the inventory data , try to update one of the data in `source_schema.test` , such as `update test set amount = amount +1 where id = 123` 5. wait for a moment , all inventory data have been transtered to new sharded database through proxy, but the update change doesn't work  I grant the root user all privileges , and config root user in proxy.I'm not sure if there is any other configuration for database or proxy I should set up ?  I tried insert data ,during the inventory sync , if insert some new data , these could be sync to sharded part , but update data does't work</body>
		<created>2020-06-09 03:21:16</created>
		<closed>2020-07-10 10:17:36</closed>
	</bug>
	<bug>
		<id>5893</id>
		<title>EncryptRule use equalsIgnoreCase method to match encrypt column, but use equals method to match decrypt column.</title>
		<body>## Bug Report  **For English only**, other languages will not accept.  Before report a bug, make sure you have:  - Searched open and closed [GitHub issues](https://github.com/apache/shardingsphere/issues). - Read documentation: [ShardingSphere Doc](https://shardingsphere.apache.org/document/current/en/overview).  Please pay attention on issues you submitted, because we maybe need more details.  If no response **more than 7 days** and we cannot reproduce it on current information, we will **close it**.  Please answer these questions before submitting your issue. Thanks!  ### Which version of ShardingSphere did you use? ShardingSphere  4.0.1  ### Which project did you use? ShardingSphere-JDBC or ShardingSphere-Proxy? ShardingSphere-JDBC  ### Expected behavior With the same encrypt-rule, decrypt mode work as same as encrypt mode. ### Actual behavior Encrypt mode works, but decrypt mode not.  ### Reason analyze (If you can) EncryptRule use equalsIgnoreCase method to match encrypt column, but use equals method to match decrypt column.  ### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc. ---------------------------------------------------------------  sharding rule configuration:  ``` spring:   shardingsphere:     props:       sql.show: true       query.with.cipher.column: true     sharding:       encrypt-rule:         encryptors:           encryptor_aes_salt:             type: aes-salt             props:               aes.key.value: 123456         tables:           t_account_salt:             columns:               mobile:                 cipherColumn: mobile_cipher                 assistedQueryColumn: mobile_assisted                 encryptor: encryptor_aes_salt ``` --------------------------------------------------------------------------------------- Tip: Use mysql config with "lower_case_table_names=1" , it will makes mysql don't care about the column is lower case or upper case. In sharding encrypt table,  use upper case columns to design. In application config, use lower case to config the cipherColumn and assistedQueryColumn. Then insert sql works correctly, but select sql not work.  ---------------------------------------------------------------------------------------- With this problem, I find the code in 'encrypt-core-common' module : ``` EncryptTable.java :      /**      * Find encryptor.      *      * @param logicColumn column name      * @return encryptor      */     public Optional&lt;String&gt; findEncryptor(final String logicColumn) {         Optional&lt;String&gt; originLogicColumnName = findOriginLogicColumnName(logicColumn);         return originLogicColumnName.isPresent() &amp;&amp; columns.containsKey(originLogicColumnName.get())                 ? Optional.of(columns.get(originLogicColumnName.get()).getEncryptor()) : Optional.empty();     }          private Optional&lt;String&gt; findOriginLogicColumnName(final String logicColumn) {         for (String each : columns.keySet()) {             if (logicColumn.equalsIgnoreCase(each)) {                 return Optional.of(each);             }         }         return Optional.empty();     }  ``` note: Here use String's equalsIgnoreCase method to match. If true sharding-jdbc may invoke ShardingEncryptor's encrypt method. ``` EncryptRule.java :       /**      * Is cipher column or not.      *      * @param tableName table name      * @param columnName column name      * @return cipher column or not      */     public boolean isCipherColumn(final String tableName, final String columnName) {         return tables.containsKey(tableName) &amp;&amp; tables.get(tableName).getCipherColumns().contains(columnName);     }  ``` note: tables.get(tableName).getCipherColumns() retuen a linkedlist , LinkedList's contains method use equals to match.  If true sharding-jdbc may invoke ShardingEncryptor's decrypt method.  -----------------------------------------------------------------------   ### Example codes for reproduce this issue (such as a github link). see previous.</body>
		<created>2020-06-02 13:37:54</created>
		<closed>2020-06-11 17:21:41</closed>
	</bug>
	<bug>
		<id>5870</id>
		<title>select case when throws nullpoint exception</title>
		<body>select case when 1=1 then 1 else 0 end  java.lang.NullPointerException: null at org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18) ~[antlr4-runtime-4.7.2.jar:4.7.2] at org.apache.shardingsphere.sql.parser.mysql.visitor.MySQLVisitor.visitCaseExpression(MySQLVisitor.java:585) ~[shardingsphere-sql-parser-mysql-4.1.0.jar:4.1.0] at org.apache.shardingsphere.sql.parser.mysql.visitor.MySQLVisitor.visitCaseExpression(MySQLVisitor.java:121) ~[shardingsphere-sql-parser-mysql-4.1.0.jar:4.1.0] at org.apache.shardingsphere.sql.parser.autogen.MySQLStatementParser$CaseExpressionContext.accept(MySQLStatementParser.java:17875) ~[shardingsphere-sql-parser-mysql-4.1.0.jar:4.1.0] at org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18) ~[antlr4-runtime-4.7.2.jar:4.7.2] at org.apache.shardingsphere.sql.parser.mysql.visitor.MySQLVisitor.visitRemainSimpleExpr(MySQLVisitor.java:572) ~[shardingsphere-sql-parser-mysql-4.1.0.jar:4.1.0] at org.apache.shardingsphere.sql.parser.mysql.visitor.MySQLVisitor.visitSimpleExpr(MySQLVisitor.java:431) ~[shardingsphere-sql-parser-mysql-4.1.0.jar:4.1.0] at org.apache.shardingsphere.sql.parser.mysql.visitor.MySQLVisitor.visitSimpleExpr(MySQLVisitor.java:121) ~[shardingsphere-sql-parser-mysql-4.1.0.jar:4.1.0] </body>
		<created>2020-06-01 07:29:21</created>
		<closed>2020-06-01 12:40:05</closed>
	</bug>
	<bug>
		<id>5858</id>
		<title>When batch inserting, only the primary key of the first data is returned</title>
		<body>## Bug Report  ### Which version of ShardingSphere did you use? 4.1.0  ### Which project did you use? ShardingSphere-JDBC or ShardingSphere-Proxy? ShardingSphere-JDBC  ### Expected behavior When inserting in batch, return the primary key of each piece of data  ### Actual behavior When batch inserting, only the primary key of the first data is returned  ### Reason analyze (If you can)  ### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc. Batch insert 2 pieces of data, only the first one returns the primary key. "carediaryid" is the primary key. ```  &lt;insert id="insertAll"             parameterType="com.test.CareDiaryDO"             useGeneratedKeys="true"             keyProperty="careDiaryId"&gt;         insert into care_diary (care_diary_type_cd, creator_type, description, status_cd, create_dt)         values         &lt;foreach collection="list" item="item" index="index" separator=","&gt;             (#{item.careDiaryTypeCd,jdbcType=CHAR},              #{item.creatorType,jdbcType=CHAR},               #{item.description,jdbcType=VARCHAR},               #{item.statusCd,jdbcType=CHAR},              #{item.createDt,jdbcType=TIMESTAMP})         &lt;/foreach&gt;     &lt;/insert&gt; ``` ``` spring:     shardingsphere:         sharding:             default-data-source-name: ds             tables:                 care_diary:                 key-generator:                     column: care_diary_id                     type: snowflake ```  ### Example codes for reproduce this issue (such as a github link). </body>
		<created>2020-05-30 18:37:30</created>
		<closed>2020-09-22 06:26:25</closed>
	</bug>
	<bug>
		<id>5857</id>
		<title>ERROR 1054 (42S22): Unknown column 't_order.order_id' in 'field list'</title>
		<body>Which version of ShardingSphere did you use? 4.1.0  Which project did you use? Sharding-JDBC or Sharding-Proxy? Sharding-Proxy  Steps to reproduce the behavior  when executing the follow sql:  ```sql SELECT `t_order`.`user_id`, `t_order`.`order_id`, `t_order`.`name` FROM `t_order` ORDER BY `t_order`.`order_id` ASC  ; ``` the follow error is raised: ```bash ERROR 1054 (42S22): Unknown column 't_order.order_id' in 'field list' ```  the actual sql is wrong: ```sql SELECT `t_order_0`.`user_id`, `t_order_0`.`order_id`, `t_order_0`.`name` , `t_order`.`order_id` AS ORDER_BY_DERIVED_0 FROM `t_order_0` ORDER BY `t_order_0`.`order_id` ASC ```</body>
		<created>2020-05-30 14:30:59</created>
		<closed>2020-06-22 03:13:47</closed>
	</bug>
	<bug>
		<id>5851</id>
		<title>Sharding Proxy Registry Center Disable SlaveDB Doesn`t Work！</title>
		<body>## registry center forbidden does not work  **environments:**  - mysql:5.7  - shardingproxy:4.1  - zk:3.6.1  I have disabled my **slave_ds_1** through shardingsphere-ui, like this: ![image](https://user-images.githubusercontent.com/52565931/83247105-a82f4e80-a1d5-11ea-9127-c159ee0be0ca.png) and in zk, the value has been **DISABLED**, like this: ![image](https://user-images.githubusercontent.com/52565931/83247355-fe03f680-a1d5-11ea-98e4-7e4b47c0ec36.png) but in my springboot project, I called my test interface several times, I found it still find data from the slave_ds_1 that has been forbidden. like this: ![image](https://user-images.githubusercontent.com/52565931/83248300-74edbf00-a1d7-11ea-9f70-370576378c9e.png) This is ok , that the data find from the alive db, but after I call my test interface several times, the data changed from the db that has been disabled,  ![image](https://user-images.githubusercontent.com/52565931/83248651-fe9d8c80-a1d7-11ea-80fa-68b3f2474e1e.png) I restart the shardingproxy but the problem still there. I really dont know why my disable set didn`t work?  this is my server.yaml: ![image](https://user-images.githubusercontent.com/52565931/83249453-2c370580-a1d9-11ea-88bd-56fcb0e53533.png)   this is my confit-mater_slave.yaml: ![image](https://user-images.githubusercontent.com/52565931/83249419-1c1f2600-a1d9-11ea-8a7a-bcf1db50c256.png) </body>
		<created>2020-05-29 10:28:53</created>
		<closed>2020-06-04 03:53:44</closed>
	</bug>
	<bug>
		<id>5837</id>
		<title>rename module shardingsphere-kernal to shardingsphere-kernel</title>
		<body>rename module shardingsphere-kernal to shardingsphere-kernel rename module shardingsphere-kernal-context to shardingsphere-kernel-context rename package org.apache.shardingsphere.kernal to org.apache.shardingsphere.kernel</body>
		<created>2020-05-29 03:10:43</created>
		<closed>2020-05-29 10:38:25</closed>
	</bug>
	<bug>
		<id>5813</id>
		<title>java.lang.ClassCastException: org.apache.shardingsphere.sql.parser.sql.segment.dml.column.ColumnSegment cannot be cast to org.apache.shardingsphere.sql.parser.sql.segment.dml.expr.ExpressionSegment </title>
		<body>shardingsphere 4.0.1 is ok, but 4.1.0 throws an exception？  shardingsphere : 4.1.0  SQL:    ```sql update ic_goods_occupy_record set actual_amount = pre_amount, pre_amount = 0, version = version + 1, update_time = now() ,update_person = ? where biz_bill_no = ? or orig_bill_no = ? and is_deleted = 0 ```  ``` org.mybatis.spring.MyBatisSystemException: nested exception is  org.apache.ibatis.exceptions.PersistenceException: ### Error updating database. Cause: java.lang.ClassCastException:  org.apache.shardingsphere.sql.parser.sql.segment.dml.column.ColumnSegment cannot be cast to org.apache.shardingsphere.sql.parser.sql.segment.dml.expr.ExpressionSegment  ### T The error may involve defaultParameterMap  ### The error occurred while setting parameters  ### SQL: update ic_goods_occupy_record set actual_amount = pre_amount, pre_amount = 0, version = version + 1, update_time = now() ,update_person = ? where biz_bill_no = ? or orig_bill_no = ? and is_deleted = 0  ### Cause: java.lang.ClassCastException: org.apache.shardingsphere.sql.parser.sql.segment.dml.column.ColumnSegment cannot be cast to org.apache.shardingsphere.sql.parser.sql.segment.dml.expr.ExpressionSegment  at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:78)  at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:440)  at com.sun.proxy.$Proxy73.update(Unknown Source) at org.mybatis.spring.SqlSessionTemplate.update(SqlSessionTemplate.java:287) at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:67) at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:57) at com.sun.proxy.$Proxy107.updateActualAmountByOrderNo(Unknown Source)  at com.ncarzone.saleinventory.biz.component.goodinv.GoodsOccupyRecordComponent.updateActualAmountByOrderNo(GoodsOccupyRecordComponent.java:60) at com.ncarzone.saleinventory.biz.component.goodinv.GoodsOccupyRecordComponent$$FastClassBySpringCGLIB$$fc1b0c75.invoke()  at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204) at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684) at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204) at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746) at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:294) at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98) at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185) at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88) sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644) at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633) at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70) at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:174) at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644) at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633) at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70) at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:174) at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92) at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185) at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688) ```</body>
		<created>2020-05-27 15:42:23</created>
		<closed>2020-05-28 14:49:54</closed>
	</bug>
	<bug>
		<id>5809</id>
		<title>CaseExpressionContext#simpleExpr may throw NullPointerException (version: 4.1.0)</title>
		<body>First of all, my English is not very good.(所以, 抱歉咯, 问题描述不清楚, 也不能怪我咯) ### Which version of ShardingSphere did you use? version: 4.1.0 ### Which project did you use? ShardingSphere-JDBC or ShardingSphere-Proxy? ShardingSphere-JDBC  ### Expected behavior Execute SQL normally. ShardingSphere-JDBC Version 4.0.0 does not have this problem ### Actual behavior throw NullPointerException ### Reason analyze (If you can) The following SQL is causing the problem ``` update xxx_table &lt;trim prefix="set" suffixOverrides=","&gt;     &lt;trim prefix="column1= case" suffix="end," &gt;         &lt;foreach collection="list" item="item" index="index"&gt;             &lt;if test="item.column1 != null"&gt;                 when id = #{item.id} then #{item.column1}             &lt;/if&gt;         &lt;/foreach&gt;         else column1     &lt;/trim&gt;     &lt;trim prefix="column2 = case" suffix="end," &gt;         &lt;foreach collection="list" item="item" index="index"&gt;             &lt;if test="item.column2 != null"&gt;                 when id = #{item.id} then #{item.column2}             &lt;/if&gt;         &lt;/foreach&gt;         else column2     &lt;/trim&gt; &lt;/trim&gt; where &lt;foreach collection="list" item="item" open="( " separator=") or (" close=" )"&gt;     id = #{item.id} &lt;/foreach&gt; ```  The actual SQL may be like this ``` UPDATE     xxx_table  SET     column1 = CASE WHEN id = 1 THEN 'value1' WHEN id = 2 THEN 'value2' ELSE column1 END,     column2 = CASE WHEN id = 1 THEN 'value21' WHEN id = 2 THEN 'value22' ELSE update_user  END  WHERE (     id = 1 or id = 2 ) ```  This is just a personal analysis, it may be wrong.  When analyzing this condition ```&lt;trim prefix="column1= case" suffix="end," &gt;``` MySQLVisitor#visitCaseExpression (MySQLVisitor.java line 585)call AbstractParseTreeVisitor#visit(CaseExpressionContext#simpleExpr) will throw NullPointerException  Below is the stack information:  ``` org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.PersistenceException:  ### Error updating database.  Cause: java.lang.NullPointerException ### The error may involve defaultParameterMap ### The error occurred while setting parameters ### SQL: update class_conf  set `value` = case when id = ? then ?   else `value` end,          update_user = case when id = ? then ?  else update_user end  where  ( id = ? ) ### Cause: java.lang.NullPointerException at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:77) at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446) at com.sun.proxy.$Proxy165.update(Unknown Source) at org.mybatis.spring.SqlSessionTemplate.update(SqlSessionTemplate.java:294) at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62) at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59) at com.sun.proxy.$Proxy174.batchUpdateClassConf(Unknown Source) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333) at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190) at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157) at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52) at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179) at org.springframework.aop.aspectj.AspectJAfterAdvice.invoke(AspectJAfterAdvice.java:47) at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179) at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92) at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179) at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:213) at com.sun.proxy.$Proxy175.batchUpdateClassConf(Unknown Source) at com.ewt360.schooluserservice.service.biz.repo.dao.impl.ClassConfDaoImpl.batchUpdateAndInsertClassConf(ClassConfDaoImpl.java:40) at com.ewt360.schooluserservice.service.biz.repo.dao.impl.ClassConfDaoImpl$$FastClassBySpringCGLIB$$5ea3546e.invoke(&lt;generated&gt;) at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204) at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:738) at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157) at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:136) at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179) at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52) at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179) at org.springframework.aop.aspectj.AspectJAfterAdvice.invoke(AspectJAfterAdvice.java:47) at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179) at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99) at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:282) at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96) at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179) at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92) at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179) at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673) at com.ewt360.schooluserservice.service.biz.repo.dao.impl.ClassConfDaoImpl$$EnhancerBySpringCGLIB$$3dcbe6bc.batchUpdateAndInsertClassConf(&lt;generated&gt;) at com.ewt360.schooluserservice.service.biz.service.impl.classes.ClassServiceImpl.batchUpdateClassConf(ClassServiceImpl.java:643) at com.ewt360.schooluserservice.service.biz.service.impl.classes.ClassServiceImpl$$FastClassBySpringCGLIB$$d3833478.invoke(&lt;generated&gt;) at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204) at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:738) at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157) at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52) at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179) at org.springframework.aop.aspectj.AspectJAfterAdvice.invoke(AspectJAfterAdvice.java:47) at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179) at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92) at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179) at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673) at com.ewt360.schooluserservice.service.biz.service.impl.classes.ClassServiceImpl$$EnhancerBySpringCGLIB$$c71c74ae.batchUpdateClassConf(&lt;generated&gt;) at com.ewt360.schooluserservice.service.facade.impl.classes.ClassFacadeImpl.batchUpdateClassConf(ClassFacadeImpl.java:174) at com.ewt360.schooluserservice.service.facade.impl.classes.ClassFacadeImpl$$FastClassBySpringCGLIB$$9421d509.invoke(&lt;generated&gt;) at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204) at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:738) at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157) at org.springframework.validation.beanvalidation.MethodValidationInterceptor.invoke(MethodValidationInterceptor.java:150) at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179) at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85) at com.ewt360.framework.container.web.LogRequestResponse.LogRequestResponseAdvice.handle(LogRequestResponseAdvice.java:68) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:627) at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:616) at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70) at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179) at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92) at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179) at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673) at com.ewt360.schooluserservice.service.facade.impl.classes.ClassFacadeImpl$$EnhancerBySpringCGLIB$$1a370ceb.batchUpdateClassConf(&lt;generated&gt;) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205) at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133) at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97) at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827) at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738) at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85) at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967) at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901) at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970) at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872) at javax.servlet.http.HttpServlet.service(HttpServlet.java:707) at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846) at javax.servlet.http.HttpServlet.service(HttpServlet.java:790) at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231) at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52) at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) at org.springframework.boot.web.filter.ApplicationContextHeaderFilter.doFilterInternal(ApplicationContextHeaderFilter.java:55) at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) at org.springframework.boot.actuate.trace.WebRequestTraceFilter.doFilterInternal(WebRequestTraceFilter.java:111) at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99) at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109) at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81) at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) at org.springframework.cloud.sleuth.instrument.web.TraceFilter.doFilter(TraceFilter.java:166) at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197) at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) at org.springframework.boot.actuate.autoconfigure.MetricsFilter.doFilterInternal(MetricsFilter.java:106) at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198) at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496) at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140) at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81) at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87) at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342) at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803) at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66) at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790) at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459) at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) at java.lang.Thread.run(Thread.java:748) Caused by: org.apache.ibatis.exceptions.PersistenceException:  ### Error updating database.  Cause: java.lang.NullPointerException ### The error may involve defaultParameterMap ### The error occurred while setting parameters ### SQL: update class_conf  set `value` = case when id = ? then ?   else `value` end,          update_user = case when id = ? then ?  else update_user end  where  ( id = ? ) ### Cause: java.lang.NullPointerException at org.apache.ibatis.exceptions.ExceptionFactory.wrapException(ExceptionFactory.java:30) at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:200) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433) ... 142 common frames omitted Caused by: java.lang.NullPointerException: null at org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18) at org.apache.shardingsphere.sql.parser.mysql.visitor.MySQLVisitor.visitCaseExpression(MySQLVisitor.java:585) at org.apache.shardingsphere.sql.parser.mysql.visitor.MySQLVisitor.visitCaseExpression(MySQLVisitor.java:121) at org.apache.shardingsphere.sql.parser.autogen.MySQLStatementParser$CaseExpressionContext.accept(MySQLStatementParser.java:17875) at org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18) at org.apache.shardingsphere.sql.parser.mysql.visitor.MySQLVisitor.visitRemainSimpleExpr(MySQLVisitor.java:572) at org.apache.shardingsphere.sql.parser.mysql.visitor.MySQLVisitor.visitSimpleExpr(MySQLVisitor.java:431) at org.apache.shardingsphere.sql.parser.mysql.visitor.MySQLVisitor.visitSimpleExpr(MySQLVisitor.java:121) at org.apache.shardingsphere.sql.parser.autogen.MySQLStatementParser$SimpleExprContext.accept(MySQLStatementParser.java:12207) at org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18) at org.apache.shardingsphere.sql.parser.mysql.visitor.MySQLVisitor.visitBitExpr(MySQLVisitor.java:376) at org.apache.shardingsphere.sql.parser.mysql.visitor.MySQLVisitor.visitBitExpr(MySQLVisitor.java:121) at org.apache.shardingsphere.sql.parser.autogen.MySQLStatementParser$BitExprContext.accept(MySQLStatementParser.java:11916) at org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18) at org.apache.shardingsphere.sql.parser.mysql.visitor.MySQLVisitor.visitPredicate(MySQLVisitor.java:316) at org.apache.shardingsphere.sql.parser.mysql.visitor.MySQLVisitor.visitPredicate(MySQLVisitor.java:121) at org.apache.shardingsphere.sql.parser.autogen.MySQLStatementParser$PredicateContext.accept(MySQLStatementParser.java:11690) at org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18) at org.apache.shardingsphere.sql.parser.mysql.visitor.MySQLVisitor.visitBooleanPrimary(MySQLVisitor.java:273) at org.apache.shardingsphere.sql.parser.mysql.visitor.MySQLVisitor.visitBooleanPrimary(MySQLVisitor.java:121) at org.apache.shardingsphere.sql.parser.autogen.MySQLStatementParser$BooleanPrimaryContext.accept(MySQLStatementParser.java:11463) at org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18) at org.apache.shardingsphere.sql.parser.mysql.visitor.MySQLVisitor.visitExpr(MySQLVisitor.java:258) at org.apache.shardingsphere.sql.parser.mysql.visitor.MySQLVisitor.visitExpr(MySQLVisitor.java:121) at org.apache.shardingsphere.sql.parser.autogen.MySQLStatementParser$ExprContext.accept(MySQLStatementParser.java:11241) at org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18) at org.apache.shardingsphere.sql.parser.mysql.visitor.impl.MySQLDMLVisitor.visitAssignmentValue(MySQLDMLVisitor.java:250) at org.apache.shardingsphere.sql.parser.mysql.visitor.impl.MySQLDMLVisitor.visitAssignmentValue(MySQLDMLVisitor.java:127) at org.apache.shardingsphere.sql.parser.autogen.MySQLStatementParser$AssignmentValueContext.accept(MySQLStatementParser.java:1941) at org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18) at org.apache.shardingsphere.sql.parser.mysql.visitor.impl.MySQLDMLVisitor.visitAssignment(MySQLDMLVisitor.java:242) at org.apache.shardingsphere.sql.parser.mysql.visitor.impl.MySQLDMLVisitor.visitAssignment(MySQLDMLVisitor.java:127) at org.apache.shardingsphere.sql.parser.autogen.MySQLStatementParser$AssignmentContext.accept(MySQLStatementParser.java:1753) at org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18) at org.apache.shardingsphere.sql.parser.mysql.visitor.impl.MySQLDMLVisitor.visitSetAssignmentsClause(MySQLDMLVisitor.java:225) at org.apache.shardingsphere.sql.parser.mysql.visitor.impl.MySQLDMLVisitor.visitSetAssignmentsClause(MySQLDMLVisitor.java:127) at org.apache.shardingsphere.sql.parser.autogen.MySQLStatementParser$SetAssignmentsClauseContext.accept(MySQLStatementParser.java:1801) at org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18) at org.apache.shardingsphere.sql.parser.mysql.visitor.impl.MySQLDMLVisitor.visitUpdate(MySQLDMLVisitor.java:213) at org.apache.shardingsphere.sql.parser.mysql.visitor.impl.MySQLDMLVisitor.visitUpdate(MySQLDMLVisitor.java:127) at org.apache.shardingsphere.sql.parser.autogen.MySQLStatementParser$UpdateContext.accept(MySQLStatementParser.java:1622) at org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18) at org.apache.shardingsphere.sql.parser.SQLParserEngine.parse0(SQLParserEngine.java:80) at org.apache.shardingsphere.sql.parser.SQLParserEngine.parse(SQLParserEngine.java:61) at org.apache.shardingsphere.underlying.route.DataNodeRouter.createRouteContext(DataNodeRouter.java:97) at org.apache.shardingsphere.underlying.route.DataNodeRouter.executeRoute(DataNodeRouter.java:89) at org.apache.shardingsphere.underlying.route.DataNodeRouter.route(DataNodeRouter.java:76) at org.apache.shardingsphere.underlying.pluggble.prepare.PreparedQueryPrepareEngine.route(PreparedQueryPrepareEngine.java:54) at org.apache.shardingsphere.underlying.pluggble.prepare.BasePrepareEngine.executeRoute(BasePrepareEngine.java:96) at org.apache.shardingsphere.underlying.pluggble.prepare.BasePrepareEngine.prepare(BasePrepareEngine.java:83) at org.apache.shardingsphere.shardingjdbc.jdbc.core.statement.ShardingPreparedStatement.prepare(ShardingPreparedStatement.java:183) at org.apache.shardingsphere.shardingjdbc.jdbc.core.statement.ShardingPreparedStatement.execute(ShardingPreparedStatement.java:143) at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46) at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74) at org.apache.ibatis.executor.ReuseExecutor.doUpdate(ReuseExecutor.java:52) at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117) at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63) at com.sun.proxy.$Proxy197.update(Unknown Source) at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198) ... 147 common frames omitted ``` </body>
		<created>2020-05-27 02:56:32</created>
		<closed>2020-05-27 12:20:51</closed>
	</bug>
	<bug>
		<id>5803</id>
		<title>error in MySQLNullBitmap cause result wrong when more then one NULL fields.</title>
		<body>direct show the wrong code in class:org.apache.shardingsphere.db.protocol.mysql.packet.command.query.binary.execute.MySQLNullBitmap  `      /**      * Set null bit.      *      * @param index column index      */     public void setNullBit(final int index) {         nullBitmap[getBytePosition(index)] = 1 &lt;&lt; getBitPosition(index);     } `  in mysql protocal :https://dev.mysql.com/doc/internals/en/null-bitmap.html ` nulls[byte_pos] |= 1 &lt;&lt; bit_pos `  so the right is: `      public void setNullBit(final int index) {         nullBitmap[getBytePosition(index)] |= 1 &lt;&lt; getBitPosition(index);     } `  this is reason issue #4707 </body>
		<created>2020-05-26 11:25:40</created>
		<closed>2020-06-05 09:38:24</closed>
	</bug>
	<bug>
		<id>5782</id>
		<title>mssqlserver ，when "select top 1 &lt;column&gt; from &lt;table&gt;" ，throws NullPointException</title>
		<body>I changed to "select top (1)"  to sovle the problem，i think that was a bug。</body>
		<created>2020-05-25 09:46:54</created>
		<closed>2020-06-10 07:40:04</closed>
	</bug>
	<bug>
		<id>5778</id>
		<title>Why ResultSet.getNString func is not supported</title>
		<body> public final String getNString(final int columnIndex) throws SQLException {     throw new SQLFeatureNotSupportedException("getNString"); }  </body>
		<created>2020-05-25 08:54:05</created>
		<closed>2020-05-25 14:30:00</closed>
	</bug>
	<bug>
		<id>5743</id>
		<title>sharding-jdbc parse sql java.lang.NullPointerException in postgresql</title>
		<body>dependency: `        &lt;dependency&gt;             &lt;groupId&gt;org.apache.shardingsphere&lt;/groupId&gt;             &lt;artifactId&gt;sharding-jdbc-core&lt;/artifactId&gt;             &lt;version&gt;4.1.0&lt;/version&gt;         &lt;/dependency&gt;`  My database is postgresql.  I only ues jdbc to query database.  when my sql is `select * from me`it will run success.  But when my sql is  `select uuid from me`  or  `select * from me where uuid = '15c2c185-9068-4db9-aad7-6c0d52713f28'`  it will occur error.the error info:  `line 1:25 no viable alternative at input 'uuid' line 1:25 mismatched input 'uuid' expecting {'U', 'u', '!', '~', '+', '-', '(', '{', '?', INSERT, UPDATE, DELETE, ALTER, DROP, TRUNCATE, SCHEMA, REVOKE, ADD, SET, INDEX, KEY, FUNCTION, TRIGGER, PROCEDURE, CASE, CAST, IF, NOT, NULL, TRUE, FALSE, EXISTS, BEGIN, COMMIT, ROLLBACK, SAVEPOINT, BOOLEAN, CHAR, INTERVAL, TIME, TIMESTAMP, LOCALTIME, LOCALTIMESTAMP, YEAR, MONTH, DAY, HOUR, MINUTE, SECOND, MAX, MIN, SUM, COUNT, AVG, CURRENT, ENABLE, DISABLE, INSTANCE, PRESERVE, DEFINER, CURRENT_USER, SQL, CASCADED, LOCAL, CLOSE, OPEN, NEXT, NAME, NAMES, INTEGER, REAL, DECIMAL, TYPE, ADMIN, BINARY, ESCAPE, EXCLUDE, PARTITION, ROW, UNKNOWN, ALWAYS, CASCADE, GENERATED, ISOLATION, LEVEL, OPTION, PRIVILEGES, READ, ROLE, ROWS, START, TRANSACTION, ACTION, CACHE, CHARACTERISTICS, CLUSTER, COMMENTS, CONSTRAINTS, CURRENT_TIMESTAMP, CYCLE, DATA, DATABASE, DEFAULTS, DEFERRED, DEPENDS, DOMAIN, EXCLUDING, EXECUTE, EXTENDED, EXTENSION, EXTERNAL, EXTRACT, FILTER, FIRST, FOLLOWING, FORCE, GLOBAL, IDENTITY, IMMEDIATE, INCLUDING, INCREMENT, INDEXES, INHERIT, INHERITS, INCLUDE, LANGUAGE, LARGE, LAST, LOGGED, MAIN, MATCH, MAXVALUE, MINVALUE, NOTHING, NULLS, OBJECT, OIDS, OVER, OWNED, OWNER, PARTIAL, PLAIN, PRECEDING, RANGE, RENAME, REPLICA, RESET, RESTART, RESTRICT, ROUTINE, RULE, SECURITY, SEQUENCE, SESSION, SHOW, SIMPLE, STATISTICS, STORAGE, TABLESPACE, TEMP, TEMPORARY, UNBOUNDED, UNLOGGED, USAGE, VALID, VALIDATE, WITHIN, WITHOUT, ZONE, OF, GROUPS, RECURSIVE, INT2, INT4, INT8, FLOAT4, FLOAT8, MACADDR8, INT4RANGE, INT8RANGE, IDENTIFIER_, STRING_, NUMBER_, HEX_DIGIT_, BIT_NUM_} Exception in thread "main" java.lang.IndexOutOfBoundsException: Index: 0 at java.util.Collections$EmptyList.get(Collections.java:4456) at org.apache.shardingsphere.sql.parser.postgresql.visitor.PostgreSQLVisitor.visitExpr(PostgreSQLVisitor.java:247) at org.apache.shardingsphere.sql.parser.postgresql.visitor.PostgreSQLVisitor.visitExpr(PostgreSQLVisitor.java:113) at org.apache.shardingsphere.sql.parser.autogen.PostgreSQLStatementParser$ExprContext.accept(PostgreSQLStatementParser.java:5384) at org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18) at org.apache.shardingsphere.sql.parser.postgresql.visitor.impl.PostgreSQLDMLVisitor.visitWhereClause(PostgreSQLDMLVisitor.java:486) at org.apache.shardingsphere.sql.parser.postgresql.visitor.impl.PostgreSQLDMLVisitor.visitWhereClause(PostgreSQLDMLVisitor.java:112) at org.apache.shardingsphere.sql.parser.autogen.PostgreSQLStatementParser$WhereClauseContext.accept(PostgreSQLStatementParser.java:3257) at org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18) at org.apache.shardingsphere.sql.parser.postgresql.visitor.impl.PostgreSQLDMLVisitor.visitSelectClause(PostgreSQLDMLVisitor.java:271) at org.apache.shardingsphere.sql.parser.postgresql.visitor.impl.PostgreSQLDMLVisitor.visitSelectClause(PostgreSQLDMLVisitor.java:112) at org.apache.shardingsphere.sql.parser.autogen.PostgreSQLStatementParser$SelectClauseContext.accept(PostgreSQLStatementParser.java:1987) at org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18) at org.apache.shardingsphere.sql.parser.postgresql.visitor.impl.PostgreSQLDMLVisitor.visitUnionClause(PostgreSQLDMLVisitor.java:253) at org.apache.shardingsphere.sql.parser.postgresql.visitor.impl.PostgreSQLDMLVisitor.visitUnionClause(PostgreSQLDMLVisitor.java:112) at org.apache.shardingsphere.sql.parser.autogen.PostgreSQLStatementParser$UnionClauseContext.accept(PostgreSQLStatementParser.java:1894) at org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18) at org.apache.shardingsphere.sql.parser.postgresql.visitor.impl.PostgreSQLDMLVisitor.visitSelect(PostgreSQLDMLVisitor.java:245) at org.apache.shardingsphere.sql.parser.postgresql.visitor.impl.PostgreSQLDMLVisitor.visitSelect(PostgreSQLDMLVisitor.java:112) at org.apache.shardingsphere.sql.parser.autogen.PostgreSQLStatementParser$SelectContext.accept(PostgreSQLStatementParser.java:1843) at org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18) at org.apache.shardingsphere.sql.parser.SQLParserEngine.parse0(SQLParserEngine.java:80) at org.apache.shardingsphere.sql.parser.SQLParserEngine.parse(SQLParserEngine.java:61) at org.apache.shardingsphere.underlying.route.DataNodeRouter.createRouteContext(DataNodeRouter.java:97) at org.apache.shardingsphere.underlying.route.DataNodeRouter.executeRoute(DataNodeRouter.java:89) at org.apache.shardingsphere.underlying.route.DataNodeRouter.route(DataNodeRouter.java:76) at org.apache.shardingsphere.underlying.pluggble.prepare.PreparedQueryPrepareEngine.route(PreparedQueryPrepareEngine.java:54) at org.apache.shardingsphere.underlying.pluggble.prepare.BasePrepareEngine.executeRoute(BasePrepareEngine.java:96) at org.apache.shardingsphere.underlying.pluggble.prepare.BasePrepareEngine.prepare(BasePrepareEngine.java:83) at org.apache.shardingsphere.shardingjdbc.jdbc.core.statement.ShardingPreparedStatement.prepare(ShardingPreparedStatement.java:183) at org.apache.shardingsphere.shardingjdbc.jdbc.core.statement.ShardingPreparedStatement.executeQuery(ShardingPreparedStatement.java:116) at com.example.demo.Main.main(Main.java:157)`</body>
		<created>2020-05-22 02:33:12</created>
		<closed>2020-05-23 01:14:34</closed>
	</bug>
	<bug>
		<id>5708</id>
		<title>jpaQueryFactory.selectDistinct got exception with: SQL Error: 1064, SQLState: 42000</title>
		<body>## Bug Report  my shadring jdbc info is: ShardingSphere-JDBC sharding-jdbc-spring-boot-starter:4.1.0 sharding-jdbc-spring-namespace:4.1.0  I use spring-data-jpa with mysql in springboot project, my env is: spring-data-jpa:2.0.1.RELEASE querydsl-apt:4.1.4 spring.shardingsphere.datasource.ds0.type=com.zaxxer.hikari.HikariDataSource spring.shardingsphere.datasource.ds0.driver-class-name=com.mysql.jdbc.Driver   when program below runs will got exception: ``` QBaseRecord qBaseRecord = QBaseRecord.baseRecord; List&lt;Integer&gt; existRiskPlaceTypeIds = jpaQueryFactory.selectDistinct(qBaseRecord.riskPlaceTypeId)                 .from(qBaseRecord)                 .fetch(); ``` the exception is  ``` Hibernate:      select         distinct baserecord0_.risk_place_type_id as col_0_0_      from         tmss_base_record baserecord0_ [2020-05-20 18:19:33.786] [WARN ] [http-nio-8889-exec-3] --- [org.hibernate.engine.jdbc.spi.SqlExceptionHelper:129] : SQL Error: 1064, SQLState: 42000 [2020-05-20 18:19:33.788] [ERROR] [http-nio-8889-exec-3] --- [org.hibernate.engine.jdbc.spi.SqlExceptionHelper:131] : You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'baserecord0_' at line 1 javax.persistence.PersistenceException: org.hibernate.exception.SQLGrammarException: could not extract ResultSet at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:149) at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:157) at org.hibernate.query.internal.AbstractProducedQuery.list(AbstractProducedQuery.java:1423) at org.hibernate.query.Query.getResultList(Query.java:146) at com.querydsl.jpa.impl.AbstractJPAQuery.getResultList(AbstractJPAQuery.java:160) at com.querydsl.jpa.impl.AbstractJPAQuery.fetch(AbstractJPAQuery.java:202) at com.neld.tmss.service.impl.BaseRecordServiceImpl.getOnSiteFirst(BaseRecordServiceImpl.java:4095) at com.neld.tmss.controller.BaseRecordController.getOnSiteFirst(BaseRecordController.java:623) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209) at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136) at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102) at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877) at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783) at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991) at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925) at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974) at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877) at javax.servlet.http.HttpServlet.service(HttpServlet.java:661) at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851) at javax.servlet.http.HttpServlet.service(HttpServlet.java:742) at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231) at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52) at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99) at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109) at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81) at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200) at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198) at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496) at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140) at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81) at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87) at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342) at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803) at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66) at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790) at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459) at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) at java.lang.Thread.run(Thread.java:748) Caused by: org.hibernate.exception.SQLGrammarException: could not extract ResultSet at org.hibernate.exception.internal.SQLExceptionTypeDelegate.convert(SQLExceptionTypeDelegate.java:63) at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:42) at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:111) at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:97) at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.extract(ResultSetReturnImpl.java:69) at org.hibernate.loader.Loader.getResultSet(Loader.java:2168) at org.hibernate.loader.Loader.executeQueryStatement(Loader.java:1931) at org.hibernate.loader.Loader.executeQueryStatement(Loader.java:1893) at org.hibernate.loader.Loader.doQuery(Loader.java:938) at org.hibernate.loader.Loader.doQueryAndInitializeNonLazyCollections(Loader.java:341) at org.hibernate.loader.Loader.doList(Loader.java:2692) at org.hibernate.loader.Loader.doList(Loader.java:2675) at org.hibernate.loader.Loader.listIgnoreQueryCache(Loader.java:2507) at org.hibernate.loader.Loader.list(Loader.java:2502) at org.hibernate.loader.hql.QueryLoader.list(QueryLoader.java:502) at org.hibernate.hql.internal.ast.QueryTranslatorImpl.list(QueryTranslatorImpl.java:392) at org.hibernate.engine.query.spi.HQLQueryPlan.performList(HQLQueryPlan.java:216) at org.hibernate.internal.SessionImpl.list(SessionImpl.java:1489) at org.hibernate.query.internal.AbstractProducedQuery.doList(AbstractProducedQuery.java:1445) at org.hibernate.query.internal.AbstractProducedQuery.list(AbstractProducedQuery.java:1414) ... 59 more Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'baserecord0_' at line 1 at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) at java.lang.reflect.Constructor.newInstance(Constructor.java:423) at com.mysql.jdbc.Util.handleNewInstance(Util.java:425) at com.mysql.jdbc.Util.getInstance(Util.java:408) at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:944) at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976) at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912) at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530) at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683) at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2486) at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858) at com.mysql.jdbc.PreparedStatement.executeQuery(PreparedStatement.java:1966) at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52) at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeQuery(HikariProxyPreparedStatement.java) at org.apache.shardingsphere.shardingjdbc.executor.PreparedStatementExecutor.getQueryResult(PreparedStatementExecutor.java:109) at org.apache.shardingsphere.shardingjdbc.executor.PreparedStatementExecutor.access$200(PreparedStatementExecutor.java:45) at org.apache.shardingsphere.shardingjdbc.executor.PreparedStatementExecutor$2.executeSQL(PreparedStatementExecutor.java:101) at org.apache.shardingsphere.shardingjdbc.executor.PreparedStatementExecutor$2.executeSQL(PreparedStatementExecutor.java:97) at org.apache.shardingsphere.sharding.execute.sql.execute.SQLExecuteCallback.execute0(SQLExecuteCallback.java:82) at org.apache.shardingsphere.sharding.execute.sql.execute.SQLExecuteCallback.execute(SQLExecuteCallback.java:58) at org.apache.shardingsphere.underlying.executor.engine.ExecutorEngine.syncExecute(ExecutorEngine.java:97) at org.apache.shardingsphere.underlying.executor.engine.ExecutorEngine.parallelExecute(ExecutorEngine.java:93) at org.apache.shardingsphere.underlying.executor.engine.ExecutorEngine.execute(ExecutorEngine.java:76) at org.apache.shardingsphere.sharding.execute.sql.execute.SQLExecuteTemplate.execute(SQLExecuteTemplate.java:68) at org.apache.shardingsphere.sharding.execute.sql.execute.SQLExecuteTemplate.execute(SQLExecuteTemplate.java:51) at org.apache.shardingsphere.shardingjdbc.executor.AbstractStatementExecutor.executeCallback(AbstractStatementExecutor.java:129) at org.apache.shardingsphere.shardingjdbc.executor.PreparedStatementExecutor.executeQuery(PreparedStatementExecutor.java:104) at org.apache.shardingsphere.shardingjdbc.jdbc.core.statement.ShardingPreparedStatement.executeQuery(ShardingPreparedStatement.java:118) at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.extract(ResultSetReturnImpl.java:60) ... 74 more ```</body>
		<created>2020-05-20 10:58:44</created>
		<closed>2020-06-10 06:18:39</closed>
	</bug>
	<bug>
		<id>5591</id>
		<title>select  sum(engines)    bugs .   maybe  engines  is a  key  words </title>
		<body>## Bug Report  **For English only**, other languages will not accept.  Before report a bug, make sure you have:  - Searched open and closed [GitHub issues](https://github.com/apache/shardingsphere/issues). - Read documentation: [ShardingSphere Doc](https://shardingsphere.apache.org/document/current/en/overview).  Please pay attention on issues you submitted, because we maybe need more details.  If no response **more than 7 days** and we cannot reproduce it on current information, we will **close it**.  Please answer these questions before submitting your issue. Thanks!  ### Which version of ShardingSphere did you use? 4.1.0 ### Which project did you use? Sharding-JDBC or Sharding-Proxy? sharding-proxy ### Expected behavior select  count(engines)    ### Actual behavior error   can  not   execute  the sql .  ### Reason analyze (If you can)  ### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.  ### Example codes for reproduce this issue (such as a github link).    master-slave read write split  table: mysql.slave.sock@lsl&gt; desc aircraft ; +----------------+--------------+------+-----+---------+-------+ | Field | Type | Null | Key | Default | Extra | +----------------+--------------+------+-----+---------+-------+ | aircraft_code | char(3) | NO | PRI | NULL | | | aircraft_type | char(64) | NO | | NULL | | | engines | tinyint(4) | YES | | NULL | | | category | char(10) | NO | | NULL | | | wide_body | char(3) | NO | | NULL | | | wing_span | float(6,2) | NO | | NULL | | | length1 | float(6,2) | NO | | NULL | | | weight | int(7) | NO | | NULL | | | capacity | smallint(3) | NO | | NULL | | | pay_load | int(7) | NO | | NULL | | | cruising_speed | mediumint(5) | NO | | NULL | | | range_miles | mediumint(5) | NO | | NULL | | | pressurized | char(3) | NO | | NULL | | +----------------+--------------+------+-----+---------+-------+ 13 rows in set (0.01 sec)  run sql on proxy port 3307 :  select sum(engines) from aircraft ;  error list :  3307@(none)&gt; use xxxx Database changed 3307@xxxx&gt; select sum(engines) from aircraft ; ERROR 10002 (C1000): 2Unknown exception: [null] 3307@xxxx&gt;  stdout.log :  [INFO ] 15:08:01.982 [epollEventLoopGroup-2-1] i.n.handler.logging.LoggingHandler - [id: 0xb154cdd8, L:/0.0.0.0:3307] READ COMPLETE line 1:11 no viable alternative at input 'sum(engines' line 1:11 no viable alternative at input 'sum(engines' [ERROR] 15:08:51.210 [ShardingSphere-Command-3] o.a.s.s.f.c.CommandExecutorTask - Exception occur: java.lang.NullPointerException: null at org.apache.shardingsphere.sql.parser.mysql.visitor.MySQLVisitor.visitPredicate(MySQLVisitor.java:315) at org.apache.shardingsphere.sql.parser.mysql.visitor.MySQLVisitor.visitPredicate(MySQLVisitor.java:121) at org.apache.shardingsphere.sql.parser.autogen.MySQLStatementParser$PredicateContext.accept(MySQLStatementParser.java:11690) at org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18) at org.apache.shardingsphere.sql.parser.mysql.visitor.MySQLVisitor.visitBooleanPrimary(MySQLVisitor.java:273) at org.apache.shardingsphere.sql.parser.mysql.visitor.MySQLVisitor.visitBooleanPrimary(MySQLVisitor.java:121) at org.apache.shardingsphere.sql.parser.autogen.MySQLStatementParser$BooleanPrimaryContext.accept(MySQLStatementParser.java:11463) at org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18) at org.apache.shardingsphere.sql.parser.mysql.visitor.MySQLVisitor.visitExpr(MySQLVisitor.java:258) at org.apache.shardingsphere.sql.parser.mysql.visitor.MySQLVisitor.visitExpr(MySQLVisitor.java:121) at org.apache.shardingsphere.sql.parser.autogen.MySQLStatementParser$ExprContext.accept(MySQLStatementParser.java:11241) at org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18) at org.apache.shardingsphere.sql.parser.mysql.visitor.impl.MySQLDMLVisitor.createProjection(MySQLDMLVisitor.java:441) at org.apache.shardingsphere.sql.parser.mysql.visitor.impl.MySQLDMLVisitor.visitProjection(MySQLDMLVisitor.java:429) at org.apache.shardingsphere.sql.parser.mysql.visitor.impl.MySQLDMLVisitor.visitProjection(MySQLDMLVisitor.java:127) at org.apache.shardingsphere.sql.parser.autogen.MySQLStatementParser$ProjectionContext.accept(MySQLStatementParser.java:5370) at org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18) at org.apache.shardingsphere.sql.parser.mysql.visitor.impl.MySQLDMLVisitor.visitProjections(MySQLDMLVisitor.java:405) at org.apache.shardingsphere.sql.parser.mysql.visitor.impl.MySQLDMLVisitor.visitProjections(MySQLDMLVisitor.java:127) at org.apache.shardingsphere.sql.parser.autogen.MySQLStatementParser$ProjectionsContext.accept(MySQLStatementParser.java:4865) at org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18) at org.apache.shardingsphere.sql.parser.mysql.visitor.impl.MySQLDMLVisitor.visitSelectClause(MySQLDMLVisitor.java:324) at org.apache.shardingsphere.sql.parser.mysql.visitor.impl.MySQLDMLVisitor.visitSelectClause(MySQLDMLVisitor.java:127) at org.apache.shardingsphere.sql.parser.autogen.MySQLStatementParser$SelectClauseContext.accept(MySQLStatementParser.java:4551) at org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18) at org.apache.shardingsphere.sql.parser.mysql.visitor.impl.MySQLDMLVisitor.visitUnionClause(MySQLDMLVisitor.java:317) at org.apache.shardingsphere.sql.parser.mysql.visitor.impl.MySQLDMLVisitor.visitUnionClause(MySQLDMLVisitor.java:127) at org.apache.shardingsphere.sql.parser.autogen.MySQLStatementParser$UnionClauseContext.accept(MySQLStatementParser.java:4446)  t org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18) at org.apache.shardingsphere.sql.parser.mysql.visitor.impl.MySQLDMLVisitor.visitSelect(MySQLDMLVisitor.java:309) at org.apache.shardingsphere.sql.parser.mysql.visitor.impl.MySQLDMLVisitor.visitSelect(MySQLDMLVisitor.java:127) at org.apache.shardingsphere.sql.parser.autogen.MySQLStatementParser$SelectContext.accept(MySQLStatementParser.java:3098) at org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18) at org.apache.shardingsphere.sql.parser.SQLParserEngine.parse0(SQLParserEngine.java:80) at org.apache.shardingsphere.sql.parser.SQLParserEngine.parse(SQLParserEngine.java:61) at org.apache.shardingsphere.shardingproxy.backend.text.TextProtocolBackendHandlerFactory.newInstance(TextProtocolBackendHandlerFactory.java:69) at org.apache.shardingsphere.shardingproxy.frontend.mysql.command.query.text.query.MySQLComQueryPacketExecutor.(MySQLComQueryPacketExecutor.java:65) at org.apache.shardingsphere.shardingproxy.frontend.mysql.command.MySQLCommandExecutorFactory.newInstance(MySQLCommandExecutorFactory.java:70) at org.apache.shardingsphere.shardingproxy.frontend.mysql.command.MySQLCommandExecuteEngine.getCommandExecutor(MySQLCommandExecuteEngine.java:59) at org.apache.shardingsphere.shardingproxy.frontend.command.CommandExecutorTask.executeCommand(CommandExecutorTask.java:92) line 1:28 no viable alternative at input 'engines' line 1:28 mismatched input 'engines' expecting {TRUNCATE, COLUMN, POSITION, VIEW, ANY, OFFSET, BEGIN, COMMIT, ROLLBACK, SAVEPOINT, BOOLEAN, DATE, TIME, TIMESTAMP, YEAR, QUARTER, MONTH, WEEK, DAY, HOUR, MINUTE, SECOND, MICROSECOND, MAX, MIN, SUM, COUNT, AVG, CURRENT, ENABLE, DISABLE, INSTANCE, DO, DEFINER, CASCADED, LOCAL, CLOSE, OPEN, NEXT, NAME, TYPE, TABLES, TABLESPACE, COLUMNS, FIELDS, INDEXES, STATUS, MODIFY, VALUE, DUPLICATE, FIRST, LAST, AFTER, OJ, ACCOUNT, USER, ROLE, START, TRANSACTION, WITHOUT, ESCAPE, SUBPARTITION, STORAGE, SUPER, TEMPORARY, THAN, UNBOUNDED, SIGNED, UPGRADE, VALIDATION, ROLLUP, SOUNDS, UNKNOWN, OFF, ALWAYS, COMMITTED, LEVEL, NO, PASSWORD, PRIVILEGES, ACTION, ALGORITHM, AUTOCOMMIT, BTREE, CHAIN, CHARSET, CHECKSUM, CIPHER, CLIENT, COALESCE, COMMENT, COMPACT, COMPRESSED, COMPRESSION, CONNECTION, CONSISTENT, DATA, DISCARD, DISK, ENCRYPTION, END, ENGINE, EVENT, EXCHANGE, EXECUTE, FILE, FIXED, FOLLOWING, GLOBAL, HASH, IMPORT_, LESS, MEMORY, NONE, PARSER, PARTIAL, PARTITIONING, PERSIST, PRECEDING, PROCESS, PROXY, QUICK, REBUILD, REDUNDANT, RELOAD, REMOVE, REORGANIZE, REPAIR, REVERSE, SESSION, SHUTDOWN, SIMPLE, SLAVE, VISIBLE, INVISIBLE, ENFORCED, AGAINST, LANGUAGE, MODE, QUERY, EXTENDED, EXPANSION, VARIANCE, MAX_ROWS, MIN_ROWS, SQL_BIG_RESULT, SQL_BUFFER_RESULT, SQL_CACHE, SQL_NO_CACHE, STATS_AUTO_RECALC, STATS_PERSISTENT, STATS_SAMPLE_PAGES, ROW_FORMAT, WEIGHT_STRING, COLUMN_FORMAT, INSERT_METHOD, KEY_BLOCK_SIZE, PACK_KEYS, PERSIST_ONLY, BIT_AND, BIT_OR, BIT_XOR, GROUP_CONCAT, JSON_ARRAYAGG, JSON_OBJECTAGG, STD, STDDEV, STDDEV_POP, STDDEV_SAMP, VAR_POP, VAR_SAMP, AUTO_INCREMENT, AVG_ROW_LENGTH, DELAY_KEY_WRITE, ROTATE, MASTER, BINLOG, ERROR, SCHEDULE, COMPLETION, EVERY, HOST, SOCKET, PORT, SERVER, WRAPPER, OPTIONS, OWNER, RETURNS, CONTAINS, SECURITY, INVOKER, TEMPTABLE, MERGE, UNDEFINED, DATAFILE, FILE_BLOCK_SIZE, EXTENT_SIZE, INITIAL_SIZE, AUTOEXTEND_SIZE, MAX_SIZE, NODEGROUP, WAIT, LOGFILE, UNDOFILE, UNDO_BUFFER_SIZE, REDO_BUFFER_SIZE, HANDLER, PREV, ORGANIZATION, DEFINITION, DESCRIPTION, REFERENCE, FOLLOWS, PRECEDES, IMPORT, CONCURRENT, XML, DUMPFILE, SHARE, CODE, CONTEXT, SOURCE, CHANNEL, CLONE, AGGREGATE, INSTALL, COMPONENT, UNINSTALL, RESOURCE, EXPIRE, NEVER, HISTORY, OPTIONAL, REUSE, MAX_QUERIES_PER_HOUR, MAX_UPDATES_PER_HOUR, MAX_CONNECTIONS_PER_HOUR, MAX_USER_CONNECTIONS, RETAIN, RANDOM, OLD, ISSUER, SUBJECT, CACHE, GENERAL, SLOW, USER_RESOURCES, EXPORT, RELAY, HOSTS, FLUSH, RESET, RESTART, IO_THREAD, SQL_THREAD, SQL_BEFORE_GTIDS, SQL_AFTER_GTIDS, MASTER_LOG_FILE, MASTER_LOG_POS, RELAY_LOG_FILE, RELAY_LOG_POS, SQL_AFTER_MTS_GAPS, UNTIL, DEFAULT_AUTH, PLUGIN_DIR, STOP, IDENTIFIER_} [ERROR] 15:12:03.617 [ShardingSphere-Command-10] o.a.s.s.f.c.CommandExecutorTask - Exception occur: java.lang.NullPointerException: null  can repeat  and alter table  3307@xxxx&gt; alter table aircraft change engines bb tinyint ; ERROR 10002 (C1000): 2Unknown exception: [null]  get ERRORS  3307@xxxx&gt; alter table aircraft change engines bb tinyint ; Query OK, 135 rows affected (0.05 sec)  column engines with `` can run well .  stdout.log shows errors :  line 1:31 no viable alternative at input 'engines' line 1:31 extraneous input 'engines' expecting {TRUNCATE, COLUMN, POSITION, VIEW, ANY, OFFSET, BEGIN, COMMIT, ROLLBACK, SAVEPOINT, BOOLEAN, DATE, TIME, TIMESTAMP, YEAR, QUARTER, MONTH, WEEK, DAY, HOUR, MINUTE, SECOND, MICROSECOND, MAX, MIN, SUM, COUNT, AVG, CURRENT, ENABLE, DISABLE, INSTANCE, DO, DEFINER, CASCADED, LOCAL, CLOSE, OPEN, NEXT, NAME, TYPE, TABLES, TABLESPACE, COLUMNS, FIELDS, INDEXES, STATUS, MODIFY, VALUE, DUPLICATE, FIRST, LAST, AFTER, OJ, ACCOUNT, USER, ROLE, START, TRANSACTION, WITHOUT, ESCAPE, SUBPARTITION, STORAGE, SUPER, TEMPORARY, THAN, UNBOUNDED, SIGNED, UPGRADE, VALIDATION, ROLLUP, SOUNDS, UNKNOWN, OFF, ALWAYS, COMMITTED, LEVEL, NO, PASSWORD, PRIVILEGES, ACTION, ALGORITHM, AUTOCOMMIT, BTREE, CHAIN, CHARSET, CHECKSUM, CIPHER, CLIENT, COALESCE, COMMENT, COMPACT, COMPRESSED, COMPRESSION, CONNECTION, CONSISTENT, DATA, DISCARD, DISK, ENCRYPTION, END, ENGINE, EVENT, EXCHANGE, EXECUTE, FILE, FIXED, FOLLOWING, GLOBAL, HASH, IMPORT_, LESS, MEMORY, NONE, PARSER, PARTIAL, PARTITIONING, PERSIST, PRECEDING, PROCESS, PROXY, QUICK, REBUILD, REDUNDANT, RELOAD, REMOVE, REORGANIZE, REPAIR, REVERSE, SESSION, SHUTDOWN, SIMPLE, SLAVE, VISIBLE, INVISIBLE, ENFORCED, AGAINST, LANGUAGE, MODE, QUERY, EXTENDED, EXPANSION, VARIANCE, MAX_ROWS, MIN_ROWS, SQL_BIG_RESULT, SQL_BUFFER_RESULT, SQL_CACHE, SQL_NO_CACHE, STATS_AUTO_RECALC, STATS_PERSISTENT, STATS_SAMPLE_PAGES, ROW_FORMAT, WEIGHT_STRING, COLUMN_FORMAT, INSERT_METHOD, KEY_BLOCK_SIZE, PACK_KEYS, PERSIST_ONLY, BIT_AND, BIT_OR, BIT_XOR, GROUP_CONCAT, JSON_ARRAYAGG, JSON_OBJECTAGG, STD, STDDEV, STDDEV_POP, STDDEV_SAMP, VAR_POP, VAR_SAMP, AUTO_INCREMENT, AVG_ROW_LENGTH, DELAY_KEY_WRITE, ROTATE, MASTER, BINLOG, ERROR, SCHEDULE, COMPLETION, EVERY, HOST, SOCKET, PORT, SERVER, WRAPPER, OPTIONS, OWNER, RETURNS, CONTAINS, SECURITY, INVOKER, TEMPTABLE, MERGE, UNDEFINED, DATAFILE, FILE_BLOCK_SIZE, EXTENT_SIZE, INITIAL_SIZE, AUTOEXTEND_SIZE, MAX_SIZE, NODEGROUP, WAIT, LOGFILE, UNDOFILE, UNDO_BUFFER_SIZE, REDO_BUFFER_SIZE, HANDLER, PREV, ORGANIZATION, DEFINITION, DESCRIPTION, REFERENCE, FOLLOWS, PRECEDES, IMPORT, CONCURRENT, XML, DUMPFILE, SHARE, CODE, CONTEXT, SOURCE, CHANNEL, CLONE, AGGREGATE, INSTALL, COMPONENT, UNINSTALL, RESOURCE, EXPIRE, NEVER, HISTORY, OPTIONAL, REUSE, MAX_QUERIES_PER_HOUR, MAX_UPDATES_PER_HOUR, MAX_CONNECTIONS_PER_HOUR, MAX_USER_CONNECTIONS, RETAIN, RANDOM, OLD, ISSUER, SUBJECT, CACHE, GENERAL, SLOW, USER_RESOURCES, EXPORT, RELAY, HOSTS, FLUSH, RESET, RESTART, IO_THREAD, SQL_THREAD, SQL_BEFORE_GTIDS, SQL_AFTER_GTIDS, MASTER_LOG_FILE, MASTER_LOG_POS, RELAY_LOG_FILE, RELAY_LOG_POS, SQL_AFTER_MTS_GAPS, UNTIL, DEFAULT_AUTH, PLUGIN_DIR, STOP, IDENTIFIER_} [ERROR] 16:00:36.817 [ShardingSphere-Command-5] o.a.s.s.f.c.CommandExecutorTask - Exception occur: java.lang.NullPointerException: null at org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18) at org.apache.shardingsphere.sql.parser.mysql.visitor.MySQLVisitor.visitColumnName(MySQLVisitor.java:224) at org.apache.shardingsphere.sql.parser.mysql.visitor.MySQLVisitor.visitColumnName(MySQLVisitor.java:121) at org.apache.shardingsphere.sql.parser.autogen.MySQLStatementParser$ColumnNameContext.accept(MySQLStatementParser.java:9266)  at org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18) at org.apache.shardingsphere.sql.parser.mysql.visitor.impl.MySQLDDLVisitor.visitColumnDefinition(MySQLDDLVisitor.java:227) at org.apache.shardingsphere.sql.parser.mysql.visitor.impl.MySQLDDLVisitor.visitColumnDefinition(MySQLDDLVisitor.java:90) at org.apache.shardingsphere.sql.parser.autogen.MySQLStatementParser$ColumnDefinitionContext.accept(MySQLStatementParser.java:23179) at org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18) at org.apache.shardingsphere.sql.parser.mysql.visitor.impl.MySQLDDLVisitor.visitAlterDefinitionClause(MySQLDDLVisitor.java:189) at org.apache.shardingsphere.sql.parser.mysql.visitor.impl.MySQLDDLVisitor.visitAlterDefinitionClause(MySQLDDLVisitor.java:90) at org.apache.shardingsphere.sql.parser.autogen.MySQLStatementParser$AlterDefinitionClauseContext.accept(MySQLStatementParser.java:24842) at org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18) at org.apache.shardingsphere.sql.parser.mysql.visitor.impl.MySQLDDLVisitor.visitAlterTable(MySQLDDLVisitor.java:161) at org.apache.shardingsphere.sql.parser.mysql.visitor.impl.MySQLDDLVisitor.visitAlterTable(MySQLDDLVisitor.java:90) at org.apache.shardingsphere.sql.parser.autogen.MySQLStatementParser$AlterTableContext.accept(MySQLStatementParser.java:19238) at org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18) at org.apache.shardingsphere.sql.parser.SQLParserEngine.parse0(SQLParserEngine.java:80) at org.apache.shardingsphere.sql.parser.SQLParserEngine.parse(SQLParserEngine.java:61) at org.apache.shardingsphere.shardingproxy.backend.text.TextProtocolBackendHandlerFactory.newInstance(TextProtocolBackendHandlerFactory.java:69) at org.apache.shardingsphere.shardingproxy.frontend.mysql.command.query.text.query.MySQLComQueryPacketExecutor.(MySQLComQueryPacketExecutor.java:65) at org.apache.shardingsphere.shardingproxy.frontend.mysql.command.MySQLCommandExecutorFactory.newInstance(MySQLCommandExecutorFactory.java:70) at org.apache.shardingsphere.shardingproxy.frontend.mysql.command.MySQLCommandExecuteEngine.getCommandExecutor(MySQLCommandExecuteEngine.java:59) at org.apache.shardingsphere.shardingproxy.frontend.command.CommandExecutorTask.executeCommand(CommandExecutorTask.java:92) at org.apache.shardingsphere.shardingproxy.frontend.command.CommandExecutorTask.run(CommandExecutorTask.java:71) at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) at java.lang.Thread.run(Thread.java:748)</body>
		<created>2020-05-14 02:24:52</created>
		<closed>2020-05-16 15:05:01</closed>
	</bug>
	<bug>
		<id>5544</id>
		<title>Range from 0 to more than Integer.MAX_VALUE occur exception</title>
		<body>## Bug Report  **For English only**, other languages will not accept.  Before report a bug, make sure you have:  - Searched open and closed [GitHub issues](https://github.com/apache/shardingsphere/issues). - Read documentation: [ShardingSphere Doc](https://shardingsphere.apache.org/document/current/en/overview).  Please pay attention on issues you submitted, because we maybe need more details.  If no response **more than 7 days** and we cannot reproduce it on current information, we will **close it**.  Please answer these questions before submitting your issue. Thanks!  ### Which version of ShardingSphere did you use? 4.1.0 ### Which project did you use? Sharding-JDBC or Sharding-Proxy? sharding-proxy ### Expected behavior query success ### Actual behavior throw exception ![image](https://user-images.githubusercontent.com/19368482/81636431-6cab2b00-9446-11ea-8df6-23b6493dc38f.png) ![image](https://user-images.githubusercontent.com/19368482/81636474-8ba9bd00-9446-11ea-8d20-6be5ed47634c.png)  ### Reason analyze (If you can)  ### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc. query data range from 0 to 3147483647 （more than Integer.MAX_VALUE） ### Example codes for reproduce this issue (such as a github link). #### config-xxx.yaml ```yaml schemaName: databasemanager  dataSources:   ds_0:     url: jdbc:mysql://192.168.137.102:3306/databasemanager?serverTimezone=UTC&amp;useSSL=false     username: root     password: xxxx     connectionTimeoutMilliseconds: 30000     idleTimeoutMilliseconds: 60000     maxLifetimeMilliseconds: 1800000     maxPoolSize: 50   ds_1:     url: jdbc:mysql://192.168.137.102:3307/databasemanager?serverTimezone=UTC&amp;useSSL=false     username: root     password: xxxxx     connectionTimeoutMilliseconds: 30000     idleTimeoutMilliseconds: 60000     maxLifetimeMilliseconds: 1800000     maxPoolSize: 50  shardingRule:   tables:     t_cluster:       actualDataNodes: ds_${0..1}.t_cluster       tableStrategy:         none:       databaseStrategy:         complex:           shardingColumns: clusterId           algorithmClassName: org.apache.shardingsphere.shardingproxy.algorithm.complex.AutoPartitionByLong     t_cluster_instance:       actualDataNodes: ds_${0..1}.t_cluster_instance       tableStrategy:         none:       databaseStrategy:         inline:           shardingColumn: clusterId           algorithmExpression: ds_${clusterId.hashCode().abs() % 2}   bindingTables:     - t_cluster,t_cluster_instance   defaultDatabaseStrategy:     none:   defaultTableStrategy:     none:   ```  #### table ```sql create table `t_cluster` ( `clusterId` bigint (20), `clusterName` varchar (384), `projectId` varchar (192), `createTime` datetime , `updateTime` datetime  );  ```  #### execute sql ```sql select * from t_cluster t where  t.clusterId &gt; 3 and t.clusterId &lt; 3147483647 ```</body>
		<created>2020-05-12 03:50:49</created>
		<closed>2020-05-26 08:23:18</closed>
	</bug>
	<bug>
		<id>5486</id>
		<title>Generated order-by with alias bug</title>
		<body>In https://github.com/apache/shardingsphere/pull/5485, @EasonYi fix the rewriting bug for group-by alias. But now there is another bug: &gt; select distinct `a`.`id` from `aa` as `a`  This statement will be rewriting to: &gt;  select distinct `a`.`id` , `a`.`id` AS ORDER_BY_DERIVED_0 from `aa1` ORDER BY `a`.`id` ASC  as `a`  It occurs an error with a wrong insert position now: &gt; from `aa1` ORDER BY `a`.`id` ASC  as `a`  Order by clause should be after alias: &gt; from `aa1` as `a`  ORDER BY `a`.`id` ASC </body>
		<created>2020-05-09 03:57:05</created>
		<closed>2020-06-22 10:54:32</closed>
	</bug>
	<bug>
		<id>5473</id>
		<title>java.sql.SQLSyntaxErrorException: Unknown column 'table_alias0.id' in 'order clause'</title>
		<body>## Bug Report  **For English only**, other languages will not accept.  Before report a bug, make sure you have:  - Searched open and closed [GitHub issues](https://github.com/apache/shardingsphere/issues). - Read documentation: [ShardingSphere Doc](https://shardingsphere.apache.org/document/current/en/overview).  Please pay attention on issues you submitted, because we maybe need more details.  If no response **more than 7 days** and we cannot reproduce it on current information, we will **close it**.  Please answer these questions before submitting your issue. Thanks!  ### Which version of ShardingSphere did you use? 4.1.0  ### Which project did you use? Sharding-JDBC or Sharding-Proxy? Sharding-JDBC  ### Expected behavior Logic SQL: select count(*) as `_COUNT`, `table_alias0`.`id` from `test_center__model3` as `table_alias0` group by `table_alias0`.`id`  Actual SQL: ds_unit_test_partition ::: select count(*) as `_COUNT`, `table_alias0`.`id` from `test_center__model3_0` as `table_alias0` group by `table_alias0`.`id` ORDER BY **`table_alias0`.`id`** ASC  ### Actual behavior Actual SQL: ds_unit_test_partition ::: select count(*) as `_COUNT`, `table_alias0`.`id` from `test_center__model3_0` as `table_alias0` group by `table_alias0`.`id` ORDER BY **`table_alias0.id`** ASC ### _java.sql.SQLSyntaxErrorException: Unknown column 'table_alias0.id' in 'order clause'_  ### Reason analyze (If you can) ```java // OrderByTokenGenerator#generateSQLToken if (each.getSegment() instanceof ColumnOrderByItemSegment) {                 ColumnOrderByItemSegment columnOrderByItemSegment = (ColumnOrderByItemSegment) each.getSegment();                 QuoteCharacter quoteCharacter = columnOrderByItemSegment.getColumn().getIdentifier().getQuoteCharacter();                 columnLabel = **quoteCharacter.getStartDelimiter() +** columnOrderByItemSegment.getText() **+ quoteCharacter.getEndDelimiter()**;             } ```  ### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc. Logic SQL: select count(*) as `_COUNT`, `table_alias0`.`id` from `test_center__model3` as `table_alias0` group by `table_alias0`.`id`  ### Example codes for reproduce this issue (such as a github link). </body>
		<created>2020-05-08 10:01:13</created>
		<closed>2020-05-11 10:12:50</closed>
	</bug>
	<bug>
		<id>5467</id>
		<title>MemoryQueryResult  NPE  when select * from table</title>
		<body>### Which version of ShardingSphere did you use? 4.0.0 ### Which project did you use? Sharding-JDBC or Sharding-Proxy? Sharding-JDBC ### Expected behavior return expected metaData and resultSet ### Actual behavior org.apache.shardingsphere.core.exception.ShardingException: java.util.concurrent.ExecutionException: java.lang.NullPointerException         at org.apache.shardingsphere.core.execute.engine.ShardingExecuteEngine.throwException(ShardingExecuteEngine.java:144)         at org.apache.shardingsphere.core.execute.engine.ShardingExecuteEngine.getGroupResults(ShardingExecuteEngine.java:134)         at org.apache.shardingsphere.core.execute.engine.ShardingExecuteEngine.parallelExecute(ShardingExecuteEngine.java:102)         at org.apache.shardingsphere.core.execute.engine.ShardingExecuteEngine.groupExecute(ShardingExecuteEngine.java:83)         at org.apache.shardingsphere.core.execute.sql.execute.SQLExecuteTemplate.executeGroup(SQLExecuteTemplate.java:73)         at org.apache.shardingsphere.core.execute.sql.execute.SQLExecuteTemplate.executeGroup(SQLExecuteTemplate.java:56)         at org.apache.shardingsphere.shardingjdbc.executor.AbstractStatementExecutor.executeCallback(AbstractStatementExecutor.java:140)         at org.apache.shardingsphere.shardingjdbc.executor.PreparedStatementExecutor.executeQuery(PreparedStatementExecutor.java:109)         at org.apache.shardingsphere.shardingjdbc.jdbc.core.statement.ShardingPreparedStatement.executeQuery(ShardingPreparedStatement.java:123) ### Reason analyze (If you can) execute select * from table when user define a unsigned bigint default null column in a table and set null to this column in a row  the stack trace is  java.lang.NullPointerException         at org.apache.shardingsphere.core.execute.sql.execute.result.MemoryQueryResult.getRowValue(MemoryQueryResult.java:88)         at org.apache.shardingsphere.core.execute.sql.execute.result.MemoryQueryResult.getRows(MemoryQueryResult.java:63)         at org.apache.shardingsphere.core.execute.sql.execute.result.MemoryQueryResult.&lt;init&gt;(MemoryQueryResult.java:55)         at org.apache.shardingsphere.shardingjdbc.executor.PreparedStatementExecutor.getQueryResult(PreparedStatementExecutor.java:116)         at org.apache.shardingsphere.shardingjdbc.executor.PreparedStatementExecutor.access$200(PreparedStatementExecutor.java:50) ### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.  the source code `resultSet.getBigDecimal(columnIndex).toBigInteger();`  may cause NPE ### Example codes for reproduce this issue (such as a github link). </body>
		<created>2020-05-08 08:31:43</created>
		<closed>2020-05-09 03:21:17</closed>
	</bug>
	<bug>
		<id>5465</id>
		<title>Wrong rewritten SQL for `ON DUPLICATE KEY UPDATE` when configuring encrypt rule.</title>
		<body>### SQL Case:  ```sql INSERT INTO t_account_bak(account_id, certificate_number, password, amount, status) VALUES (?, ?, ?, ?, ?), (2, '222X', 'bbb', 2000, 'OK'), (?, ?, ?, ?, ?), (4, '444X', 'ddd', 4000, 'OK') ON DUPLICATE KEY UPDATE password = ? ```  ### The expected rewritten SQL is ```sql INSERT INTO t_account_bak(account_id, cipher_certificate_number, assisted_query_certificate_number, plain_certificate_number, cipher_password, assisted_query_password, plain_password, cipher_amount, plain_amount, status) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?), (2, 'encrypt_222X', 'assisted_query_222X', '222X', 'encrypt_bbb', 'assisted_query_bbb', 'bbb', 'encrypt_2000', 2000, 'OK'), (?, ?, ?, ?, ?, ?, ?, ?, ?, ?), (4, 'encrypt_444X', 'assisted_query_444X', '444X', 'encrypt_ddd', 'assisted_query_ddd', 'ddd', 'encrypt_4000', 4000, 'OK') ON DUPLICATE KEY UPDATE cipher_password = ?, assisted_query_password = ?, plain_password = ?" INSERT INTO t_account_bak(account_id, certificate_number, password, amount, status) VALUES (?, ?, ?, ?, ?), (2, '222X', 'bbb', 2000, 'OK'), (?, ?, ?, ?, ?), (4, '444X', 'ddd', 4000, 'OK') ON DUPLICATE KEY UPDATE password = ? ```  ### The related parameter and function:  The following items in `EncryptInsertOnDuplicateKeyUpdateValueParameterRewriter` ```java private boolean queryWithCipherColumn; public void rewrite(final ParameterBuilder parameterBuilder, final InsertStatementContext insertStatementContext, final List&lt;Object&gt; parameters) ```  </body>
		<created>2020-05-08 07:31:16</created>
		<closed>2020-05-15 12:38:39</closed>
	</bug>
	<bug>
		<id>5452</id>
		<title>MYSQL (no viable alternative at input)</title>
		<body>## Bug Report  **For English only**, other languages will not accept.  Before report a bug, make sure you have:  - Searched open and closed [GitHub issues](https://github.com/apache/shardingsphere/issues). - Read documentation: [ShardingSphere Doc](https://shardingsphere.apache.org/document/current/en/overview).  Please pay attention on issues you submitted, because we maybe need more details.  If no response **more than 7 days** and we cannot reproduce it on current information, we will **close it**.  Please answer these questions before submitting your issue. Thanks!  ### Which version of ShardingSphere did you use?  4.1.0  ### Which project did you use? Sharding-JDBC or Sharding-Proxy? Sharding-JDBC  ### Expected behavior No output log  ### Actual behavior line 1:45 no viable alternative at input 'CONVERT(substring(customer_code,3),signed' line 1:45 no viable alternative at input 'CONVERT(substring(customer_code,3),signed'  ### Reason analyze (If you can) Unsupported function  ### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.  select CONVERT(substring(customer_code, 3) , signed) as maxCustNo from tb_sp_user_customer order by id desc limit 1   ### Example codes for reproduce this issue (such as a github link). select CONVERT(substring(customer_code, 3) , signed) as maxCustNo from tb_sp_user_customer order by id desc limit 1 </body>
		<created>2020-05-07 02:38:59</created>
		<closed>2020-05-22 11:11:10</closed>
	</bug>
	<bug>
		<id>5433</id>
		<title>master-slave mode doesn't read the meta data to obtain column definition</title>
		<body>## Bug Report  **For English only**, other languages will not accept.  Before report a bug, make sure you have:  - Searched open and closed [GitHub issues](https://github.com/apache/shardingsphere/issues). - Read documentation: [ShardingSphere Doc](https://shardingsphere.apache.org/document/current/en/overview).  Please pay attention on issues you submitted, because we maybe need more details.  If no response **more than 7 days** and we cannot reproduce it on current information, we will **close it**.  Please answer these questions before submitting your issue. Thanks!  ### Which version of ShardingSphere did you use? 5.0.0-RC1  ### Which project did you use? Sharding-JDBC or Sharding-Proxy? Sharding-Proxy  ### Expected behavior Use master-slave rule, execute SQL `select * from t_order` return correct result.  ### Actual behavior Can't return result and burst warnings. ``` mysql&gt; use master_slave_db; Database changed mysql&gt; select * from t_order_0; Query OK, 0 rows affected, 25971 warnings (3 min 40.86 sec) ```  ### Reason analyze (If you can) The first packet Sharding-Proxy returned is an EOF packet, that means column definition packets lost.  Debug in the codes, I found queryHeader size is 0. queryHeader  is obtained from meta data, master-slave mode doesn't read the meta data.  ### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc. Config a master-rule and execute the SQL like `select * from`.  ### Example codes for reproduce this issue (such as a github link). </body>
		<created>2020-05-06 05:19:18</created>
		<closed>2020-05-07 09:20:16</closed>
	</bug>
	<bug>
		<id>5422</id>
		<title>SQLLogger#logSQL throws an NPE when invoked in ShardingStatement </title>
		<body>## Bug Report  ### Which version of ShardingSphere did you use? current master branch - 5.0.0-RC1-SNAPSHOT ### Which project did you use? Sharding-JDBC or Sharding-Proxy? Sharding-JDBC ### Expected behavior sql.show is available  ### Actual behavior set sql.show true and run test of transaction-2pc-xa-raw-jdbc-example module, an NPE throws out from ShardingStatement. ### Reason analyze (If you can) When #logSQL execute, ExecutionContext was not init complete yet. ```java     private ExecutionContext createExecutionContext(final String sql) throws SQLException {         clearStatements();         RuntimeContext runtimeContext = connection.getRuntimeContext();         SQLStatement sqlStatement = runtimeContext.getSqlParserEngine().parse(sql, false);         RouteContext routeContext = new DataNodeRouter(                 runtimeContext.getMetaData(), runtimeContext.getProperties(), runtimeContext.getRules()).route(sqlStatement, sql, Collections.emptyList());         SQLRewriteResult sqlRewriteResult = new SQLRewriteEntry(runtimeContext.getMetaData().getSchema().getConfiguredSchemaMetaData(),                 runtimeContext.getProperties(), runtimeContext.getRules()).rewrite(sql, Collections.emptyList(), routeContext);         ExecutionContext result = new ExecutionContext(routeContext.getSqlStatementContext(), ExecutionContextBuilder.build(runtimeContext.getMetaData(), sqlRewriteResult));         logSQL(sql, runtimeContext.getProperties());         return result;     }          private void logSQL(final String sql, final ConfigurationProperties properties) {         if (properties.&lt;Boolean&gt;getValue(ConfigurationPropertyKey.SQL_SHOW)) {             SQLLogger.logSQL(sql, properties.&lt;Boolean&gt;getValue(ConfigurationPropertyKey.SQL_SIMPLE), executionContext);         }     } ``` ### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc. set sql.show true and run test of transaction-2pc-xa-raw-jdbc-example module ### Example codes for reproduce this issue (such as a github link). </body>
		<created>2020-05-05 03:43:12</created>
		<closed>2020-05-05 05:59:54</closed>
	</bug>
	<bug>
		<id>5421</id>
		<title>The keyGenerator doesn't work in transaction-2pc-xa-raw-jdbc-example module when a oracle database used</title>
		<body>I have reproduced the behavior as @lvye351 says in #5383. The keyGenerator doesn't work in the transaction-2pc-xa-raw-jdbc sample module when a oracle database 12c and ojbdc8.jar used.  The log is as follows, ![image](https://user-images.githubusercontent.com/9602831/80979380-db422480-8e59-11ea-8043-0b38dedcad5b.png)   It seems that when table t_order created, its tableMetaData doesn't put into schemaMetaData. I will try to find out the reason and fix it. </body>
		<created>2020-05-04 14:50:46</created>
		<closed>2020-05-06 13:04:33</closed>
	</bug>
	<bug>
		<id>5390</id>
		<title>sharding-scaling nullpoint</title>
		<body>## Bug Report    ### Which version of ShardingSphere did you use? 4.1.0 ### Which project did you use? Sharding-JDBC or Sharding-Proxy? sharding-scaling  ### Expected behavior    ### Actual behavior I use sharding-scaling and sharding-proxy to move data from old cluster to the new cluster. Below exception occured: `[ERROR] 09:53:53.645 [pool-1-thread-21] o.a.s.s.c.e.e.SyncTaskExecuteCallback - RealtimeDataSyncTask realtime-hc_hiwork_suite_new execute exception exit java.lang.NullPointerException: null at org.apache.shardingsphere.shardingscaling.mysql.MySQLBinlogReader.handleUpdateRowsEvent(MySQLBinlogReader.java:137) at org.apache.shardingsphere.shardingscaling.mysql.MySQLBinlogReader.read(MySQLBinlogReader.java:97) at org.apache.shardingsphere.shardingscaling.mysql.MySQLBinlogReader.run(MySQLBinlogReader.java:75) ` the following code caused a nullpointexception: `!oldValue.equals(newValue)`  The reason is that there is a field, it's oldValue is null.   ### Reason analyze (If you can)   ### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc. Use scaling to sync database, and update a row which has null value.   ### Example codes for reproduce this issue (such as a github link). The correct logic : `boolean updated = false;                 if(null == oldValue){                     updated = null != newValue;                 }else{                     updated = !oldValue.equals(newValue);                 }` </body>
		<created>2020-04-30 02:34:53</created>
		<closed>2020-05-19 03:46:33</closed>
	</bug>
	<bug>
		<id>5389</id>
		<title>sharding-scaling getTableNames error</title>
		<body>## Bug Report  ### Which version of ShardingSphere did you use? 4.1.0 ### Which project did you use? Sharding-JDBC or Sharding-Proxy? sharding-scaling  ### Expected behavior I have a table, it's primary key's type is bigint. when the scaling fetch the primary key range, it use rs.getInt() rather than rs.getLong(),  which cause  Integer overflow. Proof: org.apache.shardingsphere.shardingscaling.core.synctask.history.HistoryDataSyncTaskGroup line 141-142  ### Actual behavior  ### Reason analyze (If you can)  ### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc. when the primary key's value is bigger than Integer.MAX  </body>
		<created>2020-04-30 02:26:01</created>
		<closed>2020-05-08 01:00:46</closed>
	</bug>
	<bug>
		<id>5378</id>
		<title>InlineShardingAlgorithm in version of 5.x is not incompatible previous profiles</title>
		<body>### Which version of ShardingSphere did you use? 5.0.0-RC1-SNAPSHOT  ### Which project did you use? Sharding-JDBC or Sharding-Proxy? Sharding-JDBC  ### Expected behavior When I use the following configuration. ``` spring.shardingsphere.sharding.default-database-strategy.standard.sharding-column=user_id spring.shardingsphere.sharding.default-database-strategy.standard.shardingAlgorithm.type=INLINE spring.shardingsphere.sharding.default-database-strategy.standard.shardingAlgorithm.props.algorithm.expression=ds_$-&gt;{user_id % 2} spring.shardingsphere.sharding.binding-tables=t_order,t_order_item spring.shardingsphere.sharding.broadcast-tables=t_address ```  ### Actual behavior The following error will occur. ``` Exception in thread "main" org.codehaus.groovy.control.MultipleCompilationErrorsException: startup failed: Script5.groovy: 1: illegal string body character after dollar sign;    solution: either escape a literal dollar sign "\$5" or bracket the value expression "${5}" @ line 1, column 5.    {it -&gt; "t_order_$-&gt;{order_id % 2}"} ```  ### Reason analyze (If you can) I tracked the source code and compared to version  4.x,  found `InlineShardingAlgorithm` in version 5.x not calls `InlineExpressionParser.handlePlaceHolder` method, so cause above error.  4.x version source code of `InlineShardingStrategy` class. ``` Preconditions.checkNotNull(inlineShardingStrategyConfig.getShardingColumn(), "Sharding column cannot be null."); Preconditions.checkNotNull(inlineShardingStrategyConfig.getAlgorithmExpression(), "Sharding algorithm expression cannot be null."); shardingColumn = inlineShardingStrategyConfig.getShardingColumn(); String algorithmExpression = InlineExpressionParser.handlePlaceHolder(inlineShardingStrategyConfig.getAlgorithmExpression().trim()); closure = new InlineExpressionParser(algorithmExpression).evaluateClosure(); ```  5.x version source code of `InlineShardingAlgorithm` class. ```  Preconditions.checkNotNull(properties.get(ALGORITHM_EXPRESSION), "Inline sharding algorithm expression cannot be null."); Closure&lt;?&gt; closure = new InlineExpressionParser(properties.get(ALGORITHM_EXPRESSION).toString()).evaluateClosure(); Closure&lt;?&gt; result = closure.rehydrate(new Expando(), null, null); result.setResolveStrategy(Closure.DELEGATE_ONLY); result.setProperty(shardingValue.getColumnName(), shardingValue.getValue()); return result.call().toString(); ```</body>
		<created>2020-04-29 07:30:31</created>
		<closed>2020-04-30 04:28:21</closed>
	</bug>
	<bug>
		<id>5366</id>
		<title>batch insert route result is wrong</title>
		<body>## Bug Report  **For English only**, other languages will not accept.  Before report a bug, make sure you have:  - Searched open and closed [GitHub issues](https://github.com/apache/shardingsphere/issues). - Read documentation: [ShardingSphere Doc](https://shardingsphere.apache.org/document/current/en/overview).  Please pay attention on issues you submitted, because we maybe need more details.  If no response **more than 7 days** and we cannot reproduce it on current information, we will **close it**.  Please answer these questions before submitting your issue. Thanks!  ### Which version of ShardingSphere did you use? 4.0.0 ### Which project did you use? Sharding-JDBC or Sharding-Proxy? Sharding-JDBC ### Expected behavior primary key produced by key generator  Logic SQL: insert into test_complex (`name`,age,create_time,modified_time,user_id,phone,address) values(?,?,?,?,?,?,?) , (?,?,?,?,?,?,?)  route result of sharding key(id)   logicName=sharding_db, value=461910991453999105, hash=1101970151 , mod=1   logicName=sharding_db, mod=1 ,route =sharding_db_1   logicName=test_complex, value=461910991453999105, hash=1101970151 , mod=7   logicName=test_complex, mod=7 ,route =test_complex_7    logicName=sharding_db, value=461910991453999108, hash=1101970154 , mod=0   logicName=sharding_db, mod=0 ,route =sharding_db_0   logicName=test_complex, value=461910991453999108, hash=1101970154 , mod=2   logicName=test_complex, mod=2 ,route =test_complex_2 ### Actual behavior  Actual SQL: sharding_db_1 ::: insert into test_complex_3(`name`,age,create_time,modified_time,user_id,phone,address,id) values (?, ?, ?, ?, ?, ?, ?, ?),(?, ?, ?, ?, ?, ?, ?, ?) ::: [null, 1, 2020-04-28 15:09:21.415, 2020-04-28 15:09:21.415, 09c53d8e85934bbf8aeeec3d4711c0c95, 09c53d8e85934bbf8aeeec3d4711c0c95, 时代峰峻克鲁赛德, 461910991453999108, null, 1, 2020-04-28 15:09:21.415, 2020-04-28 15:09:21.415, 09c53d8e85934bbf8aeeec3d4711c0c98, 09c53d8e85934bbf8aeeec3d4711c0c98, 时代峰峻克鲁赛德, 461910991453999105]  ### Reason analyze (If you can) ShardingGeneratedKeyInsertValueParameterRewriter rewrite generateKey values had a descendingIterator ![image](https://user-images.githubusercontent.com/31645800/80464764-d9192b00-896c-11ea-8ee9-39ff979e871f.png) the params had a descending order of route result, cause th actual sql is wrong why use descendingIterator here ?  if use common iterator would cause some problems?  ### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.  ### Example codes for reproduce this issue (such as a github link). </body>
		<created>2020-04-28 08:34:10</created>
		<closed>2020-08-25 02:54:40</closed>
	</bug>
	<bug>
		<id>5309</id>
		<title>The junit test of transaction-2pc-xa-raw-jdbc-example module failed when a oracle database used</title>
		<body>The Junit test in the transaction-2pc-xa-raw-jdbc sample module failed when I used oracle database 12c and ojbdc8.jar.  The exception stack is as follows,  ``` java.sql.SQLSyntaxErrorException: ORA-00942: 表或视图不存在   at oracle.jdbc.driver.T4CTTIoer11.processError(T4CTTIoer11.java:509) at oracle.jdbc.driver.T4CTTIoer11.processError(T4CTTIoer11.java:461) at oracle.jdbc.driver.T4C8Oall.processError(T4C8Oall.java:1104) at oracle.jdbc.driver.T4CTTIfun.receive(T4CTTIfun.java:550) at oracle.jdbc.driver.T4CTTIfun.doRPC(T4CTTIfun.java:268) at oracle.jdbc.driver.T4C8Oall.doOALL(T4C8Oall.java:655) at oracle.jdbc.driver.T4CStatement.doOall8(T4CStatement.java:229) at oracle.jdbc.driver.T4CStatement.doOall8(T4CStatement.java:41) at oracle.jdbc.driver.T4CStatement.executeForRows(T4CStatement.java:928) at oracle.jdbc.driver.OracleStatement.doExecuteWithTimeout(OracleStatement.java:1205) at oracle.jdbc.driver.OracleStatement.executeUpdateInternal(OracleStatement.java:1747) at oracle.jdbc.driver.OracleStatement.executeLargeUpdate(OracleStatement.java:1712) at oracle.jdbc.driver.OracleStatement.executeUpdate(OracleStatement.java:1699) at oracle.jdbc.driver.OracleStatementWrapper.executeUpdate(OracleStatementWrapper.java:285) at oracle.jdbc.OracleDatabaseMetaData.getIndexInfo(OracleDatabaseMetaData.java:3802) at org.apache.shardingsphere.sql.parser.binder.metadata.index.IndexMetaDataLoader.load(IndexMetaDataLoader.java:50) at org.apache.shardingsphere.sql.parser.binder.metadata.table.TableMetaDataLoader.load(TableMetaDataLoader.java:46) at org.apache.shardingsphere.core.metadata.ShardingMetaDataLoader.load(ShardingMetaDataLoader.java:84) at org.apache.shardingsphere.core.metadata.ShardingMetaDataLoader.load(ShardingMetaDataLoader.java:67) at org.apache.shardingsphere.core.metadata.ShardingMetaDataLoader.load(ShardingMetaDataLoader.java:53) at org.apache.shardingsphere.underlying.common.metadata.schema.RuleSchemaMetaDataLoader.load(RuleSchemaMetaDataLoader.java:70) at org.apache.shardingsphere.shardingjdbc.jdbc.core.context.AbstractRuntimeContext.createMetaData(AbstractRuntimeContext.java:91) at org.apache.shardingsphere.shardingjdbc.jdbc.core.context.AbstractRuntimeContext.&lt;init&gt;(AbstractRuntimeContext.java:77) at org.apache.shardingsphere.shardingjdbc.jdbc.core.context.impl.ShardingRuntimeContext.&lt;init&gt;(ShardingRuntimeContext.java:48) at org.apache.shardingsphere.shardingjdbc.jdbc.core.datasource.ShardingDataSource.&lt;init&gt;(ShardingDataSource.java:44) at org.apache.shardingsphere.shardingjdbc.api.ShardingDataSourceFactory.createDataSource(ShardingDataSourceFactory.java:48) at org.apache.shardingsphere.shardingjdbc.api.yaml.YamlShardingDataSourceFactory.createDataSource(YamlShardingDataSourceFactory.java:50) at org.apache.shardingsphere.example.transaction.xa.raw.jdbc.XAOrderService.&lt;init&gt;(XAOrderService.java:42) at org.apache.shardingsphere.example.transaction.xa.raw.jdbc.XAOrderServiceTest.setUp(XAOrderServiceTest.java:36) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:497) at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:24) at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27) at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) at org.junit.runners.ParentRunner.run(ParentRunner.java:363) at org.junit.runner.JUnitCore.run(JUnitCore.java:137) at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:33) at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:230) at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:58) Caused by: Error : 942, Position : 27, Sql = analyze table C##DEMO_DS_0.t_order_0 compute statistics, OriginalSql = analyze table C##DEMO_DS_0.t_order_0 compute statistics, Error Msg = ORA-00942: 表或视图不存在  at oracle.jdbc.driver.T4CTTIoer11.processError(T4CTTIoer11.java:513) ... 51 more ``` When the table not exists, OracleDatabaseMetaData. GetIndexInfo will throw an exception, on the contrary the Mysql will not.   I added an isTableExist method in `IndexMetaDataLoader` to solve this issue as the `ColumnMetaDataLoader` do,  and it works. The source code is like the following, ```     public static Collection&lt;IndexMetaData&gt; load(final Connection connection, final String table) throws SQLException {         if (!isTableExist(connection, connection.getCatalog(), table)) {             return Collections.emptyList();         }         Collection&lt;IndexMetaData&gt; result = new HashSet&lt;&gt;();         try (ResultSet resultSet = connection.getMetaData().getIndexInfo(connection.getCatalog(), connection.getSchema(), table, false, false)) {             while (resultSet.next()) {                 String indexName = resultSet.getString(INDEX_NAME);                 result.add(new IndexMetaData(indexName));             }         }         return result;     }          private static boolean isTableExist(final Connection connection, final String catalog, final String table) throws SQLException {         try (ResultSet resultSet = connection.getMetaData().getTables(catalog, null, table, null)) {             return resultSet.next();         }     } ``` Before commit a pr, I want to extract the isTableExist method from class IndexMetaDataLoader and ColumnMetaDataLoader. Could someone give me some advice about how to do the extract ? I will really appreciate any help on this, thanks.  </body>
		<created>2020-04-24 18:00:33</created>
		<closed>2020-04-26 05:05:10</closed>
	</bug>
	<bug>
		<id>5274</id>
		<title>order by not support string column when query more than one database</title>
		<body>## Bug Report  **For English only**, other languages will not accept.  Before report a bug, make sure you have:  - Searched open and closed [GitHub issues](https://github.com/apache/shardingsphere/issues). - Read documentation: [ShardingSphere Doc](https://shardingsphere.apache.org/document/current/en/overview).  Please pay attention on issues you submitted, because we maybe need more details.  If no response **more than 7 days** and we cannot reproduce it on current information, we will **close it**.  Please answer these questions before submitting your issue. Thanks!  ### Which version of ShardingSphere did you use? 4.0.1 ### Which project did you use? Sharding-JDBC or Sharding-Proxy? Sharding-Proxy ### Expected behavior more than one database query support order by use string column ### Actual behavior not support, only support when route one database, cross database support i test is int、datetime etc, if use string column to order by, query sql is always executing, cann't get result or error ### Reason analyze (If you can)  ### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.  ### Example codes for reproduce this issue (such as a github link).  ## issue is #4665 , at that time you think the issue is same as #4850 , i see it solved in 4.0.1 verion, but when i use 4.0.1 to test, it also has #4465 quesion, please check! </body>
		<created>2020-04-23 02:58:48</created>
		<closed>2020-05-09 07:16:55</closed>
	</bug>
	<bug>
		<id>5210</id>
		<title>ON DUPLICATE KEY UPDATE Sub-Clause paramter dropped</title>
		<body>DAO层使用 MyBatis，当使用 INSERT INTO VALUES  ON DUPLICATE KEY UPDATE  语句时，UPDATE 部分参数全都会丢失</body>
		<created>2020-04-16 08:42:38</created>
		<closed>2020-05-15 12:37:40</closed>
	</bug>
	<bug>
		<id>5123</id>
		<title>org.antlr.v4.runtime.tree.ErrorNodeImpl cannot be cast to org.antlr.v4.runtime.ParserRuleContext</title>
		<body>Caused by: java.lang.ClassCastException: org.antlr.v4.runtime.tree.ErrorNodeImpl cannot be cast to org.antlr.v4.runtime.ParserRuleContext at org.apache.shardingsphere.sql.parser.core.extractor.impl.dml.PredicateExtractor.extractPredicate(PredicateExtractor.java:140) ~[shardingsphere-sql-parser-engine-4.0.1.jar:4.0.1] at org.apache.shardingsphere.sql.parser.core.extractor.impl.dml.PredicateExtractor.extractRecursiveWithParen(PredicateExtractor.java:124) ~[shardingsphere-sql-parser-engine-4.0.1.jar:4.0.1] at org.apache.shardingsphere.sql.parser.core.extractor.impl.dml.PredicateExtractor.extractPredicateSegment(PredicateExtractor.java:98) ~[shardingsphere-sql-parser-engine-4.0.1.jar:4.0.1] at org.apache.shardingsphere.sql.parser.core.extractor.impl.dml.PredicateExtractor.extractRecursiveWithLogicalOperation(PredicateExtractor.java:79) ~[shardingsphere-sql-parser-engine-4.0.1.jar:4.0.1] at org.apache.shardingsphere.sql.parser.core.extractor.impl.dml.PredicateExtractor.extract(PredicateExtractor.java:71) ~[shardingsphere-sql-parser-engine-4.0.1.jar:4.0.1] at org.apache.shardingsphere.sql.parser.core.extractor.impl.dml.WhereExtractor.extract(WhereExtractor.java:48) ~[shardingsphere-sql-parser-engine-4.0.1.jar:4.0.1] at org.apache.shardingsphere.sql.parser.core.extractor.SQLSegmentsExtractorEngine.extract(SQLSegmentsExtractorEngine.java:47) ~[shardingsphere-sql-parser-engine-4.0.1.jar:4.0.1] at org.apache.shardingsphere.sql.parser.core.SQLParseKernel.parse(SQLParseKernel.java:59) ~[shardingsphere-sql-parser-engine-4.0.1.jar:4.0.1] at org.apache.shardingsphere.sql.parser.SQLParseEngine.parse0(SQLParseEngine.java:70) ~[shardingsphere-sql-parser-engine-4.0.1.jar:4.0.1] at org.apache.shardingsphere.sql.parser.SQLParseEngine.parse(SQLParseEngine.java:52) ~[shardingsphere-sql-parser-engine-4.0.1.jar:4.0.1] at org.apache.shardingsphere.core.route.router.sharding.ShardingRouter.parse(ShardingRouter.java:86) ~[sharding-core-route-4.0.1.jar:4.0.1] at org.apache.shardingsphere.core.route.PreparedStatementRoutingEngine.route(PreparedStatementRoutingEngine.java:61) ~[sharding-core-route-4.0.1.jar:4.0.1] at org.apache.shardingsphere.core.PreparedQueryShardingEngine.route(PreparedQueryShardingEngine.java:59) ~[sharding-core-entry-4.0.1.jar:4.0.1] at org.apache.shardingsphere.core.BaseShardingEngine.executeRoute(BaseShardingEngine.java:85) ~[sharding-core-entry-4.0.1.jar:4.0.1] at org.apache.shardingsphere.core.BaseShardingEngine.shard(BaseShardingEngine.java:68) ~[sharding-core-entry-4.0.1.jar:4.0.1] at org.apache.shardingsphere.shardingjdbc.jdbc.core.statement.ShardingPreparedStatement.shard(ShardingPreparedStatement.java:249) ~[sharding-jdbc-core-4.0.1.jar:4.0.1] at org.apache.shardingsphere.shardingjdbc.jdbc.core.statement.ShardingPreparedStatement.execute(ShardingPreparedStatement.java:190) ~[sharding-jdbc-core-4.0.1.jar:4.0.1] at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_201] at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_201] at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_201] at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_201] at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59) ~[mybatis-3.4.5.jar:3.4.5] at com.sun.proxy.$Proxy220.execute(Unknown Source) ~[na:na] at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63) ~[mybatis-3.4.5.jar:3.4.5] at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79) ~[mybatis-3.4.5.jar:3.4.5] at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63) ~[mybatis-3.4.5.jar:3.4.5] at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324) ~[mybatis-3.4.5.jar:3.4.5] at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156) ~[mybatis-3.4.5.jar:3.4.5] at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109) ~[mybatis-3.4.5.jar:3.4.5] at com.github.pagehelper.PageInterceptor.intercept(PageInterceptor.java:108) ~[pagehelper-5.1.7.jar:na] at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:61) ~[mybatis-3.4.5.jar:3.4.5] at com.sun.proxy.$Proxy218.query(Unknown Source) ~[na:na] at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148) ~[mybatis-3.4.5.jar:3.4.5] ... 83 common frames omitted when I use this SQL querying, it told me this message. I want to know whether it is a bug? because when I use version 3.1 it is ok. but now, I use version 4.0.1, it wrong.... SQL : select     &lt;include refid="No_Price_Column_List"/&gt;     from table_name     where CURRENT_TIMESTAMP BETWEEN startTime AND endTime AND type=1     AND a in     &lt;foreach collection="list" item="item" open="(" close=")" separator=","&gt;       #{item}     &lt;/foreach&gt;     and status = 0 order by mtime asc</body>
		<created>2020-04-09 09:43:23</created>
		<closed>2020-04-16 12:58:36</closed>
	</bug>
	<bug>
		<id>5114</id>
		<title>Bad function name</title>
		<body>Someone gave a bad spelling for function name</body>
		<created>2020-04-09 04:13:23</created>
		<closed>2020-04-09 04:18:56</closed>
	</bug>
	<bug>
		<id>5043</id>
		<title>adding a schema on config center is not working</title>
		<body>## Bug Report  **adding a schema on config center is not working,but updating authentication or props is working,before rebooting sharding-proxy. adding a schema on config center is the same as  [#2346](https://github.com/apache/incubator-shardingsphere/issues/2346)**  **For English only**, other languages will not accept.  Before report a bug, make sure you have:  - Searched open and closed [GitHub issues](https://github.com/apache/incubator-shardingsphere/issues). - Read documentation: [ShardingSphere Doc](https://shardingsphere.apache.org/document/current/en/overview).  Please pay attention on issues you submitted, because we maybe need more details.  If no response **more than 7 days** and we cannot reproduce it on current information, we will **close it**.  Please answer these questions before submitting your issue. Thanks!  ### Which version of ShardingSphere did you use?  - [x] 4.0.0 - [x] 4.0.1  ### Which project did you use? Sharding-JDBC or Sharding-Proxy? Sharding-Proxy ### Expected behavior After adding a schema on config center, I hope the Sharding Rroxy could refresh and load configuration automatically or semi-automatic(by sending a command manually), that is, Then I can see that new schema by `show databases;` **adding a schema on config center is the same as  [#2346](https://github.com/apache/incubator-shardingsphere/issues/2346)** ### Actual behavior ![](https://raw.githubusercontent.com/myzero1/show-time/master/tmp/QQ%E5%9B%BE%E7%89%8720200331175222.png) ![](https://raw.githubusercontent.com/myzero1/show-time/master/tmp/QQ%E5%9B%BE%E7%89%8720200331175232.png) ![](https://raw.githubusercontent.com/myzero1/show-time/master/tmp/QQ%E5%9B%BE%E7%89%8720200331175941.png) </body>
		<created>2020-04-02 02:23:25</created>
		<closed>2020-04-17 06:37:15</closed>
	</bug>
	<bug>
		<id>4993</id>
		<title>Update statement has wrong parameter count</title>
		<body>SQL: &gt; UPDATE t_order SET status = status - ? WHERE order_id = ? AND user_id = ?  Expected parameter count: 3 Actual parameter count: 2</body>
		<created>2020-03-29 10:09:44</created>
		<closed>2020-03-29 11:16:48</closed>
	</bug>
	<bug>
		<id>4978</id>
		<title>Sharding-Proxy doesn't response for "Unsupported Command" from PSQL cli</title>
		<body>## Bug Report  Sharding-Proxy doesn't response for "Unsupported Command" from PSQL cli  ### Which version of ShardingSphere did you use?  4.0.1  ### Which project did you use? Sharding-JDBC or Sharding-Proxy?  Sharding-Proxy  ### Expected behavior  Expected for error messages  ### Actual behavior  Blocked without response  ### Reason analyze (If you can)  None  ### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.  1. Start Sharding-Proxy with configuration from samples. 2. Connect to Sharding-Proxy with ***psql (PostgreSQL) 10.12 (Ubuntu 10.12-0ubuntu0.18.04.1)*** 3. Execute any **unsupported** command  ### Example codes for reproduce this issue (such as a github link).  None</body>
		<created>2020-03-27 11:42:06</created>
		<closed>2020-03-31 03:11:51</closed>
	</bug>
	<bug>
		<id>4919</id>
		<title>ShardingProxy can not load `shardingAlgorithm.jar` from an external path</title>
		<body>- [x] Modify Dokerfile - [x] Update [ShardingSphere doc](https://shardingsphere.apache.org/document/current/cn/manual/sharding-proxy/docker/) - [x] Update [docker hub description](https://hub.docker.com/r/apache/sharding-proxy/)</body>
		<created>2020-03-24 10:15:45</created>
		<closed>2020-03-27 05:49:28</closed>
	</bug>
	<bug>
		<id>4770</id>
		<title>Case insensitive for DESC table for encrypt</title>
		<body>DESC table is case sensitive now, We should change it to case insensitive.</body>
		<created>2020-03-15 16:28:09</created>
		<closed>2020-03-27 14:27:34</closed>
	</bug>
	<bug>
		<id>4680</id>
		<title>count(distinct col) renturn null</title>
		<body>mybatis：int getMsgDay(@Param("account_uid") String account_uid);  SQL：SELECT COUNT(DISTINCT DATE_FORMAT(create_time,'%Y%m%d')) as count FROM table_name WHERE account_uid = #{account_uid}  if there is no data, then return null, not return 0, it case an exection: org.apache.ibatis.binding.BindingException: Mapper method 'com.*.getMsgDay attempted to return null from a method with a primitive return type (int).</body>
		<created>2020-03-10 02:46:59</created>
		<closed>2020-06-19 13:21:45</closed>
	</bug>
	<bug>
		<id>4658</id>
		<title>DESC table cannot display encrypt related columns</title>
		<body></body>
		<created>2020-03-08 09:36:31</created>
		<closed>2020-03-08 11:15:18</closed>
	</bug>
	<bug>
		<id>4640</id>
		<title>Use Navicat client open database, console print ClassCastException error log.</title>
		<body>## Bug Report  **For English only**, other languages will not accept.  Before report a bug, make sure you have:  - Searched open and closed [GitHub issues](https://github.com/apache/incubator-shardingsphere/issues). - Read documentation: [ShardingSphere Doc](https://shardingsphere.apache.org/document/current/en/overview).  Please pay attention on issues you submitted, because we maybe need more details.  If no response **more than 7 days** and we cannot reproduce it on current information, we will **close it**.  Please answer these questions before submitting your issue. Thanks!  ### Which version of ShardingSphere did you use? Lastest master code ### Which project did you use? Sharding-JDBC or Sharding-Proxy? Sharding-Proxy ### Expected behavior Use Navicat client, open database. ### Actual behavior Can open database, but console print error log. ### Reason analyze (If you can)  ### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.  ### Example codes for reproduce this issue (such as a github link).  ``` [INFO ] 12:23:05.330 [nioEventLoopGroup-2-1] i.n.handler.logging.LoggingHandler - [id: 0x1b9ce6ac, L:/0:0:0:0:0:0:0:0:3308] READ: [id: 0x2d2ad5dd, L:/127.0.0.1:3308 - R:/127.0.0.1:50754] [INFO ] 12:23:05.331 [nioEventLoopGroup-2-1] i.n.handler.logging.LoggingHandler - [id: 0x1b9ce6ac, L:/0:0:0:0:0:0:0:0:3308] READ COMPLETE [INFO ] 12:23:06.075 [ShardingSphere-Command-0] ShardingSphere-SQL - Rule Type: sharding [INFO ] 12:23:06.075 [ShardingSphere-Command-0] ShardingSphere-SQL - Logic SQL: SET NAMES utf8mb4 [INFO ] 12:23:06.075 [ShardingSphere-Command-0] ShardingSphere-SQL - SQLStatement: CommonSQLStatementContext(sqlStatement=org.apache.shardingsphere.sql.parser.sql.statement.dal.SetStatement@3e5a50af, tablesContext=org.apache.shardingsphere.sql.parser.relation.segment.table.TablesContext@2c15d279) [INFO ] 12:23:06.076 [ShardingSphere-Command-0] ShardingSphere-SQL - Actual SQL: ds_0 ::: SET NAMES utf8mb4 [INFO ] 12:23:06.076 [ShardingSphere-Command-0] ShardingSphere-SQL - Actual SQL: ds_1 ::: SET NAMES utf8mb4 [INFO ] 12:23:06.164 [ShardingSphere-Command-1] ShardingSphere-SQL - Rule Type: sharding [INFO ] 12:23:06.164 [ShardingSphere-Command-1] ShardingSphere-SQL - Logic SQL: SHOW VARIABLES LIKE 'lower_case_%' [INFO ] 12:23:06.164 [ShardingSphere-Command-1] ShardingSphere-SQL - SQLStatement: CommonSQLStatementContext(sqlStatement=org.apache.shardingsphere.sql.parser.sql.statement.dal.dialect.mysql.ShowOtherStatement@46335750, tablesContext=org.apache.shardingsphere.sql.parser.relation.segment.table.TablesContext@8b98b9b) [INFO ] 12:23:06.164 [ShardingSphere-Command-1] ShardingSphere-SQL - Actual SQL: ds_1 ::: SHOW VARIABLES LIKE 'lower_case_%' [INFO ] 12:23:10.510 [nioEventLoopGroup-2-1] i.n.handler.logging.LoggingHandler - [id: 0x1b9ce6ac, L:/0:0:0:0:0:0:0:0:3308] READ: [id: 0xca3fe6d8, L:/127.0.0.1:3308 - R:/127.0.0.1:50807] [INFO ] 12:23:10.511 [nioEventLoopGroup-2-1] i.n.handler.logging.LoggingHandler - [id: 0x1b9ce6ac, L:/0:0:0:0:0:0:0:0:3308] READ COMPLETE [INFO ] 12:23:10.521 [ShardingSphere-Command-5] ShardingSphere-SQL - Rule Type: sharding [INFO ] 12:23:10.521 [ShardingSphere-Command-5] ShardingSphere-SQL - Logic SQL: SET NAMES utf8mb4 [INFO ] 12:23:10.521 [ShardingSphere-Command-5] ShardingSphere-SQL - SQLStatement: CommonSQLStatementContext(sqlStatement=org.apache.shardingsphere.sql.parser.sql.statement.dal.SetStatement@5542c1ce, tablesContext=org.apache.shardingsphere.sql.parser.relation.segment.table.TablesContext@75a4a8d3) [INFO ] 12:23:10.521 [ShardingSphere-Command-5] ShardingSphere-SQL - Actual SQL: ds_0 ::: SET NAMES utf8mb4 [INFO ] 12:23:10.521 [ShardingSphere-Command-5] ShardingSphere-SQL - Actual SQL: ds_1 ::: SET NAMES utf8mb4 [INFO ] 12:23:10.575 [ShardingSphere-Command-7] ShardingSphere-SQL - Rule Type: sharding [INFO ] 12:23:10.576 [ShardingSphere-Command-7] ShardingSphere-SQL - Logic SQL: SHOW TABLE STATUS [INFO ] 12:23:10.576 [ShardingSphere-Command-7] ShardingSphere-SQL - SQLStatement: CommonSQLStatementContext(sqlStatement=org.apache.shardingsphere.sql.parser.sql.statement.dal.dialect.mysql.ShowTableStatusStatement@37669c66, tablesContext=org.apache.shardingsphere.sql.parser.relation.segment.table.TablesContext@33590e52) [INFO ] 12:23:10.576 [ShardingSphere-Command-7] ShardingSphere-SQL - Actual SQL: ds_1 ::: SHOW TABLE STATUS [INFO ] 12:23:10.616 [ShardingSphere-Command-4] ShardingSphere-SQL - Rule Type: sharding [INFO ] 12:23:10.617 [ShardingSphere-Command-4] ShardingSphere-SQL - Logic SQL: SELECT COUNT(*) FROM information_schema.TABLES WHERE TABLE_SCHEMA = 'databasemanager' UNION SELECT COUNT(*) FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'databasemanager' UNION SELECT COUNT(*) FROM information_schema.ROUTINES WHERE ROUTINE_SCHEMA = 'databasemanager' [INFO ] 12:23:10.617 [ShardingSphere-Command-4] ShardingSphere-SQL - SQLStatement: SelectStatementContext(super=CommonSQLStatementContext(sqlStatement=org.apache.shardingsphere.sql.parser.sql.statement.dml.SelectStatement@3f763a5b, tablesContext=org.apache.shardingsphere.sql.parser.relation.segment.table.TablesContext@7ae644d8), tablesContext=org.apache.shardingsphere.sql.parser.relation.segment.table.TablesContext@7ae644d8, projectionsContext=ProjectionsContext(startIndex=7, stopIndex=14, distinctRow=false, projections=[AggregationProjection(type=COUNT, innerExpression=(*), alias=Optional.empty, derivedAggregationProjections=[], index=-1)], columnLabels=[COUNT(*)]), groupByContext=org.apache.shardingsphere.sql.parser.relation.segment.select.groupby.GroupByContext@7ee6828c, orderByContext=org.apache.shardingsphere.sql.parser.relation.segment.select.orderby.OrderByContext@532eca15, paginationContext=org.apache.shardingsphere.sql.parser.relation.segment.select.pagination.PaginationContext@5d8496c9, containsSubquery=false) [INFO ] 12:23:10.617 [ShardingSphere-Command-4] ShardingSphere-SQL - Actual SQL: ds_1 ::: SELECT COUNT(*) FROM information_schema.TABLES WHERE TABLE_SCHEMA = 'databasemanager' UNION SELECT COUNT(*) FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'databasemanager' UNION SELECT COUNT(*) FROM information_schema.ROUTINES WHERE ROUTINE_SCHEMA = 'databasemanager' [INFO ] 12:23:10.671 [ShardingSphere-Command-8] ShardingSphere-SQL - Rule Type: sharding [INFO ] 12:23:10.671 [ShardingSphere-Command-8] ShardingSphere-SQL - Logic SQL: SELECT TABLE_SCHEMA, TABLE_NAME, TABLE_TYPE FROM information_schema.TABLES WHERE TABLE_SCHEMA = 'databasemanager' ORDER BY TABLE_SCHEMA, TABLE_TYPE [INFO ] 12:23:10.671 [ShardingSphere-Command-8] ShardingSphere-SQL - SQLStatement: SelectStatementContext(super=CommonSQLStatementContext(sqlStatement=org.apache.shardingsphere.sql.parser.sql.statement.dml.SelectStatement@5139217f, tablesContext=org.apache.shardingsphere.sql.parser.relation.segment.table.TablesContext@4386d13), tablesContext=org.apache.shardingsphere.sql.parser.relation.segment.table.TablesContext@4386d13, projectionsContext=ProjectionsContext(startIndex=7, stopIndex=42, distinctRow=false, projections=[ColumnProjection(owner=null, name=TABLE_SCHEMA, alias=Optional.empty), ColumnProjection(owner=null, name=TABLE_NAME, alias=Optional.empty), ColumnProjection(owner=null, name=TABLE_TYPE, alias=Optional.empty)], columnLabels=[TABLE_SCHEMA, TABLE_NAME, TABLE_TYPE]), groupByContext=org.apache.shardingsphere.sql.parser.relation.segment.select.groupby.GroupByContext@3db4633e, orderByContext=org.apache.shardingsphere.sql.parser.relation.segment.select.orderby.OrderByContext@7c134aa6, paginationContext=org.apache.shardingsphere.sql.parser.relation.segment.select.pagination.PaginationContext@6439ae82, containsSubquery=false) [INFO ] 12:23:10.671 [ShardingSphere-Command-8] ShardingSphere-SQL - Actual SQL: ds_1 ::: SELECT TABLE_SCHEMA, TABLE_NAME, TABLE_TYPE FROM information_schema.TABLES WHERE TABLE_SCHEMA = 'databasemanager' ORDER BY TABLE_SCHEMA, TABLE_TYPE [INFO ] 12:23:10.690 [ShardingSphere-Command-9] ShardingSphere-SQL - Rule Type: sharding [INFO ] 12:23:10.690 [ShardingSphere-Command-9] ShardingSphere-SQL - Logic SQL: SELECT TABLE_SCHEMA, TABLE_NAME, COLUMN_NAME, COLUMN_TYPE FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'databasemanager' ORDER BY TABLE_SCHEMA, TABLE_NAME [INFO ] 12:23:10.690 [ShardingSphere-Command-9] ShardingSphere-SQL - SQLStatement: SelectStatementContext(super=CommonSQLStatementContext(sqlStatement=org.apache.shardingsphere.sql.parser.sql.statement.dml.SelectStatement@4a6ca2d2, tablesContext=org.apache.shardingsphere.sql.parser.relation.segment.table.TablesContext@f6e35fb), tablesContext=org.apache.shardingsphere.sql.parser.relation.segment.table.TablesContext@f6e35fb, projectionsContext=ProjectionsContext(startIndex=7, stopIndex=56, distinctRow=false, projections=[ColumnProjection(owner=null, name=TABLE_SCHEMA, alias=Optional.empty), ColumnProjection(owner=null, name=TABLE_NAME, alias=Optional.empty), ColumnProjection(owner=null, name=COLUMN_NAME, alias=Optional.empty), ColumnProjection(owner=null, name=COLUMN_TYPE, alias=Optional.empty)], columnLabels=[TABLE_SCHEMA, TABLE_NAME, COLUMN_NAME, COLUMN_TYPE]), groupByContext=org.apache.shardingsphere.sql.parser.relation.segment.select.groupby.GroupByContext@6951246d, orderByContext=org.apache.shardingsphere.sql.parser.relation.segment.select.orderby.OrderByContext@3eabbbb8, paginationContext=org.apache.shardingsphere.sql.parser.relation.segment.select.pagination.PaginationContext@117ef48d, containsSubquery=false) [INFO ] 12:23:10.691 [ShardingSphere-Command-9] ShardingSphere-SQL - Actual SQL: ds_1 ::: SELECT TABLE_SCHEMA, TABLE_NAME, COLUMN_NAME, COLUMN_TYPE FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'databasemanager' ORDER BY TABLE_SCHEMA, TABLE_NAME [ERROR] 12:23:10.916 [ShardingSphere-Command-10] o.a.s.s.f.c.CommandExecutorTask - Exception occur:  java.lang.ClassCastException: org.apache.shardingsphere.sql.parser.sql.segment.dml.expr.subquery.SubquerySegment cannot be cast to org.apache.shardingsphere.sql.parser.sql.segment.generic.TableSegment at org.apache.shardingsphere.sql.parser.visitor.impl.MySQLDMLVisitor.visitJoinedTable(MySQLDMLVisitor.java:515) at org.apache.shardingsphere.sql.parser.visitor.impl.MySQLDMLVisitor.visitJoinedTable(MySQLDMLVisitor.java:119) at org.apache.shardingsphere.sql.parser.autogen.MySQLStatementParser$JoinedTableContext.accept(MySQLStatementParser.java:6736) at org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18) at org.apache.shardingsphere.sql.parser.visitor.impl.MySQLDMLVisitor.getTableSegments(MySQLDMLVisitor.java:338) at org.apache.shardingsphere.sql.parser.visitor.impl.MySQLDMLVisitor.visitTableReference(MySQLDMLVisitor.java:490) at org.apache.shardingsphere.sql.parser.visitor.impl.MySQLDMLVisitor.visitTableReference(MySQLDMLVisitor.java:119) at org.apache.shardingsphere.sql.parser.autogen.MySQLStatementParser$TableReferenceContext.accept(MySQLStatementParser.java:6265) at org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18) at org.apache.shardingsphere.sql.parser.visitor.impl.MySQLDMLVisitor.visitEscapedTableReference(MySQLDMLVisitor.java:476) at org.apache.shardingsphere.sql.parser.visitor.impl.MySQLDMLVisitor.visitEscapedTableReference(MySQLDMLVisitor.java:119) at org.apache.shardingsphere.sql.parser.autogen.MySQLStatementParser$EscapedTableReferenceContext.accept(MySQLStatementParser.java:5936) at org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18) at org.apache.shardingsphere.sql.parser.visitor.impl.MySQLDMLVisitor.visitTableReferences(MySQLDMLVisitor.java:469) at org.apache.shardingsphere.sql.parser.visitor.impl.MySQLDMLVisitor.visitTableReferences(MySQLDMLVisitor.java:119) at org.apache.shardingsphere.sql.parser.autogen.MySQLStatementParser$TableReferencesContext.accept(MySQLStatementParser.java:5880) at org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18) at org.apache.shardingsphere.sql.parser.visitor.impl.MySQLDMLVisitor.visitFromClause(MySQLDMLVisitor.java:461) at org.apache.shardingsphere.sql.parser.visitor.impl.MySQLDMLVisitor.visitFromClause(MySQLDMLVisitor.java:119) at org.apache.shardingsphere.sql.parser.autogen.MySQLStatementParser$FromClauseContext.accept(MySQLStatementParser.java:5835) at org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18) at org.apache.shardingsphere.sql.parser.visitor.impl.MySQLDMLVisitor.visitSelectClause(MySQLDMLVisitor.java:315) at org.apache.shardingsphere.sql.parser.visitor.impl.MySQLDMLVisitor.visitSelectClause(MySQLDMLVisitor.java:119) at org.apache.shardingsphere.sql.parser.autogen.MySQLStatementParser$SelectClauseContext.accept(MySQLStatementParser.java:4542) at org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18) at org.apache.shardingsphere.sql.parser.visitor.impl.MySQLDMLVisitor.visitUnionClause(MySQLDMLVisitor.java:303) at org.apache.shardingsphere.sql.parser.visitor.impl.MySQLDMLVisitor.visitUnionClause(MySQLDMLVisitor.java:119) at org.apache.shardingsphere.sql.parser.autogen.MySQLStatementParser$UnionClauseContext.accept(MySQLStatementParser.java:4437) at org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18) at org.apache.shardingsphere.sql.parser.visitor.impl.MySQLDMLVisitor.visitSelect(MySQLDMLVisitor.java:295) at org.apache.shardingsphere.sql.parser.visitor.impl.MySQLDMLVisitor.visitSelect(MySQLDMLVisitor.java:119) at org.apache.shardingsphere.sql.parser.autogen.MySQLStatementParser$SelectContext.accept(MySQLStatementParser.java:3095) at org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18) at org.apache.shardingsphere.sql.parser.SQLParserEngine.parse0(SQLParserEngine.java:72) at org.apache.shardingsphere.sql.parser.SQLParserEngine.parse(SQLParserEngine.java:53) at org.apache.shardingsphere.shardingproxy.backend.text.TextProtocolBackendHandlerFactory.newInstance(TextProtocolBackendHandlerFactory.java:69) at org.apache.shardingsphere.shardingproxy.frontend.mysql.command.query.text.query.MySQLComQueryPacketExecutor.&lt;init&gt;(MySQLComQueryPacketExecutor.java:65) at org.apache.shardingsphere.shardingproxy.frontend.mysql.command.MySQLCommandExecutorFactory.newInstance(MySQLCommandExecutorFactory.java:70) at org.apache.shardingsphere.shardingproxy.frontend.mysql.command.MySQLCommandExecuteEngine.getCommandExecutor(MySQLCommandExecuteEngine.java:58) at org.apache.shardingsphere.shardingproxy.frontend.command.CommandExecutorTask.executeCommand(CommandExecutorTask.java:89) at org.apache.shardingsphere.shardingproxy.frontend.command.CommandExecutorTask.run(CommandExecutorTask.java:70) at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) at java.lang.Thread.run(Thread.java:748) ```</body>
		<created>2020-03-07 04:28:40</created>
		<closed>2020-03-08 06:38:39</closed>
	</bug>
	<bug>
		<id>4627</id>
		<title>Check Call statement in MySQL</title>
		<body>There're two Call statements in MySQL g4 file for now. We need to determine which one is right.</body>
		<created>2020-03-06 05:54:29</created>
		<closed>2020-03-06 11:07:48</closed>
	</bug>
	<bug>
		<id>4565</id>
		<title>distinct returns wrong result</title>
		<body>sharding-proxy version:4.0.0  I insert some rows to sharding-proxy by my custom hash algorithm.   person_id|name|last_update_time|account|which data node -|-|-|-|-| 174fd27ef0f34fd5b9296f102ffdbd47|liuqiang|2020-02-12 20:47:10|3|ds_0 4295029899a64d1bbfc5b4d37b628f0c|wangwu|2020-02-12 20:28:22|2|ds_0 a672ba34d2f14f4d8e3ee9e8ccfd6ca5|liyi|2020-02-12 20:47:16|1|ds_0 bf840dc0eaf64f7a8a7493c3ffea8799|huangyao|2020-02-12 20:28:38|3|ds_0 c63b749e981a4dc6b4942b18978e0d08|lisi|2020-02-12 20:28:17|2|ds_0 e28da7bc9ddc45bdb2974041ed564fc3|zhangsan|2020-02-12 20:27:48|1|ds_0 f741d4fb69f14b869dac11e2889fe8c1|penggang|2020-02-12 20:28:34|3|ds_0 0596342115c14328b2b0458d0860a90c|lingang|2020-02-12 20:28:47|3|ds_1 2f8b95104c114cc5a8ab6bc86ef9ab62|luyang|2020-02-12 20:28:50|2|ds_1 4397392fb6274bf2bfcfc41ae1da55a5|tangliang|2020-02-12 20:28:42|1|ds_1 c57c358c49cc4da6b98477ad8a55db3f|help|2020-02-13 16:01:28|3|ds_1 d9edd130ab8241f6be4b96a12cdb0404|zhaoliu|2020-02-12 20:28:26|2|ds_1 f97ea21d03124aa8b59a23bad5585e81|wanger|2020-02-12 20:28:29|1|ds_1  then,I execute this SQL: ```SQL select distinct account from tbperson; ``` result is :  account -| 3| 2| 1| 3| 2| 1|  right result gonna be:  account -| 3| 2| 1|  look forward to your reply.   </body>
		<created>2020-03-02 08:10:39</created>
		<closed>2020-03-06 06:58:33</closed>
	</bug>
	<bug>
		<id>4501</id>
		<title>Identify MySQL syntax allowed in Prepared Statements</title>
		<body>## Bug Report  ### Which version of ShardingSphere did you use? 5.0.0-RC1 ### Which project did you use? Sharding-JDBC or Sharding-Proxy? Sharding-Proxy ### Expected behavior Use MySQL C API to prepare and execute the SQL 'BEGIN' right. ### Actual behavior C API return an unknown exception. ### Reason analyze (If you can) C API expect a ER_UNSUPPORTED_PS message. But Proxy return a success message for now.  </body>
		<created>2020-02-27 10:46:08</created>
		<closed>2020-03-03 11:42:31</closed>
	</bug>
	<bug>
		<id>4482</id>
		<title>Correct the `DataTypeName` for each DataBase</title>
		<body>The definition of `DataTypeName` in `RuleName.g4`(Antlr grammer file) of each DataBase is not correct so far, therefore this issue is created to correct them. The sub-task list is below, - [x] Correct the `DataTypeName` for `MySQL`. - [x] Correct the `DataTypeName` for `PostgreSQL`.  - [x] Correct the `DataTypeName` for `SQLServer`.  - [x] Correct the `DataTypeName` for `Oracle`.  - [x] Correct the `DataTypeName` for `SQL92`.   Q1: How to learn about the definition of `DataTypeName`? A:  - Official document of each DataBase, i.g [MySQL](https://dev.mysql.com/doc/refman/8.0/en/data-types.html). - [Antlr SQL grammer](https://github.com/antlr/grammars-v4/tree/master/sql) - Other related Website. (I am not sure. 😃 )  Q2: Which file of ShardingSphere does `DataTypeName` exist? A: All files named with `RuleName.g4`</body>
		<created>2020-02-26 03:59:32</created>
		<closed>2020-03-22 04:40:43</closed>
	</bug>
	<bug>
		<id>4460</id>
		<title>SQL exec `order by` and `desc` feedback result may hung</title>
		<body>Sharding-proxy version: 4.0.0-RC3  - Problems encountered 1：Query SQL `select association,rounds,election_time as electionTime,title from zhyxh where doctor_id = 848224 order by association,election_time desc` feedback results hung.       Query SQL `select association,rounds,election_time as electionTime,title from zhyxh where doctor_id = 848224` feedback results ok.     logs:  no error in logs  - Problems encountered 2：Query SQL `select rtitle_ch,rn_ch,r_data,rstatus_ch,rtype_ch,researcher_ch,researcher_phone,researcher_email,researcher_addr_ch,researcher_unit_ch,exp_org_ch,applicant_ch,applicant_unit_ch,study_disease_ch from chictr where id in                  (                           '2443'                  ,                          '2615'                  )                  order by r_data desc` feedback results error `10002 - 2Unknown exception: [No signature of method: java.lang.String.mod() is applicable for argument types: (java.lang.Integer) values: [2]`.     logs: `[DEBUG] 16:12:04.484 [ShardingSphere-Command-3] o.a.s.s.f.m.c.MySQLCommandExecutorFactory - Execute packet type: COM_QUERY, value: MySQLComQueryPacket(sql=select rtitle_ch,rn_ch,r_data,rstatus_ch,rtype_ch,researcher_ch,researcher_phone,researcher_email,researcher_addr_ch,researcher_unit_ch,exp_org_ch,applicant_ch,applicant_unit_ch,study_disease_ch from chictr where id in                  (                           '2443'                  ,                          '2615'                  )                  order by r_data desc) [ERROR] 16:12:04.536 [ShardingSphere-Command-3] o.a.s.s.f.c.CommandExecutorTask - Exception occur:  groovy.lang.MissingMethodException: No signature of method: java.lang.String.mod() is applicable for argument types: (java.lang.Integer) values: [2] Possible solutions: drop(int), find(), any(), take(int), use([Ljava.lang.Object;), find(groovy.lang.Closure)         at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.unwrap(ScriptBytecodeAdapter.java:58)         at org.codehaus.groovy.runtime.callsite.PojoMetaClassSite.call(PojoMetaClassSite.java:49)         at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:48)         at org.codehaus.groovy.runtime.callsite.PojoMetaMethodSite.call(PojoMetaMethodSite.java:58)         at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:125)         at Script109$_run_closure1.doCall(Script109.groovy:1)         at sun.reflect.GeneratedMethodAccessor28.invoke(Unknown Source)         at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)         at java.lang.reflect.Method.invoke(Method.java:498)         at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)         at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:325)         at org.codehaus.groovy.runtime.metaclass.ClosureMetaClass.invokeMethod(ClosureMetaClass.java:294)         at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1019)         at groovy.lang.Closure.call(Closure.java:426)         at groovy.lang.Closure.call(Closure.java:420)         at org.apache.shardingsphere.core.strategy.route.inline.InlineShardingStrategy.execute(InlineShardingStrategy.java:90)         at org.apache.shardingsphere.core.strategy.route.inline.InlineShardingStrategy.doSharding(InlineShardingStrategy.java:72)         at org.apache.shardingsphere.core.strategy.route.inline.InlineShardingStrategy.doSharding(InlineShardingStrategy.java:59)         at org.apache.shardingsphere.core.route.type.standard.StandardRoutingEngine.routeDataSources(StandardRoutingEngine.java:200)         at org.apache.shardingsphere.core.route.type.standard.StandardRoutingEngine.route0(StandardRoutingEngine.java:188)         at org.apache.shardingsphere.core.route.type.standard.StandardRoutingEngine.routeByShardingConditionsWithCondition(StandardRoutingEngine.java:118)         at org.apache.shardingsphere.core.route.type.standard.StandardRoutingEngine.routeByShardingConditions(StandardRoutingEngine.java:112)         at org.apache.shardingsphere.core.route.type.standard.StandardRoutingEngine.getDataNodes(StandardRoutingEngine.java:97)         at org.apache.shardingsphere.core.route.type.standard.StandardRoutingEngine.route(StandardRoutingEngine.java:75)         at org.apache.shardingsphere.core.route.router.sharding.ShardingRouter.route(ShardingRouter.java:107)         at org.apache.shardingsphere.core.route.StatementRoutingEngine.route(StatementRoutingEngine.java:54)         at org.apache.shardingsphere.core.SimpleQueryShardingEngine.route(SimpleQueryShardingEngine.java:58)         at org.apache.shardingsphere.core.BaseShardingEngine.executeRoute(BaseShardingEngine.java:91)         at org.apache.shardingsphere.core.BaseShardingEngine.shard(BaseShardingEngine.java:74)         at org.apache.shardingsphere.shardingproxy.backend.communication.jdbc.wrapper.StatementExecutorWrapper.doShardingRoute(StatementExecutorWrapper.java:78)         at org.apache.shardingsphere.shardingproxy.backend.communication.jdbc.wrapper.StatementExecutorWrapper.route(StatementExecutorWrapper.java:64)         at org.apache.shardingsphere.shardingproxy.backend.communication.jdbc.JDBCDatabaseCommunicationEngine.execute(JDBCDatabaseCommunicationEngine.java:77)         at org.apache.shardingsphere.shardingproxy.backend.text.query.QueryBackendHandler.execute(QueryBackendHandler.java:54)         at org.apache.shardingsphere.shardingproxy.frontend.mysql.command.query.text.query.MySQLComQueryPacketExecutor.execute(MySQLComQueryPacketExecutor.java:73)         at org.apache.shardingsphere.shardingproxy.frontend.command.CommandExecutorTask.executeCommand(CommandExecutorTask.java:86)         at org.apache.shardingsphere.shardingproxy.frontend.command.CommandExecutorTask.run(CommandExecutorTask.java:66)         at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)         at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)         at java.lang.Thread.run(Thread.java:745)` </body>
		<created>2020-02-25 08:02:18</created>
		<closed>2020-03-18 02:05:47</closed>
	</bug>
	<bug>
		<id>4459</id>
		<title>Fix example project incorrect references</title>
		<body>org.apache.shardingsphere.core.yaml package classification migration caused org.apache.shardingsphere.example project build to fail</body>
		<created>2020-02-25 07:55:43</created>
		<closed>2020-02-25 09:50:00</closed>
	</bug>
	<bug>
		<id>4406</id>
		<title>When the table field type contains Integer, Double, BigDecimal, alter table fails</title>
		<body>## Bug Report  **For English only**, other languages will not accept.  Before report a bug, make sure you have:  - Searched open and closed [GitHub issues](https://github.com/apache/incubator-shardingsphere/issues). - Read documentation: [ShardingSphere Doc](https://shardingsphere.apache.org/document/current/en/overview).  Please pay attention on issues you submitted, because we maybe need more details.  If no response **more than 7 days** and we cannot reproduce it on current information, we will **close it**.  Please answer these questions before submitting your issue. Thanks!  ### Which version of ShardingSphere did you use? 4.0.0-RC3  ### Which project did you use? Sharding-JDBC or Sharding-Proxy? Sharding-JDBC  ### Expected behavior alter table successfully  ### Actual behavior  Hibernate:  when  field type is Bigdecimal     alter table cc_v3_sydx.cc_manual_collect_record         add column rfidNum decimal(19,2) line 3:30 mismatched input 'decimal' expecting {TRUNCATE, POSITION, VIEW, ANY, OFFSET, BEGIN, COMMIT, ROLLBACK, SAVEPOINT, BOOLEAN, DATE, TIME, TIMESTAMP, YEAR, QUARTER, MONTH, WEEK, DAY, HOUR, MINUTE, SECOND, MICROSECOND, MAX, MIN, SUM, COUNT, AVG, CURRENT, ENABLE, DISABLE, INSTANCE, DO, DEFINER, CASCADED, LOCAL, CLOSE, OPEN, NEXT, NAME, TYPE, TABLES, TABLESPACE, COLUMNS, FIELDS, INDEXES, STATUS, MODIFY, VALUE, DUPLICATE, FIRST, LAST, AFTER, OJ, ACCOUNT, USER, ROLE, START, TRANSACTION, WITHOUT, ESCAPE, SUBPARTITION, STORAGE, SUPER, TEMPORARY, THAN, UNBOUNDED, UPGRADE, VALIDATION, ROLLUP, SOUNDS, UNKNOWN, OFF, ALWAYS, COMMITTED, LEVEL, NO, PASSWORD, PRIVILEGES, ACTION, ALGORITHM, AUTOCOMMIT, BTREE, CHAIN, CHARSET, CHECKSUM, CIPHER, CLIENT, COALESCE, COMMENT, COMPACT, COMPRESSED, COMPRESSION, CONNECTION, CONSISTENT, DATA, DISCARD, DISK, ENCRYPTION, END, ENGINE, EVENT, EXCHANGE, EXECUTE, FILE, FIXED, FOLLOWING, GLOBAL, HASH, IMPORT_, LESS, MEMORY, NONE, PARSER, PARTIAL, PARTITIONING, PERSIST, PRECEDING, PROCESS, PROXY, QUICK, REBUILD, REDUNDANT, RELOAD, REMOVE, REORGANIZE, REPAIR, REVERSE, SESSION, SHUTDOWN, SIMPLE, SLAVE, VISIBLE, INVISIBLE, ENFORCED, AGAINST, LANGUAGE, MODE, QUERY, EXTENDED, EXPANSION, VARIANCE, MAX_ROWS, MIN_ROWS, SQL_BIG_RESULT, SQL_BUFFER_RESULT, SQL_CACHE, SQL_NO_CACHE, STATS_AUTO_RECALC, STATS_PERSISTENT, STATS_SAMPLE_PAGES, ROW_FORMAT, WEIGHT_STRING, COLUMN_FORMAT, INSERT_METHOD, KEY_BLOCK_SIZE, PACK_KEYS, PERSIST_ONLY, BIT_AND, BIT_OR, BIT_XOR, GROUP_CONCAT, JSON_ARRAYAGG, JSON_OBJECTAGG, STD, STDDEV, STDDEV_POP, STDDEV_SAMP, VAR_POP, VAR_SAMP, AUTO_INCREMENT, AVG_ROW_LENGTH, DELAY_KEY_WRITE, ROTATE, MASTER, BINLOG, ERROR, SCHEDULE, COMPLETION, EVERY, HOST, SOCKET, PORT, SERVER, WRAPPER, OPTIONS, OWNER, RETURNS, CONTAINS, SECURITY, INVOKER, TEMPTABLE, MERGE, UNDEFINED, DATAFILE, FILE_BLOCK_SIZE, EXTENT_SIZE, INITIAL_SIZE, AUTOEXTEND_SIZE, MAX_SIZE, NODEGROUP, WAIT, LOGFILE, UNDOFILE, UNDO_BUFFER_SIZE, REDO_BUFFER_SIZE, HANDLER, PREV, ORGANIZATION, DEFINITION, DESCRIPTION, REFERENCE, FOLLOWS, PRECEDES, IMPORT, CONCURRENT, XML, DUMPFILE, SHARE, CODE, CONTEXT, CLONE, AGGREGATE, INSTALL, UNINSTALL, RESOURCE, EXPIRE, NEVER, HISTORY, OPTIONAL, REUSE, MAX_QUERIES_PER_HOUR, MAX_UPDATES_PER_HOUR, MAX_CONNECTIONS_PER_HOUR, MAX_USER_CONNECTIONS, RETAIN, RANDOM, OLD, ISSUER, SUBJECT, CACHE, GENERAL, SLOW, USER_RESOURCES, EXPORT, RELAY, HOSTS, FLUSH, RESET, RESTART, UNIX_TIMESTAMP, LOWER, UPPER, IDENTIFIER_} line 3:41 mismatched input '2' expecting {ALTER, DROP, TRUNCATE, ADD, INDEX, WITH, UNION, ORDER, CHAR, CHARACTER, DEFAULT, ENABLE, DISABLE, TABLESPACE, MODIFY, WITHOUT, UPGRADE, CHECK, PASSWORD, ALGORITHM, ANALYZE, CHANGE, CHECKSUM, COALESCE, COLLATE, COMMENT, COMPRESSION, CONNECTION, CONVERT, DATA, DISCARD, ENCRYPTION, ENGINE, EXCHANGE, FORCE, IMPORT_, LOCK, OPTIMIZE, REBUILD, REMOVE, RENAME, REORGANIZE, REPAIR, MAX_ROWS, MIN_ROWS, STATS_AUTO_RECALC, STATS_PERSISTENT, STATS_SAMPLE_PAGES, ROW_FORMAT, INSERT_METHOD, KEY_BLOCK_SIZE, PACK_KEYS, AUTO_INCREMENT, AVG_ROW_LENGTH, DELAY_KEY_WRITE} 2020-02-21 23:36:11.071 [main] ERROR org.springframework.boot.SpringApplication - Application startup failed  when  field type is  Integer: Hibernate:           alter table cc_v3_sydx.cc_manual_collect_record         add column rfidNumInt integer line 3:29 mismatched input 'integer' expecting {TRUNCATE, POSITION, VIEW, ANY, OFFSET, BEGIN, COMMIT, ROLLBACK, SAVEPOINT, BOOLEAN, DATE, TIME, TIMESTAMP, YEAR, QUARTER, MONTH, WEEK, DAY, HOUR, MINUTE, SECOND, MICROSECOND, MAX, MIN, SUM, COUNT, AVG, CURRENT, ENABLE, DISABLE, INSTANCE, DO, DEFINER, CASCADED, LOCAL, CLOSE, OPEN, NEXT, NAME, TYPE, TABLES, TABLESPACE, COLUMNS, FIELDS, INDEXES, STATUS, MODIFY, VALUE, DUPLICATE, FIRST, LAST, AFTER, OJ, ACCOUNT, USER, ROLE, START, TRANSACTION, WITHOUT, ESCAPE, SUBPARTITION, STORAGE, SUPER, TEMPORARY, THAN, UNBOUNDED, UPGRADE, VALIDATION, ROLLUP, SOUNDS, UNKNOWN, OFF, ALWAYS, COMMITTED, LEVEL, NO, PASSWORD, PRIVILEGES, ACTION, ALGORITHM, AUTOCOMMIT, BTREE, CHAIN, CHARSET, CHECKSUM, CIPHER, CLIENT, COALESCE, COMMENT, COMPACT, COMPRESSED, COMPRESSION, CONNECTION, CONSISTENT, DATA, DISCARD, DISK, ENCRYPTION, END, ENGINE, EVENT, EXCHANGE, EXECUTE, FILE, FIXED, FOLLOWING, GLOBAL, HASH, IMPORT_, LESS, MEMORY, NONE, PARSER, PARTIAL, PARTITIONING, PERSIST, PRECEDING, PROCESS, PROXY, QUICK, REBUILD, REDUNDANT, RELOAD, REMOVE, REORGANIZE, REPAIR, REVERSE, SESSION, SHUTDOWN, SIMPLE, SLAVE, VISIBLE, INVISIBLE, ENFORCED, AGAINST, LANGUAGE, MODE, QUERY, EXTENDED, EXPANSION, VARIANCE, MAX_ROWS, MIN_ROWS, SQL_BIG_RESULT, SQL_BUFFER_RESULT, SQL_CACHE, SQL_NO_CACHE, STATS_AUTO_RECALC, STATS_PERSISTENT, STATS_SAMPLE_PAGES, ROW_FORMAT, WEIGHT_STRING, COLUMN_FORMAT, INSERT_METHOD, KEY_BLOCK_SIZE, PACK_KEYS, PERSIST_ONLY, BIT_AND, BIT_OR, BIT_XOR, GROUP_CONCAT, JSON_ARRAYAGG, JSON_OBJECTAGG, STD, STDDEV, STDDEV_POP, STDDEV_SAMP, VAR_POP, VAR_SAMP, AUTO_INCREMENT, AVG_ROW_LENGTH, DELAY_KEY_WRITE, ROTATE, MASTER, BINLOG, ERROR, SCHEDULE, COMPLETION, EVERY, HOST, SOCKET, PORT, SERVER, WRAPPER, OPTIONS, OWNER, RETURNS, CONTAINS, SECURITY, INVOKER, TEMPTABLE, MERGE, UNDEFINED, DATAFILE, FILE_BLOCK_SIZE, EXTENT_SIZE, INITIAL_SIZE, AUTOEXTEND_SIZE, MAX_SIZE, NODEGROUP, WAIT, LOGFILE, UNDOFILE, UNDO_BUFFER_SIZE, REDO_BUFFER_SIZE, HANDLER, PREV, ORGANIZATION, DEFINITION, DESCRIPTION, REFERENCE, FOLLOWS, PRECEDES, IMPORT, CONCURRENT, XML, DUMPFILE, SHARE, CODE, CONTEXT, CLONE, AGGREGATE, INSTALL, UNINSTALL, RESOURCE, EXPIRE, NEVER, HISTORY, OPTIONAL, REUSE, MAX_QUERIES_PER_HOUR, MAX_UPDATES_PER_HOUR, MAX_CONNECTIONS_PER_HOUR, MAX_USER_CONNECTIONS, RETAIN, RANDOM, OLD, ISSUER, SUBJECT, CACHE, GENERAL, SLOW, USER_RESOURCES, EXPORT, RELAY, HOSTS, FLUSH, RESET, RESTART, UNIX_TIMESTAMP, LOWER, UPPER, IDENTIFIER_} 2020-02-21 23:45:14.558 [main] ERROR org.springframework.boot.SpringApplication - Application startup failed  when  field type is  Double:  Hibernate:           alter table cc_v3_sydx.cc_manual_collect_record         add column rfidNumInt double precision line 3:29 mismatched input 'double' expecting {TRUNCATE, POSITION, VIEW, ANY, OFFSET, BEGIN, COMMIT, ROLLBACK, SAVEPOINT, BOOLEAN, DATE, TIME, TIMESTAMP, YEAR, QUARTER, MONTH, WEEK, DAY, HOUR, MINUTE, SECOND, MICROSECOND, MAX, MIN, SUM, COUNT, AVG, CURRENT, ENABLE, DISABLE, INSTANCE, DO, DEFINER, CASCADED, LOCAL, CLOSE, OPEN, NEXT, NAME, TYPE, TABLES, TABLESPACE, COLUMNS, FIELDS, INDEXES, STATUS, MODIFY, VALUE, DUPLICATE, FIRST, LAST, AFTER, OJ, ACCOUNT, USER, ROLE, START, TRANSACTION, WITHOUT, ESCAPE, SUBPARTITION, STORAGE, SUPER, TEMPORARY, THAN, UNBOUNDED, UPGRADE, VALIDATION, ROLLUP, SOUNDS, UNKNOWN, OFF, ALWAYS, COMMITTED, LEVEL, NO, PASSWORD, PRIVILEGES, ACTION, ALGORITHM, AUTOCOMMIT, BTREE, CHAIN, CHARSET, CHECKSUM, CIPHER, CLIENT, COALESCE, COMMENT, COMPACT, COMPRESSED, COMPRESSION, CONNECTION, CONSISTENT, DATA, DISCARD, DISK, ENCRYPTION, END, ENGINE, EVENT, EXCHANGE, EXECUTE, FILE, FIXED, FOLLOWING, GLOBAL, HASH, IMPORT_, LESS, MEMORY, NONE, PARSER, PARTIAL, PARTITIONING, PERSIST, PRECEDING, PROCESS, PROXY, QUICK, REBUILD, REDUNDANT, RELOAD, REMOVE, REORGANIZE, REPAIR, REVERSE, SESSION, SHUTDOWN, SIMPLE, SLAVE, VISIBLE, INVISIBLE, ENFORCED, AGAINST, LANGUAGE, MODE, QUERY, EXTENDED, EXPANSION, VARIANCE, MAX_ROWS, MIN_ROWS, SQL_BIG_RESULT, SQL_BUFFER_RESULT, SQL_CACHE, SQL_NO_CACHE, STATS_AUTO_RECALC, STATS_PERSISTENT, STATS_SAMPLE_PAGES, ROW_FORMAT, WEIGHT_STRING, COLUMN_FORMAT, INSERT_METHOD, KEY_BLOCK_SIZE, PACK_KEYS, PERSIST_ONLY, BIT_AND, BIT_OR, BIT_XOR, GROUP_CONCAT, JSON_ARRAYAGG, JSON_OBJECTAGG, STD, STDDEV, STDDEV_POP, STDDEV_SAMP, VAR_POP, VAR_SAMP, AUTO_INCREMENT, AVG_ROW_LENGTH, DELAY_KEY_WRITE, ROTATE, MASTER, BINLOG, ERROR, SCHEDULE, COMPLETION, EVERY, HOST, SOCKET, PORT, SERVER, WRAPPER, OPTIONS, OWNER, RETURNS, CONTAINS, SECURITY, INVOKER, TEMPTABLE, MERGE, UNDEFINED, DATAFILE, FILE_BLOCK_SIZE, EXTENT_SIZE, INITIAL_SIZE, AUTOEXTEND_SIZE, MAX_SIZE, NODEGROUP, WAIT, LOGFILE, UNDOFILE, UNDO_BUFFER_SIZE, REDO_BUFFER_SIZE, HANDLER, PREV, ORGANIZATION, DEFINITION, DESCRIPTION, REFERENCE, FOLLOWS, PRECEDES, IMPORT, CONCURRENT, XML, DUMPFILE, SHARE, CODE, CONTEXT, CLONE, AGGREGATE, INSTALL, UNINSTALL, RESOURCE, EXPIRE, NEVER, HISTORY, OPTIONAL, REUSE, MAX_QUERIES_PER_HOUR, MAX_UPDATES_PER_HOUR, MAX_CONNECTIONS_PER_HOUR, MAX_USER_CONNECTIONS, RETAIN, RANDOM, OLD, ISSUER, SUBJECT, CACHE, GENERAL, SLOW, USER_RESOURCES, EXPORT, RELAY, HOSTS, FLUSH, RESET, RESTART, UNIX_TIMESTAMP, LOWER, UPPER, IDENTIFIER_} 2020-02-21 23:46:21.119 [main] ERROR org.springframework.boot.SpringApplication - Application startup failed  ### Reason analyze (If you can) Similar to this question： https://github.com/apache/incubator-shardingsphere/issues/2632#issue-462558017  ### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.  ### Example codes for reproduce this issue (such as a github link). </body>
		<created>2020-02-21 15:54:55</created>
		<closed>2020-02-27 04:37:57</closed>
	</bug>
	<bug>
		<id>4398</id>
		<title>Wrong stop index for any segment with alias</title>
		<body>The stop index of segment is calculated as itself's stop index, rather than calculated with stop index of alias. To review all segment with alias and correct them is necessary.</body>
		<created>2020-02-21 07:00:34</created>
		<closed>2020-02-24 03:34:39</closed>
	</bug>
	<bug>
		<id>4397</id>
		<title>Join table SQL can not be rewritten correctly</title>
		<body>At present, SQL case below could not work well when using new parser, and the reason is that `ON t_order.order_id` is not managed. ```  &lt;sql-case id="select_inner_join_related_with_name" value="SELECT t_order_item.* FROM t_order JOIN t_order_item ON t_order.order_id = t_order_item.order_id WHERE t_order.order_id = ?" /&gt; ``` Here is the excpetion, ``` org.h2.jdbc.JdbcSQLException: Column "t_order.order_id" not found; SQL statement: SELECT t_order_item_0.* FROM t_order_0 JOIN t_order_item_0 ON t_order.order_id = t_order_item.order_id WHERE t_order_0.order_id = 1000 [42122-196] ```</body>
		<created>2020-02-21 06:57:18</created>
		<closed>2020-02-21 11:44:36</closed>
	</bug>
	<bug>
		<id>4394</id>
		<title>Dulplicated table token</title>
		<body>Table segment is handled twice by rewriter, so dulplicated table token come out.</body>
		<created>2020-02-21 06:42:32</created>
		<closed>2020-02-21 07:28:36</closed>
	</bug>
	<bug>
		<id>4390</id>
		<title>Fix bug and keep consist with old parser engine and new parser engine</title>
		<body>- [x] can skip multiple for insert - [x] lock supported - [x] table segment visitor from projections - [x] table segment visitor from where predicate - [x] Join table SQL can not be rewritten correctly - [x] Move table segment handling from parser to token generator </body>
		<created>2020-02-20 13:57:59</created>
		<closed>2020-02-23 07:48:42</closed>
	</bug>
	<bug>
		<id>4371</id>
		<title>Bad parsing for column name</title>
		<body>## Bug Report  **For English only**, other languages will not accept.  Before report a bug, make sure you have:  - Searched open and closed [GitHub issues](https://github.com/apache/incubator-shardingsphere/issues). - Read documentation: [ShardingSphere Doc](https://shardingsphere.apache.org/document/current/en/overview).  Please pay attention on issues you submitted, because we maybe need more details.  If no response **more than 7 days** and we cannot reproduce it on current information, we will **close it**.  Please answer these questions before submitting your issue. Thanks!  ### Which version of ShardingSphere did you use? 4.0.0  ### Which project did you use? Sharding-JDBC or Sharding-Proxy? Sharding-JDBC  ### Expected behavior When update one record with 4.0.0-RC1，I can update successfully.  ### Actual behavior When upgrade 4.0.0 (same as 4.0.0-RC3), I got error.  &gt; The error occurred while setting parameters    SQL: UPDATE xr_menu  SET parent_id=?, category=?, name=?, path=?, component=?, icon=?, sort=?, hidden=?, always_show=?, breadcrumb=?, no_cache=?, affix=?, remark=?, created_time=?, modified_time=?, version=?  WHERE id=?   AND version=?  AND deleted=0    Cause: java.lang.IllegalStateException at org.apache.ibatis.exceptions.ExceptionFactory.wrapException(ExceptionFactory.java:30) ~[mybatis-3.5.3.jar:3.5.3] at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:199) ~[mybatis-3.5.3.jar:3.5.3] at jdk.internal.reflect.GeneratedMethodAccessor409.invoke(Unknown Source) ~[na:na] at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:45005) ~[na:na] at java.base/java.lang.reflect.Method.invoke(Method.java:566) ~[na:na] at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:426) ~[mybatis-spring-2.0.3.jar:2.0.3] ... 138 common frames omitted Caused by: java.lang.IllegalStateException: null at com.google.common.base.Preconditions.checkState(Preconditions.java:429) ~[guava-20.0.jar:na] at org.apache.shardingsphere.sql.parser.core.extractor.util.ExtractorUtils.getFirstChildNode(ExtractorUtils.java:48) ~[shardingsphere-sql-parser-engine-4.0.0.jar:4.0.0] at org.apache.shardingsphere.sql.parser.core.extractor.impl.common.column.ColumnExtractor.getColumnSegment(ColumnExtractor.java:45) ~[shardingsphere-sql-parser-engine-4.0.0.jar:4.0.0] at org.apache.shardingsphere.sql.parser.core.extractor.impl.common.column.ColumnExtractor.extract(ColumnExtractor.java:41) ~[shardingsphere-sql-parser-engine-4.0.0.jar:4.0.0] at org.apache.shardingsphere.sql.parser.core.extractor.impl.common.column.ColumnsExtractor.extract(ColumnsExtractor.java:44) ~[shardingsphere-sql-parser-engine-4.0.0.jar:4.0.0] at org.apache.shardingsphere.sql.parser.core.extractor.SQLSegmentsExtractorEngine.extract(SQLSegmentsExtractorEngine.java:52) ~[shardingsphere-sql-parser-engine-4.0.0.jar:4.0.0] at org.apache.shardingsphere.sql.parser.core.SQLParseKernel.parse(SQLParseKernel.java:59) ~[shardingsphere-sql-parser-engine-4.0.0.jar:4.0.0] at org.apache.shardingsphere.sql.parser.SQLParseEngine.parse0(SQLParseEngine.java:70) ~[shardingsphere-sql-parser-engine-4.0.0.jar:4.0.0] at org.apache.shardingsphere.sql.parser.SQLParseEngine.parse(SQLParseEngine.java:52) ~[shardingsphere-sql-parser-engine-4.0.0.jar:4.0.0] at org.apache.shardingsphere.core.route.router.sharding.ShardingRouter.parse(ShardingRouter.java:86) ~[sharding-core-route-4.0.0.jar:4.0.0] at org.apache.shardingsphere.core.route.PreparedStatementRoutingEngine.route(PreparedStatementRoutingEngine.java:61) ~[sharding-core-route-4.0.0.jar:4.0.0] at org.apache.shardingsphere.core.PreparedQueryShardingEngine.route(PreparedQueryShardingEngine.java:59) ~[sharding-core-entry-4.0.0.jar:4.0.0] at org.apache.shardingsphere.core.BaseShardingEngine.executeRoute(BaseShardingEngine.java:85) ~[sharding-core-entry-4.0.0.jar:4.0.0] at org.apache.shardingsphere.core.BaseShardingEngine.shard(BaseShardingEngine.java:68) ~[sharding-core-entry-4.0.0.jar:4.0.0] at org.apache.shardingsphere.shardingjdbc.jdbc.core.statement.ShardingPreparedStatement.shard(ShardingPreparedStatement.java:249) ~[sharding-jdbc-core-4.0.0.jar:4.0.0] at org.apache.shardingsphere.shardingjdbc.jdbc.core.statement.ShardingPreparedStatement.execute(ShardingPreparedStatement.java:190) ~[sharding-jdbc-core-4.0.0.jar:4.0.0] at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47) ~[mybatis-3.5.3.jar:3.5.3] at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74) ~[mybatis-3.5.3.jar:3.5.3] at jdk.internal.reflect.GeneratedMethodAccessor431.invoke(Unknown Source) ~[na:na] at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:45005) ~[na:na] at java.base/java.lang.reflect.Method.invoke(Method.java:566) ~[na:na] at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63) ~[mybatis-3.5.3.jar:3.5.3] at com.sun.proxy.$Proxy191.update(Unknown Source) ~[na:na] at com.baomidou.mybatisplus.core.executor.MybatisSimpleExecutor.doUpdate(MybatisSimpleExecutor.java:54) ~[mybatis-plus-core-3.3.0.jar:3.3.0] at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117) ~[mybatis-3.5.3.jar:3.5.3] at com.baomidou.mybatisplus.core.executor.MybatisCachingExecutor.update(MybatisCachingExecutor.java:83) ~[mybatis-plus-core-3.3.0.jar:3.3.0] at jdk.internal.reflect.GeneratedMethodAccessor430.invoke(Unknown Source) ~[na:na] at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:45005) ~[na:na] at java.base/java.lang.reflect.Method.invoke(Method.java:566) ~[na:na] at org.apache.ibatis.plugin.Invocation.proceed(Invocation.java:49) ~[mybatis-3.5.3.jar:3.5.3] at com.baomidou.mybatisplus.extension.plugins.OptimisticLockerInterceptor.intercept(OptimisticLockerInterceptor.java:150) ~[mybatis-plus-extension-3.3.0.jar:3.3.0] at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:61) ~[mybatis-3.5.3.jar:3.5.3] at com.sun.proxy.$Proxy190.update(Unknown Source) ~[na:na] at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197) ~[mybatis-3.5.3.jar:3.5.3] ... 142 common frames omitted  ### Reason analyze (If you can) I simplely debug in  https://github.com/apache/incubator-shardingsphere/blob/f81f4f03b1dd4b426adf1f29ffe93f9540ce6fc9/sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/jdbc/core/statement/ShardingPreparedStatement.java#L178 I found sqlRouteResult lost sql parameter. I try to insert record, it still lost all parameter.  ### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.  &gt;shardingRule:   tables:     cgl_monitor:       actualDataNodes: ds0.cgl_monitor$-&gt;{0..6}       tableStrategy:         inline:           shardingColumn: id           algorithmExpression: cgl_monitor$-&gt;{id % 7}  &gt;UPDATE xr_menu  SET parent_id=?, category=?, name=?, path=?, component=?, icon=?, sort=?, hidden=?, always_show=?, breadcrumb=?, no_cache=?, affix=?, remark=?, created_time=?, modified_time=?, version=?  WHERE id=?   AND version=?  AND deleted=0  sharding rule configuration is simplified，because the table (xr_menu) is no need sharding  ### Example codes for reproduce this issue (such as a github link). </body>
		<created>2020-02-19 10:57:29</created>
		<closed>2020-02-27 03:10:13</closed>
	</bug>
	<bug>
		<id>4363</id>
		<title>Bugfix for new Visitor parser</title>
		<body>- [x] Add judgement for sub query used at select items. - [x] Return corrent Segment for boolean value.</body>
		<created>2020-02-19 05:17:56</created>
		<closed>2020-02-19 07:43:31</closed>
	</bug>
	<bug>
		<id>4306</id>
		<title>Why do distributed primary keys need to be retrieved in reverse order in ShardingGeneratedKeyInsertValueParameterRewriter.rewrite</title>
		<body>## Question  **For English only**, other languages will not accept.  Before asking a question, make sure you have:  - Googled your question. - Searched open and closed [GitHub issues](https://github.com/apache/incubator-shardingsphere/issues). - Read documentation: [ShardingSphere Doc](https://shardingsphere.apache.org/document/current/en/overview).  Please pay attention on issues you submitted, because we maybe need more details.  If no response **more than 7 days** and we cannot reproduce it on current information, we will **close it**.  source code class ShardingGeneratedKeyInsertValueParameterRewriter  `public void rewrite(final ParameterBuilder parameterBuilder, final SQLStatementContext sqlStatementContext, final List&lt;Object&gt; parameters) {         Preconditions.checkState(sqlRouteResult.getGeneratedKey().isPresent());         ((GroupedParameterBuilder) parameterBuilder).setDerivedColumnName(sqlRouteResult.getGeneratedKey().get().getColumnName());         **Iterator&lt;Comparable&lt;?&gt;&gt; generatedValues = sqlRouteResult.getGeneratedKey().get().getGeneratedValues().descendingIterator();**         int count = 0;         int parametersCount = 0;         for (List&lt;Object&gt; each : ((InsertSQLStatementContext) sqlStatementContext).getGroupedParameters()) {             parametersCount += ((InsertSQLStatementContext) sqlStatementContext).getInsertValueContexts().get(count).getParametersCount();             Comparable&lt;?&gt; generatedValue = generatedValues.next();             if (!each.isEmpty()) {                 ((GroupedParameterBuilder) parameterBuilder).getParameterBuilders().get(count).addAddedParameters(parametersCount, Lists.&lt;Object&gt;newArrayList(generatedValue));             }             count++;         }     }`       </body>
		<created>2020-02-14 08:26:25</created>
		<closed>2020-09-22 06:27:36</closed>
	</bug>
	<bug>
		<id>4287</id>
		<title>ShardingProxy can't get columnMetadata for PostgreSQL</title>
		<body>## Bug Report  Similar problem with #4182 .  ### Which version of ShardingSphere did you use?  4.0.0 and 5.0.0-RC1-SNAPSHOT  ### Which project did you use? Sharding-JDBC or Sharding-Proxy?  Sharding-Proxy  ### Expected behavior  getColumns interface get right columnMetadata.  ### Actual behavior  #### For 4.0.0 version  Throw exception: ``` line 1:167 no viable alternative at input '(SELECTn.nspname,c.relname,a.attname,a.atttypid,a.attnotnullOR(t.typtype='d'ANDt.typnotnull)ASattnotnull,a.atttypmod,a.attlen,row_number()OVER(' [ERROR] 16:59:15.575 [pool-4-thread-1] o.a.s.s.f.c.CommandExecutorTask - Exception occur:  java.lang.UnsupportedOperationException: Cannot support multiple schemas in one SQL at org.apache.shardingsphere.sql.parser.relation.segment.table.TablesContext.setSchema(TablesContext.java:75) at org.apache.shardingsphere.sql.parser.relation.segment.table.TablesContext.&lt;init&gt;(TablesContext.java:63) at org.apache.shardingsphere.sql.parser.relation.statement.impl.CommonSQLStatementContext.&lt;init&gt;(CommonSQLStatementContext.java:41) at org.apache.shardingsphere.sql.parser.relation.statement.impl.SelectSQLStatementContext.&lt;init&gt;(SelectSQLStatementContext.java:79) at org.apache.shardingsphere.sql.parser.relation.SQLStatementContextFactory.newInstance(SQLStatementContextFactory.java:54) at org.apache.shardingsphere.core.route.router.sharding.ShardingRouter.route(ShardingRouter.java:103) at org.apache.shardingsphere.core.route.PreparedStatementRoutingEngine.route(PreparedStatementRoutingEngine.java:63) at org.apache.shardingsphere.core.PreparedQueryShardingEngine.route(PreparedQueryShardingEngine.java:59) at org.apache.shardingsphere.core.BaseShardingEngine.executeRoute(BaseShardingEngine.java:85) at org.apache.shardingsphere.core.BaseShardingEngine.shard(BaseShardingEngine.java:68) at org.apache.shardingsphere.shardingproxy.backend.communication.jdbc.wrapper.PreparedStatementExecutorWrapper.doShardingRoute(PreparedStatementExecutorWrapper.java:83) at org.apache.shardingsphere.shardingproxy.backend.communication.jdbc.wrapper.PreparedStatementExecutorWrapper.route(PreparedStatementExecutorWrapper.java:69) at org.apache.shardingsphere.shardingproxy.backend.communication.jdbc.JDBCDatabaseCommunicationEngine.execute(JDBCDatabaseCommunicationEngine.java:83) at org.apache.shardingsphere.shardingproxy.frontend.postgresql.command.query.binary.bind.PostgreSQLComBindExecutor.execute(PostgreSQLComBindExecutor.java:81) at org.apache.shardingsphere.shardingproxy.frontend.command.CommandExecutorTask.executeCommand(CommandExecutorTask.java:92) at org.apache.shardingsphere.shardingproxy.frontend.command.CommandExecutorTask.run(CommandExecutorTask.java:72) at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) at java.lang.Thread.run(Thread.java:748) ``` sql.show don't print.  #### For 5.0.0-RC1-SNAPSHOT  can't return right result.  sql.show is  ``` line 1:167 missing ')' at '(' line 1:178 mismatched input 'BY' expecting {')', ','} [INFO ] 16:54:30.806 [pool-4-thread-1] ShardingSphere-SQL - Rule Type: sharding [INFO ] 16:54:30.806 [pool-4-thread-1] ShardingSphere-SQL - Logic SQL: SELECT * FROM (SELECT n.nspname,c.relname,a.attname,a.atttypid,a.attnotnull OR (t.typtype = 'd' AND t.typnotnull) AS attnotnull,a.atttypmod,a.attlen,row_number() OVER (PARTITION BY a.attrelid ORDER BY a.attnum) AS attnum, null as attidentity,pg_catalog.pg_get_expr(def.adbin, def.adrelid) AS adsrc,dsc.description,t.typbasetype,t.typtype  FROM pg_catalog.pg_namespace n  JOIN pg_catalog.pg_class c ON (c.relnamespace = n.oid)  JOIN pg_catalog.pg_attribute a ON (a.attrelid=c.oid)  JOIN pg_catalog.pg_type t ON (a.atttypid = t.oid)  LEFT JOIN pg_catalog.pg_attrdef def ON (a.attrelid=def.adrelid AND a.attnum = def.adnum)  LEFT JOIN pg_catalog.pg_description dsc ON (c.oid=dsc.objoid AND a.attnum = dsc.objsubid)  LEFT JOIN pg_catalog.pg_class dc ON (dc.oid=dsc.classoid AND dc.relname='pg_class')  LEFT JOIN pg_catalog.pg_namespace dn ON (dc.relnamespace=dn.oid AND dn.nspname='pg_catalog')  WHERE c.relkind in ('r','p','v','f','m') and a.attnum &gt; 0 AND NOT a.attisdropped  AND c.relname LIKE E't_order') c WHERE true  AND attname LIKE E'%' ORDER BY nspname,c.relname,attnum  [INFO ] 16:54:30.806 [pool-4-thread-1] ShardingSphere-SQL - SQLStatement: SelectSQLStatementContext(super=CommonSQLStatementContext(sqlStatement=org.apache.shardingsphere.sql.parser.sql.statement.dml.SelectStatement@5c510d54, tablesContext=TablesContext(tables=[], schema=Optional.absent())), projectionsContext=ProjectionsContext(startIndex=7, stopIndex=7, distinctRow=false, projections=[ShorthandProjection(owner=Optional.absent())], columnLabels=[]), groupByContext=org.apache.shardingsphere.sql.parser.relation.segment.select.groupby.GroupByContext@72dd9bf7, orderByContext=org.apache.shardingsphere.sql.parser.relation.segment.select.orderby.OrderByContext@7747736b, paginationContext=org.apache.shardingsphere.sql.parser.relation.segment.select.pagination.PaginationContext@6a8c3439, containsSubquery=false) [INFO ] 16:54:30.806 [pool-4-thread-1] ShardingSphere-SQL - Actual SQL: ds_0 ::: SELECT * FROM (SELECT n.nspname,c.relname,a.attname,a.atttypid,a.attnotnull OR (t.typtype = 'd' AND t.typnotnull) AS attnotnull,a.atttypmod,a.attlen,row_number() OVER (PARTITION BY a.attrelid ORDER BY a.attnum) AS attnum, null as attidentity,pg_catalog.pg_get_expr(def.adbin, def.adrelid) AS adsrc,dsc.description,t.typbasetype,t.typtype  FROM pg_catalog.pg_namespace n  JOIN pg_catalog.pg_class c ON (c.relnamespace = n.oid)  JOIN pg_catalog.pg_attribute a ON (a.attrelid=c.oid)  JOIN pg_catalog.pg_type t ON (a.atttypid = t.oid)  LEFT JOIN pg_catalog.pg_attrdef def ON (a.attrelid=def.adrelid AND a.attnum = def.adnum)  LEFT JOIN pg_catalog.pg_description dsc ON (c.oid=dsc.objoid AND a.attnum = dsc.objsubid)  LEFT JOIN pg_catalog.pg_class dc ON (dc.oid=dsc.classoid AND dc.relname='pg_class')  LEFT JOIN pg_catalog.pg_namespace dn ON (dc.relnamespace=dn.oid AND dn.nspname='pg_catalog')  WHERE c.relkind in ('r','p','v','f','m') and a.attnum &gt; 0 AND NOT a.attisdropped  AND c.relname LIKE E't_order') c WHERE true  AND attname LIKE E'%' ORDER BY nspname,c.relname,attnum   ```  ### Reason analyze (If you can)  It seems that `getColumns` will be translate to SQL  ```sql SELECT * FROM (SELECT n.nspname,c.relname,a.attname,a.atttypid,a.attnotnull OR (t.typtype = 'd' AND t.typnotnull) AS attnotnull,a.atttypmod,a.attlen,row_number() OVER (PARTITION BY a.attrelid ORDER BY a.attnum) AS attnum, null as attidentity,pg_catalog.pg_get_expr(def.adbin, def.adrelid) AS adsrc,dsc.description,t.typbasetype,t.typtype  FROM pg_catalog.pg_namespace n  JOIN pg_catalog.pg_class c ON (c.relnamespace = n.oid)  JOIN pg_catalog.pg_attribute a ON (a.attrelid=c.oid)  JOIN pg_catalog.pg_type t ON (a.atttypid = t.oid)  LEFT JOIN pg_catalog.pg_attrdef def ON (a.attrelid=def.adrelid AND a.attnum = def.adnum)  LEFT JOIN pg_catalog.pg_description dsc ON (c.oid=dsc.objoid AND a.attnum = dsc.objsubid)  LEFT JOIN pg_catalog.pg_class dc ON (dc.oid=dsc.classoid AND dc.relname='pg_class')  LEFT JOIN pg_catalog.pg_namespace dn ON (dc.relnamespace=dn.oid AND dn.nspname='pg_catalog')  WHERE c.relkind in ('r','p','v','f','m') and a.attnum &gt; 0 AND NOT a.attisdropped  AND c.relname LIKE E't_order') c WHERE true  AND attname LIKE E'%' ORDER BY nspname,c.relname,attnum  ```  but ShardingSphere can't support this SQL.  ### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.  configuration: ```yaml schemaName: sharding_db  dataSources:   ds_0:     url: jdbc:postgresql://127.0.0.1:5432/demo_ds_0?serverTimezone=UTC&amp;useSSL=false     username: root     password: 1     connectionTimeoutMilliseconds: 30000     idleTimeoutMilliseconds: 60000     maxLifetimeMilliseconds: 1800000     maxPoolSize: 50   ds_1:     url: jdbc:postgresql://127.0.0.1:5432/demo_ds_1?serverTimezone=UTC&amp;useSSL=false     username: root     password: 1     connectionTimeoutMilliseconds: 30000     idleTimeoutMilliseconds: 60000     maxLifetimeMilliseconds: 1800000     maxPoolSize: 50  shardingRule:   tables:     t_order:       actualDataNodes: ds_${0..1}.t_order_${0..1}       tableStrategy:         inline:           shardingColumn: order_id           algorithmExpression: t_order_${order_id % 2}       keyGenerator:         type: SNOWFLAKE         column: order_id     t_order_item:       actualDataNodes: ds_${0..1}.t_order_item_${0..1}       tableStrategy:         inline:           shardingColumn: order_id           algorithmExpression: t_order_item_${order_id % 2}       keyGenerator:         type: SNOWFLAKE         column: order_item_id   bindingTables:     - t_order,t_order_item   defaultDatabaseStrategy:     inline:       shardingColumn: user_id       algorithmExpression: ds_${user_id % 2}   defaultTableStrategy:     none: ```  ### Example codes for reproduce this issue (such as a github link).  ```java try (Connection connection = DriverManager.getConnection("jdbc:postgresql://localhost:3307/sharding_db", "root", "root"){     DatabaseMetaData metaData = connection.getMetaData();     ResultSet rs = metaData.getColumns("sharding_db", null, "t_order", "%"); } ``` </body>
		<created>2020-02-13 09:10:01</created>
		<closed>2020-06-17 08:38:12</closed>
	</bug>
	<bug>
		<id>4280</id>
		<title>Why the readOnly filed in the ShardingConnection is true.</title>
		<body>## Question When get a shardingConnection , the `readOnly` filed is aways true,however ,the same filed in the pthysical datasource connection is false. Can you explain why in the `AbstractConnectionAdapter` class the readOnly is true </body>
		<created>2020-02-13 05:59:21</created>
		<closed>2020-02-27 10:51:58</closed>
	</bug>
	<bug>
		<id>4276</id>
		<title>No available sharding rule configuration in `logic_db` for orchestration.</title>
		<body>## Question  **I just want to ：** - sharding database with hit -  Dynamic configuration so i use orchestration  ```         &lt;dependency&gt;             &lt;groupId&gt;org.apache.shardingsphere&lt;/groupId&gt;             &lt;artifactId&gt;sharding-jdbc-orchestration-spring-boot-starter&lt;/artifactId&gt;             &lt;version&gt;4.0.0&lt;/version&gt;         &lt;/dependency&gt;          &lt;dependency&gt;             &lt;groupId&gt;org.apache.shardingsphere&lt;/groupId&gt;             &lt;artifactId&gt;sharding-orchestration-reg-zookeeper-curator&lt;/artifactId&gt;             &lt;version&gt;4.0.0&lt;/version&gt;         &lt;/dependency&gt; ``` ``` spring.shardingsphere.datasource.names=db0,db1,db2  spring.shardingsphere.datasource.db0.driver-class-name=com.mysql.jdbc.Driver spring.shardingsphere.datasource.db0.url=jdbc:mysql://127.0.0.1:3306/db0?useUnicode=true&amp;characterEncoding=utf8&amp;serverTimezone=Asia/Shanghai spring.shardingsphere.datasource.db0.username=root spring.shardingsphere.datasource.db0.password=root spring.shardingsphere.datasource.db0.type=com.alibaba.druid.pool.DruidDataSource  spring.shardingsphere.datasource.db1.driver-class-name=com.mysql.jdbc.Driver spring.shardingsphere.datasource.db1.url=jdbc:mysql://127.0.0.1:3306/db1?useUnicode=true&amp;characterEncoding=utf8&amp;serverTimezone=Asia/Shanghai spring.shardingsphere.datasource.db1.username=root spring.shardingsphere.datasource.db1.password=root spring.shardingsphere.datasource.db1.type=com.alibaba.druid.pool.DruidDataSource  spring.shardingsphere.datasource.db2.driver-class-name=com.mysql.jdbc.Driver spring.shardingsphere.datasource.db2.url=jdbc:mysql://127.0.0.1:3306/db2?useUnicode=true&amp;characterEncoding=utf8&amp;serverTimezone=Asia/Shanghai spring.shardingsphere.datasource.db2.username=root spring.shardingsphere.datasource.db2.password=root spring.shardingsphere.datasource.db2.type=com.alibaba.druid.pool.DruidDataSource  # 数据库的hit 策略 spring.shardingsphere.sharding.default-database-strategy.hint.algorithm-class-name=com.springboot.config.DbAlgorithm  spring.shardingsphere.props.sql.show=true spring.shardingsphere.orchestration.name=sharding4 spring.shardingsphere.orchestration.overwrite=true spring.shardingsphere.orchestration.registry.type=zookeeper spring.shardingsphere.orchestration.registry.server-lists=localhost:2181 spring.shardingsphere.orchestration.registry.namespace=sharding-jdbc-user ``` These configurations take effect locally, but when I configure to the configuration center, the program starts incorrectly： ``` Caused by: java.lang.IllegalStateException: No available sharding rule configuration in `logic_db` for orchestration. at com.google.common.base.Preconditions.checkState(Preconditions.java:197) ~[guava-18.0.jar:na] at org.apache.shardingsphere.orchestration.internal.registry.config.service.ConfigurationService.persistShardingRuleConfiguration(ConfigurationService.java:133) ~[sharding-orchestration-core-4.0.0.jar:4.0.0] at org.apache.shardingsphere.orchestration.internal.registry.config.service.ConfigurationService.persistRuleConfiguration(ConfigurationService.java:113) ~[sharding-orchestration-core-4.0.0.jar:4.0.0] at org.apache.shardingsphere.orchestration.internal.registry.config.service.ConfigurationService.persistConfiguration(ConfigurationService.java:79) ~[sharding-orchestration-core-4.0.0.jar:4.0.0] at org.apache.shardingsphere.orchestration.internal.registry.ShardingOrchestrationFacade.init(ShardingOrchestrationFacade.java:77) ~[sharding-orchestration-core-4.0.0.jar:4.0.0] at org.apache.shardingsphere.shardingjdbc.orchestration.internal.datasource.AbstractOrchestrationDataSource.initShardingOrchestrationFacade(AbstractOrchestrationDataSource.java:114) ~[sharding-jdbc-orchestration-4.0.0.jar:4.0.0] at org.apache.shardingsphere.shardingjdbc.orchestration.internal.datasource.OrchestrationShardingDataSource.&lt;init&gt;(OrchestrationShardingDataSource.java:73) ~[sharding-jdbc-orchestration-4.0.0.jar:4.0.0] at org.apache.shardingsphere.shardingjdbc.orchestration.spring.boot.OrchestrationSpringBootConfiguration.shardingDataSourceByLocal(OrchestrationSpringBootConfiguration.java:130) ~[sharding-jdbc-orchestration-spring-boot-starter-4.0.0.jar:4.0.0] at org.apache.shardingsphere.shardingjdbc.orchestration.spring.boot.OrchestrationSpringBootConfiguration$$EnhancerBySpringCGLIB$$f0ac3f5a.CGLIB$shardingDataSourceByLocal$2(&lt;generated&gt;) ~[sharding-jdbc-orchestration-spring-boot-starter-4.0.0.jar:4.0.0] at org.apache.shardingsphere.shardingjdbc.orchestration.spring.boot.OrchestrationSpringBootConfiguration$$EnhancerBySpringCGLIB$$f0ac3f5a$$FastClassBySpringCGLIB$$48fdf05e.invoke(&lt;generated&gt;) ~[sharding-jdbc-orchestration-spring-boot-starter-4.0.0.jar:4.0.0] at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228) ~[spring-core-5.0.11.RELEASE.jar:5.0.11.RELEASE] at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:365) ~[spring-context-5.0.11.RELEASE.jar:5.0.11.RELEASE] at org.apache.shardingsphere.shardingjdbc.orchestration.spring.boot.OrchestrationSpringBootConfiguration$$EnhancerBySpringCGLIB$$f0ac3f5a.shardingDataSourceByLocal(&lt;generated&gt;) ~[sharding-jdbc-orchestration-spring-boot-starter-4.0.0.jar:4.0.0] at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_191] at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_191] at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191] at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191] at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154) ~[spring-beans-5.0.11.RELEASE.jar:5.0.11.RELEASE] ... 70 common frames omitted ``` I tried this configuration again, and it was successful。 ``` # 数据库 spring.shardingsphere.datasource.names=db0,db1  # 对于未配置分片规则的表默认的数据库 spring.shardingsphere.sharding.default-data-source-name=db0  # 数据源配置 spring.shardingsphere.datasource.db0.type=com.alibaba.druid.pool.DruidDataSource spring.shardingsphere.datasource.db0.driver-class-name=com.mysql.jdbc.Driver spring.shardingsphere.datasource.db0.url=jdbc:mysql://127.0.0.1:3306/db0?useUnicode=true&amp;characterEncoding=utf8&amp;serverTimezone=Asia/Shanghai spring.shardingsphere.datasource.db0.username=root spring.shardingsphere.datasource.db0.password=root  spring.shardingsphere.datasource.db1.type=com.alibaba.druid.pool.DruidDataSource spring.shardingsphere.datasource.db1.driver-class-name=com.mysql.jdbc.Driver spring.shardingsphere.datasource.db1.url=jdbc:mysql://127.0.0.1:3306/db1?useUnicode=true&amp;characterEncoding=utf8&amp;serverTimezone=Asia/Shanghai spring.shardingsphere.datasource.db1.username=root spring.shardingsphere.datasource.db1.password=root  # 分表策略 spring.shardingsphere.sharding.tables.goods.actual-data-nodes=db$-&gt;{0..1}.goods_$-&gt;{0..1} spring.shardingsphere.sharding.tables.goods.table-strategy.inline.sharding-column=id spring.shardingsphere.sharding.tables.goods.table-strategy.inline.algorithm-expression=goods_$-&gt;{id % 2} # 分库策略 spring.shardingsphere.sharding.default-database-strategy.hint.algorithm-class-name=com.springboot.config.DbAlgorithm  spring.shardingsphere.props.sql.show=true spring.shardingsphere.orchestration.name=sharding spring.shardingsphere.orchestration.overwrite=true spring.shardingsphere.orchestration.registry.type=zookeeper spring.shardingsphere.orchestration.registry.server-lists=localhost:2181 spring.shardingsphere.orchestration.registry.namespace=sharding-jdbc-user ``` The difference between the above two configurations is that the second configuration adds the table sharding strategy  Anyone can tell me what to do！  </body>
		<created>2020-02-13 02:33:37</created>
		<closed>2020-02-19 23:39:55</closed>
	</bug>
	<bug>
		<id>4270</id>
		<title>CuratorZookeeperInstance can't read server.yaml orchestration props config. </title>
		<body>## Bug Report  **For English only**, other languages will not accept.  Before report a bug, make sure you have:  - Searched open and closed [GitHub issues](https://github.com/apache/incubator-shardingsphere/issues). - Read documentation: [ShardingSphere Doc](https://shardingsphere.apache.org/document/current/en/overview).  Please pay attention on issues you submitted, because we maybe need more details.  If no response **more than 7 days** and we cannot reproduce it on current information, we will **close it**.  Please answer these questions before submitting your issue. Thanks!  ### Which version of ShardingSphere did you use?  ### Which project did you use? Sharding-JDBC or Sharding-Proxy? Sharding-JDBC &amp; Sharding-Proxy ### Expected behavior can read props config and make the props effectively. ### Actual behavior can't read props config. ### Reason analyze (If you can) JDK Properties#getProperty method can't read other type data without String. ### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.  ### Example codes for reproduce this issue (such as a github link). </body>
		<created>2020-02-12 12:58:55</created>
		<closed>2020-02-16 05:39:22</closed>
	</bug>
	<bug>
		<id>4255</id>
		<title>use CAPI in stmt mode ,mysql_stmt_prepare and mysql_stmt_execute return incorrect response</title>
		<body>## Bug Report ### Which version of ShardingSphere did you use? 4.0.0 ### Which project did you use? Sharding-JDBC or Sharding-Proxy?  apache-shardingsphere-incubating-4.0.0-sharding-proxy-bin  ### Expected behavior ### Actual behavior  two questions :  Question 1: use CAPI in stmt mode, mysql_stmt_prepare get incorrect response according to mysql protocol, packages of column definition information is lost   Question 2: Also use CAPI in stmt mode, mysql_stmt_bind_result return error, msg is "Using unsupported buffer type: 15  (parameter: 1)"  ### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.  sharding rule configuration: ``` schemaName: sbtest # dataSources:   ds_0:     url: jdbc:mysql://127.0.0.1:8905/sbtest?serverTimezone=UTC&amp;useSSL=false     username: test     password: test     connectionTimeoutMilliseconds: 30000     idleTimeoutMilliseconds: 60000     maxLifetimeMilliseconds: 1800000     maxPoolSize: 50   ds_1:     url: jdbc:mysql://127.0.0.1:8906/sbtest?serverTimezone=UTC&amp;useSSL=false     username: test     password: test     connectionTimeoutMilliseconds: 30000     idleTimeoutMilliseconds: 60000     maxLifetimeMilliseconds: 1800000     maxPoolSize: 50 shardingRule:   tables:     sbtest1:       actualDataNodes: ds_${0..1}.customer       keyGenerator:         type: SNOWFLAKE         column: id     sbtest2:       actualDataNodes: ds_${0..1}.order_line       keyGenerator:         type: SNOWFLAKE         column: id   bindingTables:     - sbtest1,sbtest2   defaultDatabaseStrategy:     inline:       shardingColumn: id       algorithmExpression: ds_${id % 2}   defaultTableStrategy:     none: ```  create table:   ``` CREATE TABLE `customer` (   `aid` bigint(20) unsigned NOT NULL AUTO_INCREMENT,   `c_id` int(11) NOT NULL,   `c_d_id` tinyint(4) NOT NULL,   `c_w_id` smallint(6) NOT NULL,   `c_first` varchar(16) NOT NULL,   `c_middle` char(2) NOT NULL,   `c_last` varchar(16) NOT NULL,   `c_street_1` varchar(20) NOT NULL,   `c_street_2` varchar(20) NOT NULL,   `c_city` varchar(20) NOT NULL,   `c_state` char(2) NOT NULL,   `c_zip` char(9) NOT NULL,   `c_phone` char(16) NOT NULL,   `c_since` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,   `c_credit` char(2) NOT NULL,   `c_credit_lim` bigint(20) NOT NULL,   `c_discount` decimal(4,2) NOT NULL,   `c_balance` decimal(12,2) NOT NULL,   `c_ytd_payment` decimal(12,2) NOT NULL,   `c_payment_cnt` smallint(6) NOT NULL,   `c_delivery_cnt` smallint(6) NOT NULL,   `c_data` text NOT NULL,   PRIMARY KEY (`aid`),   UNIQUE KEY `c_w_id` (`c_w_id`,`c_d_id`,`c_id`),   KEY `idx_customer` (`c_w_id`,`c_d_id`,`c_last`,`c_first`) ) ENGINE=InnoDB AUTO_INCREMENT=432069856137838593 DEFAULT CHARSET=utf8mb4 ```  execute sql:  ``` SELECT c_last  FROM customer WHERE c_w_id = ?; ```  Pseudocode:  ``` #define SELECT_QUERY "SELECT c_last  FROM customer WHERE c_w_id = ?" stmt = mysql_stmt_init(mysql); mysql_stmt_prepare(stmt, SELECT_QUERY, strlen(SELECT_QUERY)); // questions 1 mysql_stmt_bind_param(stmt, param); mysql_stmt_execute(stmt); column.buffer_type = MYSQL_TYPE_STRING; column.buffer = c_last; column.buffer_length = sizeof(c_last); column.length= &amp;length; column.error= &amp;error; column.is_null= &amp;is_null; mysql_stmt_bind_result(stmt, column);  // question 2: return error  ```    ### Reason analyze (If you can)  Question 1:  I use some way to capture packets, here is the response packages return from two sources: connect to sharding proxy and connect to mysql   mysql_stmt_prepare response from  sharding proxy:  ``` Source [127.0.0.1:54992] -&gt; Dest [127.0.0.1:5059]:   [0000]  4b 00 00 00 16 53 45 4c 45 43 54 20 63 5f 6c 61  K....SELECT c_la   [0016]  73 74 20 20 46 52 4f 4d 20 63 75 73 74 6f 6d 65  st  FROM custome   [0032]  72 20 57 48 45 52 45 20 63 5f 77 5f 69 64 20 3d  r WHERE c_w_id =   [0048]  20 3f 20 20 41 4e 44 20 63 5f 64 5f 69 64 20 3d   ?  AND c_d_id =   [0064]  20 3f 20 41 4e 44 20 63 5f 69 64 20 3d 20 3f      ? AND c_id = ?   2020-02-10 10:38:24.386146 - Read &gt;&gt;&gt; Source [127.0.0.1:54992] &lt;- Dest [127.0.0.1:5059]:   [0000]  0c 00 00 01 00 34 00 00 00 00 00 03 00 00 00 00  .....4..........   2020-02-10 10:38:24.386185 - Read &gt;&gt;&gt; Source [127.0.0.1:54992] &lt;- Dest [127.0.0.1:5059]:   [0000]  22 00 00 02 03 64 65 66 04 74 70 63 63 08 63 75  "....def.tpcc.cu   [0016]  73 74 6f 6d 65 72 00 00 00 0c 21 00 64 00 00 00  stomer....!.d...   [0032]  0f 00 00 00 00 00                                ......   2020-02-10 10:38:24.386193 - Read &gt;&gt;&gt; Source [127.0.0.1:54992] &lt;- Dest [127.0.0.1:5059]:   [0000]  22 00 00 03 03 64 65 66 04 74 70 63 63 08 63 75  "....def.tpcc.cu   [0016]  73 74 6f 6d 65 72 00 00 00 0c 21 00 64 00 00 00  stomer....!.d...   [0032]  0f 00 00 00 00 00                                ......   2020-02-10 10:38:24.386201 - Read &gt;&gt;&gt; Source [127.0.0.1:54992] &lt;- Dest [127.0.0.1:5059]:   [0000]  22 00 00 04 03 64 65 66 04 74 70 63 63 08 63 75  "....def.tpcc.cu   [0016]  73 74 6f 6d 65 72 00 00 00 0c 21 00 64 00 00 00  stomer....!.d...   [0032]  0f 00 00 00 00 00                                ......                                 2020-02-10 10:38:24.386207 - Read &gt;&gt;&gt; Source [127.0.0.1:54992] &lt;- Dest [127.0.0.1:5059]:   [0000]  05 00 00 05 fe 00 00 02 00                       .........    ```  mysql_stmt_prepare response from  mysql:  ``` Source [127.0.0.1:54992] -&gt; Dest [127.0.0.1:5059]:   [0000]  4b 00 00 00 16 53 45 4c 45 43 54 20 63 5f 6c 61  K....SELECT c_la   [0016]  73 74 20 20 46 52 4f 4d 20 63 75 73 74 6f 6d 65  st  FROM custome   [0032]  72 20 57 48 45 52 45 20 63 5f 77 5f 69 64 20 3d  r WHERE c_w_id =   [0048]  20 3f 20 20 41 4e 44 20 63 5f 64 5f 69 64 20 3d   ?  AND c_d_id =   [0064]  20 3f 20 41 4e 44 20 63 5f 69 64 20 3d 20 3f      ? AND c_id = ?    2020-02-10 11:11:34.349068 - Read &gt;&gt;&gt; Source [127.0.0.1:36438] &lt;- Dest [127.0.0.1:8901]:   [0000]  0c 00 00 01 00 01 00 00 00 01 00 03 00 00 00 00  ................   2020-02-10 11:11:34.349116 - Read &gt;&gt;&gt; Source [127.0.0.1:36438] &lt;- Dest [127.0.0.1:8901]:   [0000]  17 00 00 02 03 64 65 66 00 00 00 01 3f 00 0c 3f  .....def....?..?   [0016]  00 00 00 00 00 fd 80 00 00 00 00                 ...........   2020-02-10 11:11:34.349132 - Read &gt;&gt;&gt; Source [127.0.0.1:36438] &lt;- Dest [127.0.0.1:8901]:   [0000]  17 00 00 03 03 64 65 66 00 00 00 01 3f 00 0c 3f  .....def....?..?   [0016]  00 00 00 00 00 fd 80 00 00 00 00                 ...........   2020-02-10 11:11:34.349147 - Read &gt;&gt;&gt; Source [127.0.0.1:36438] &lt;- Dest [127.0.0.1:8901]:   [0000]  17 00 00 04 03 64 65 66 00 00 00 01 3f 00 0c 3f  .....def....?..?   [0016]  00 00 00 00 00 fd 80 00 00 00 00                 ...........   2020-02-10 11:11:34.349159 - Read &gt;&gt;&gt; Source [127.0.0.1:36438] &lt;- Dest [127.0.0.1:8901]:   [0000]  05 00 00 05 fe 00 00 02 00                       .........  2020-02-10 11:11:34.349167 - Read &gt;&gt;&gt;**（this piece of packages lost in sharding proxy）** Source [127.0.0.1:36438] &lt;- Dest [127.0.0.1:8901]:   [0000]  36 00 00 06 03 64 65 66 04 74 70 63 63 08 63 75  6....def.tpcc.cu   [0016]  73 74 6f 6d 65 72 08 63 75 73 74 6f 6d 65 72 06  stomer.customer.   [0032]  63 5f 6c 61 73 74 06 63 5f 6c 61 73 74 0c 08 00  c_last.c_last...   [0048]  10 00 00 00 fd 01 50 00 00 00                    ......P...   2020-02-10 11:11:34.349198 - Read &gt;&gt;&gt; Source [127.0.0.1:36438] &lt;- Dest [127.0.0.1:8901]:   [0000]  05 00 00 07 fe 00 00 02 00                       .........  ```  according to above packages ,  sharding proxy lost column defination information, just return  param definitions  .   Question 2:  column type in response from sharding proxy to mysql_stmt_execute is incorrect,  column 'c_last' is char,it should return `MYSQL_TYPE_VAR_STRING` （0xfd）, but returns `MYSQL_TYPE_VARCHAR`(0x0f). column type will stored in struct `MYSQL_STMT` (fields.type) ,then call mysql_stmt_bind_result will get error ,because MYSQL_TYPE_VARCHAR is not allowed to bind result.  the same to column type varchar.  captured packages:  mysql_stmt_execute response from sharding proxy:  ``` 2020-02-10 10:38:24.393292 - Read &gt;&gt;&gt; Source [127.0.0.1:54992] &lt;- Dest [127.0.0.1:5059]:   [0000]  01 00 00 01 01                                   .....   2020-02-10 10:38:24.393333 - Read &gt;&gt;&gt; Source [127.0.0.1:54992] &lt;- Dest [127.0.0.1:5059]:   [0000]  36 00 00 02 03 64 65 66 04 74 70 63 63 08 63 75  6....def.tpcc.cu   [0016]  73 74 6f 6d 65 72 08 63 75 73 74 6f 6d 65 72 06  stomer.customer.   [0032]  63 5f 6c 61 73 74 06 63 5f 6c 61 73 74 0c 21 00  c_last.c_last.!.   [0048]  10 00 00 00  **{0f: this byte is column type}** 00  00 00 00 00                    ..........   2020-02-10 10:38:24.393344 - Read &gt;&gt;&gt; Source [127.0.0.1:54992] &lt;- Dest [127.0.0.1:5059]:   [0000]  05 00 00 03 fe 00 00 02 00                       .........   2020-02-10 10:38:24.393349 - Read &gt;&gt;&gt; Source [127.0.0.1:54992] &lt;- Dest [127.0.0.1:5059]:   [0000]  0c 00 00 04 00 00 09 42 41 52 42 41 52 42 41 52  .......BARBARBAR   2020-02-10 10:38:24.393353 - Read &gt;&gt;&gt; Source [127.0.0.1:54992] &lt;- Dest [127.0.0.1:5059]:   [0000]  05 00 00 05 fe 00 00 02 00                       .........  ```  mysql_stmt_execute response from mysql:  ``` 2020-02-10 11:11:34.351845 - Read &gt;&gt;&gt; Source [127.0.0.1:36438] &lt;- Dest [127.0.0.1:8901]:   [0000]  01 00 00 01 01                                   .....   2020-02-10 11:11:34.351876 - Read &gt;&gt;&gt; Source [127.0.0.1:36438] &lt;- Dest [127.0.0.1:8901]:   [0000]  36 00 00 02 03 64 65 66 04 74 70 63 63 08 63 75  6....def.tpcc.cu   [0016]  73 74 6f 6d 65 72 08 63 75 73 74 6f 6d 65 72 06  stomer.customer.   [0032]  63 5f 6c 61 73 74 06 63 5f 6c 61 73 74 0c 08 00  c_last.c_last...   [0048]  10 00 00 00 **{fd : this byte is column type}** 01 50 00 00 00                    ......P...   2020-02-10 11:11:34.351890 - Read &gt;&gt;&gt; Source [127.0.0.1:36438] &lt;- Dest [127.0.0.1:8901]:   [0000]  05 00 00 03 fe 00 00 02 00                       .........   2020-02-10 11:11:34.351896 - Read &gt;&gt;&gt; Source [127.0.0.1:36438] &lt;- Dest [127.0.0.1:8901]:   [0000]  0c 00 00 04 00 00 09 42 41 52 42 41 52 42 41 52  .......BARBARBAR   2020-02-10 11:11:34.351901 - Read &gt;&gt;&gt; Source [127.0.0.1:36438] &lt;- Dest [127.0.0.1:8901]:   [0000]  05 00 00 05 fe 00 00 02 00                       ......... ```   ### Example codes for reproduce this issue (such as a github link). </body>
		<created>2020-02-12 05:26:15</created>
		<closed>2020-02-18 15:09:55</closed>
	</bug>
	<bug>
		<id>4230</id>
		<title>Has error when use orchestration and mybatis-plus with springboot</title>
		<body>## Bug Report Project: Shading-JDBC Verson:4.0.0  I works well on local sharding config with mybatis-plus, and I think it will works well too on orchestration config with registry, but it won't. The error message is "Failed to configure a DataSource: 'url' attribute is not specified and no embedded datasource could be configured."  The springboot version is 2.2.4 and I use mybatis-plus and sharding-jdbc-orchestration-spring-boot-starter          &lt;dependency&gt;             &lt;groupId&gt;com.baomidou&lt;/groupId&gt;             &lt;artifactId&gt;mybatis-plus-boot-starter&lt;/artifactId&gt;             &lt;version&gt;3.3.1&lt;/version&gt;         &lt;/dependency&gt;         &lt;dependency&gt;             &lt;groupId&gt;org.apache.shardingsphere&lt;/groupId&gt;             &lt;artifactId&gt;sharding-transaction-xa-core&lt;/artifactId&gt;             &lt;version&gt;4.0.0&lt;/version&gt;         &lt;/dependency&gt;         &lt;dependency&gt;             &lt;groupId&gt;org.apache.shardingsphere&lt;/groupId&gt;             &lt;artifactId&gt;sharding-jdbc-orchestration-spring-boot-starter&lt;/artifactId&gt;             &lt;version&gt;4.0.0&lt;/version&gt;         &lt;/dependency&gt;         &lt;dependency&gt;             &lt;groupId&gt;org.apache.shardingsphere&lt;/groupId&gt;             &lt;artifactId&gt;sharding-orchestration-reg-zookeeper-curator&lt;/artifactId&gt;             &lt;version&gt;4.0.0&lt;/version&gt;         &lt;/dependency&gt;  I have read the source code and compared org.apache.shardingsphere.shardingjdbc.spring.boot.SpringBootConfiguration.java(works well) with org.apache.shardingsphere.shardingjdbc.orchestration.spring.boot.OrchestrationSpringBootConfiguration.java (can not work, throws error when startup project)  I found @AutoConfigureBefore(DataSourceAutoConfiguration.class) is missing in  OrchestrationSpringBootConfiguration.java, I think this is the real reason, I try to add @AutoConfigureBefore in OrchestrationSpringBootConfiguration.java and repackage and replace the local sharding-jdbc-orchestration-spring-boot-starter.jar with the jar I modified, then the error  has gone. Because mybatis-plus include spring-boot-starter-jdbc.jar, I think its DataSourceAutoConfiguration loads config before  OrchestrationSpringBootConfiguration so the error happened.</body>
		<created>2020-02-11 02:11:41</created>
		<closed>2020-03-04 16:01:56</closed>
	</bug>
	<bug>
		<id>4188</id>
		<title>sharding +encrypt rewrite for SQL `select with `OR` and `AND`` cause StringIndexOutOfBoundsException. </title>
		<body>### Which version of ShardingSphere did you use? 4.0.0 ### Which project did you use? Sharding-JDBC or Sharding-Proxy? Sharding-JDBC ### Expected behavior select SQL execute successfully. ### Actual behavior ``` java.lang.StringIndexOutOfBoundsException: String index out of range: -3  at java.lang.String.substring(String.java:1955) at org.apache.shardingsphere.underlying.rewrite.sql.impl.AbstractSQLBuilder.getConjunctionText(AbstractSQLBuilder.java:58) at org.apache.shardingsphere.underlying.rewrite.sql.impl.AbstractSQLBuilder.toSQL(AbstractSQLBuilder.java:50) at org.apache.shardingsphere.underlying.rewrite.engine.impl.DefaultSQLRewriteEngine.rewrite(DefaultSQLRewriteEngine.java:34) at org.apache.shardingsphere.shardingjdbc.jdbc.core.statement.EncryptPreparedStatement.getSQLUnit(EncryptPreparedStatement.java:181) at org.apache.shardingsphere.shardingjdbc.jdbc.core.statement.EncryptPreparedStatement.executeQuery(EncryptPreparedStatement.java:120) ``` ### Reason analyze (If you can) The SQL parse result like this : ![image](https://user-images.githubusercontent.com/8772975/73934497-899d0300-4919-11ea-839b-e076ed32c321.png) It cause the rewrited SQL tokens are repeated, and the rewrite indexs are error. ![image](https://user-images.githubusercontent.com/8772975/73934533-9c173c80-4919-11ea-962e-6590a318d097.png)  ### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc. `SELECT * FROM t_query_encrypt WHERE pwd = ? and (id = ? or id =?)` ### Example codes for reproduce this issue (such as a github link). </body>
		<created>2020-02-06 11:50:15</created>
		<closed>2020-02-07 13:02:59</closed>
	</bug>
	<bug>
		<id>4187</id>
		<title>Bad SQLRewriteResult when using encryptRule.</title>
		<body>SQL: SELECT * FROM t_query_encrypt WHERE pwd = ? and (id = ? or id =?) Error log: java.lang.StringIndexOutOfBoundsException: String index out of range: -3  When run the above sql in `EncryptPreparedStatementTest`, you will get this exception.</body>
		<created>2020-02-06 11:48:12</created>
		<closed>2020-02-07 09:25:20</closed>
	</bug>
	<bug>
		<id>4182</id>
		<title>Sharding-proxy 4.0.0 can query columns for table</title>
		<body>## Bug Report  When query columns of sharding table by `getColumns` method of JDBC, sharding-proxy will throw exception: ``` Exception in thread "main" java.sql.SQLException: 2Unknown exception: [Cannot find table rule and default data source with logic table: '%'] at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1086) at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4237) at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4169) at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2617) at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2778) at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2828) at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2777) at com.mysql.jdbc.StatementImpl.executeQuery(StatementImpl.java:1651) at com.mysql.jdbc.DatabaseMetaData$2.forEach(DatabaseMetaData.java:2711) at com.mysql.jdbc.DatabaseMetaData$2.forEach(DatabaseMetaData.java:2598) at com.mysql.jdbc.IterateBlock.doForAll(IterateBlock.java:50) at com.mysql.jdbc.DatabaseMetaData.getColumns(DatabaseMetaData.java:2597) at jdbc.JDBCUtil.main(JDBCUtil.java:38) ```  But I used sharding-proxy 4.0.0-RC2, It can work well.  ### Which version of ShardingSphere did you use?  4.0.0  ### Which project did you use? Sharding-JDBC or Sharding-Proxy?  Sharding-Proxy  ### Expected behavior  get Column info from Result Set.  ### Actual behavior  Throw exception.  ### Reason analyze (If you can)  the method `getColumn` should map to SQL `SHOW FULL COLUMNS ...`  So I think there are some error in `parse` or `extractor`.  ### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.  ```yaml schemaName: sharding_db  dataSources:  ds_0:    url: jdbc:mysql://127.0.0.1:3306/demo_ds_0?serverTimezone=UTC&amp;useSSL=false    username: root    password:    connectionTimeoutMilliseconds: 30000    idleTimeoutMilliseconds: 60000    maxLifetimeMilliseconds: 1800000    maxPoolSize: 50  ds_1:    url: jdbc:mysql://127.0.0.1:3306/demo_ds_1?serverTimezone=UTC&amp;useSSL=false    username: root    password:    connectionTimeoutMilliseconds: 30000    idleTimeoutMilliseconds: 60000    maxLifetimeMilliseconds: 1800000    maxPoolSize: 50  shardingRule:  tables:    t_order:      actualDataNodes: ds_${0..1}.t_order_${0..1}      tableStrategy:        inline:          shardingColumn: order_id          algorithmExpression: t_order_${order_id % 2}      keyGenerator:        type: SNOWFLAKE        column: order_id    t_order_item:      actualDataNodes: ds_${0..1}.t_order_item_${0..1}      tableStrategy:        inline:          shardingColumn: order_id          algorithmExpression: t_order_item_${order_id % 2}      keyGenerator:        type: SNOWFLAKE        column: order_item_id  bindingTables:    - t_order,t_order_item  defaultDatabaseStrategy:    inline:      shardingColumn: user_id      algorithmExpression: ds_${user_id % 2}  defaultTableStrategy:    none:  ```  ### Example codes for reproduce this issue (such as a github link).  ```java         Class.forName("com.mysql.jdbc.Driver");         try (Connection connection = DriverManager.getConnection("jdbc:mysql://localhost:3307/sharding_db", "root", "root");             Statement statement = connection.createStatement()) {             ResultSet rs = metaData.getColumns("sharding_db", null, "t_order", "%");        } ``` </body>
		<created>2020-02-06 07:41:14</created>
		<closed>2020-02-07 15:47:33</closed>
	</bug>
	<bug>
		<id>4051</id>
		<title>Actual SQL Missing parameters</title>
		<body>## Bug Report I found a similar problem #3136  but this sql still not working: insert into t_quiz_order_ref (ORDER_ID, QUESTION_ID, OP_ORDER_ID, START_TIME, EXPIRE_TIME) values (?, ?, ? ,date_add(now(), interval ? second) ,date_add(now(), interval ? second))   ShardingSphere version: 4.0.0 my project use: sharding-jdbc-spring-boot-starter  stack trace log: 2020-01-20 17:12:29.990[]|GEYI.local|debug|http-nio-8888-exec-1|com.airing.dubbo.mapper.QuizMapper.insertOrderRef|==&gt;  Preparing: INSERT INTO t_quiz_order_ref (ORDER_ID, QUESTION_ID, OP_ORDER_ID, START_TIME, EXPIRE_TIME) VALUES (?, ?, ? ,date_add(now(), interval ? second) ,date_add(now(), interval ? second))  2020-01-20 17:12:30.016[]|GEYI.local|debug|http-nio-8888-exec-1|com.airing.dubbo.mapper.QuizMapper.insertOrderRef|==&gt; Parameters: 61d25387afc34c74a3e4859f4a5cbf19(String), 1(Integer), fc8e54473c4c407fa5e52dec7802ec57(String), 3(Integer), 15(Integer) 2020-01-20 17:12:30.757[]|GEYI.local|info |http-nio-8888-exec-1|ShardingSphere-SQL|Rule Type: sharding 2020-01-20 17:12:30.758[]|GEYI.local|info |http-nio-8888-exec-1|ShardingSphere-SQL|Logic SQL:  ``` INSERT INTO t_quiz_order_ref         (ORDER_ID, QUESTION_ID, OP_ORDER_ID, START_TIME, EXPIRE_TIME)         VALUES                        (?, ?, ?             ,date_add(now(), interval ? second)             ,date_add(now(), interval ? second)) ``` 2020-01-20 17:12:30.758[]|GEYI.local|info |http-nio-8888-exec-1|ShardingSphere-SQL|SQLStatement: InsertSQLStatementContext(super=CommonSQLStatementContext(sqlStatement=org.apache.shardingsphere.core.parse.sql.statement.dml.InsertStatement@6f7ba39b, tablesContext=TablesContext(tables=[Table(name=t_quiz_order_ref, alias=Optional.absent())], schema=Optional.absent())), columnNames=[order_id, question_id, op_order_id, start_time, expire_time], insertValueContexts=[InsertValueContext(parametersCount=3, valueExpressions=[ParameterMarkerExpressionSegment(startIndex=138, stopIndex=138, parameterMarkerIndex=0), ParameterMarkerExpressionSegment(startIndex=141, stopIndex=141, parameterMarkerIndex=1), ParameterMarkerExpressionSegment(startIndex=144, stopIndex=144, parameterMarkerIndex=2), CommonExpressionSegment(startIndex=159, stopIndex=192, text=date_add(now(),interval?second)), CommonExpressionSegment(startIndex=207, stopIndex=240, text=date_add(now(),interval?second))], parameters=[61d25387afc34c74a3e4859f4a5cbf19, 1, fc8e54473c4c407fa5e52dec7802ec57])]) 2020-01-20 17:12:30.759[]|GEYI.local|info |http-nio-8888-exec-1|ShardingSphere-SQL|Actual SQL: ds0 ::: ``` INSERT INTO t_quiz_order_ref1         (ORDER_ID, QUESTION_ID, OP_ORDER_ID, START_TIME, EXPIRE_TIME)         VALUES                        (?, ?, ?, date_add(now(),interval?second), date_add(now(),interval?second)) ``` ::: [61d25387afc34c74a3e4859f4a5cbf19, 1, fc8e54473c4c407fa5e52dec7802ec57]</body>
		<created>2020-01-20 09:39:52</created>
		<closed>2020-01-20 15:09:57</closed>
	</bug>
	<bug>
		<id>4047</id>
		<title>ConfigurationLogger can't log none sharding strategy</title>
		<body>## Bug Report  ### Which version of ShardingSphere did you use?  4.0.0  ### Which project did you use? Sharding-JDBC or Sharding-Proxy?  Sharding-JDBC  ### Expected behavior  ConfigurationLogger log none sharding strategy when it be set.  ### Actual behavior  ConfigurationLogger can't log none sharding strategy correctly.  ### Reason analyze (If you can)  There are two reason cause this problem: 1. `ShardingStrategyConfigurationYamlSwapper` do not handle `NoneShardingStrategyConfiguration` 2. `DefaultYamlRepresenter` ignore all null, empty collection and empty map.  ### Example codes for reproduce this issue (such as a github link).  ```java     private static void printToYaml() {         YamlShardingRuleConfiguration yamlShardingRuleConfiguration = getYamlShardingRuleConfiguration();         ConfigurationLogger.log(yamlShardingRuleConfiguration.getClass().getName(), YamlEngine.marshal(yamlShardingRuleConfiguration));     }      private static YamlShardingRuleConfiguration getYamlShardingRuleConfiguration() {         YamlShardingRuleConfiguration result = new YamlShardingRuleConfiguration();         YamlTableRuleConfiguration yamlTableRuleConfiguration = getYamlTableRuleConfiguration();         result.getTables().put("t_order", yamlTableRuleConfiguration);         return result;     }      private static YamlTableRuleConfiguration getYamlTableRuleConfiguration() {         YamlTableRuleConfiguration result = new YamlTableRuleConfiguration();         YamlShardingStrategyConfiguration database = new YamlShardingStrategyConfiguration();         YamlInlineShardingStrategyConfiguration inline = new YamlInlineShardingStrategyConfiguration();         inline.setAlgorithmExpression("ds_${user_id % 2}");         inline.setShardingColumn("user_id");         database.setInline(inline);         result.setDatabaseStrategy(database);         YamlShardingStrategyConfiguration table = new YamlShardingStrategyConfiguration();         table.setNone(new YamlNoneShardingStrategyConfiguration());         result.setTableStrategy(table);         return result;     } ``` </body>
		<created>2020-01-20 08:30:05</created>
		<closed>2020-01-20 12:24:52</closed>
	</bug>
	<bug>
		<id>4044</id>
		<title>ResultSet miss the plain column because of using contains to get the logicColumn when using data mask（sharding+encrypt）</title>
		<body>### Which version of ShardingSphere did you use? 4.0.0 ### Which project did you use? Sharding-JDBC or Sharding-Proxy? sharding-jdbc ### Expected behavior return the all of table's columns. ### Actual behavior resultSet miss the logic column because of using contains to get the logicColumn ### Reason analyze (If you can) sharding+encrypt， the same issue with https://github.com/apache/incubator-shardingsphere/issues/3750.    It should fix the class ShardingResultSetMetaData.java like EncryptResultSetMetaData.  ### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.  ### Example codes for reproduce this issue (such as a github link). </body>
		<created>2020-01-20 06:54:18</created>
		<closed>2020-01-20 09:44:38</closed>
	</bug>
	<bug>
		<id>4043</id>
		<title>Raw-yaml configuration configure none sharding strategy failed</title>
		<body>## Bug Report  Similar problem to #4005 .  ### Which version of ShardingSphere did you use?  4.0.0-RC1 ～ 4.0.0  ### Which project did you use? Sharding-JDBC or Sharding-Proxy?  Sharding-JDBC  ### Expected behavior  ```yaml shardingRule:   tables:     t_order:       actualDataNodes: ds_${0..1}.t_order       databaseStrategy:         inline:           shardingColumn: user_id           algorithmExpression: ds_${user_id % 2}       tableStrategy:           none:  ```  tableStrategy in shardingRule of t_order is `NoneStrategy`.  ### Actual behavior  tableStrategy in shardingRule of t_order is null.  ### Reason analyze (If you can)  `Yaml.loadAs()` parse value of `none` as `Tag.NULL`. So set the tableStrategy as null.  ### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.  configuration ```yaml dataSources:   ds_0: !!com.zaxxer.hikari.HikariDataSource     driverClassName: com.mysql.jdbc.Driver     jdbcUrl: jdbc:mysql://localhost:3306/demo_ds_0?serverTimezone=UTC&amp;useSSL=false&amp;useUnicode=true&amp;characterEncoding=UTF-8     username: root     password:   ds_1: !!com.zaxxer.hikari.HikariDataSource     driverClassName: com.mysql.jdbc.Driver     jdbcUrl: jdbc:mysql://localhost:3306/demo_ds_1?serverTimezone=UTC&amp;useSSL=false&amp;useUnicode=true&amp;characterEncoding=UTF-8     username: root     password:  shardingRule:   tables:     t_order:       actualDataNodes: ds_${0..1}.t_order       databaseStrategy:         inline:           shardingColumn: user_id           algorithmExpression: ds_${user_id % 2}       tableStrategy:         none:   ```  </body>
		<created>2020-01-20 06:52:53</created>
		<closed>2020-02-03 09:55:26</closed>
	</bug>
	<bug>
		<id>4037</id>
		<title>sharding+encrypt when sql contains "\n"，sql rewrite error  for mybatis. （in）</title>
		<body>### Which version of ShardingSphere did you use? 4.0.0  and dev branch ### Which project did you use? Sharding-JDBC or Sharding-Proxy? sharding-jdbc ### Expected behavior the `(`  are not in pairs , there are 5 `(`  in the actual SQL. ### Actual behavior ``` ShardingSphere-SQL                       : Logic SQL: select     *     from user_info      WHERE (  mobile in                   (                     ?                   ) ) ``` ``` ShardingSphere-SQL                       : Actual SQL: ds1 ::: select     *     from user_info_1      WHERE (  mobile in                   (                    (?) ) ::: [15xxxxxxxxxx] ``` ### Reason analyze (If you can)  ### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.  ### Example codes for reproduce this issue (such as a github link). </body>
		<created>2020-01-20 05:34:10</created>
		<closed>2020-02-14 04:47:39</closed>
	</bug>
	<bug>
		<id>4005</id>
		<title>sharding-jdbc-spring-boot-starter can't support NoneShardingStrategy</title>
		<body>## Bug Report  Related issue #3977 .  ### Which version of ShardingSphere did you use?  4.0.0-RC1 ~ 4.0.0  ### Which project did you use? Sharding-JDBC or Sharding-Proxy?  Sharding-JDBC  ### Expected behavior  ```yaml spring:   shardingsphere:     sharding:       tables:         t_order:           actualDataNodes: ds$-&gt;{0..1}.t_order           databaseStrategy:             inline:               shardingColumn: order_id               algorithmExpression: ds$-&gt;{order_id % 2}           tableStrategy:             none:  ``` tableStrategy in shardingRule of `t_order` is NoneStrategy.  ### Actual behavior  tableStrategy is null.  ### Reason analyze (If you can)  spring-boot will process yaml parse result to properties. So if the value is empty map or collection, it will ignore this propertries. And then when instance bean, spring boot find there are no properties for `tableStrategy`, and skip instance `tableStrategy`.  detail see `YamlProcessor` in `org.springframework.beans.factory.config` And `ValueObjectBinder` in ` org.springframework.boot.context.properties.bind`.  ### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.  configuration: ```yaml spring:   shardingsphere:     datasource:       names: ds0, ds1       ds0:         type: org.apache.commons.dbcp2.BasicDataSource         driverClassName: com.mysql.jdbc.Driver         url: jdbc:mysql://localhost:3306/demo_ds_0?useUnicode=true         username: root         password:       ds1:         type: org.apache.commons.dbcp2.BasicDataSource         driverClassName: com.mysql.jdbc.Driver         url: jdbc:mysql://localhost:3306/demo_ds_1?useUnicode=true         username: root         password:     sharding:       tables:         t_order:           actualDataNodes: ds$-&gt;{0..1}.t_order           databaseStrategy:             inline:               shardingColumn: order_id               algorithmExpression: ds$-&gt;{order_id % 2}           tableStrategy:             none: {}     props:       sql:         show: true ```  ### Example codes for reproduce this issue (such as a github link). </body>
		<created>2020-01-17 06:53:48</created>
		<closed>2020-01-20 03:06:01</closed>
	</bug>
	<bug>
		<id>3992</id>
		<title>Sharding-JDBC lost insertValuesContexts when insert</title>
		<body>## Bug Report  **For English only**, other languages will not accept.  Before report a bug, make sure you have:  - Searched open and closed [GitHub issues](https://github.com/apache/incubator-shardingsphere/issues). - Read documentation: [ShardingSphere Doc](https://shardingsphere.apache.org/document/current/en/overview).  Please pay attention on issues you submitted, because we maybe need more details.  If no response **more than 7 days** and we cannot reproduce it on current information, we will **close it**.  Please answer these questions before submitting your issue. Thanks!  ### Which version of ShardingSphere did you use?  4.0.0  ### Which project did you use? Sharding-JDBC or Sharding-Proxy? Sharding-JDBC  ### Expected behavior insert table success  ### Actual behavior sql not use route, products all table sql and mybatis exception  ### Reason analyze (If you can) I guess columns is too many(89) couse sql analysis exception when structuring sqlStatementContext，shardingConditions is empty because there is no insertValueContexts in sqlStatementContext,so not use table rule and setting parameters exception     debug: ![image](https://user-images.githubusercontent.com/31645800/72487070-c3617900-3847-11ea-8b3c-500c9cf86f11.png)  exception:  ``` org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.PersistenceException:  ### Error updating database.  Cause: java.lang.IllegalStateException ### The error may involve defaultParameterMap ### The error occurred while setting parameters ### SQL: INSERT INTO orders ( id, orderId, outOrderId, orderType, state, createDate, paymentDate, issueDate, orderpayment,         paymentStatus, splitTag, orderCategory, mergeDate, isSysMerge, mergeNumber, liangpinTag,         logisticStatus, logisticVendorType, logisticVendor, paidAmount, isUrgent, username, baseStore,         paymentType, shad_phoneNumber, shad_mobilephone, shad_countrySubentity, shad_cityName, shad_name,         shad_addressLine1, shad_addressLine2, shippingFirstName, shad_postalZone, shad_latitudeValue,         shad_longitudeValue, shad_countryIso3166Alpha2Code, shad_countryName, discount, carriageFee,         serviceCharge, providerCode, version, source, buyerMemo, sellerMemo, invoicecontact_channelCode,         invoicecontact_electronicMail, invoicecontact_name, invoicecontact_note, invoicecontact_telefax,         invoicecontact_telephone, invoicecontact_value, invoicecontact_buyer, invoicecontact_taxpayernum,         needinvoice, createdstate, prioritylevelcode, shippingtaxcategory, financeMemo, modifiedtime,         reissuereason, storememo, scheduledshippingdate, oriorderid, lastname, reissuetype, contact_channelCode,         contact_electronicMail, contact_name, contact_note, contact_telefax, contact_telephone, contact_value,         parentorder, invoicetype, emailid, shippingandhandling, invoicecontent, shippinglastname,         customerlocale, currencycode, employeeid, shippingmethod, firstname, creationtime, invoicetitle,         expressSend, typecode, tenant, alipay_norderData', 'singlerderData', 'singlerderData', 'single', ? )          ,              ( ?, ?, ?, ?, ?, ?, ?,             ?, ?, ?, ?, ?,             ?, ?, ?, ?, ?,             ?, ?, ?, ?, ?,             ?, ?, ?, ?, ?,             ?, ?, ?, ?, ?,             ?, ?, ?, ?,             ?, ?, ?, ?, ?,             1, ?, ?, ?, ?, ?,             ?, ?, ?, ?,             ?, ?, ?, ?,             ?, ?, ?, ?, ?,             ?, ?, ?, ?, ?,             ?, ?, ?, ?,             ?, ?, ?, ?, ?,             ?, ?, ?, ?, ?,             ?, ?, ?, ?, ?,             ?, ?, ?, 'OrderData', 'singlerderData', 'singlerderData', 'singlerderData', 'singlerderData', 'single', ? )          ,              ( ?, ?, ?, ?, ?, ?, ?,             ?, ?, ?, ?, ?,             ?, ?, ?, ?, ?,             ?, ?, ?, ?, ?,             ?, ?, ?, ?, ?,             ?, ?, ?, ?, ?,             ?, ?, ?, ?,             ?, ?, ?, ?, ?,             1, ?, ?, ?, ?, ?,             ?, ?, ?, ?,             ?, ?, ?, ?,             ?, ?, ?, ?, ?,             ?, ?, ?, ?, ?,             ?, ?, ?, ?,             ?, ?, ?, ?, ?,             ?, ?, ?, ?, ?,             ?, ?, ?, ?, ?,             ?, ?, ?, 'OrderData', 'singlerderData', 'singlerderData', 'singlerderData', 'singlerderData', 'singlerderData', 'singlerderData', 'singlerderData', 'singlerderData', 'singlerderData', 'single', ? )          ,              ( ?, ?, ?, ?, ?, ?, ?,             ?, ?, ?, ?, ?,             ?, ?, ?, ?, ?,             ?, ?, ?, ?, ?,             ?, ?, ?, ?, ?,             ?, ?, ?, ?, ?,             ?, ?, ?, ?,             ?, ?, ?, ?, ?,             1, ?, ?, ?, ?, ?,             ?, ?, ?, ?,             ?, ?, ?, ?,             ?, ?, ?, ?, ?,             ?, ?, ?, ?, ?,             ?, ?, ?, ?,             ?, ?, ?, ?, ?,             ?, ?, ?, ?, ?,             ?, ?, ?, ?, ?,             ?, ?, ?, 'OrderData', 'singlerderData', 'single', ? ) ### Cause: java.lang.IllegalStateException at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:77) at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446) at com.sun.proxy.$Proxy45.insert(Unknown Source) at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:278) at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:58) at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59) at com.sun.proxy.$Proxy65.batchSaveOrder(Unknown Source) at com.lppz.oms.create.service.CreateOrderServiceImpl.createOrdersToDB(CreateOrderServiceImpl.java:94) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343) at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198) at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:295) at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98) at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) at com.sun.proxy.$Proxy71.createOrdersToDB(Unknown Source) at com.lppz.oms.create.service.OrderCreateServiceImpl.createBatchOrder(OrderCreateServiceImpl.java:109) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343) at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198) at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:295) at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98) at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) at com.sun.proxy.$Proxy74.createBatchOrder(Unknown Source) at com.lppz.oms.create.consumer.CreateConsumer$1.doBiz(CreateConsumer.java:92) at com.lppz.oms.create.helper.MQServiceImpl$1.doBiz(MQServiceImpl.java:222) at com.lppz.oms.create.helper.MQServiceImpl$1.doBiz(MQServiceImpl.java:209) at com.lppz.util.rocketmq.listener.BaseLppzMessageListener.doHandleMsgList(BaseLppzMessageListener.java:158) at com.lppz.util.rocketmq.listener.lock.BaseLppzLockMessageListener.doHandleMsgList(BaseLppzLockMessageListener.java:70) at com.lppz.util.rocketmq.disruptor.BaseLockRocketHandler.handle(BaseLockRocketHandler.java:15) at com.lppz.util.rocketmq.disruptor.BaseLockRocketMqEventHandler.onEvent(BaseLockRocketMqEventHandler.java:27) at com.lppz.util.rocketmq.disruptor.BaseLockRocketMqEventHandler.onEvent(BaseLockRocketMqEventHandler.java:7) at com.lmax.disruptor.BatchEventProcessor.run(BatchEventProcessor.java:137) at java.lang.Thread.run(Thread.java:748) ```  ### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc. ```  shardingRule:     defaultDataSourceName: ds0     defaultDatabaseStrategy:       standard: {preciseAlgorithmClassName: com.lppz.ss.algorithm.HashPreciseShardingAlgorithm,                  shardingColumn: id}     defaultTableStrategy:       standard: {preciseAlgorithmClassName: com.lppz.ss.algorithm.HashPreciseShardingAlgorithm,                  shardingColumn: id}     defaultKeyGenerator:       column: id       props: {}       type: SNOWFLAKE     tables:       busi_promotion_info:         actualDataNodes: ds${0..1}.busi_promotion_info_${0..1}       orders:         actualDataNodes: ds${0..1}.orders_${0..1}       orderlines:         actualDataNodes: ds${0..1}.orderlines_${0..1}       order_sharding:         actualDataNodes: ds${0..1}.order_sharding_${0..1}       outorderidgenerator:         actualDataNodes: ds${0..1}.outorderidgenerator_${0..1}       paymentinfo:         actualDataNodes: ds${0..1}.paymentinfo_${0..1}       shipments:         actualDataNodes: ds${0..1}.shipments_${0..1} ``` ### Example codes for reproduce this issue (such as a github link). </body>
		<created>2020-01-16 02:29:52</created>
		<closed>2020-01-21 10:42:55</closed>
	</bug>
	<bug>
		<id>3990</id>
		<title>Parse engine rejects CURRENT_USER in 4.0.0</title>
		<body>## Bug Report  ### Which version of ShardingSphere did you use?  4.0.0  ### Which project did you use? Sharding-JDBC or Sharding-Proxy?  Sharding-JDBC  ### Expected behavior  Update from 3.1.0 to 4.0.0 would not change the parser rules.  ### Actual behavior  Integration tests fail because flyway can't perform a migration when executing `select CURRENT_USER`  ### Reason analyze (If you can)  ``` org.postgresql:postgresql:42.2.6 org.flywaydb:flyway-core:5.2.4 org.testcontainers:postgresql:1.12.0  sql = "SELECT CURRENT_USER" parseEngine = {SQLParseEngine@4966}   databaseTypeName = "PostgreSQL"  line 1:7 mismatched input 'CURRENT_USER' expecting {'U', 'u', '!', '~', '+', '-', '*', '(', '{', '?', INSERT, UPDATE, DELETE, ALTER, DROP, TRUNCATE, SCHEMA, REVOKE, ADD, SET, INDEX, KEY, FUNCTION, TRIGGER, PROCEDURE, DISTINCT, CASE, CAST, IF, NOT, NULL, TRUE, FALSE, EXISTS, ALL, BEGIN, COMMIT, ROLLBACK, SAVEPOINT, BOOLEAN, CHAR, INTERVAL, TIME, TIMESTAMP, LOCALTIME, LOCALTIMESTAMP, YEAR, MONTH, DAY, HOUR, MINUTE, SECOND, MAX, MIN, SUM, COUNT, AVG, CURRENT, ENABLE, DISABLE, INSTANCE, PRESERVE, DEFINER, SQL, CASCADED, LOCAL, CLOSE, OPEN, NEXT, NAME, NAMES, INTEGER, REAL, DECIMAL, TYPE, ADMIN, BINARY, ESCAPE, EXCLUDE, PARTITION, ROW, UNKNOWN, ALWAYS, CASCADE, GENERATED, ISOLATION, LEVEL, OPTION, PRIVILEGES, READ, ROLE, ROWS, START, TRANSACTION, ACTION, CACHE, CHARACTERISTICS, CLUSTER, COMMENTS, CONSTRAINTS, CURRENT_TIMESTAMP, CYCLE, DATA, DATABASE, DEFAULTS, DEFERRED, DEPENDS, DOMAIN, EXCLUDING, EXECUTE, EXTENDED, EXTENSION, EXTERNAL, EXTRACT, FILTER, FIRST, FOLLOWING, FORCE, GLOBAL, IDENTITY, IMMEDIATE, INCLUDING, INCREMENT, INDEXES, INHERIT, INHERITS, INCLUDE, LANGUAGE, LARGE, LAST, LOGGED, MAIN, MATCH, MAXVALUE, MINVALUE, NOTHING, NULLS, OBJECT, OIDS, OVER, OWNED, OWNER, PARTIAL, PLAIN, PRECEDING, RANGE, RENAME, REPLICA, RESET, RESTART, RESTRICT, ROUTINE, RULE, SECURITY, SEQUENCE, SESSION, SHOW, SIMPLE, STATISTICS, STORAGE, TABLESPACE, TEMP, TEMPORARY, UNBOUNDED, UNLOGGED, USAGE, VALID, VALIDATE, WITHIN, WITHOUT, ZONE, OF, GROUPS, RECURSIVE, IDENTIFIER_, STRING_, NUMBER_, HEX_DIGIT_, BIT_NUM_}  java.lang.IllegalStateException at com.google.common.base.Preconditions.checkState(Preconditions.java:429) at org.apache.shardingsphere.sql.parser.core.extractor.util.ExtractorUtils.getFirstChildNode(ExtractorUtils.java:48) at org.apache.shardingsphere.sql.parser.core.extractor.impl.dml.select.SelectItemsExtractor.extract(SelectItemsExtractor.java:54) at org.apache.shardingsphere.sql.parser.core.extractor.SQLSegmentsExtractorEngine.extract(SQLSegmentsExtractorEngine.java:47) at org.apache.shardingsphere.sql.parser.core.SQLParseKernel.parse(SQLParseKernel.java:59) at org.apache.shardingsphere.sql.parser.SQLParseEngine.parse0(SQLParseEngine.java:70) at org.apache.shardingsphere.sql.parser.SQLParseEngine.parse(SQLParseEngine.java:52) at org.apache.shardingsphere.core.route.router.masterslave.MasterSlaveRouter.route(MasterSlaveRouter.java:56) at org.apache.shardingsphere.shardingjdbc.jdbc.core.statement.MasterSlavePreparedStatement.&lt;init&gt;(MasterSlavePreparedStatement.java:68) at org.apache.shardingsphere.shardingjdbc.jdbc.core.statement.MasterSlavePreparedStatement.&lt;init&gt;(MasterSlavePreparedStatement.java:53) at org.apache.shardingsphere.shardingjdbc.jdbc.core.connection.MasterSlaveConnection.prepareStatement(MasterSlaveConnection.java:76) at org.flywaydb.core.internal.jdbc.JdbcTemplate.prepareStatement(JdbcTemplate.java:333) at org.flywaydb.core.internal.jdbc.JdbcTemplate.queryForString(JdbcTemplate.java:190) at org.flywaydb.core.internal.database.postgresql.PostgreSQLConnection.&lt;init&gt;(PostgreSQLConnection.java:48) at org.flywaydb.core.internal.database.postgresql.PostgreSQLDatabase.getConnection(PostgreSQLDatabase.java:56) at org.flywaydb.core.internal.database.postgresql.PostgreSQLDatabase.getConnection(PostgreSQLDatabase.java:31) at org.flywaydb.core.internal.database.base.Database.getMainConnection(Database.java:366) at org.flywaydb.core.Flyway.prepareSchemas(Flyway.java:1773) at org.flywaydb.core.Flyway.execute(Flyway.java:1678) at org.flywaydb.core.Flyway.migrate(Flyway.java:1356) ```  ### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.  Should be reproducible if the mentioned statement is executed with the PostgreSQL SQLParseEngine   ### Example codes for reproduce this issue (such as a github link). </body>
		<created>2020-01-15 12:52:53</created>
		<closed>2020-01-20 11:34:23</closed>
	</bug>
	<bug>
		<id>3964</id>
		<title>Hintmanager  databaseShardingOnly problem</title>
		<body>## Bug Report  Please answer these questions before submitting your issue. Thanks! ### Which version of ShardingSphere did you use? **4.0.0** ### Which project did you use? Sharding-JDBC or Sharding-Proxy? Sharding-JDBC ### Expected behavior i can hint databases with sth outside my database, for example , i want to get the hint key from my http header ,then route by the key. ### Actual behavior it route to all my datasources ### Reason analyze (If you can) maybe the hintmanager has wrong code   this code is in hintmanager,i use **setDatabaseShardingValue** method to config my shardkey, here, it put an empty key for the sharding values.   ***     public void setDatabaseShardingValue(final Comparable&lt;?&gt; value) {         databaseShardingValues.clear();         tableShardingValues.clear();         databaseShardingValues.put("", value);         databaseShardingOnly = true;     } *** but when i followed it in the **getDatabaseShardingValues** method, it gets the shardingValues by the logicTable, so I can not get the shardingvalues which i configed.  ***     public static Collection&lt;Comparable&lt;?&gt;&gt; getDatabaseShardingValues(final String logicTable) {         return null == HINT_MANAGER_HOLDER.get() ? Collections.&lt;Comparable&lt;?&gt;&gt;emptyList() : HINT_MANAGER_HOLDER.get().databaseShardingValues.get(logicTable);     } ***  then  in the **routeDataSources** method of  **StandardRoutingEngine**   ***     private Collection&lt;String&gt; routeDataSources(final TableRule tableRule, final List&lt;RouteValue&gt; databaseShardingValues) {         if (databaseShardingValues.isEmpty()) {             return tableRule.getActualDatasourceNames();         }         Collection&lt;String&gt; result = new LinkedHashSet&lt;&gt;(shardingRule.getDatabaseShardingStrategy(tableRule).doSharding(tableRule.getActualDatasourceNames(), databaseShardingValues));         Preconditions.checkState(!result.isEmpty(), "no database route info");         Preconditions.checkState(tableRule.getActualDatasourceNames().containsAll(result),                  "Some routed data sources do not belong to configured data sources. routed data sources: `%s`, configured data sources: `%s`", result, tableRule.getActualDatasourceNames());         return result;     } *** the databaseShardingValues is empty , so it returns all the actualDatasources, not only the datasource i conifged.  could you please provide an example for this situation?</body>
		<created>2020-01-14 05:33:35</created>
		<closed>2020-02-12 10:28:02</closed>
	</bug>
	<bug>
		<id>3962</id>
		<title>Oracle insert statement encrypt bug of version 4.0.0</title>
		<body>Oracle insert statement exists encrypt bug for 4.0.0 release version. Because of oracle insert statement definition modification, the columnNames couldn't be extracted. The bug will be fixed in 4.0.1 version. `InsertValuesExtractor` could extract column segements by `InsertValuesClause` rule, but oracle insert statement `insertValuesClause` lack of `columnNames` , which cause encrypt problem for extracting column segements.</body>
		<created>2020-01-14 00:24:56</created>
		<closed>2020-01-14 14:37:54</closed>
	</bug>
	<bug>
		<id>3954</id>
		<title>Is sharding-jdbc supported postgresql array?Can I customize and implents it? </title>
		<body>## Question  **For English only**, other languages will not accept.  Before asking a question, make sure you have:  - Googled your question. - Searched open and closed [GitHub issues](https://github.com/apache/incubator-shardingsphere/issues). - Read documentation: [ShardingSphere Doc](https://shardingsphere.apache.org/document/current/en/overview).  Please pay attention on issues you submitted, because we maybe need more details.  If no response **more than 7 days** and we cannot reproduce it on current information, we will **close it**. </body>
		<created>2020-01-13 08:17:51</created>
		<closed>2020-07-30 09:13:48</closed>
	</bug>
	<bug>
		<id>3949</id>
		<title>sharding with encrypt can not work well.</title>
		<body>Please answer these questions before submitting your issue. Thanks!  ### Which version of ShardingSphere did you use? 4.0.0-RC4-SNAPSHOT ### Which project did you use? Sharding-JDBC or Sharding-Proxy? sharding-jdbc ### Expected behavior sharding with encrypt can work well ### Actual behavior only sharding , encrypt can not work well ### Reason analyze (If you can)  ### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.  ### Example codes for reproduce this issue (such as a github link). </body>
		<created>2020-01-13 05:08:39</created>
		<closed>2020-01-13 06:27:46</closed>
	</bug>
	<bug>
		<id>3932</id>
		<title>Spring-Boot + sharding-proxy   decodes  failed  after  encoding  by  AES</title>
		<body>## Bug Report  **For English only**, other languages will not accept.  Before report a bug, make sure you have:  - Searched open and closed [GitHub issues](https://github.com/apache/incubator-shardingsphere/issues). - Read documentation: [ShardingSphere Doc](https://shardingsphere.apache.org/document/current/en/overview).  Please pay attention on issues you submitted, because we maybe need more details.  If no response **more than 7 days** and we cannot reproduce it on current information, we will **close it**.  Please answer these questions before submitting your issue. Thanks!  ### Which version of ShardingSphere did you use? 4.0.0-RC4-SNAPSHOT ### Which project did you use? Sharding-JDBC or Sharding-Proxy? sharding-proxy ### Expected behavior Executing `select * from t_user`, it will return  the result. ### Actual behavior When i execute `select * from t_user` it  can not return  the result. ### Reason analyze (If you can)  ### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.  ### Example codes for reproduce this issue (such as a github link). The proxy yaml config: ``` schemaName: encrypt_db  dataSource:   url: jdbc:mysql://localhost:3306/demo_ds?serverTimezone=UTC&amp;useSSL=false   username: root   password:   connectionTimeoutMilliseconds: 30000   idleTimeoutMilliseconds: 60000   maxLifetimeMilliseconds: 1800000   maxPoolSize: 50  encryptRule:   encryptors:     encryptor_aes:       type: aes       props:         aes.key.value: 123456abc     encryptor_md5:       type: md5   tables:     t_user:       columns:         user_name:           plainColumn: user_name           cipherColumn: user_name_cipher           encryptor: encryptor_aes                    pwd:           plainColumn: pwd_plain           cipherColumn: pwd_cipher           encryptor: encryptor_md5  ``` the exception:   ``` javax.crypto.IllegalBlockSizeException: Input length must be multiple of 16 when decrypting with padded cipher         at com.sun.crypto.provider.CipherCore.prepareInputBuffer(CipherCore.java:1005)         at com.sun.crypto.provider.CipherCore.doFinal(CipherCore.java:848)         at com.sun.crypto.provider.AESCipher.engineDoFinal(AESCipher.java:446)         at javax.crypto.Cipher.doFinal(Cipher.java:2164)         at org.apache.shardingsphere.encrypt.strategy.impl.AESEncryptor.decrypt(AESEncryptor.java:73)         at org.apache.shardingsphere.shardingproxy.backend.communication.jdbc.JDBCDatabaseCommunicationEngine.getQueryData(JDBCDatabaseCommunicationEngine.java:216)         at org.apache.shardingsphere.shardingproxy.frontend.mysql.command.query.binary.execute.MySQLComStmtExecuteExecutor.getQueryData(MySQLComStmtExecuteExecutor.java:118)         at org.apache.shardingsphere.shardingproxy.frontend.mysql.command.query.binary.execute.MySQLComStmtExecuteExecutor.getQueryData(MySQLComStmtExecuteExecutor.java:57)         at org.apache.shardingsphere.shardingproxy.frontend.mysql.command.MySQLCommandExecuteEngine.writeQueryData(MySQLCommandExecuteEngine.java:83)         at org.apache.shardingsphere.shardingproxy.frontend.command.CommandExecutorTask.executeCommand(CommandExecutorTask.java:100)         at org.apache.shardingsphere.shardingproxy.frontend.command.CommandExecutorTask.run(CommandExecutorTask.java:72)         at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)         at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)         at java.lang.Thread.run(Thread.java:748) ```</body>
		<created>2020-01-11 02:14:08</created>
		<closed>2020-03-14 04:11:58</closed>
	</bug>
	<bug>
		<id>3905</id>
		<title>proxy select table throw NullPointerException!</title>
		<body>use:sharding-proxy-4.0.0  stdout.log : ` [ERROR] 20:47:17.372 [ShardingSphere-Command-13] o.a.s.s.f.c.CommandExecutorTask - Exception occur:  java.lang.NullPointerException: null         at org.apache.shardingsphere.shardingproxy.backend.response.query.QueryHeader.&lt;init&gt;(QueryHeader.java:67)         at org.apache.shardingsphere.shardingproxy.backend.communication.jdbc.execute.callback.ProxySQLExecuteCallback.getQueryHeaders(ProxySQLExecuteCallback.java:89)         at org.apache.shardingsphere.shardingproxy.backend.communication.jdbc.execute.callback.ProxySQLExecuteCallback.executeSQL(ProxySQLExecuteCallback.java:81)         at org.apache.shardingsphere.shardingproxy.backend.communication.jdbc.execute.callback.ProxySQLExecuteCallback.executeSQL(ProxySQLExecuteCallback.java:73)         at org.apache.shardingsphere.shardingproxy.backend.communication.jdbc.execute.callback.ProxySQLExecuteCallback.executeSQL(ProxySQLExecuteCallback.java:45)         at org.apache.shardingsphere.core.execute.sql.execute.SQLExecuteCallback.execute0(SQLExecuteCallback.java:79)         at org.apache.shardingsphere.core.execute.sql.execute.SQLExecuteCallback.execute(SQLExecuteCallback.java:61)         at org.apache.shardingsphere.core.execute.engine.ShardingExecuteEngine.syncGroupExecute(ShardingExecuteEngine.java:125)         at org.apache.shardingsphere.core.execute.engine.ShardingExecuteEngine.parallelExecute(ShardingExecuteEngine.java:102)         at org.apache.shardingsphere.core.execute.engine.ShardingExecuteEngine.groupExecute(ShardingExecuteEngine.java:83)         at org.apache.shardingsphere.core.execute.sql.execute.SQLExecuteTemplate.executeGroup(SQLExecuteTemplate.java:73)         at org.apache.shardingsphere.shardingproxy.backend.communication.jdbc.execute.JDBCExecuteEngine.execute(JDBCExecuteEngine.java:82)         at org.apache.shardingsphere.shardingproxy.backend.communication.jdbc.JDBCDatabaseCommunicationEngine.execute(JDBCDatabaseCommunicationEngine.java:99)         at org.apache.shardingsphere.shardingproxy.backend.communication.jdbc.JDBCDatabaseCommunicationEngine.execute(JDBCDatabaseCommunicationEngine.java:84)         at org.apache.shardingsphere.shardingproxy.backend.text.query.QueryBackendHandler.execute(QueryBackendHandler.java:54)         at org.apache.shardingsphere.shardingproxy.frontend.mysql.command.query.text.query.MySQLComQueryPacketExecutor.execute(MySQLComQueryPacketExecutor.java:73)         at org.apache.shardingsphere.shardingproxy.frontend.command.CommandExecutorTask.executeCommand(CommandExecutorTask.java:92)         at org.apache.shardingsphere.shardingproxy.frontend.command.CommandExecutorTask.run(CommandExecutorTask.java:72)         at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)         at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)         at java.lang.Thread.run(Thread.java:748)  `  proxy log: ` 2020-01-08 20:55:48,644 [ShardingSphere-Command-2] INFO [ShardingSphere-SQL] Rule Type: sharding 2020-01-08 20:55:48,645 [ShardingSphere-Command-2] INFO [ShardingSphere-SQL] Logic SQL: /* ApplicationName=DBeaver 6.1.2 - Main */ SET SQL_SELECT_LIMIT=200 2020-01-08 20:55:48,645 [ShardingSphere-Command-2] INFO [ShardingSphere-SQL] SQLStatement: CommonSQLStatementContext(sqlStatement=org.apache.shardingsphere.sql.parser.sql.statement.dal.SetStatement@178abd17, tablesContext=TablesContext(tables=[], schema=Optional.absent())) 2020-01-08 20:55:48,645 [ShardingSphere-Command-2] INFO [ShardingSphere-SQL] Actual SQL: r_game_sub0 ::: /* ApplicationName=DBeaver 6.1.2 - Main */ SET SQL_SELECT_LIMIT=200 2020-01-08 20:55:48,658 [ShardingSphere-Command-14] INFO [ShardingSphere-SQL] Rule Type: sharding 2020-01-08 20:55:48,659 [ShardingSphere-Command-14] INFO [ShardingSphere-SQL] Logic SQL: /* ApplicationName=DBeaver 6.1.2 - Main */ SELECT * from t_role_assets limit 10 2020-01-08 20:55:48,659 [ShardingSphere-Command-14] INFO [ShardingSphere-SQL] SQLStatement: SelectSQLStatementContext(super=CommonSQLStatementContext(sqlStatement=org.apache.shardingsphere.sql.parser.sql.statement.dml.SelectStatement@77adb0a6, tablesContext=TablesContext(tables=[Table(name=t_role_assets, alias=Optional.absent())], schema=Optional.absent())), projectionsContext=ProjectionsContext(startIndex=50, stopIndex=50, distinctRow=false, projections=[ShorthandProjection(owner=Optional.absent())], columnLabels=[roleid, dailydiamondconsume, dailyrecharge, diamond, energy, gold, guildgold, roleexp, totaldiamond, totaldropgold, totalexp, totalrecharge, vippoint, energytime]), groupByContext=org.apache.shardingsphere.sql.parser.relation.segment.select.groupby.GroupByContext@5dd9ba9a, orderByContext=org.apache.shardingsphere.sql.parser.relation.segment.select.orderby.OrderByContext@8965fd, paginationContext=org.apache.shardingsphere.sql.parser.relation.segment.select.pagination.PaginationContext@1934d0c0, containsSubquery=false) 2020-01-08 20:55:48,659 [ShardingSphere-Command-14] INFO [ShardingSphere-SQL] Actual SQL: r_game_sub0 ::: /* ApplicationName=DBeaver 6.1.2 - Main */ SELECT * from t_role_assets0 limit 10 2020-01-08 20:55:48,659 [ShardingSphere-Command-14] INFO [ShardingSphere-SQL] Actual SQL: r_game_sub0 ::: /* ApplicationName=DBeaver 6.1.2 - Main */ SELECT * from t_role_assets1 limit 10 2020-01-08 20:55:48,659 [ShardingSphere-Command-14] INFO [ShardingSphere-SQL] Actual SQL: r_game_sub0 ::: /* ApplicationName=DBeaver 6.1.2 - Main */ SELECT * from t_role_assets2 limit 10 2020-01-08 20:55:48,659 [ShardingSphere-Command-14] INFO [ShardingSphere-SQL] Actual SQL: r_game_sub1 ::: /* ApplicationName=DBeaver 6.1.2 - Main */ SELECT * from t_role_assets0 limit 10 2020-01-08 20:55:48,659 [ShardingSphere-Command-14] INFO [ShardingSphere-SQL] Actual SQL: r_game_sub1 ::: /* ApplicationName=DBeaver 6.1.2 - Main */ SELECT * from t_role_assets1 limit 10 2020-01-08 20:55:48,659 [ShardingSphere-Command-14] INFO [ShardingSphere-SQL] Actual SQL: r_game_sub1 ::: /* ApplicationName=DBeaver 6.1.2 - Main */ SELECT * from t_role_assets2 limit 10 2020-01-08 20:55:48,670 [ShardingSphere-Command-4] INFO [ShardingSphere-SQL] Rule Type: sharding 2020-01-08 20:55:48,670 [ShardingSphere-Command-4] INFO [ShardingSphere-SQL] Logic SQL: /* ApplicationName=DBeaver 6.1.2 - Main */ SET SQL_SELECT_LIMIT=DEFAULT 2020-01-08 20:55:48,670 [ShardingSphere-Command-4] INFO [ShardingSphere-SQL] SQLStatement: CommonSQLStatementContext(sqlStatement=org.apache.shardingsphere.sql.parser.sql.statement.dal.SetStatement@6d0df86d, tablesContext=TablesContext(tables=[], schema=Optional.absent())) 2020-01-08 20:55:48,670 [ShardingSphere-Command-4] INFO [ShardingSphere-SQL] Actual SQL: r_game_sub0 ::: /* ApplicationName=DBeaver 6.1.2 - Main */ SET SQL_SELECT_LIMIT=DEFAULT 2020-01-08 20:55:48,675 [ShardingSphere-Command-5] INFO [ShardingSphere-SQL] Rule Type: sharding 2020-01-08 20:55:48,675 [ShardingSphere-Command-5] INFO [ShardingSphere-SQL] Logic SQL: /* ApplicationName=DBeaver 6.1.2 - Main */ SHOW WARNINGS 2020-01-08 20:55:48,675 [ShardingSphere-Command-5] INFO [ShardingSphere-SQL] SQLStatement: CommonSQLStatementContext(sqlStatement=org.apache.shardingsphere.sql.parser.sql.statement.dal.dialect.mysql.ShowOtherStatement@50305fb5, tablesContext=TablesContext(tables=[], schema=Optional.absent())) 2020-01-08 20:55:48,675 [ShardingSphere-Command-5] INFO [ShardingSphere-SQL] Actual SQL: r_game_sub0 ::: /* ApplicationName=DBeaver 6.1.2 - Main */ SHOW WARNINGS   `  </body>
		<created>2020-01-08 13:02:34</created>
		<closed>2020-01-10 03:53:19</closed>
	</bug>
	<bug>
		<id>3884</id>
		<title>Insert SQL with null value of shardingColumns may be routed to multiple dataNodes.</title>
		<body>## Bug Report  According to the discussion in #3644. the value of shardingColumns should not be `null`. But I found that there are different behavior between literal SQL and parameters SQL.  When I use literal SQL like `INSERT INTO t_order (order_id, user_id, status) VALUES (100, null, 'xxx')`, The SQL will be routed to multiple data nodes.   And if I use parameters SQL like `INSERT INTO t_order (order_id, user_id, status) VALUES (?, ?, ?) paramters=[100, null, 'xxx']`, the SQL will throw sharding column can't be null exception.  So I think it's a bug for literal insert SQL.  ### Which version of ShardingSphere did you use?  4.0.0-RC3  ### Which project did you use? Sharding-JDBC or Sharding-Proxy?  Sharding-JDBC  ### Expected behavior  Throw same exception for literal insert SQL with null value of sharding columns.  ### Actual behavior  Routed to multiple data nodes.  ### Reason analyze (If you can)  The reason is in `InsertClauseShardingConditionEngine.createShardingCondition`.   ExpressionSegment of null value in literal insert SQL is `CommonExpressionSegment`, but the method do not handle `CommonExpressionSegment`. So the null value do not be added to shardingValues and also not throw exception.  When routingEngine get shardingValues, the shardingValues is empty. So SQL be routed to all nodes.   ### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.  shardingConfiguration: ``` spring:   shardingsphere:     datasource:       names: ds0, ds1       ds0:         type: com.zaxxer.hikari.HikariDataSource         driver-class-name: com.mysql.cj.jdbc.Driver         username: root         password: ""         jdbcUrl: jdbc:mysql://localhost:3306/demo_ds_0?useUnicode=true&amp;characterEncoding=UTF-8&amp;allowMultiQueries=true&amp;zeroDateTimeBehavior=convertToNull&amp;useSSL=false&amp;serverTimezone=Asia/Shanghai       ds1:         type: com.zaxxer.hikari.HikariDataSource         driver-class-name: com.mysql.cj.jdbc.Driver         username: root         password: ""         jdbcUrl: jdbc:mysql://localhost:3306/demo_ds_1?useUnicode=true&amp;characterEncoding=UTF-8&amp;allowMultiQueries=true&amp;zeroDateTimeBehavior=convertToNull&amp;useSSL=false&amp;serverTimezone=Asia/Shanghai     sharding:       tables:         t_order:           actual-data-nodes: ds$-&gt;{0..1}.t_order_$-&gt;{0..1}           key-generator:             column: order_id             type: SNOWFLAKE           database-strategy:             inline:               sharding-column: user_id               algorithm-expression: ds$-&gt;{user_id % 2}           table-strategy:             inline:               sharding-column: order_id               algorithm-expression: t_order_$-&gt;{order_id % 2}     props:       sql:         show: true ```  SQL: ``` CREATE TABLE IF NOT EXISTS `t_order` (order_id bigint primary key, user_id int, status varchar(50)); INSERT INTO `t_order` (order_id, user_id, status) VALUES (100, null, 'xxx') ``` </body>
		<created>2020-01-07 02:19:26</created>
		<closed>2020-01-08 00:44:51</closed>
	</bug>
	<bug>
		<id>3861</id>
		<title>PostgreSQL Proxy read parameters error in all types except String</title>
		<body>## Bug Report  **For English only**, other languages will not accept.  Before report a bug, make sure you have:  - Searched open and closed [GitHub issues](https://github.com/apache/incubator-shardingsphere/issues). - Read documentation: [ShardingSphere Doc](https://shardingsphere.apache.org/document/current/en/overview).  Please pay attention on issues you submitted, because we maybe need more details.  If no response **more than 7 days** and we cannot reproduce it on current information, we will **close it**.  Please answer these questions before submitting your issue. Thanks!  ### Which version of ShardingSphere did you use? 4.0.0-RC3  ### Which project did you use? Sharding-JDBC or Sharding-Proxy? Sharding-Proxy  ### Expected behavior PreparedStatement works. `         PreparedStatement preparedStatement = connection.prepareStatement("INSERT INTO t_order(order_id,user_id, status) values(?, ?, ?)");         preparedStatement.setLong(1, 8888);         preparedStatement.setInt(2, 8888);         preparedStatement.setString(3, "8888");         preparedStatement.executeUpdate(); `  ### Actual behavior ` org.postgresql.util.PSQLException:  at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2440) at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2183) at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:308) at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:441) at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:365) at org.postgresql.jdbc.PgPreparedStatement.executeWithFlags(PgPreparedStatement.java:143) at org.postgresql.jdbc.PgPreparedStatement.executeUpdate(PgPreparedStatement.java:120) at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61) at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeUpdate(HikariProxyPreparedStatement.java) ` ### Reason analyze (If you can) Insufficient fix of https://github.com/apache/incubator-shardingsphere/pull/3344, due to my suggestion. ### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc. All parameters except String. ### Example codes for reproduce this issue (such as a github link). </body>
		<created>2020-01-03 10:54:13</created>
		<closed>2020-01-03 12:04:55</closed>
	</bug>
	<bug>
		<id>3855</id>
		<title>Insert with encrypt does'not handle with the `on duplicate key update` 's prepared statement  patameters.</title>
		<body>### Which version of ShardingSphere did you use? sharding-jdbc-4.0.0-RC4-SNAPSHOT ### Which project did you use? Sharding-JDBC or Sharding-Proxy? sharding-jdbc ### Expected behavior `insert into user_info (cust_id, unique_id, name, ident, mobile, password, reg_time, modify_time, reg_source, reg_app_channel, reg_device_info, status, is_mobile_authed, complate_cust_info, time_inst, time_upd, has_checked, system) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, now() , ?, ?, ?) ON DUPLICATE KEY UPDATE id = 1, ident = ?, reg_source= ? ` the sql above can work fine. ### Actual behavior ``` 2020-01-03 10:48:12.687  INFO 28800 --- [batis-jap-test0] ShardingSphere-SQL                       : Rule Type: encrypt 2020-01-03 10:48:12.688  INFO 28800 --- [batis-jap-test0] ShardingSphere-SQL                       : SQL: insert into user_info (cust_id, unique_id, name_enc, name,       ident_enc, ident, mobile_enc, mobile, password,       reg_time, modify_time, reg_source,       reg_app_channel, reg_device_info, status,       is_mobile_authed, complate_cust_info, time_inst,       time_upd, has_checked, system)     values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, now(), ?, ?, ?)     ON DUPLICATE KEY UPDATE id = 1, ident = ?,  reg_source = ? 2020-01-03 10:48:13.563  INFO 28800 --- [batis-jap-test0] o.s.b.f.xml.XmlBeanDefinitionReader      : Loading XML bean definitions from class path resource [org/springframework/jdbc/support/sql-error-codes.xml] 2020-01-03 10:48:13.616  INFO 28800 --- [batis-jap-test0] o.s.jdbc.support.SQLErrorCodesFactory    : SQLErrorCodes loaded: [DB2, Derby, H2, HSQL, Informix, MS-SQL, MySQL, Oracle, PostgreSQL, Sybase, Hana] 2020-01-03 10:48:13.624 ERROR 28800 --- [batis-jap-test0] t.ThreadMybatisAndJPATest$Half           :   org.springframework.jdbc.BadSqlGrammarException:  ### Error updating database.  Cause: java.sql.SQLException: No value specified for parameter 21 ### The error may involve transparent.mybatis.mapper.UserInfoMapper.insertOnDuplicateKey-Inline ### The error occurred while setting parameters ### SQL: insert into user_info (cust_id, unique_id, name,       ident, mobile, password,       reg_time, modify_time, reg_source,       reg_app_channel, reg_device_info, status,       is_mobile_authed, complate_cust_info, time_inst,       time_upd, has_checked, system)     values (?, ?, ?,       ?, ?, ?,       ?, ?, ?,       ?, ?, ?,       ?, ?,  now() ,       ?, ?, ?)     ON DUPLICATE KEY UPDATE id = 1, ident = ?,  reg_source = ? ### Cause: java.sql.SQLException: No value specified for parameter 21 ; bad SQL grammar []; nested exception is java.sql.SQLException: No value specified for parameter 21 at org.springframework.jdbc.support.SQLStateSQLExceptionTranslator.doTranslate(SQLStateSQLExceptionTranslator.java:99) at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:73) at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81) at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81) at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73) at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446) at com.sun.proxy.$Proxy107.insert(Unknown Source) at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:278) at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:58) at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59) at com.sun.proxy.$Proxy116.insertOnDuplicateKey(Unknown Source) at transparent.ThreadMybatisAndJPATest.testMybatis(ThreadMybatisAndJPATest.java:96) at transparent.ThreadMybatisAndJPATest$Half.call(ThreadMybatisAndJPATest.java:227) at transparent.ThreadMybatisAndJPATest$Half.call(ThreadMybatisAndJPATest.java:216) at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266) at java.util.concurrent.FutureTask.run(FutureTask.java) at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) at java.lang.Thread.run(Thread.java:745) Caused by: java.sql.SQLException: No value specified for parameter 21 at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:965) at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:898) at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:887) at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:861) at com.mysql.jdbc.PreparedStatement.checkAllParametersSet(PreparedStatement.java:2211) at com.mysql.jdbc.PreparedStatement.fillSendPacket(PreparedStatement.java:2191) at com.mysql.jdbc.PreparedStatement.fillSendPacket(PreparedStatement.java:2121) at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1162) at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493) at org.apache.shardingsphere.shardingjdbc.jdbc.core.statement.EncryptPreparedStatement.execute(EncryptPreparedStatement.java:142) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:497) at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59) at com.sun.proxy.$Proxy120.execute(Unknown Source) at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46) at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74) at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50) at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117) at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76) at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198) at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:497) at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433) ... 13 common frames omitted ``` ### Reason analyze (If you can)  no preparedStatement parameter after `on duplicate key update` work fine. such as this sql: `insert into user_info (cust_id, unique_id, name, ident, mobile, password, reg_time, modify_time, reg_source, reg_app_channel, reg_device_info, status, is_mobile_authed, complate_cust_info, time_inst, time_upd, has_checked, system) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, now() , ?, ?, ?) ON DUPLICATE KEY UPDATE id = 1`  ### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.  ### Example codes for reproduce this issue (such as a github link). </body>
		<created>2020-01-03 02:54:24</created>
		<closed>2020-01-03 12:01:38</closed>
	</bug>
	<bug>
		<id>3854</id>
		<title>‘NullPointerException’ when getting database index</title>
		<body>the environment  is that sharding-jdbc-4.0.0-rc3,sqlserver2012. Hibernate. Dbcp2 connection pool. Triggered when getting a database index. I  think that  Using DBCP directly does not have this problem. This is a screenshot of sharding- JDBC ![exception](https://user-images.githubusercontent.com/31737411/71704604-429d8880-2e16-11ea-885a-f419e27cd567.png)  In this class, there is a NullPointerException, which can be run without an NullPointerException，So what's the problem? How does it work?</body>
		<created>2020-01-03 02:46:24</created>
		<closed>2020-01-09 09:53:33</closed>
	</bug>
	<bug>
		<id>3817</id>
		<title>Sharding-Proxy starts up failed with Orchestration in scenario `sharding+encrypt+masterSlave`.</title>
		<body>## Bug Report  **For English only**, other languages will not accept.  Before report a bug, make sure you have:  - Searched open and closed [GitHub issues](https://github.com/apache/incubator-shardingsphere/issues). - Read documentation: [ShardingSphere Doc](https://shardingsphere.apache.org/document/current/en/overview).  Please pay attention on issues you submitted, because we maybe need more details.  If no response **more than 7 days** and we cannot reproduce it on current information, we will **close it**.  Please answer these questions before submitting your issue. Thanks!  ### Which version of ShardingSphere did you use? 4.0.0-rc4 ### Which project did you use? Sharding-JDBC or Sharding-Proxy? sharding-proxy ### Expected behavior proxy starts up well! ### Actual behavior proxy starts up failed! ### Reason analyze (If you can) Sharding-Proxy gets the configuration from Configuration Center when it is initlizating. It recognizes these RuleConfiguration by key words. But there is a problem, for example:        The `sharding+encrypt` rule configuration in Configuration Center as follows, Proxy recognizes these RuleConfigurations by key words (`tables:\n`--&gt;shardingRule, `encryptors:\n`--&gt;encryptRule ).    We can see that there is a key word 'tables:' exists in shardingRule and encryptRule at the same time. So, we can't identify shardingRule by using key word `tables:`, it can use `encryptRule` as `shardingRule`    or use `shardingRule` as `encryptRule` in complex scenario.( for example `sharding+encrypt`,Proxy can use `shardingRule` as `encryptRule` )  **sharding+encrypt rule configuration** ``` encryptRule:   encryptors:     encryptor_aes:       props:         aes.key.value: 123456abc       type: aes   tables:     t_user:       columns:         user_name:           cipherColumn: assisted_query_pwd           encryptor: encryptor_aes           plainColumn: user_name_plain tables:   t_user:     actualDataNodes: ds_${0..1}.t_user_${0..1}     databaseStrategy:       inline:         algorithmExpression: ds_${user_id % 2}         shardingColumn: user_id     keyGenerator:       column: user_id       type: SNOWFLAKE     logicTable: t_user     tableStrategy:       inline:         algorithmExpression: t_user_${user_id % 2}         shardingColumn: user_id ```  **method**  `getSchemaRules`  ![image](https://user-images.githubusercontent.com/46469719/71499699-a6ff9b80-289c-11ea-824c-c634f8e812ea.png)  **method**  `isShardingRule` , `isEncryptRule`  ![image](https://user-images.githubusercontent.com/46469719/71499743-efb75480-289c-11ea-9b6e-337af0060359.png)  </body>
		<created>2019-12-27 03:36:56</created>
		<closed>2019-12-30 03:56:33</closed>
	</bug>
	<bug>
		<id>3810</id>
		<title>When the default character code of my project is not UTF-8, decryption fails due to scrambling</title>
		<body>When the default character code of my project is not UTF-8, decryption fails due to scrambling</body>
		<created>2019-12-26 10:54:04</created>
		<closed>2019-12-27 04:55:45</closed>
	</bug>
	<bug>
		<id>3807</id>
		<title>Statement parameter more not set, when using  springboot-mybatis-hikari encryption </title>
		<body>version: proxy-dev  ``` org.springframework.dao.TransientDataAccessResourceException:  ### Error updating database.  Cause: java.sql.SQLException: Statement parameter 4 not set. ### The error may involve defaultParameterMap ### The error occurred while setting parameters ### SQL: INSERT INTO t_user (user_id, user_name, pwd) VALUES (?, ?, ?) ### Cause: java.sql.SQLException: Statement parameter 4 not set. ```</body>
		<created>2019-12-26 08:10:51</created>
		<closed>2019-12-26 09:06:06</closed>
	</bug>
	<bug>
		<id>3801</id>
		<title>"useServerPrepStmts=true" doesn't work</title>
		<body>## Bug Report  **For English only**, other languages will not accept.  Before report a bug, make sure you have:  - Searched open and closed [GitHub issues](https://github.com/apache/incubator-shardingsphere/issues). - Read documentation: [ShardingSphere Doc](https://shardingsphere.apache.org/document/current/en/overview).  Please pay attention on issues you submitted, because we maybe need more details.  If no response **more than 7 days** and we cannot reproduce it on current information, we will **close it**.  Please answer these questions before submitting your issue. Thanks!  ### Which version of ShardingSphere did you use? 4.0.0-RC1 ### Which project did you use? Sharding-JDBC or Sharding-Proxy? Sharding-Proxy ### Expected behavior can get datetime/timestamp correctly ### Actual behavior ![image](https://user-images.githubusercontent.com/37646009/71435819-a1337a00-2725-11ea-8866-d139eb618036.png)   `[DEBUG] 14:33:14.155 [ShardingSphere-Command-0] o.a.s.s.f.m.c.MySQLCommandExecutorFactory - Execute packet type: COM_STMT_PREPARE, value: MySQLComStmtPreparePacket(sql=/*{"Cookie":"cookie"}*/select * from dbrest) [ERROR] 14:33:14.159 [ShardingSphere-Command-0] o.a.s.s.f.c.CommandExecutorTask - Exception occur:  java.lang.ClassCastException: org.apache.shardingsphere.shardingproxy.backend.schema.TransparentSchema cannot be cast to org.apache.shardingsphere.shardingproxy.backend.schema.ShardingSchema `  After fixing the issue, following error occures at client. Caused by: java.lang.ArrayIndexOutOfBoundsException: 8at com.mysql.jdbc.ResultSetRow.getNativeTimestamp(ResultSetRow.java:614) ### Reason analyze (If you can)  ### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc. 1. configuration: schemaName: test dataSources:   ds_0:     url: jdbc:mysql://192.168.1.46:3306/test     username: root     password: test     connectionTimeoutMilliseconds: 30000     idleTimeoutMilliseconds: 60000     maxLifetimeMilliseconds: 1800000     maxPoolSize: 50  2. JDBC url: jdbc:mysql://192.168.1.46:3307/test?user=root&amp;password=root&amp;useServerPrepStmts=true&amp;zeroDateTimeBehavior=convertToNull ** useServerPrepStmts=true** should be used. 3. data  CREATE TABLE IF NOT EXISTS `dbrest` (   `fid` varchar(50) DEFAULT NULL,   `fint` int(11) DEFAULT NULL,   `ffloat` float DEFAULT NULL,   `ftext` text,   `fdate` date DEFAULT NULL,   `fdatetime` datetime DEFAULT NULL,   `ftimestamp` timestamp NULL DEFAULT CURRENT_TIMESTAMP,   `ftime` time DEFAULT NULL,   `fblob` varchar(50) DEFAULT NULL ) ENGINE=InnoDB DEFAULT CHARSET=utf8;  INSERT INTO `dbrest` (`fid`, `fint`, `ffloat`, `ftext`, `fdate`, `fdatetime`, `ftimestamp`, `ftime`, `fblob`) VALUES ('1', 1, 1, '1', NULL, NULL, '2019-12-25 14:20:43', NULL, NULL);  **If there are no "null" value, it can return correctly.**  ### Example codes for reproduce this issue (such as a github link). </body>
		<created>2019-12-25 06:51:28</created>
		<closed>2019-12-27 04:58:32</closed>
	</bug>
	<bug>
		<id>3797</id>
		<title>Optimize the running time of UI unit test</title>
		<body>## Bug Report  The running time of UI unit test is too long and the file is too large  ![image](https://user-images.githubusercontent.com/16662470/71409075-3e85a400-267b-11ea-80d3-686ebfcb8a13.png) </body>
		<created>2019-12-24 10:29:34</created>
		<closed>2019-12-26 16:07:06</closed>
	</bug>
	<bug>
		<id>3772</id>
		<title>Use spring-boot configures MasterSlave  with  RegistryCenter Zookeeper, the MasterSlave configuration  on  RegistryCenter  is  wrong</title>
		<body>## Bug Report  **For English only**, other languages will not accept.  Before report a bug, make sure you have:  - Searched open and closed [GitHub issues](https://github.com/apache/incubator-shardingsphere/issues). - Read documentation: [ShardingSphere Doc](https://shardingsphere.apache.org/document/current/en/overview).  Please pay attention on issues you submitted, because we maybe need more details.  If no response **more than 7 days** and we cannot reproduce it on current information, we will **close it**.  Please answer these questions before submitting your issue. Thanks!  ### Which version of ShardingSphere did you use? 4.0.0-rc3 ### Which project did you use? Sharding-JDBC or Sharding-Proxy? sharding-jdbc ### Expected behavior yaml configuration format: ` slaveDataSourceNames:     - slave_ds_0     - slave_ds_1` ### Actual behavior `masterDataSourceName: ds_master name: ds_ms slaveDataSourceNames: !!set   ds_slave_0: null   ds_slave_1: null` ### Reason analyze (If you can)  ### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc. Just run  by  using  spring-boot  to  configure. ### Example codes for reproduce this issue (such as a github link). </body>
		<created>2019-12-19 11:11:57</created>
		<closed>2019-12-20 13:04:31</closed>
	</bug>
	<bug>
		<id>3757</id>
		<title>no viable alternative at input '(channel'</title>
		<body># Which version of ShardingSphere did you use? 4.0.0-RC3 ### Which project did you use? Sharding-JDBC or Sharding-Proxy? sharding-jdbc ### Expected behavior execute sql: insert into demo(channel, name) values ('xx', 'xx')  report error: no viable alternative at input '(channel' ### Actual behavior Insert record faild ### Reason analyze (If you can) 'channel' seems to be the keywords of sql parsing  ### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.  sql: insert into demo(channel, name) values ('xx', 'xx')  spring:   shardingsphere:     datasource:       names: ds0       ds0:         driver-class-name: com.mysql.jdbc.Driver         type: com.alibaba.druid.pool.DruidDataSource     props:       sql:         show: true     sharding:       tables:         user:           actual-data-nodes: ds0.demo_$-&gt;{0..1}           key-generator:             column: id             type: SNOWFLAKE           table-strategy:             inline:               algorithm-expression: demo_$-&gt;{id % 2}               sharding-column: id </body>
		<created>2019-12-18 07:01:11</created>
		<closed>2019-12-18 12:06:52</closed>
	</bug>
	<bug>
		<id>3750</id>
		<title>ResultSet miss the plain column  because of using contains to get the logicColumn when using  data mask.</title>
		<body>### Which version of ShardingSphere did you use? sharding-jdbc-4.0.0-RC3 ### Which project did you use? Sharding-JDBC or Sharding-Proxy? sharding-jdbc ### Expected behavior return the all of table's columns. ### Actual behavior resultSet miss the logic column  because of using contains to get the logicColumn  ### Reason analyze (If you can) org.apache.shardingsphere.shardingjdbc.jdbc.core.resultset.EncryptResultSetMetaData#getLogicColumn ![image](https://user-images.githubusercontent.com/8772975/70986422-cf4b0580-20f8-11ea-9a29-84bd067f6c48.png)  ### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc. rules are: ![image](https://user-images.githubusercontent.com/8772975/70986801-952e3380-20f9-11ea-913a-af53a04aa70a.png)  The boss_real_name contains real_name cause the resultSet missing. I think that it should use equals  insteaded  ### Example codes for reproduce this issue (such as a github link). </body>
		<created>2019-12-17 10:18:35</created>
		<closed>2019-12-23 03:57:39</closed>
	</bug>
	<bug>
		<id>3748</id>
		<title>Sql parse - support MySQL `Mod` function</title>
		<body>## Bug Report  **For English only**, other languages will not accept.  Before report a bug, make sure you have:  - Searched open and closed [GitHub issues](https://github.com/apache/incubator-shardingsphere/issues). - Read documentation: [ShardingSphere Doc](https://shardingsphere.apache.org/document/current/en/overview).  Please pay attention on issues you submitted, because we maybe need more details.  If no response **more than 7 days** and we cannot reproduce it on current information, we will **close it**.  Please answer these questions before submitting your issue. Thanks!  ### Which version of ShardingSphere did you use? 4.0.0-RC3  ### Which project did you use? Sharding-JDBC or Sharding-Proxy? Sharding-JDBC  ### Expected behavior sql that contains MySQL `Mod` function in WHERE clause shall work  ### Actual behavior - error log got : line 1:36 extraneous input 'MOD' - inforamtation about `ORDER BY` and `LIMIT ` lost after sql parase  ### Reason analyze (If you can) maybe same as #3271   ### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.  ### Example codes for reproduce this issue (such as a github link). ` SELECT * FROM xxl_mq_message WHERE MOD(id, 3) = 2 ORDER BY id ASC LIMIT 0,2 `</body>
		<created>2019-12-17 09:49:10</created>
		<closed>2019-12-18 06:40:17</closed>
	</bug>
	<bug>
		<id>3725</id>
		<title>sharding-proxy cannot query data  when 'max.connections.size.per.query=1' for server.yaml  using springboot and mybatis framework</title>
		<body>sharding-proxy version: dev,4.0.0-rc3  configuration：        [config-sharding.yaml](https://github.com/apache/incubator-shardingsphere/blob/dev/sharding-proxy/sharding-proxy-bootstrap/src/main/resources/conf/config-sharding.yaml)       [server.yaml](https://github.com/apache/incubator-shardingsphere/blob/dev/sharding-proxy/sharding-proxy-bootstrap/src/main/resources/conf/server.yaml)  [Running example](https://github.com/apache/incubator-shardingsphere-example/blob/dev/sharding-proxy-example/sharding-proxy-boot-mybatis-example/src/main/java/org/apache/shardingsphere/example/proxy/spring/boot/mybatis/SpringBootStarterExample.java)  </body>
		<created>2019-12-12 05:07:43</created>
		<closed>2019-12-12 10:01:07</closed>
	</bug>
	<bug>
		<id>3724</id>
		<title>org.antlr.v4.runtime.tree.TerminalNodeImpl cannot be cast to org.antlr.v4.runtime.ParserRuleContext</title>
		<body>## Bug Report  **Shardingjdbc 4.0.0-RC2**,     ### Mybtais sql like:    insert into users set             order_id = #{orim.orderId,jdbcType=BIGINT},             s_id = #{orim.sId,jdbcType=BIGINT},             `name` = CONVERT(to_base64(aes_encrypt(#{orim.`name`,jdbcType=VARCHAR}, #{dataSecret,jdbcType=VARCHAR})) USING utf8),             addr = #{orim.Addr,jdbcType=VARCHAR},             mobile = CONVERT(to_base64(aes_encrypt(#{orim.mobile,jdbcType=VARCHAR}, #{dataSecret,jdbcType=VARCHAR})) USING utf8),             tel =  CONVERT(to_base64(aes_encrypt(#{orim.tel,jdbcType=VARCHAR}, #{dataSecret,jdbcType=VARCHAR})) USING utf8)         ON DUPLICATE KEY UPDATE           `name`=values(`name`),           addr=values(addr),           mobile=values(mobile),           tel=values(tel)  Please answer these questions before submitting your issue. Thanks!  ### Which version of ShardingJDBC did you use? 4.0.0-RC2 ### Which project did you use? Sharding-JDBC or Sharding-Proxy? Sharding-JDBC ### Expected behavior Caused by: java.lang.ClassCastException: org.antlr.v4.runtime.tree.TerminalNodeImpl cannot be cast to org.antlr.v4.runtime.ParserRuleContext at org.apache.shardingsphere.core.parse.core.extractor.impl.dml.update.AssignmentExtractor.extract(AssignmentExtractor.java:52) ~[sharding-core-parse-common-4.0.0-RC2.jar:4.0.0-RC2] at org.apache.shardingsphere.core.parse.core.extractor.impl.dml.update.SetAssignmentsExtractor.extract(SetAssignmentsExtractor.java:49) ~[sharding-core-parse-common-4.0.0-RC2.jar:4.0.0-RC2] at org.apache.shardingsphere.core.parse.core.extractor.SQLSegmentsExtractorEngine.extract(SQLSegmentsExtractorEngine.java:47) ~[sharding-core-parse-common-4.0.0-RC2.jar:4.0.0-RC2] at org.apache.shardingsphere.core.parse.core.SQLParseKernel.parse(SQLParseKernel.java:62) ~[sharding-core-parse-common-4.0.0-RC2.jar:4.0.0-RC2] at org.apache.shardingsphere.core.parse.SQLParseEngine.parse0(SQLParseEngine.java:71) ~[sharding-core-parse-common-4.0.0-RC2.jar:4.0.0-RC2] at org.apache.shardingsphere.core.parse.SQLParseEngine.parse(SQLParseEngine.java:53) ~[sharding-core-parse-common-4.0.0-RC2.jar:4.0.0-RC2] at org.apache.shardingsphere.core.route.router.sharding.ParsingSQLRouter.parse(ParsingSQLRouter.java:66) ~[sharding-core-route-4.0.0-RC2.jar:4.0.0-RC2] at org.apache.shardingsphere.core.route.PreparedStatementRoutingEngine.route(PreparedStatementRoutingEngine.java:64) ~[sharding-core-route-4.0.0-RC2.jar:4.0.0-RC2] at org.apache.shardingsphere.core.PreparedQueryShardingEngine.route(PreparedQueryShardingEngine.java:60) ~[sharding-core-entry-4.0.0-RC2.jar:4.0.0-RC2] at org.apache.shardingsphere.core.BaseShardingEngine.executeRoute(BaseShardingEngine.java:86) ~[sharding-core-entry-4.0.0-RC2.jar:4.0.0-RC2] at org.apache.shardingsphere.core.BaseShardingEngine.shard(BaseShardingEngine.java:70) ~[sharding-core-entry-4.0.0-RC2.jar:4.0.0-RC2] at org.apache.shardingsphere.shardingjdbc.jdbc.core.statement.ShardingPreparedStatement.shard(ShardingPreparedStatement.java:224) ~[sharding-jdbc-core-4.0.0-RC2.jar:4.0.0-RC2] at org.apache.shardingsphere.shardingjdbc.jdbc.core.statement.ShardingPreparedStatement.execute(ShardingPreparedStatement.java:170) ~[sharding-jdbc-core-4.0.0-RC2.jar:4.0.0-RC2] at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47) ~[mybatis-3.5.2.jar:3.5.2] at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74) ~[mybatis-3.5.2.jar:3.5.2] at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50) ~[mybatis-3.5.2.jar:3.5.2] at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117) ~[mybatis-3.5.2.jar:3.5.2] at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76) ~[mybatis-3.5.2.jar:3.5.2] at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197) ~[mybatis-3.5.2.jar:3.5.2] at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184) ~[mybatis-3.5.2.jar:3.5.2] at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211] at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211] at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211] at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211] at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:426) ~[mybatis-spring-2.0.2.jar:2.0.2] at com.sun.proxy.$Proxy80.insert(Unknown Source) ~[?:?] at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:271) ~[mybatis-spring-2.0.2.jar:2.0.2] at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62) ~[mybatis-3.5.2.jar:3.5.2] at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:57) ~[mybatis-3.5.2.jar:3.5.2] at com.sun.proxy.$Proxy81.insertWithEncrypt(Unknown Source) ~[?:?] at com.yundasys.order.service.impl.OrderServiceImpl.saveDesensitizedOrder2DB(OrderServiceImpl.java:393) ~[classes/:?] at com.yundasys.order.kafka.OrderConsumer.saveOrder2DB(OrderConsumer.java:46) ~[classes/:?] at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211] at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211] at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211] at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211] at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.1.8.RELEASE.jar:5.1.8.RELEASE] at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.1.8.RELEASE.jar:5.1.8.RELEASE] at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.2.7.RELEASE.jar:2.2.7.RELEASE] at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:283) ~[spring-kafka-2.2.7.RELEASE.jar:2.2.7.RELEASE] at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:79) ~[spring-kafka-2.2.7.RELEASE.jar:2.2.7.RELEASE] at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50) ~[spring-kafka-2.2.7.RELEASE.jar:2.2.7.RELEASE] at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1275) ~[spring-kafka-2.2.7.RELEASE.jar:2.2.7.RELEASE] at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1258) ~[spring-kafka-2.2.7.RELEASE.jar:2.2.7.RELEASE] at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1219) ~[spring-kafka-2.2.7.RELEASE.jar:2.2.7.RELEASE] ... 9 more </body>
		<created>2019-12-12 03:49:35</created>
		<closed>2019-12-12 06:38:02</closed>
	</bug>
	<bug>
		<id>3716</id>
		<title>Can not use MySQL function named STR_TO_DATE  for insert statements</title>
		<body>## Bug Report  ### Which version of ShardingSphere did you use? 4.0.0-RC3 ### Which project did you use? Sharding-JDBC or Sharding-Proxy? Sharding-JDBC ### Expected behavior execute SQL successfully ### Actual behavior ``` Error updating database.  Cause: java.sql.SQLException: No value specified for parameter 2 ``` ### Example codes. mybatis mapper: ``` &lt;insert id="test"&gt;     insert into test (`date`, `value` ) values (STR_TO_DATE(#{date},'%Y-%m-%d'),#{value}) &lt;/insert&gt; ``` dao: ``` public interface MapperTest{ int test(@Param("date")String date,@Param("value")String value); } ``` test: ``` @RunWith(SpringJUnit4ClassRunner.class) @SpringBootTest(classes = TestApplication.class) public class MapperTest {      @Autowired     private MapperTest mapperTest;      @Test     public void test(){         mapperTest.test("2017-01-06","test");     } } ``` result log: ``` 2019-12-11 15:37:24,521  INFO  50931 --- [           main] ShardingSphere-SQL                         99: [] Rule Type: sharding 2019-12-11 15:37:24,521  INFO  50931 --- [           main] ShardingSphere-SQL                         99: [] Logic SQL: insert into test    (    `date`,    `value`    )    values (STR_TO_DATE(?,'%Y-%m-%d'),?    ) 2019-12-11 15:37:24,521  INFO  50931 --- [           main] ShardingSphere-SQL                         99: [] SQLStatement: InsertSQLStatementContext(super=CommonSQLStatementContext(sqlStatement=org.apache.shardingsphere.core.parse.sql.statement.dml.InsertStatement@3741a170, tablesContext=TablesContext(tables=[Table(name=test, alias=Optional.absent())], schema=Optional.absent())), columnNames=[date, value], insertValueContexts=[InsertValueContext(parametersCount=1, valueExpressions=[CommonExpressionSegment(startIndex=65, stopIndex=89, text=STR_TO_DATE(?,'%Y-%m-%d')), ParameterMarkerExpressionSegment(startIndex=91, stopIndex=91, parameterMarkerIndex=1)], parameters=[2017-01-06])]) 2019-12-11 15:37:24,521  INFO  50931 --- [           main] ShardingSphere-SQL                         99: [] Actual SQL: testDataSource ::: insert into test    (    `date`,    `value`    )    values (STR_TO_DATE(?,'%Y-%m-%d'), ?) ::: [2017-01-06] 2019-12-11 15:37:24,562 ERROR  50972 --- [           main] druid.sql.Statement                       149: [] {conn-10020, pstmt-20000} execute error. insert into test    (    `date`,    `value`    )    values (STR_TO_DATE(?,'%Y-%m-%d'), ?) java.sql.SQLException: No value specified for parameter 2 at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:963) at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:896) at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:885) at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:860) at com.mysql.jdbc.PreparedStatement.checkAllParametersSet(PreparedStatement.java:2205) at com.mysql.jdbc.PreparedStatement.fillSendPacket(PreparedStatement.java:2185) at com.mysql.jdbc.PreparedStatement.fillSendPacket(PreparedStatement.java:2115) at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1158) at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3409) at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440) at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3407) at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:167) at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:497) at org.apache.shardingsphere.shardingjdbc.executor.SQLExecuteCallbackFactory$2.executeSQL(SQLExecuteCallbackFactory.java:65) at org.apache.shardingsphere.shardingjdbc.executor.SQLExecuteCallbackFactory$2.executeSQL(SQLExecuteCallbackFactory.java:61) at org.apache.shardingsphere.core.execute.sql.execute.SQLExecuteCallback.execute0(SQLExecuteCallback.java:68) at org.apache.shardingsphere.core.execute.sql.execute.SQLExecuteCallback.execute(SQLExecuteCallback.java:57) at org.apache.shardingsphere.core.execute.ShardingExecuteEngine.syncGroupExecute(ShardingExecuteEngine.java:125) at org.apache.shardingsphere.core.execute.ShardingExecuteEngine.parallelExecute(ShardingExecuteEngine.java:102) at org.apache.shardingsphere.core.execute.ShardingExecuteEngine.groupExecute(ShardingExecuteEngine.java:83) at org.apache.shardingsphere.core.execute.sql.execute.SQLExecuteTemplate.executeGroup(SQLExecuteTemplate.java:73) at org.apache.shardingsphere.core.execute.sql.execute.SQLExecuteTemplate.executeGroup(SQLExecuteTemplate.java:56) at org.apache.shardingsphere.shardingjdbc.executor.AbstractStatementExecutor.executeCallback(AbstractStatementExecutor.java:134) at org.apache.shardingsphere.shardingjdbc.executor.PreparedStatementExecutor.execute(PreparedStatementExecutor.java:158) at org.apache.shardingsphere.shardingjdbc.jdbc.core.statement.ShardingPreparedStatement.execute(ShardingPreparedStatement.java:165) at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47) at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74) at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50) at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117) at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76) at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197) at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433) at com.sun.proxy.$Proxy114.insert(Unknown Source) at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:278) at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62) at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58) ```</body>
		<created>2019-12-11 07:55:38</created>
		<closed>2019-12-11 10:30:49</closed>
	</bug>
	<bug>
		<id>3671</id>
		<title>Hide plain column for SQL: DESC table</title>
		<body>Current version(4.0.0-RC3) can convert cipher column to logic column for encrypt for SQL DESC table, and can hide query assist column, but do not process with plain column. We need to hide plain column too, `DESC table` should show logic column only for encrypt. </body>
		<created>2019-12-05 10:43:40</created>
		<closed>2019-12-05 14:57:18</closed>
	</bug>
	<bug>
		<id>3662</id>
		<title>Integrate sharding jdbc with sql server</title>
		<body>## Can anybody help me? I have worked on it for about 3 days,and it didnot work yet. Here is my yaml ``` server:   port: 8081 spring:   shardingsphere:     sharding:       default-database-strategy:         inline:           algorithm-expression: db$-&gt;{id % 3}           sharding-column: id       tables:         book:           #由数据源名 + 表名组成，以小数点分隔。           #多个表以逗号分隔，支持inline表达式。缺省表示使用已知数据源与逻辑表名称生成数据节点。           #用于广播表（即每个库中都需要一个同样的表用于关联查询，多为字典表）或只分库不分表且所有库的表结构完全一致的情况           actual-data-nodes: db$-&gt;{0..2}.book_$-&gt;{0..1} #          key-generator: #            #自增列名称，缺省表示不使用自增主键生成器 #            column: id #            #自增列值生成器类型，缺省表示使用默认自增列值生成器。可使用用户自定义的列值生成器或选择内置类型：SNOWFLAKE/UUID/LEAF_SEGMENT #            type: SNOWFLAKE           table-strategy:             inline:               algorithm-expression: book_$-&gt;{id % 2}               sharding-column: id       binding-tables: book     datasource:       db0:         driver-class-name: com.microsoft.sqlserver.jdbc.SQLServerDriver         url: jdbc:sqlserver://127.0.0.1:1433;DatabaseName=db0         password:          type: com.alibaba.druid.pool.DruidDataSource         username: sa       db1:         driver-class-name: com.microsoft.sqlserver.jdbc.SQLServerDriver         url: jdbc:sqlserver://127.0.0.1:1433;DatabaseName=db1         password:          type: com.alibaba.druid.pool.DruidDataSource         username: sa       db2:         driver-class-name: com.microsoft.sqlserver.jdbc.SQLServerDriver         url: jdbc:sqlserver://127.0.0.1:1433;DatabaseName=db2         password:          type: com.alibaba.druid.pool.DruidDataSource         username: sa       dsmaster: ''       names: db0,db1,db2     props:       sql:         show: true   main:     allow-bean-definition-overriding: true mybatis-plus:   typeAliasesPackage: cn.wccy.sharding.shardingtest.entity   mapper-locations:     - classpath*:mapper/*.xml ``` And the maven pom is below:`mssql-jdbc 6.4.0.jre8`,`sharding-jdbc-spring-boot-starter 4.0.0-RC2` ```         &lt;!-- Sharding jdbc --&gt;         &lt;dependency&gt;             &lt;groupId&gt;org.apache.shardingsphere&lt;/groupId&gt;             &lt;artifactId&gt;sharding-jdbc-spring-boot-starter&lt;/artifactId&gt;             &lt;version&gt;4.0.0-RC2&lt;/version&gt;         &lt;/dependency&gt;          &lt;dependency&gt;             &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;             &lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt;         &lt;/dependency&gt;          &lt;dependency&gt;             &lt;groupId&gt;org.projectlombok&lt;/groupId&gt;             &lt;artifactId&gt;lombok&lt;/artifactId&gt;             &lt;optional&gt;true&lt;/optional&gt;         &lt;/dependency&gt;         &lt;dependency&gt;             &lt;groupId&gt;com.baomidou&lt;/groupId&gt;             &lt;artifactId&gt;mybatis-plus-boot-starter&lt;/artifactId&gt;             &lt;version&gt;3.1.1&lt;/version&gt;             &lt;!--&lt;exclusions&gt;                 &lt;exclusion&gt;                     &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;                     &lt;artifactId&gt;spring-boot-starter-jdbc&lt;/artifactId&gt;                 &lt;/exclusion&gt;             &lt;/exclusions&gt;--&gt;         &lt;/dependency&gt;          &lt;dependency&gt;             &lt;groupId&gt;com.microsoft.sqlserver&lt;/groupId&gt;             &lt;artifactId&gt;mssql-jdbc&lt;/artifactId&gt;             &lt;version&gt;6.4.0.jre8&lt;/version&gt;         &lt;/dependency&gt;         &lt;dependency&gt;             &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;             &lt;artifactId&gt;spring-boot-starter-test&lt;/artifactId&gt;             &lt;scope&gt;test&lt;/scope&gt;             &lt;exclusions&gt;                 &lt;exclusion&gt;                     &lt;groupId&gt;org.junit.vintage&lt;/groupId&gt;                     &lt;artifactId&gt;junit-vintage-engine&lt;/artifactId&gt;                 &lt;/exclusion&gt;             &lt;/exclusions&gt;         &lt;/dependency&gt;         &lt;dependency&gt;             &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;             &lt;artifactId&gt;spring-boot-configuration-processor&lt;/artifactId&gt;             &lt;optional&gt;true&lt;/optional&gt;         &lt;/dependency&gt;         &lt;dependency&gt;             &lt;groupId&gt;junit&lt;/groupId&gt;             &lt;artifactId&gt;junit&lt;/artifactId&gt;             &lt;version&gt;4.12&lt;/version&gt;         &lt;/dependency&gt;         &lt;dependency&gt;             &lt;groupId&gt;com.alibaba&lt;/groupId&gt;             &lt;artifactId&gt;fastjson&lt;/artifactId&gt;             &lt;version&gt;1.2.58&lt;/version&gt;         &lt;/dependency&gt;         &lt;dependency&gt;             &lt;groupId&gt;com.alibaba&lt;/groupId&gt;             &lt;artifactId&gt;druid-spring-boot-starter&lt;/artifactId&gt;             &lt;version&gt;1.1.18&lt;/version&gt;         &lt;/dependency&gt; ``` And I have tried mysql also.It works well.I do not know why. Here is the test code below ``` @Test public void saveBatch() { List&lt;Book&gt; bookList = new ArrayList&lt;&gt;(); for (int i = 0;i &lt; 100;i ++) { Book book = new Book(); book.setId(i); book.setCount(i); book.setName("test" + i); bookList.add(book); } bookService.saveBatch(bookList); } ``` and the exception stack trace: ``` org.apache.ibatis.exceptions.PersistenceException:  ### Error flushing statements.  Cause: com.microsoft.sqlserver.jdbc.SQLServerException: The value is not set for the parameter number 1. ### Cause: com.microsoft.sqlserver.jdbc.SQLServerException: The value is not set for the parameter number 1.  at org.apache.ibatis.exceptions.ExceptionFactory.wrapException(ExceptionFactory.java:30) at org.apache.ibatis.session.defaults.DefaultSqlSession.flushStatements(DefaultSqlSession.java:254) at com.baomidou.mybatisplus.extension.service.impl.ServiceImpl.saveBatch(ServiceImpl.java:132) at com.baomidou.mybatisplus.extension.service.IService.saveBatch(IService.java:58) at com.baomidou.mybatisplus.extension.service.IService$$FastClassBySpringCGLIB$$f8525d18.invoke(&lt;generated&gt;) at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218) at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:769) at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747) at org.springframework.transaction.interceptor.TransactionInterceptor$$Lambda$519/1914538677.proceedWithInvocation(Unknown Source) at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366) at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:99) at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747) at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689) at cn.wccy.sharding.shardingtest.service.impl.BookServiceImpl$$EnhancerBySpringCGLIB$$2f2168f1.saveBatch(&lt;generated&gt;) at cn.wccy.sharding.shardingtest.service.BookServiceTest.saveBatch(BookServiceTest.java:61) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:483) at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) at org.springframework.test.context.junit4.statements.RunBeforeTestExecutionCallbacks.evaluate(RunBeforeTestExecutionCallbacks.java:74) at org.springframework.test.context.junit4.statements.RunAfterTestExecutionCallbacks.evaluate(RunAfterTestExecutionCallbacks.java:84) at org.springframework.test.context.junit4.statements.RunBeforeTestMethodCallbacks.evaluate(RunBeforeTestMethodCallbacks.java:75) at org.springframework.test.context.junit4.statements.RunAfterTestMethodCallbacks.evaluate(RunAfterTestMethodCallbacks.java:86) at org.springframework.test.context.junit4.statements.SpringRepeat.evaluate(SpringRepeat.java:84) at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:251) at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97) at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61) at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70) at org.junit.runners.ParentRunner.run(ParentRunner.java:363) at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190) at org.junit.runner.JUnitCore.run(JUnitCore.java:137) at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) Caused by: com.microsoft.sqlserver.jdbc.SQLServerException: The value is not set for the parameter number 1. at com.microsoft.sqlserver.jdbc.SQLServerException.makeFromDriverError(SQLServerException.java:228) at com.microsoft.sqlserver.jdbc.SQLServerPreparedStatement.buildParamTypeDefinitions(SQLServerPreparedStatement.java:377) at com.microsoft.sqlserver.jdbc.SQLServerPreparedStatement.buildPreparedStrings(SQLServerPreparedStatement.java:329) at com.microsoft.sqlserver.jdbc.SQLServerPreparedStatement.doExecutePreparedStatementBatch(SQLServerPreparedStatement.java:2607) at com.microsoft.sqlserver.jdbc.SQLServerPreparedStatement$PrepStmtBatchExecCmd.doExecute(SQLServerPreparedStatement.java:2545) at com.microsoft.sqlserver.jdbc.TDSCommand.execute(IOBuffer.java:7344) at com.microsoft.sqlserver.jdbc.SQLServerConnection.executeCommand(SQLServerConnection.java:2713) at com.microsoft.sqlserver.jdbc.SQLServerStatement.executeCommand(SQLServerStatement.java:224) at com.microsoft.sqlserver.jdbc.SQLServerStatement.executeStatement(SQLServerStatement.java:204) at com.microsoft.sqlserver.jdbc.SQLServerPreparedStatement.executeBatch(SQLServerPreparedStatement.java:2458) at com.alibaba.druid.pool.DruidPooledPreparedStatement.executeBatch(DruidPooledPreparedStatement.java:565) at org.apache.shardingsphere.shardingjdbc.executor.BatchPreparedStatementExecutor$4.executeSQL(BatchPreparedStatementExecutor.java:168) at org.apache.shardingsphere.shardingjdbc.executor.BatchPreparedStatementExecutor$4.executeSQL(BatchPreparedStatementExecutor.java:164) at org.apache.shardingsphere.core.execute.sql.execute.SQLExecuteCallback.execute0(SQLExecuteCallback.java:68) at org.apache.shardingsphere.core.execute.sql.execute.SQLExecuteCallback.execute(SQLExecuteCallback.java:57) at org.apache.shardingsphere.core.execute.ShardingExecuteEngine.syncGroupExecute(ShardingExecuteEngine.java:125) at org.apache.shardingsphere.core.execute.ShardingExecuteEngine.serialExecute(ShardingExecuteEngine.java:90) at org.apache.shardingsphere.core.execute.ShardingExecuteEngine.groupExecute(ShardingExecuteEngine.java:83) at org.apache.shardingsphere.core.execute.sql.execute.SQLExecuteTemplate.executeGroup(SQLExecuteTemplate.java:73) at org.apache.shardingsphere.core.execute.sql.execute.SQLExecuteTemplate.executeGroup(SQLExecuteTemplate.java:56) at org.apache.shardingsphere.shardingjdbc.executor.AbstractStatementExecutor.executeCallback(AbstractStatementExecutor.java:132) at org.apache.shardingsphere.shardingjdbc.executor.BatchPreparedStatementExecutor.executeBatch(BatchPreparedStatementExecutor.java:171) at org.apache.shardingsphere.shardingjdbc.jdbc.core.statement.ShardingPreparedStatement.executeBatch(ShardingPreparedStatement.java:231) at com.baomidou.mybatisplus.core.executor.MybatisBatchExecutor.doFlushStatements(MybatisBatchExecutor.java:132) at org.apache.ibatis.executor.BaseExecutor.flushStatements(BaseExecutor.java:129) at org.apache.ibatis.executor.BaseExecutor.flushStatements(BaseExecutor.java:122) at org.apache.ibatis.executor.CachingExecutor.flushStatements(CachingExecutor.java:114) at org.apache.ibatis.session.defaults.DefaultSqlSession.flushStatements(DefaultSqlSession.java:252) ... 45 more ``` I need help,really.</body>
		<created>2019-12-04 10:12:52</created>
		<closed>2019-12-05 10:02:05</closed>
	</bug>
	<bug>
		<id>3642</id>
		<title>A yaml wrong or a program's bug</title>
		<body>**Which version of ShardingSphere did you use?** dev  or all  **Which project did you use? Sharding-JDBC or Sharding-Proxy?** Sharding-JDBC   **Expected behavior** Run `void org.apache.shardingsphere.shardingjdbc.orchestration.api.yaml.sharding.YamlOrchestrationShardingWithMasterSlaveIntegrateTest.assertWithDataSource() throws Exception` test unit.  until the under code `List&lt;TableMetaData&gt; org.apache.shardingsphere.core.execute.metadata.TableMetaDataLoader.load(Map&lt;String, List&lt;DataNode&gt;&gt; dataNodeGroups, ShardingRule shardingRule, String logicTableName) throws SQLException` the file TableMetaDataLoader.java line number is 99 `DataSourceMetaData dataSourceMetaData = TableMetaDataLoader.this.dataSourceMetas.getDataSourceMetaData(dataSourceName);` the dataSourceMetaData  is not null..  ![image](https://user-images.githubusercontent.com/10703753/70104797-2624f980-167a-11ea-949a-27d5abcfc9db.png)   **Actual behavior** the dataSourceMetaData  is null..  **Reason analyze (If you can)** ![image](https://user-images.githubusercontent.com/10703753/70022945-e5bd7100-15d0-11ea-9bfe-1cfd176adb51.png) With masterSlaveRules config，，，the dataSourceMetaData  must be null....because the yaml is not right to  map to code Map.class   **Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.** Run `void org.apache.shardingsphere.shardingjdbc.orchestration.api.yaml.sharding.YamlOrchestrationShardingWithMasterSlaveIntegrateTest.assertWithDataSource() throws Exception` test unit.  **Example codes for reproduce this issue (such as a github link).** YamlOrchestrationShardingWithMasterSlaveIntegrateTest.java    assertWithDataSource()</body>
		<created>2019-12-03 05:33:33</created>
		<closed>2019-12-08 14:34:47</closed>
	</bug>
	<bug>
		<id>3640</id>
		<title>Timestamp miss milliseconds when reading from sharding-proxy</title>
		<body>### Which version of ShardingSphere did you use? 4.0.0-RC4 compile by myselft from the source code ### Which project did you use? Sharding-JDBC or Sharding-Proxy? Sharding-Proxy ### Expected behavior read the timestamp value from sharding-proxy should contains the milliseconds ### Actual behavior miss the milliseconds when reading from sharding-proxy ### Reason analyze (If you can) maybe there is type converstion or byte read bug in sharding-proxy? ### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc. Just any database client tools to connect to the proxy to select query a reacord with timestamp values with milliseconds in real database tables ### Example codes for reproduce this issue (such as a github link). just a very easy select statement test can reproduce this issue. this is the followup testing after the issue #3550 fixed by #3632  I have left an comment there for the easy reference</body>
		<created>2019-12-03 04:13:17</created>
		<closed>2019-12-03 09:15:44</closed>
	</bug>
	<bug>
		<id>3639</id>
		<title>Inaccurate result when execute `desc encrypt_table`</title>
		<body>## Bug Report  **For English only**, other languages will not accept.  Before report a bug, make sure you have:  - Searched open and closed [GitHub issues](https://github.com/apache/incubator-shardingsphere/issues). - Read documentation: [ShardingSphere Doc](https://shardingsphere.apache.org/document/current/en/overview).  Please pay attention on issues you submitted, because we maybe need more details.  If no response **more than 7 days** and we cannot reproduce it on current information, we will **close it**.  Please answer these questions before submitting your issue. Thanks!  ### Which version of ShardingSphere did you use? 4.0.0-RC3 ### Which project did you use? Sharding-JDBC or Sharding-Proxy? Sharding-Proxy ### Expected behavior Here is the configuration, ``` schemaName: encrypt_db  dataSource:   url: jdbc:mysql://127.0.0.1:3306/demo_ds?serverTimezone=UTC&amp;useSSL=false   username: root   password:   connectionTimeoutMilliseconds: 30000   idleTimeoutMilliseconds: 60000   maxLifetimeMilliseconds: 1800000   maxPoolSize: 50  encryptRule:   encryptors:     encryptor_aes:       type: aes       props:         aes.key.value: 123456abc     encryptor_md5:       type: md5   tables:     t_encrypt:       columns:         user_id:           plainColumn: user_plain           cipherColumn: user_cipher           encryptor: encryptor_aes         order_id:           cipherColumn: order_cipher           encryptor: encryptor_md5 ```  When execute `desc t_encrypt;`, expected result is  ``` mysql&gt; desc t_encrypt; +--------------+--------------+------+------+---------+----------------+ | Field        | Type         | Null | Key  | Default | Extra          | +--------------+--------------+------+------+---------+----------------+ | id           | int(11)      | NO   | PRI  | NULL    | auto_increment | | user_id  | varchar(200) | YES  |      | NULL    |                | | order_id | varchar(200) | YES  |      | NULL    |                | +--------------+--------------+------+------+---------+----------------+ ``` ### Actual behavior ``` mysql&gt; desc t_encrypt; +--------------+--------------+------+------+---------+----------------+ | Field        | Type         | Null | Key  | Default | Extra          | +--------------+--------------+------+------+---------+----------------+ | id           | int(11)      | NO   | PRI  | NULL    | auto_increment | | user_plain   | varchar(200) | YES  |      | NULL    |                | | user_cipher  | varchar(200) | YES  |      | NULL    |                | | order_cipher | varchar(200) | YES  |      | NULL    |                | +--------------+--------------+------+------+---------+----------------+ ```  ### Reason analyze (If you can)  ### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.  ### Example codes for reproduce this issue (such as a github link). </body>
		<created>2019-12-03 04:12:28</created>
		<closed>2019-12-13 03:26:17</closed>
	</bug>
	<bug>
		<id>3618</id>
		<title>Encryp-JDBC rewrite wrong sql when sql contain character '('</title>
		<body>Encrypt-JDBC rewrite wrong sql when sql contain character '('. Besides, it works normally with the version of 4.0.0-RC2.   Version of ShardingSphere 4.0.0-RC3  JDBC I use Encrypt-JDBC  Expected behavior Rewrite the sql correct which is contain character '('  Actual behavior The rewrite sql error when sql contain character '('  ### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc. 1.MySQL table and encrypt configuration table： create table t_demo{ username varchar(20), phone varchar(20), username_encrypt(64), phone_encrypt(64) } encrypt configuration spring.shardingsphere.datasource.name = ds spring.shardingsphere.datasource.ds.type = com.alibaba.druid.pool.DruidDataSource spring.shardingsphere.datasource.ds.driver-class-name = com.mysql.jdbc.Driver spring.shardingsphere.datasource.ds.url = xxx spring.shardingsphere.datasource.ds.username = xxx spring.shardingsphere.datasource.ds.password = xxx spring.shardingsphere.encrypt.encryptors.encryptor_aes.type = AES spring.shardingsphere.encrypt.tables.t_demo.columns.username.plainColumn = username spring.shardingsphere.encrypt.tables.t_demo.columns.username.cipherColumn = username_encrypt spring.shardingsphere.encrypt.tables.t_demo.columns.phone.plainColumn = phone spring.shardingsphere.encrypt.tables.t_demo.columns.phone.cipherColumn = phone_encrypt spring.shardingsphere.encrypt.tables.t_demo.columns.phone.encryptor = encryptor_aes spring.shardingsphere.encrypt.tables.t_demo.columns.username.encryptor = encryptor_aes  2.My dao method definition List&lt;User&gt; query(@Param("phoneList") List&lt;String&gt; phoneList);  3.My mybatis sql &lt;select id="query" resultMap="xxx"&gt;         SELECT * FROM t_demo t         WHERE         (t.username IN         &lt;foreach collection="phoneList" open="(" separator="," close=")" item="phone"&gt;             #{phone}         &lt;/foreach&gt;         OR t.phone IN         &lt;foreach collection="phoneList" open="(" separator="," close=")" item="phone"&gt;             #{phone}         &lt;/foreach&gt;)         AND delete = 0 &lt;/select&gt;  4.Encrypt-JDBC rewrite sql(The rewrite sql get more left parenthesis) method: EncryptPreparedStatement.getSQLUnit(final String sql)  sql: select * from t_demo t where (t.username_encrypt in (('xxx','xxxx') or t.phone_encrypt in (('xxx','xxxx')) and delete = 0; </body>
		<created>2019-11-28 02:54:30</created>
		<closed>2019-12-13 10:20:31</closed>
	</bug>
	<bug>
		<id>3587</id>
		<title>Performance declined by DatabaseMetaData::getUserName()</title>
		<body>## Bug Report  **For English only**, other languages will not accept.  Before report a bug, make sure you have:  - Searched open and closed [GitHub issues](https://github.com/apache/incubator-shardingsphere/issues). - Read documentation: [ShardingSphere Doc](https://shardingsphere.apache.org/document/current/en/overview).  Please pay attention on issues you submitted, because we maybe need more details.  If no response **more than 7 days** and we cannot reproduce it on current information, we will **close it**.  Please answer these questions before submitting your issue. Thanks!  ### Which version of ShardingSphere did you use? 4.0.0-RC4-SNAPSHOT ### Which project did you use? Sharding-JDBC or Sharding-Proxy? Both ### Expected behavior Performance stable after merge https://github.com/apache/incubator-shardingsphere/pull/3541 ### Actual behavior Performance declined ### Reason analyze (If you can) `  DataSourceMetaData dataSourceMetaData = databaseType.getDataSourceMetaData(new DataSourceInfo(metaData.getURL(), metaData.getUserName())); `  metaData.getUserName() will send a query: **select user()**. This additional SQL will be sent in each query and apparently influence the performance. ### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc. All scenarios when execute an SQL. ### Example codes for reproduce this issue (such as a github link). </body>
		<created>2019-11-25 07:00:52</created>
		<closed>2019-11-25 14:17:15</closed>
	</bug>
	<bug>
		<id>3556</id>
		<title>(Proxy) Response num of update is Zero for postgres JDBC client</title>
		<body>Which version of ShardingSphere did you use? sharding-proxy : 4.0.0-RC3-SNAPSHOT  Expected behavior When update one record, update success and return response number '1'  Actual behavior When update one record, update success and return response number '0'  My configure is the same as #3555, and update process is : String sql_update ="UPDATE t_encrypt SET content = xxx where pwd = xxx"; int num = statement.executeUpdate(sql_update); </body>
		<created>2019-11-19 06:24:48</created>
		<closed>2020-04-15 08:03:34</closed>
	</bug>
	<bug>
		<id>3555</id>
		<title>(Proxy) Receive error response for postgres JDBC client</title>
		<body>### Which version of ShardingSphere did you use? sharding-proxy : 4.0.0-RC3-SNAPSHOT  ### Expected behavior Insert record successful and get a correct response.  ### Actual behavior Insert record successful but the client get an error response.  ### Steps to reproduce the behavior Table structure: ---------------------------------- CREATE TABLE public.t_encrypt (  pwd varchar(32) NULL,  "content" varchar(32) NULL ) ---------------------------------- config-encrypt.yaml: ---------------------------------- ![image](https://user-images.githubusercontent.com/5668787/69121257-d4f00400-0ad6-11ea-9704-0abb4f0badf1.png)  ---------------------------------- Code: `statement.executeUpdate(SQL_INSERT);`  Actual behavior: The insert is successful and Proxy is OK, but the client gets an error.  </body>
		<created>2019-11-19 06:11:53</created>
		<closed>2020-04-14 10:28:45</closed>
	</bug>
	<bug>
		<id>3551</id>
		<title>sharding 4.0.0-RC2+seata 0.9.0, error :Caused by: java.sql.SQLFeatureNotSupportedException: ParameterMetaData</title>
		<body>## Question pom.xml:  ```xml &lt;dependency&gt;             &lt;groupId&gt;org.apache.shardingsphere&lt;/groupId&gt;             &lt;artifactId&gt;sharding-jdbc-spring-boot-starter&lt;/artifactId&gt;         &lt;/dependency&gt;         &lt;dependency&gt;             &lt;groupId&gt;org.apache.shardingsphere&lt;/groupId&gt;             &lt;artifactId&gt;sharding-transaction-base-seata-at&lt;/artifactId&gt;             &lt;version&gt;4.0.0-RC2&lt;/version&gt;         &lt;/dependency&gt;         &lt;dependency&gt;             &lt;groupId&gt;io.seata&lt;/groupId&gt;             &lt;artifactId&gt;seata-all&lt;/artifactId&gt;             &lt;version&gt;0.9.0&lt;/version&gt;         &lt;/dependency&gt; ```   seataconfig:  ```java @Bean     public DataSourceProxy dataSourceProxy(DataSource dataSource)  {         return new DataSourceProxy(dataSource);     }     @Bean     public SqlSessionFactory sqlSessionFactory(DataSourceProxy dataSourceProxy) throws Exception {         MybatisSqlSessionFactoryBean factoryBean = new MybatisSqlSessionFactoryBean();         factoryBean.setDataSource(dataSourceProxy);         return factoryBean.getObject();     } ```   error message :  ```log Caused by: java.sql.SQLFeatureNotSupportedException: ParameterMetaData at org.apache.shardingsphere.shardingjdbc.jdbc.unsupported.AbstractUnsupportedOperationPreparedStatement.getParameterMetaData(AbstractUnsupportedOperationPreparedStatement.java:52) at io.seata.rm.datasource.AbstractPreparedStatementProxy.initParameterHolder(AbstractPreparedStatementProxy.java:56) at io.seata.rm.datasource.AbstractPreparedStatementProxy.&lt;init&gt;(AbstractPreparedStatementProxy.java:74) at io.seata.rm.datasource.PreparedStatementProxy.&lt;init&gt;(PreparedStatementProxy.java:49) at io.seata.rm.datasource.AbstractConnectionProxy.prepareStatement(AbstractConnectionProxy.java:118) at org.apache.ibatis.executor.statement.PreparedStatementHandler.instantiateStatement(PreparedStatementHandler.java:86) at org.apache.ibatis.executor.statement.BaseStatementHandler.prepare(BaseStatementHandler.java:88) at org.apache.ibatis.executor.statement.RoutingStatementHandler.prepare(RoutingStatementHandler.java:59) at com.baomidou.mybatisplus.core.executor.MybatisSimpleExecutor.prepareStatement(MybatisSimpleExecutor.java:94) at com.baomidou.mybatisplus.core.executor.MybatisSimpleExecutor.doUpdate(MybatisSimpleExecutor.java:53) at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117) at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76) at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197) at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:426) ```</body>
		<created>2019-11-18 10:01:50</created>
		<closed>2019-11-21 02:26:21</closed>
	</bug>
	<bug>
		<id>3550</id>
		<title>Timestamp miss milliseconds</title>
		<body>### Which version of ShardingSphere did you use? shardingsphere-4.0.0-RC2-1  ### Which project did you use? Sharding-JDBC or Sharding-Proxy? Sharding-Proxy  ### Expected behavior insert a timestamp value into table with milliseconds  ### Actual behavior insert a timestamp value into table without milliseconds  ### Reason analyze (If you can) I think maybe related to the Timestamp long construtor in sharding-proxy ? or btm jdbc (but when insert to my db without proxy, it works perfect,so this should not be the cause)??? ### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc. I am using bitronix tm in my application, just a normal simple insert sql with timestamp value with milliseconds in PreparedStatement. and my client os is windows 10 with Zulu openjdk 1.8.0_232. And the sharding-proxy is in Ubuntu 18.04 with Oracle jdk 1.8.0_211 and MySQL5.7  ### Example codes for reproduce this issue (such as a github link). internal application,not available in github</body>
		<created>2019-11-18 09:49:56</created>
		<closed>2019-12-02 08:27:26</closed>
	</bug>
	<bug>
		<id>3545</id>
		<title>XA failure of PostgreSQL</title>
		<body>## Bug Report  **For English only**, other languages will not accept.  Before report a bug, make sure you have:  - Searched open and closed [GitHub issues](https://github.com/apache/incubator-shardingsphere/issues). - Read documentation: [ShardingSphere Doc](https://shardingsphere.apache.org/document/current/en/overview).  Please pay attention on issues you submitted, because we maybe need more details.  If no response **more than 7 days** and we cannot reproduce it on current information, we will **close it**.  Please answer these questions before submitting your issue. Thanks!  ### Which version of ShardingSphere did you use? 4.0.0-RC3-SNAPSHOT ### Which project did you use? Sharding-JDBC or Sharding-Proxy? Sharding-Proxy ### Expected behavior XA transaction succeed for PostgreSQL ### Actual behavior ![pg_xa](https://user-images.githubusercontent.com/24643893/69022500-6e93b480-09f6-11ea-93ec-b86555e32644.png)  ### Reason analyze (If you can)  ### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.  ### Example codes for reproduce this issue (such as a github link). </body>
		<created>2019-11-18 03:29:14</created>
		<closed>2019-12-30 02:00:44</closed>
	</bug>
	<bug>
		<id>3533</id>
		<title>XAShardingTransactionManager could not compatible with AtomikosDataSourceBean</title>
		<body>when we use AtomikosDataSource Bean in XA, getConnection will not take effect.</body>
		<created>2019-11-15 15:38:39</created>
		<closed>2019-11-17 09:18:20</closed>
	</bug>
	<bug>
		<id>3524</id>
		<title>With Oracle 11g: Tables or View does no exsit</title>
		<body>## Bug Report  **For English only**, other languages will not accept.  Before report a bug, make sure you have:  - Searched open and closed [GitHub issues](https://github.com/apache/incubator-shardingsphere/issues). - Read documentation: [ShardingSphere Doc](https://shardingsphere.apache.org/document/current/en/overview).  Please pay attention on issues you submitted, because we maybe need more details.  If no response **more than 7 days** and we cannot reproduce it on current information, we will **close it**.  Please answer these questions before submitting your issue. Thanks!  ### Which version of ShardingSphere did you use? 4.0.0-RC2 ### Which project did you use? Sharding-JDBC or Sharding-Proxy? Sharding-JDBC ### Expected behavior  ### Actual behavior With SpringBoot2.x and Oracle11g, We will get a SQLStntaxErrorException: table or view does no exsit. After research, we get the ShardingSphere will scan the all tables in the Oracle DB(XE) and analyze these tables, but the DB account can't be had all privileges. So, occurred error, the spring boot can't be startup. ### Reason analyze (If you can) ShardingJDBC version 3.x don't scan the all table, so it can be startup, but 4.x does not start ### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.  ### Example codes for reproduce this issue (such as a github link). </body>
		<created>2019-11-14 08:56:37</created>
		<closed>2019-11-27 02:44:28</closed>
	</bug>
	<bug>
		<id>3523</id>
		<title>Create table sql not works</title>
		<body>## Bug Report ```java Exception in thread "main" java.lang.NullPointerException at org.apache.shardingsphere.core.execute.sql.execute.result.StreamQueryResult.&lt;init&gt;(StreamQueryResult.java:49) at org.apache.shardingsphere.shardingjdbc.jdbc.core.statement.ShardingPreparedStatement.getResultSet(ShardingPreparedStatement.java:136) at org.jetbrains.exposed.sql.Transaction$exec$2.executeInternal(Transaction.kt:107) at org.jetbrains.exposed.sql.statements.Statement.executeIn$exposed(Statement.kt:59) at org.jetbrains.exposed.sql.Transaction.exec(Transaction.kt:183) at org.jetbrains.exposed.sql.Transaction.exec(Transaction.kt:125) at org.jetbrains.exposed.sql.Transaction.exec(Transaction.kt:101) at org.jetbrains.exposed.sql.Transaction.exec(Transaction.kt:92) at com.xiachufang.DbUtilsKt.dropTables(DbUtils.kt:22) at com.xiachufang.DatasourceKt$main$1.invoke(Datasource.kt:51) at com.xiachufang.DatasourceKt$main$1.invoke(Datasource.kt) at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt$inTopLevelTransaction$1.invoke(ThreadLocalTransactionManager.kt:156) at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt$inTopLevelTransaction$2.invoke(ThreadLocalTransactionManager.kt:197) at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt.keepAndRestoreTransactionRefAfterRun(ThreadLocalTransactionManager.kt:205) at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt.inTopLevelTransaction(ThreadLocalTransactionManager.kt:196) at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt$transaction$1.invoke(ThreadLocalTransactionManager.kt:134) at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt.keepAndRestoreTransactionRefAfterRun(ThreadLocalTransactionManager.kt:205) at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt.transaction(ThreadLocalTransactionManager.kt:106) at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt.transaction(ThreadLocalTransactionManager.kt:104) at org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt.transaction$default(ThreadLocalTransactionManager.kt:103) at com.xiachufang.DatasourceKt.main(Datasource.kt:50) at com.xiachufang.DatasourceKt.main(Datasource.kt) ```  ### Which version of ShardingSphere did you use? 4.0.0-RC2 4.0.0-RC3  ### Which project did you use? Sharding-JDBC or Sharding-Proxy? Sharding-JDBC  ### Expected behavior ```sql CREATE TABLE IF NOT EXISTS board (id BIGINT PRIMARY KEY, author_id BIGINT NOT NULL, title VARCHAR(100) NOT NULL, description VARCHAR(1000) NOT NULL, status INT NOT NULL, accessibility INT NOT NULL, create_time DATETIME(6) NOT NULL, update_time DATETIME(6) NOT NULL) ```  Failed.  ### Actual behavior It should create the table.  ### Reason analyze (If you can) `StreamQueryResult`  did not consider `resultSet` to be null. When executing create table sql, resultSet will be null.  ```java public final class StreamQueryResult implements QueryResult {          private final QueryResultMetaData metaData;          private final ResultSet resultSet;          @SneakyThrows     public StreamQueryResult(final ResultSet resultSet, final ShardingRule shardingRule) {         this.resultSet = resultSet;         metaData = new QueryResultMetaData(resultSet.getMetaData(), shardingRule);     }          @SneakyThrows     public StreamQueryResult(final ResultSet resultSet, final EncryptRule encryptRule) {         this.resultSet = resultSet;         metaData = new QueryResultMetaData(resultSet.getMetaData(), encryptRule);     }          @SneakyThrows     public StreamQueryResult(final ResultSet resultSet) {         this.resultSet = resultSet;         metaData = new QueryResultMetaData(resultSet.getMetaData());     }      ```  ### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc. Execute the following sql should reproduce the problem.  ```sql CREATE TABLE IF NOT EXISTS board (id BIGINT PRIMARY KEY, author_id BIGINT NOT NULL, title VARCHAR(100) NOT NULL, description VARCHAR(1000) NOT NULL, status INT NOT NULL, accessibility INT NOT NULL, create_time DATETIME(6) NOT NULL, update_time DATETIME(6) NOT NULL) ```  ### Example codes for reproduce this issue (such as a github link). </body>
		<created>2019-11-14 06:57:21</created>
		<closed>2019-11-21 07:01:29</closed>
	</bug>
	<bug>
		<id>3518</id>
		<title>A table without rules cannot get column information through "show full fields from table name"</title>
		<body>when I use statements that is "show full fields from table name“. if the table has rules , the result is column name of table. if the table has not rules , the result is nothing.  accessory： 1. shardingsphere version is 4.0R2</body>
		<created>2019-11-13 12:25:07</created>
		<closed>2019-11-19 15:12:33</closed>
	</bug>
	<bug>
		<id>3503</id>
		<title>dataencrypt feature with “java.sql.SQLDataException: Cannot determine value type from string 'NO'”</title>
		<body>## Bug Report  Hi I wanna use the data encrypt featur . I have try 4.0.0-RC2 the encrypt feature OK, but I encounter 2 issues. one is if the plain field is null , there would be output NULL exception, another one is if there is text field , also can't  works . https://github.com/apache/incubator-shardingsphere/issues/3017 those two issue would be released in 4.0.0-RC3, I download the source code , and maven install by myself. the two issues seams resolved , but a new issue occured.  Before report a bug, make sure you have:  Please answer these questions before submitting your issue. Thanks!  ### Which version of ShardingSphere did you use? 4.0.0-RC3     ### Which project did you use? Sharding-JDBC or Sharding-Proxy? sharding-jdbc  ### Expected behavior encrypt feature work well in my product env.  ### Actual behavior java project initial failed, exception occured, data source connect failed,   ### Reason analyze (If you can)  ### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc. LOG: Caused by: java.sql.SQLDataException: Cannot determine value type from string 'NO' at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:114) at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97) at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89) at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63) at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73) at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:96) at com.mysql.cj.jdbc.result.ResultSetImpl.getObject(ResultSetImpl.java:1382) at com.mysql.cj.jdbc.result.ResultSetImpl.getBoolean(ResultSetImpl.java:663) at com.mysql.cj.jdbc.result.ResultSetImpl.getBoolean(ResultSetImpl.java:669) at org.apache.shardingsphere.shardingjdbc.jdbc.core.context.EncryptRuntimeContext.getColumnMetaDataList(EncryptRuntimeContext.java:95) at org.apache.shardingsphere.shardingjdbc.jdbc.core.context.EncryptRuntimeContext.createEncryptTableMetas(EncryptRuntimeContext.java:72) at org.apache.shardingsphere.shardingjdbc.jdbc.core.context.EncryptRuntimeContext.&lt;init&gt;(EncryptRuntimeContext.java:64) at org.apache.shardingsphere.shardingjdbc.jdbc.core.datasource.EncryptDataSource.&lt;init&gt;(EncryptDataSource.java:42) at org.apache.shardingsphere.shardingjdbc.api.EncryptDataSourceFactory.createDataSource(EncryptDataSourceFactory.java:48) at org.apache.shardingsphere.shardingjdbc.spring.boot.SpringBootConfiguration.encryptDataSource(SpringBootConfiguration.java:123) at org.apache.shardingsphere.shardingjdbc.spring.boot.SpringBootConfiguration$$EnhancerBySpringCGLIB$$2c1faa12.CGLIB$encryptDataSource$2(&lt;generated&gt;) at org.apache.shardingsphere.shardingjdbc.spring.boot.SpringBootConfiguration$$EnhancerBySpringCGLIB$$2c1faa12$$FastClassBySpringCGLIB$$b7accd0c.invoke(&lt;generated&gt;) at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244) at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:363) at org.apache.shardingsphere.shardingjdbc.spring.boot.SpringBootConfiguration$$EnhancerBySpringCGLIB$$2c1faa12.encryptDataSource(&lt;generated&gt;) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source) at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) at java.lang.reflect.Method.invoke(Unknown Source) at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154) ... 171 common frames omitted Caused by: com.mysql.cj.exceptions.DataConversionException: Cannot determine value type from string 'NO' at com.mysql.cj.result.BooleanValueFactory.createFromBytes(BooleanValueFactory.java:116) at com.mysql.cj.result.BooleanValueFactory.createFromBytes(BooleanValueFactory.java:47) at com.mysql.cj.protocol.a.MysqlTextValueDecoder.decodeByteArray(MysqlTextValueDecoder.java:132) at com.mysql.cj.protocol.result.AbstractResultsetRow.decodeAndCreateReturnValue(AbstractResultsetRow.java:196) at com.mysql.cj.protocol.result.AbstractResultsetRow.getValueFromBytes(AbstractResultsetRow.java:241) at com.mysql.cj.protocol.a.result.TextBufferRow.getValue(TextBufferRow.java:132) at com.mysql.cj.jdbc.result.ResultSetImpl.getObject(ResultSetImpl.java:1270) ... 189 common frames omitted  ### Example codes for reproduce this issue (such as a github link). </body>
		<created>2019-11-12 03:02:38</created>
		<closed>2019-11-20 08:02:21</closed>
	</bug>
	<bug>
		<id>3480</id>
		<title>Sharding-JDBC "inline.algorithm-expression"  capital letter bug</title>
		<body>## Bug Report  **For English only**, other languages will not accept.  Before report a bug, make sure you have:  - Searched open and closed [GitHub issues](https://github.com/apache/incubator-shardingsphere/issues). - Read documentation: [ShardingSphere Doc](https://shardingsphere.apache.org/document/current/en/overview).  Please pay attention on issues you submitted, because we maybe need more details.  If no response **more than 7 days** and we cannot reproduce it on current information, we will **close it**.  Please answer these questions before submitting your issue. Thanks!  ### Which version of ShardingSphere did you use? 4.0.0-RC2 ### Which project did you use? Sharding-JDBC or Sharding-Proxy? Sharding-JDBC ### Expected behavior  ### Actual behavior  ### Reason analyze (If you can)  ### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc. ```java     @Column(name = "USER_ID", nullable = false)     private Long userId; ```  `sharding.jdbc.config.sharding.tables.MY_FRIEND.table-strategy.inline.algorithm-expression=test.MY_FRIEND_$-&gt;{USER_ID % 10}`  The precise-algorithm-class-name is good, but inline.algorithm-expression is error: **can't mod() null object** ### Example codes for reproduce this issue (such as a github link). </body>
		<created>2019-11-08 03:16:49</created>
		<closed>2019-11-18 10:09:26</closed>
	</bug>
	<bug>
		<id>3478</id>
		<title>Stackoverflowerror occurred in multiple queries through or condition</title>
		<body>version: 4.0.0-RC2 log info: 2019-11-08 09:49:01,215  INFO [main] SQL: select               PRODUCT_BRAND_ID, PRODUCT_ID, CATEGORY_ID, CATEGORY_ROW               from T_BASIC_PRODUCT_CATEGORY b          WHERE b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? ::: DataSources: slave1   Disconnected from the target VM, address: '127.0.0.1:59742', transport: 'socket'   java.lang.StackOverflowError at org.apache.shardingsphere.core.parse.core.extractor.util.ExtractorUtils.isMatchedNode(ExtractorUtils.java:138) at org.apache.shardingsphere.core.parse.core.extractor.util.ExtractorUtils.findFirstChildNodeNoneRecursive(ExtractorUtils.java:84) at org.apache.shardingsphere.core.parse.core.extractor.impl.dml.PredicateExtractor.extractRecursiveWithLogicalOperation(PredicateExtractor.java:69) at org.apache.shardingsphere.core.parse.core.extractor.impl.dml.PredicateExtractor.extractRecursiveWithLogicalOperation(PredicateExtractor.java:73) at org.apache.shardingsphere.core.parse.core.extractor.impl.dml.PredicateExtractor.extractRecursiveWithLogicalOperation(PredicateExtractor.java:73) at org.apache.shardingsphere.core.parse.core.extractor.impl.dml.PredicateExtractor.extractRecursiveWithLogicalOperation(PredicateExtractor.java:73) .....  DDL: CREATE TABLE `t_basic_product_category` (   `PRODUCT_BRAND_ID` bigint(20) NOT NULL COMMENT 'ID',   `PRODUCT_ID` bigint(20) DEFAULT NULL,   `CATEGORY_ID` bigint(20) DEFAULT NULL,   `CATEGORY_ROW` bigint(20) DEFAULT NULL,   PRIMARY KEY (`PRODUCT_BRAND_ID`),   KEY `INDEX_PRODUCT_ID` (`PRODUCT_ID`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8; </body>
		<created>2019-11-08 02:04:37</created>
		<closed>2019-11-15 07:52:52</closed>
	</bug>
	<bug>
		<id>3477</id>
		<title>User UI interaction without login for a long time</title>
		<body>## Bug Report  ### Steps to reproduce the behavior：  If you don't log in, go directly to the menu page, click on all kinds of connections and there is no response. You will only swipe to the first menu, and you will not jump to the login page directly, and the user name will be displayed in the upper right corner</body>
		<created>2019-11-07 13:03:40</created>
		<closed>2019-11-13 00:24:25</closed>
	</bug>
	<bug>
		<id>3449</id>
		<title>Proxy occurs NullPointerException when the SQL is empty String</title>
		<body>## Bug Report  ### Which version of ShardingSphere did you use? Sharding-Proxy 4.0.0-RC3-SNAPSHOT  ### Expected behavior When we use IDE, such as Navicat, we can execute the selected SQL by clicking 'Run Selected', but if nothing is selected at the time, the proxy will occur NullPointerException.  As Expected, it should not go wrong  ### Reason analyze (If you can) In SQLParserEngine.parse() method, when the SQL is empty, the ParseTree will be null, and then  occurs the exception. </body>
		<created>2019-11-05 06:25:48</created>
		<closed>2019-11-05 10:17:15</closed>
	</bug>
	<bug>
		<id>3424</id>
		<title>Sharding-JDBC 4.0.0-RC2 not support '~' Operator of PostgreSQL  </title>
		<body>## Bug Report  ### Which version of ShardingSphere did you use? 4.0.0-RC2  4.0.0-RC3  ### Which project did you use? Sharding-JDBC or Sharding-Proxy? Sharding-JDBC ### Expected behavior ```  org.apache.shardingsphere.core.exception.ShardingException: Cannot support multiple schemas in one SQL at org.apache.shardingsphere.core.optimize.api.segment.Tables.setSchema(Tables.java:61) at org.apache.shardingsphere.core.optimize.api.segment.Tables.&lt;init&gt;(Tables.java:53) at org.apache.shardingsphere.core.optimize.sharding.segment.condition.engine.WhereClauseShardingConditionEngine.createShardingConditions(WhereClauseShardingConditionEngine.java:76) at org.apache.shardingsphere.core.optimize.sharding.engnie.dml.ShardingSelectOptimizeEngine.optimize(ShardingSelectOptimizeEngine.java:58) at org.apache.shardingsphere.core.optimize.sharding.engnie.dml.ShardingSelectOptimizeEngine.optimize(ShardingSelectOptimizeEngine.java:47) at org.apache.shardingsphere.core.route.router.sharding.ParsingSQLRouter.route(ParsingSQLRouter.java:72) at org.apache.shardingsphere.core.route.PreparedStatementRoutingEngine.route(PreparedStatementRoutingEngine.java:66) at org.apache.shardingsphere.core.PreparedQueryShardingEngine.route(PreparedQueryShardingEngine.java:60) at org.apache.shardingsphere.core.BaseShardingEngine.executeRoute(BaseShardingEngine.java:86) at org.apache.shardingsphere.core.BaseShardingEngine.shard(BaseShardingEngine.java:70) at org.apache.shardingsphere.shardingjdbc.jdbc.core.statement.ShardingPreparedStatement.shard(ShardingPreparedStatement.java:224) at org.apache.shardingsphere.shardingjdbc.jdbc.core.statement.ShardingPreparedStatement.execute(ShardingPreparedStatement.java:170) ``` ### SQL  ```SQL  select count(1)  from (           select h.id, p.id, o.id           from t_household h,                t_project p,                t_sys_org o           where h.project_id = p.id             and o.id = p.gov_org_id             and o.parent_ids ~ (',1087190707023683585,')           order by o.id) as total ```  ### Reason analyze (If you can) If I replace `~` with `LIKE`,  is ok.  In `Tables` class, the program treats alias as schema:` h.id, p.id, o.id`     </body>
		<created>2019-10-31 08:27:16</created>
		<closed>2019-11-04 11:44:59</closed>
	</bug>
	<bug>
		<id>3419</id>
		<title>Using Sharding-Proxy to insert orrcurs error when using JDBC  PreparedStatement  in backend database  PostgreSQL</title>
		<body>## Bug Report  **For English only**, other languages will not accept.  Before report a bug, make sure you have:  - Searched open and closed [GitHub issues](https://github.com/apache/incubator-shardingsphere/issues). - Read documentation: [ShardingSphere Doc](https://shardingsphere.apache.org/document/current/en/overview).  Please pay attention on issues you submitted, because we maybe need more details.  If no response **more than 7 days** and we cannot reproduce it on current information, we will **close it**.  Please answer these questions before submitting your issue. Thanks!  ### Which version of ShardingSphere did you use? 4.0.0-rc3 ### Which project did you use? Sharding-JDBC or Sharding-Proxy? Sharding-Proxy ### Expected behavior Successfully inserted a record ### Actual behavior No this record in table ### Reason analyze (If you can)  ### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.     - use database: postgresql     - sql to execute: INSERT INTO t_encrypt(pwd,content) VALUES(?,?)     - Statement: PreparedStatement      config: ![微信截图_20191031104012](https://user-images.githubusercontent.com/46469719/67914377-e70f0e80-fbca-11e9-8624-cd743baccbcf.png)  exception: ![微信截图_20191031104221](https://user-images.githubusercontent.com/46469719/67914457-24739c00-fbcb-11e9-99d4-bbc5b8cb17bf.png)  ### Example codes for reproduce this issue (such as a github link). `DataSource source = DataSourceFactory.newRawJDBCDataSource()                 .dbType(DatabaseType.POSTGRESQL)                 .dataSourceName("MyEncrypt")                 .host("localhost")                 .port(3307)                 .userName("root")                 .password("root")                 .create();         Connection connection = source.getConnection();         PreparedStatement statement = connection.prepareStatement("INSERT INTO t_encrypt(pwd,content) VALUES(?,?)");         statement.setString(1,"password");         statement.setString(2,"this is encrypt test");         statement.executeUpdate();`</body>
		<created>2019-10-31 02:55:47</created>
		<closed>2019-11-19 08:20:00</closed>
	</bug>
	<bug>
		<id>3404</id>
		<title> Insert failed when inserted sql contains “code” column</title>
		<body>### Which version of ShardingSphere did you use? 4.0.0-RC3-SNAPSHOT ### Which project did you use? Sharding-JDBC or Sharding-Proxy? Sharding-JDBC  ### Expected behavior insert successfully ### Actual behavior org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.PersistenceException:  Error updating database.  Cause: java.lang.IllegalStateException The error may involve com.msxf.crm.workbench.dao.mapper.mdm.DemoMapper.insert-Inline The error occurred while setting parameters SQL: insert into w_demo (id,code,name,create_time, create_id, create_name,update_time, update_id, update_name,deleted)     values (?, ?, ?,       ?, ?, ?,       ?, ?, ?,       ?) Cause: java.lang.IllegalStateException ### Reason analyze (If you can) antlr parse error: **line 1:23 no viable alternative at input '(id,code'** ### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc. Error SQL: insert into w_demo (id,**code**,name,create_time, create_id, create_name,update_time, update_id, update_name,deleted) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)   SQL like this is ok: ![image](https://user-images.githubusercontent.com/8772975/67833500-c5a51880-fb1f-11e9-890d-cec4668f87ca.png)  The insertValues is null： ![1](https://user-images.githubusercontent.com/8772975/67833396-74952480-fb1f-11e9-994c-5c764f10c615.png) ### Example codes for reproduce this issue (such as a github link). </body>
		<created>2019-10-30 06:17:29</created>
		<closed>2019-10-31 02:16:23</closed>
	</bug>
	<bug>
		<id>3397</id>
		<title>Execute "SHOW VARIABLES LIKE 'lower_case_%'" case QueryHeader.java throw NullPointerException</title>
		<body>## Bug Report  **For English only**, other languages will not accept.  Before report a bug, make sure you have:  - Searched open and closed [GitHub issues](https://github.com/apache/incubator-shardingsphere/issues). - Read documentation: [ShardingSphere Doc](https://shardingsphere.apache.org/document/current/en/overview).  Please pay attention on issues you submitted, because we maybe need more details.  If no response **more than 7 days** and we cannot reproduce it on current information, we will **close it**.  Please answer these questions before submitting your issue. Thanks!  ### Which version of ShardingSphere did you use? 4.0.0-RC3 ### Which project did you use? Sharding-JDBC or Sharding-Proxy? Sharding-Proxy ### Expected behavior execute SHOW VARIABLES LIKE 'lower_case_%' sql and return right result. ### Actual behavior throw NullPointerException ### Reason analyze (If you can) `QueryHeader.java` throw this exception in 70 line. the `TableMetas` doesn't contains `VARIABLES` table, so the program throw NullPointerException. This problem case in this PR #3379 , and I will fix it right now. ### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc. SHOW VARIABLES LIKE 'lower_case_%' ### Example codes for reproduce this issue (such as a github link). </body>
		<created>2019-10-29 11:55:27</created>
		<closed>2019-10-30 03:24:33</closed>
	</bug>
	<bug>
		<id>3374</id>
		<title>Insert disordered when the configuration order of cipher columns in encryption rules inconsistent with the order of inserted sql</title>
		<body>### Which version of ShardingSphere did you use? 4.0.0-RC3-SNAPHOT ### Which project did you use? Sharding-JDBC or Sharding-Proxy? Sharding-JDBC ### Expected behavior When the configuration order of cipher columns in encryption rules inconsistent with the order of  inserted sql, the value of the original columns can save to db orderedly . ### Actual behavior the value of the original columns are disordered. ### Reason analyze (If you can) Rewrite the encrypted SQL using the column order in the encryption configuration.  ### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.  INSERT INTO t_account(account_id, certificate_number, password, amount, status) VALUES... **the order ins sql is certificate_number、password、amount** ![image](https://user-images.githubusercontent.com/8772975/67558823-4f349f00-f74a-11e9-87b4-f88497e2331d.png)  **the order in encryption rules is certificate_number、password、amount** this case is ok!  **but, if the order in sql is not 'certificate_number、password、amount' ， the order of this case is not ok!**  We can not guarantee that the order of columns in sql is consistent with the data in encryption rules  ### Example codes for reproduce this issue (such as a github link). </body>
		<created>2019-10-25 09:24:58</created>
		<closed>2019-10-25 12:39:11</closed>
	</bug>
	<bug>
		<id>3370</id>
		<title>oracle load meta data get index info user schema error</title>
		<body>## Bug Report  ### Which version of ShardingSphere did you use?  4.0.0-RC2  ### Which project did you use? Sharding-JDBC or Sharding-Proxy?  Sharding-JDBC  ### Expected behavior  ### Actual behavior  ### Reason analyze (If you can) ```java  private Collection&lt;String&gt; getLogicIndexes(final Connection connection, final String catalog, final String actualTableName) throws SQLException {         Collection&lt;String&gt; result = new HashSet&lt;&gt;();         try (ResultSet resultSet = connection.getMetaData().getIndexInfo(catalog, catalog, actualTableName, false, false)) {             while (resultSet.next()) {                 Optional&lt;String&gt; logicIndex = getLogicIndex(resultSet.getString("INDEX_NAME"), actualTableName);                 if (logicIndex.isPresent()) {                     result.add(logicIndex.get());                 }             }         }         return result;     } ``` ```java    ResultSet getIndexInfo(String catalog, String schema, String table, boolean unique, boolean approximate)         throws SQLException; ``` oracle catalog is sid ，the second param is scheam，is not sid  ### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.  ### Example codes for reproduce this issue (such as a github link). </body>
		<created>2019-10-25 05:52:47</created>
		<closed>2019-11-20 08:01:22</closed>
	</bug>
	<bug>
		<id>3365</id>
		<title>The dataSourceProperties property of the HikariDataSource is not correctly written.</title>
		<body>Spring Boot 2.1.9 ShardingSphere 4.0.0-RC2  application.yml： master:   type: com.zaxxer.hikari.HikariDataSource   driver-class-name: com.mysql.cj.jdbc.Driver   jdbc-url: jdbc:mysql://192.168.177.128:3306/atom?serverTimezone=UTC&amp;useUnicode=true&amp;useSSL=false&amp;characterEncoding=utf-8   username: root   password: 123456   auto-commit: true   connection-timeout: 30000   idle-timeout: 600000   max-lifetime: 1800000   maximum-pool-size: 10   data-source-properties: {cachePrepStmts: true, prepStmtCacheSize: 250, prepStmtCacheSqlLimit: 2048, useServerPrepStmts: true}  There is another： data-source-properties:   cachePrepStmts: true   prepStmtCacheSize: 250   prepStmtCacheSqlLimit: 2048   useServerPrepStmts: true   useLocalSessionState: true   rewriteBatchedStatements: true   cacheResultSetMetadata: true   cacheServerConfiguration: true   elideSetAutoCommits: true   maintainTimeStats: false  The dataSourceProperties property of HikariDataSource is not correctly written. Debug is empty</body>
		<created>2019-10-24 23:14:11</created>
		<closed>2019-10-28 02:58:15</closed>
	</bug>
	<bug>
		<id>3362</id>
		<title>default configuration such as [defaultDataSourceName] set default value is better？</title>
		<body>## Feature Request ### Is your feature request related to a problem? yes,  version of ShardingSphere: **4.0.0-RC3-SNAPSHOT** project: Sharding-Proxy The problem:  when I use navicat connect Sharding-Proxy, Executing a SQL： ［SELECT QUERY_ID, SUM(DURATION) AS SUM_DURATION FROM INFORMATION_SCHEMA.PROFILING GROUP BY QUERY_ID;］the sql result throw Exception:  [INFO ] 19:59:49.313 [ShardingSphere-Command-5] o.a.s.s.f.m.c.MySQLCommandExecutorFactory - Execute packet type: COM_QUERY, value: MySQLComQueryPacket(sql=SELECT QUERY_ID, SUM(DURATION) AS SUM_DURATION FROM INFORMATION_SCHEMA.PROFILING GROUP BY QUERY_ID;) [ERROR] 19:59:49.898 [ShardingSphere-Command-5] o.a.s.s.f.c.CommandExecutorTask - Exception occur:  java.lang.NullPointerException: null at org.apache.shardingsphere.shardingproxy.backend.communication.jdbc.datasource.JDBCBackendDataSource.createConnection(JDBCBackendDataSource.java:153) at org.apache.shardingsphere.shardingproxy.backend.communication.jdbc.datasource.JDBCBackendDataSource.getConnections(JDBCBackendDataSource.java:126) at org.apache.shardingsphere.shardingproxy.backend.communication.jdbc.connection.BackendConnection.getConnectionFromUnderlying(BackendConnection.java:198) at org.apache.shardingsphere.shardingproxy.backend.communication.jdbc.connection.BackendConnection.getConnectionsWithoutTransaction(BackendConnection.java:181) at org.apache.shardingsphere.shardingproxy.backend.communication.jdbc.connection.BackendConnection.getConnections(BackendConnection.java:150) at org.apache.shardingsphere.shardingproxy.backend.communication.jdbc.execute.callback.ProxyJDBCExecutePrepareCallback.getConnections(ProxyJDBCExecutePrepareCallback.java:56) at org.apache.shardingsphere.core.execute.sql.prepare.SQLExecutePrepareTemplate.getSQLExecuteGroups(SQLExecutePrepareTemplate.java:89) at org.apache.shardingsphere.core.execute.sql.prepare.SQLExecutePrepareTemplate.getSynchronizedExecuteUnitGroups(SQLExecutePrepareTemplate.java:67) at org.apache.shardingsphere.core.execute.sql.prepare.SQLExecutePrepareTemplate.getExecuteUnitGroups(SQLExecutePrepareTemplate.java:59) at org.apache.shardingsphere.shardingproxy.backend.communication.jdbc.execute.JDBCExecuteEngine.execute(JDBCExecuteEngine.java:80) at org.apache.shardingsphere.shardingproxy.backend.communication.jdbc.JDBCDatabaseCommunicationEngine.execute(JDBCDatabaseCommunicationEngine.java:93) at org.apache.shardingsphere.shardingproxy.backend.communication.jdbc.JDBCDatabaseCommunicationEngine.execute(JDBCDatabaseCommunicationEngine.java:78) at org.apache.shardingsphere.shardingproxy.backend.text.query.QueryBackendHandler.execute(QueryBackendHandler.java:54) at org.apache.shardingsphere.shardingproxy.frontend.mysql.command.query.text.query.MySQLComQueryPacketExecutor.execute(MySQLComQueryPacketExecutor.java:72) at org.apache.shardingsphere.shardingproxy.frontend.command.CommandExecutorTask.executeCommand(CommandExecutorTask.java:87) at org.apache.shardingsphere.shardingproxy.frontend.command.CommandExecutorTask.run(CommandExecutorTask.java:67) at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) at java.lang.Thread.run(Thread.java:748)  I debug the source,find the reason: the file:[config-sharding.yaml] the part :[shardingRule] not configured [defaultDataSourceName] ,because the table [PROFILING] not configured in [shardingRule],so when the table [PROFILING] sharding it used defaultDataSource.  ### Describe the feature you would like. I see the source,find that the class[ShardingRuleConfiguration] has some default configuration,like [defaultDataSourceName],[defaultDatabaseShardingStrategyConfig] and so on,I think when the Sharding-Proxy start,like default configuration such as [defaultDataSourceName] set default value is better？</body>
		<created>2019-10-24 12:15:12</created>
		<closed>2019-11-14 02:06:11</closed>
	</bug>
	<bug>
		<id>3361</id>
		<title>sharding-proxy is wrong to use nacos.</title>
		<body>Bug Report Which version of ShardingSphere did you use? 4.0.0-RC3-SNAPSHOT  Which project did you use? Sharding-JDBC or Sharding-Proxy? Sharding-proxy  Expected behavior Write configured into nacos should correct。  NacosRegistryCenter.getDirectly(final String key)-&gt;configService.getConfig(dataId, group, timeoutMs)  is not null.  Actual behavior ``` [INFO ] 19:39:31.676 [main] o.a.s.core.util.ConfigurationLogger - ShardingRuleConfiguration bindingTables: - t_order,t_order_item defaultDatabaseStrategy:   inline:     algorithmExpression: ds_${user_id % 2}     shardingColumn: user_id tables:   t_order:     actualDataNodes: ds_${0..1}.t_order_${0..1}     keyGenerator:       column: order_id       type: SNOWFLAKE     logicTable: t_order     tableStrategy:       inline:         algorithmExpression: t_order_${order_id % 2}         shardingColumn: order_id   t_order_item:     actualDataNodes: ds_${0..1}.t_order_item_${0..1}     keyGenerator:       column: order_item_id       type: SNOWFLAKE     logicTable: t_order_item     tableStrategy:       inline:         algorithmExpression: t_order_item_${order_id % 2}         shardingColumn: order_id  [INFO ] 19:39:35.978 [main] o.a.s.core.util.ConfigurationLogger - Authentication users:   root:     authorizedSchemas: ''   sharding:     authorizedSchemas: ''     password: sharding  [INFO ] 19:39:35.979 [main] o.a.s.core.util.ConfigurationLogger - Properties executor.size: 16 proxy.transaction.type: LOCAL sql.show: true proxy.opentracing.enabled: false query.with.cipher.column: true proxy.frontend.flush.threshold: 128 acceptor.size: 16 max.connections.size.per.query: 1 proxy.hint.enabled: false  Exception in thread "main" java.lang.NullPointerException at com.google.common.base.Preconditions.checkNotNull(Preconditions.java:210) at com.google.common.base.Joiner.toString(Joiner.java:433) at com.google.common.base.Joiner.appendTo(Joiner.java:111) at com.google.common.base.Joiner.appendTo(Joiner.java:152) at com.google.common.base.Joiner.join(Joiner.java:193) at com.google.common.base.Joiner.join(Joiner.java:183) at com.google.common.base.Joiner.join(Joiner.java:209) at org.apache.shardingsphere.orchestration.internal.registry.config.node.ConfigurationNode.getFullPath(ConfigurationNode.java:97) at org.apache.shardingsphere.orchestration.internal.registry.config.node.ConfigurationNode.getDataSourcePath(ConfigurationNode.java:65) at org.apache.shardingsphere.orchestration.internal.registry.config.service.ConfigurationService.loadDataSourceConfigurations(ConfigurationService.java:197) at org.apache.shardingsphere.shardingproxy.Bootstrap.getSchemaDataSourceParameterMap(Bootstrap.java:127) at org.apache.shardingsphere.shardingproxy.Bootstrap.startWithRegistryCenter(Bootstrap.java:116) at org.apache.shardingsphere.shardingproxy.Bootstrap.main(Bootstrap.java:83)  ``` </body>
		<created>2019-10-24 11:51:10</created>
		<closed>2020-02-25 10:18:52</closed>
	</bug>
	<bug>
		<id>3358</id>
		<title>Parse MySQL unreserved keywords `context` error</title>
		<body>## Bug Report  ### Which version of ShardingSphere did you use?  4.0.0-RC3-SNAPSHOT  ### Which project did you use? Sharding-JDBC or Sharding-Proxy?  Sharding-JDBC   ### Expected behavior  can parse MySQL unreserved keywords `context`  ### Actual behavior  ``` line 1:63 extraneous input 'context' expecting {'(', TRUNCATE, INDEX, CONSTRAINT, PRIMARY, UNIQUE, FOREIGN, KEY, POSITION, VIEW, USING, ANY, OFFSET, BEGIN, COMMIT, ROLLBACK, SAVEPOINT, BOOLEAN, DATE, TIME, TIMESTAMP, YEAR, QUARTER, MONTH, WEEK, DAY, HOUR, MINUTE, SECOND, MICROSECOND, MAX, MIN, SUM, COUNT, AVG, CURRENT, ENABLE, DISABLE, INSTANCE, DO, DEFINER, CASCADED, LOCAL, CLOSE, OPEN, NEXT, NAME, TYPE, TABLES, TABLESPACE, COLUMNS, FIELDS, INDEXES, STATUS, MODIFY, VALUE, DUPLICATE, FIRST, LAST, AFTER, OJ, ACCOUNT, USER, ROLE, START, TRANSACTION, WITHOUT, ESCAPE, SUBPARTITION, STORAGE, SUPER, TEMPORARY, THAN, UNBOUNDED, UPGRADE, VALIDATION, ROLLUP, SOUNDS, UNKNOWN, OFF, ALWAYS, CHECK, COMMITTED, LEVEL, NO, PASSWORD, PRIVILEGES, ACTION, ALGORITHM, AUTOCOMMIT, BTREE, CHAIN, CHARSET, CHECKSUM, CIPHER, CLIENT, COALESCE, COMMENT, COMPACT, COMPRESSED, COMPRESSION, CONNECTION, CONSISTENT, DATA, DISCARD, DISK, ENCRYPTION, END, ENGINE, EVENT, EXCHANGE, EXECUTE, FILE, FIXED, FOLLOWING, FULLTEXT, GLOBAL, HASH, IMPORT_, LESS, MEMORY, NONE, PARSER, PARTIAL, PARTITIONING, PERSIST, PRECEDING, PROCESS, PROXY, QUICK, REBUILD, REDUNDANT, RELOAD, REMOVE, REORGANIZE, REPAIR, REVERSE, SESSION, SHUTDOWN, SIMPLE, SLAVE, SPATIAL, VISIBLE, INVISIBLE, ENFORCED, AGAINST, LANGUAGE, MODE, QUERY, EXTENDED, EXPANSION, VARIANCE, MAX_ROWS, MIN_ROWS, SQL_BIG_RESULT, SQL_BUFFER_RESULT, SQL_CACHE, SQL_NO_CACHE, STATS_AUTO_RECALC, STATS_PERSISTENT, STATS_SAMPLE_PAGES, ROW_FORMAT, WEIGHT_STRING, COLUMN_FORMAT, INSERT_METHOD, KEY_BLOCK_SIZE, PACK_KEYS, PERSIST_ONLY, BIT_AND, BIT_OR, BIT_XOR, GROUP_CONCAT, JSON_ARRAYAGG, JSON_OBJECTAGG, STD, STDDEV, STDDEV_POP, STDDEV_SAMP, VAR_POP, VAR_SAMP, AUTO_INCREMENT, AVG_ROW_LENGTH, DELAY_KEY_WRITE, ROTATE, MASTER, BINLOG, ERROR, SCHEDULE, COMPLETION, EVERY, HOST, SOCKET, PORT, SERVER, WRAPPER, OPTIONS, OWNER, RETURNS, CONTAINS, SECURITY, INVOKER, TEMPTABLE, MERGE, UNDEFINED, DATAFILE, FILE_BLOCK_SIZE, EXTENT_SIZE, INITIAL_SIZE, AUTOEXTEND_SIZE, MAX_SIZE, NODEGROUP, WAIT, LOGFILE, UNDOFILE, UNDO_BUFFER_SIZE, REDO_BUFFER_SIZE, HANDLER, PREV, ORGANIZATION, DEFINITION, DESCRIPTION, REFERENCE, FOLLOWS, PRECEDES, IMPORT, CONCURRENT, XML, DUMPFILE, SHARE, CLONE, AGGREGATE, INSTALL, UNINSTALL, RESOURCE, EXPIRE, NEVER, HISTORY, OPTIONAL, REUSE, MAX_QUERIES_PER_HOUR, MAX_UPDATES_PER_HOUR, MAX_CONNECTIONS_PER_HOUR, MAX_USER_CONNECTIONS, RETAIN, RANDOM, OLD, ISSUER, SUBJECT, CACHE, GENERAL, SLOW, USER_RESOURCES, EXPORT, RELAY, HOSTS, FLUSH, RESET, RESTART, UNIX_TIMESTAMP, LOWER, IDENTIFIER_}  ### SQL: INSERT INTO t_config (id, context) VALUES (?, ?); ### Cause: java.lang.IllegalStateException at org.apache.ibatis.exceptions.ExceptionFactory.wrapException(ExceptionFactory.java:30) at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:200) at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433) ... 9 more Caused by: java.lang.IllegalStateException at com.google.common.base.Preconditions.checkState(Preconditions.java:158) at org.apache.shardingsphere.core.rewrite.feature.encrypt.token.generator.impl.EncryptForInsertColumnsTokenGenerator.generateNewSQLToken(EncryptForInsertColumnsTokenGenerator.java:93) at org.apache.shardingsphere.core.rewrite.feature.encrypt.token.generator.impl.EncryptForInsertColumnsTokenGenerator.generateSQLToken(EncryptForInsertColumnsTokenGenerator.java:66) at org.apache.shardingsphere.core.rewrite.feature.encrypt.token.generator.impl.EncryptForInsertColumnsTokenGenerator.generateSQLToken(EncryptForInsertColumnsTokenGenerator.java:46) at org.apache.shardingsphere.core.rewrite.sql.token.generator.SQLTokenGenerators.generateSQLTokens(SQLTokenGenerators.java:78) at org.apache.shardingsphere.core.rewrite.context.SQLRewriteContext.generateSQLTokens(SQLRewriteContext.java:85) at org.apache.shardingsphere.core.BaseShardingEngine.rewriteAndConvert(BaseShardingEngine.java:115) at org.apache.shardingsphere.core.BaseShardingEngine.shard(BaseShardingEngine.java:75) at org.apache.shardingsphere.shardingjdbc.jdbc.core.statement.ShardingPreparedStatement.shard(ShardingPreparedStatement.java:222) at org.apache.shardingsphere.shardingjdbc.jdbc.core.statement.ShardingPreparedStatement.execute(ShardingPreparedStatement.java:163) at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46) at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74) at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50) at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117) at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76) at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198) ... 15 more  ```  ### Reason analyze (If you can)  MySQL g4 file set `context` as a keywords but do not set it as unreserved. So parse failed.  ### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.  SQL: INSERT INTO t_config (id, context) VALUES (?, ?); </body>
		<created>2019-10-24 10:16:16</created>
		<closed>2019-10-24 14:58:31</closed>
	</bug>
	<bug>
		<id>3352</id>
		<title>Encrypt error when associated query with same column name.</title>
		<body>## Bug Report  ### Which version of ShardingSphere did you use?  4.0.0-RC3-SNAPSHOT  ### Which project did you use? Sharding-JDBC or Sharding-Proxy?  Sharding-JDBC  ### Expected behavior  associated query and decrypt successully.  ### Actual behavior  ``` Exception in thread "main" javax.crypto.IllegalBlockSizeException: Input length must be multiple of 16 when decrypting with padded cipher at com.sun.crypto.provider.CipherCore.doFinal(CipherCore.java:936) at com.sun.crypto.provider.CipherCore.doFinal(CipherCore.java:847) at com.sun.crypto.provider.AESCipher.engineDoFinal(AESCipher.java:446) at javax.crypto.Cipher.doFinal(Cipher.java:2165) at org.apache.shardingsphere.core.strategy.encrypt.impl.AESShardingEncryptor.decrypt(AESShardingEncryptor.java:72) at org.apache.shardingsphere.core.execute.sql.execute.result.StreamQueryResult.decrypt(StreamQueryResult.java:164) at org.apache.shardingsphere.core.execute.sql.execute.result.StreamQueryResult.getValue(StreamQueryResult.java:72) at org.apache.shardingsphere.core.merge.dql.common.StreamMergedResult.getValue(StreamMergedResult.java:49) at org.apache.shardingsphere.shardingjdbc.jdbc.core.resultset.EncryptResultSet.getString(EncryptResultSet.java:181) at org.apache.shardingsphere.example.core.jdbc.repository.OrderItemRepositoryImpl.getOrderItems(OrderItemRepositoryImpl.java:114) at org.apache.shardingsphere.example.core.jdbc.repository.OrderItemRepositoryImpl.selectAll(OrderItemRepositoryImpl.java:101) at org.apache.shardingsphere.example.core.jdbc.service.OrderServiceImpl.printData(OrderServiceImpl.java:152) at org.apache.shardingsphere.example.core.jdbc.service.OrderServiceImpl.processSuccess(OrderServiceImpl.java:95) at org.apache.shardingsphere.example.core.api.ExampleExecuteTemplate.run(ExampleExecuteTemplate.java:29) at org.apache.shardingsphere.example.orchestration.raw.jdbc.JavaConfigurationExampleMain.main(JavaConfigurationExampleMain.java:60) ```  ### Reason analyze (If you can)  the join tables has same column name, the column in first table is encrypted and in second not encrypted, but encryptor will try to decrypt the second table's column.  ### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.  - encrypt configuration: ```     private EncryptRuleConfiguration getEncryptRuleConfiguration() {         EncryptRuleConfiguration result = new EncryptRuleConfiguration();         Properties properties = new Properties();         properties.setProperty("aes.key.value", "123456");         EncryptorRuleConfiguration aesRuleConfiguration = new EncryptorRuleConfiguration("aes", properties);         EncryptColumnRuleConfiguration columnConfigAes = new EncryptColumnRuleConfiguration("", "status", "", "status_encryptor");         Map&lt;String, EncryptColumnRuleConfiguration&gt; columns = new HashMap&lt;&gt;();         EncryptTableRuleConfiguration tableConfig = new EncryptTableRuleConfiguration(columns);         columns.put("status", columnConfigAes);         tableConfig.getColumns().putAll(columns);         result.getEncryptors().put("status_encryptor", aesRuleConfiguration);         result.getTables().put("t_order", tableConfig);         return result;     } ```  - table structure: ``` CREATE TABLE IF NOT EXISTS t_order (   order_id   BIGINT NOT NULL AUTO_INCREMENT,   user_id    INT    NOT NULL,   address_id BIGINT NOT NULL,   status     VARCHAR(50),   PRIMARY KEY (order_id) )  CREATE TABLE IF NOT EXISTS t_order_item (   order_item_id BIGINT NOT NULL AUTO_INCREMENT,   order_id      BIGINT NOT NULL,   user_id       INT    NOT NULL,   status        VARCHAR(50),   PRIMARY KEY (order_item_id) ) ```  - sql: ``` SELECT i.* FROM t_order o, t_order_item i WHERE o.order_id = i.order_id ```  ### Example codes for reproduce this issue (such as a github link).  https://github.com/apache/incubator-shardingsphere-example  module orchestration-raw-jdbc-example </body>
		<created>2019-10-24 06:46:44</created>
		<closed>2020-06-18 08:33:38</closed>
	</bug>
	<bug>
		<id>3340</id>
		<title>Rewrite error if sharding + encrypt for insert without columns</title>
		<body>For example, the SQL is:  ``` INSERT INTO xxx VALUES (?, ?, ?), (?, ?, ?) ```  If generate key with encrypt column together, encrypt logic cannot find correct columns sequence from metadata.</body>
		<created>2019-10-21 12:55:39</created>
		<closed>2019-10-21 14:10:48</closed>
	</bug>
	<bug>
		<id>3335</id>
		<title>Rewrite error if sharding + encrypt for table name as owner of column</title>
		<body>For example, the sql is:  ``` SELECT t_account.password FROM t_account WHERE t_account.account_id = 1 AND t_account.password = 'aaa' ```  if `t_account` is a sharding table which need to rewrite to `t_account_1`, and `password` is a encrypt column which need to rewrite to `password_cipher`, the SQL can not be processed correct when sharding and encrypt use together.</body>
		<created>2019-10-20 14:53:19</created>
		<closed>2019-10-21 03:03:18</closed>
	</bug>
	<bug>
		<id>3318</id>
		<title>Wrong rewritten SQL for encrypt insert SQL without parameters</title>
		<body>## Bug Report  **For English only**, other languages will not accept.  Before report a bug, make sure you have:  - Searched open and closed [GitHub issues](https://github.com/apache/incubator-shardingsphere/issues). - Read documentation: [ShardingSphere Doc](https://shardingsphere.apache.org/document/current/en/overview).  Please pay attention on issues you submitted, because we maybe need more details.  If no response **more than 7 days** and we cannot reproduce it on current information, we will **close it**.  Please answer these questions before submitting your issue. Thanks!  ### Which version of ShardingSphere did you use? 4.0.0-RC2 ### Which project did you use? Sharding-JDBC or Sharding-Proxy?  ### Expected behavior  &lt;!-- FIXME --&gt;     &lt;!--&lt;rewrite-assertion id="insert_values_with_columns_without_id_for_parameters"&gt;--&gt;         &lt;!--&lt;input sql="INSERT INTO t_account(password, amount, status) VALUES (?, ?, ?), ('bbb', 2000, 'OK'), (?, ?, ?), ('ddd', 4000, 'OK')" parameters="aaa, 1000, OK, ccc, 3000, OK" /&gt;--&gt;         &lt;!--&lt;output sql="INSERT INTO t_account_1(cipher_password, cipher_amount, status, account_id, assisted_query_password) VALUES (?, ?, ?, ?, ?), ('encrypt_bbb', 'encrypt_2000', 'OK', ?, 'assisted_query_bbb'), (?, ?, ?, ?, ?), ('encrypt_ddd', 'encrypt_4000', 'OK', ?, 'assisted_query_ddd')" parameters="encrypt_aaa, encrypt_1000, OK, 1, assisted_query_aaa, 1, encrypt_ccc, encrypt_3000, OK, 1, assisted_query_ccc, 1" /&gt;--&gt;     &lt;!--&lt;/rewrite-assertion&gt;--&gt; ### Actual behavior  ### Reason analyze (If you can)  ### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.  ### Example codes for reproduce this issue (such as a github link). </body>
		<created>2019-10-17 10:32:46</created>
		<closed>2019-10-17 11:06:07</closed>
	</bug>
	<bug>
		<id>3311</id>
		<title>tinyint(1) column type will result in a booleam value in the query data</title>
		<body>Project: Sharding-proxy Version: v4.0.0-RC3  ## Question when the table column type be set to tinyint(1), the query result set of this column will be set to '1'. but it's ok with tinyint(2) or tinyint(3). This bug seems to be issued in v3.1.0 and i was told that it will be resolved in the later version.  mysql&gt; desc test2; +-------+------------------+------+------+---------+----------------+ | Field | Type             | Null | Key  | Default | Extra          | +-------+------------------+------+------+---------+----------------+ | id    | int(10) unsigned | NO   | PRI  | NULL    | auto_increment | | ctype | **tinyint(1)**       | NO   |      | 0       |                | +-------+------------------+------+------+---------+----------------+  mysql&gt; insert into test2 values(1,1),(2,2),(3,0),(4,1),(5,2); Query OK, 5 rows affected (0.13 sec)  In command line mode, no value will return. mysql&gt; select * from test2; +------+-------+ | id   | ctype | +------+-------+ |    1 |      | |    2 |      | |    3 |       | |    4 |      | |    5 |      | +------+-------+ 5 rows in set (0.03 sec)  In navicate query result, will get a booleam value except value '0' ![微信图片_20191017164947](https://user-images.githubusercontent.com/48242833/66993440-2aaf4600-f0fe-11e9-966f-8684d351aca2.png)  when set to tinyint(2), the query result is ok. mysql&gt; alter table test2 modify ctype tinyint(2) not null default 0 comment '类型'; Query OK, 0 rows affected (0.06 sec) mysql&gt; select * from test2; +------+-------+ | id   | ctype | +------+-------+ |    1 |     1 | |    2 |     2 | |    3 |     0 | |    4 |     1 | |    5 |     2 | +------+-------+ 5 rows in set (0.02 sec) mysql&gt;  </body>
		<created>2019-10-17 08:51:34</created>
		<closed>2019-10-22 02:43:23</closed>
	</bug>
	<bug>
		<id>3309</id>
		<title> Encryption rules do not support uppercase fields</title>
		<body>## Bug Report  ### Which version of ShardingSphere did you use? 4.0.0-RC3-SNAPSHOT  ### Which project did you use? Sharding-JDBC or Sharding-Proxy? Sharding-JDBC  ### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.  Sql: ```  &lt;insert id="saveSysUser" parameterType="com.mlt.demo.entity.SysUser"&gt; insert into SYS_USER (ID,  NAME,  AGE) values (#{id,jdbcType=VARCHAR},                 #{name,jdbcType=VARCHAR},                 #{age,jdbcType=VARCHAR} ) &lt;/insert&gt; ```  Config:  ``` spring:   shardingsphere:     datasource:     ···          encrypt:       encryptors:         encryptor_aes:           type: aes           props:             aes.key.value: aes-dg         encryptor_md5:           type: md5       tables:         SYS_USER:           columns:             AGE:               plainColumn: AGE               cipherColumn: AGE_CIPHER               encryptor: encryptor_aes ```  error:  ```Caused by: java.lang.ArrayIndexOutOfBoundsException: -1 at java.util.ArrayList.elementData(ArrayList.java:422) at java.util.ArrayList.get(ArrayList.java:435) at org.apache.shardingsphere.core.preprocessor.segment.insert.InsertValueContext.getValue(InsertValueContext.java:86) at org.apache.shardingsphere.core.rewrite.feature.encrypt.parameter.impl.EncryptInsertValueParameterRewriter.encryptInsertValues(EncryptInsertValueParameterRewriter.java:75) at org.apache.shardingsphere.core.rewrite.feature.encrypt.parameter.impl.EncryptInsertValueParameterRewriter.rewrite(EncryptInsertValueParameterRewriter.java:63) at org.apache.shardingsphere.core.rewrite.feature.encrypt.context.EncryptSQLRewriteContextDecorator.decorate(EncryptSQLRewriteContextDecorator.java:43) at org.apache.shardingsphere.shardingjdbc.jdbc.core.statement.EncryptPreparedStatement.getSQLUnit(EncryptPreparedStatement.java:157) at org.apache.shardingsphere.shardingjdbc.jdbc.core.statement.EncryptPreparedStatement.execute(EncryptPreparedStatement.java:127) at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46) at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74) at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50) at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117) at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76) at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198) ... 52 more ```  </body>
		<created>2019-10-17 07:40:17</created>
		<closed>2019-12-23 08:50:35</closed>
	</bug>
	<bug>
		<id>3303</id>
		<title>Wrong parameter list when auto-generated key need to add.</title>
		<body>## Bug Report  **For English only**, other languages will not accept.  Before report a bug, make sure you have:  - Searched open and closed [GitHub issues](https://github.com/apache/incubator-shardingsphere/issues). - Read documentation: [ShardingSphere Doc](https://shardingsphere.apache.org/document/current/en/overview).  Please pay attention on issues you submitted, because we maybe need more details.  If no response **more than 7 days** and we cannot reproduce it on current information, we will **close it**.  Please answer these questions before submitting your issue. Thanks!  ### Which version of ShardingSphere did you use? 4.0.0-RC2 ### Which project did you use? Sharding-JDBC or Sharding-Proxy? Sharding-Proxy ### Expected behavior     &lt;!-- FIXME --&gt;     &lt;!--&lt;rewrite-assertion id="insert_multiple_values_without_columns_without_id_for_parameters" db-type="MySQL"&gt;--&gt;         &lt;!--&lt;input sql="INSERT INTO t_account VALUES (?, ?), (1000, 'OK')" parameters="1000, OK" /&gt;--&gt;         &lt;!--&lt;output sql="INSERT INTO t_account_1(amount, status, account_id) VALUES (?, ?, ?), (1000, 'OK', ?)" parameters="1000, OK, 1, 1" /&gt;--&gt;     &lt;!--&lt;/rewrite-assertion&gt;--&gt; ### Actual behavior  ### Reason analyze (If you can)  ### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.  ### Example codes for reproduce this issue (such as a github link). </body>
		<created>2019-10-17 07:02:14</created>
		<closed>2019-10-17 07:58:03</closed>
	</bug>
	<bug>
		<id>3279</id>
		<title>Shardingjdbc execute update exception</title>
		<body>I configured read-write separation to make an error while executing the update statement, which contains case when.  For example, SQL statement: UPDATE OTS_ORDER SET UPDATE_DATE = now (),STATE = (CASE WHEN (STATE is null) THEN 1 ELSE STATE+1 END)  The error message is as follows:   Org.antlr.v4.runtime.tree.TerminalNodeImpl cannot be cast to org.antlr.v4.runtime.ParserRuleContext</body>
		<created>2019-10-15 08:51:48</created>
		<closed>2019-10-16 16:01:25</closed>
	</bug>
	<bug>
		<id>3262</id>
		<title>Table owner is lost for logic encrypt column</title>
		<body>## Bug Report  **For English only**, other languages will not accept.  ### Bug When logic encrypt column has owner in Query SQL, its assistedQueryColumn, cipherColumn and plainColumn can not be rewrite in actual SQLs correctly.  ### Which version of ShardingSphere did you use? **4.0.0-RC2**  ### Description Considering Encrypt Rule is, ``` encryptRule:   tables:     t_account_bak:       columns:         password:           cipherColumn: cipher_password           assistedQueryColumn: assisted_query_password           plainColumn: plain_password           encryptor: assisted_query         amount:           cipherColumn: cipher_amount           plainColumn: plain_amount           encryptor: normal props:   query.with.cipher.column: true ``` And SQL is, &gt; SELECT a.account_id, a.password, a.amount AS a, a.status AS s FROM t_account_bak AS a WHERE a.account_id = 1 AND a.password = 'aaa' AND a.amount = 1000 AND a.status = 'OK'  The correct rewritten SQL is, &gt; SELECT a.account_id, a.cipher_password, a.cipher_amount AS a, a.status AS s FROM t_account_bak AS a WHERE a.account_id = 1 AND a.assisted_query_password = 'assisted_query_aaa' AND a.cipher_amount = 'encrypt_1000' AND a.status = 'OK'  But currently it is rewritten as, &gt;SELECT a.account_id, a.cipher_password, a.cipher_amount AS a, a.status AS s FROM t_account_bak AS a WHERE a.account_id = 1 AND assisted_query_password = 'assisted_query_aaa' AND cipher_amount = 'encrypt_1000' AND a.status = 'OK'  **As you can see, the table owner,`a` of `assisted_query_password` and `cipher_amount` is lost.** 😢   ### How to make it recurred? 1. Modify [select_for_query_with_cipher.xml](https://github.com/apache/incubator-shardingsphere/blob/dev/sharding-core/sharding-core-rewrite/src/test/resources/encrypt/select_for_query_with_cipher.xml) in ShardingSphere project, and make `the correct ouput` valid. Here it is, ```  &lt;!--Here is the correct rewritten SQL. If you want to test and fix me, please note the above output, and make me valid.--&gt;  &lt;!--&lt;output sql="SELECT a.account_id, a.cipher_password, a.cipher_amount AS a, a.status AS s FROM t_account_bak AS a WHERE a.account_id = 1 AND a.assisted_query_password = 'assisted_query_aaa' AND a.cipher_amount = 'encrypt_1000' AND a.status = 'OK'" /&gt;--&gt; ``` 2.Run [Related tests](https://github.com/apache/incubator-shardingsphere/blob/dev/sharding-core/sharding-core-rewrite/src/test/java/org/apache/shardingsphere/core/rewrite/parameterized/engine/EncryptSQLRewriteEngineParameterizedTest.java) 3.AssertionError brings up.  ❗️ **Therefore our task is to make this AssertionError disappear.**  ### Why does it happen? 1.After parsing, the objects of cipherColumn, assistedQueryColumn, plainColumn will be stored as  `EncryptPredicateToken`, which does not keep `table owner`.  2.When rewriting SQL, rewriter will call `toString()` of `EncryptPredicateToken`, but there is no `table owner`, so the result of `toString()` is `assisted_query_password` and `cipher_amount`, not `a.assisted_query_password` and `a.cipher_amount`.  ### How to fix it? 1. To make `EncryptPredicateToken` keep `table owner`, instead of putting `columnName` in it, you should make `ColumnSegment` as its member. 2. `Table owner` and `column name` are the members of `ColumnSegment`. 3.Modify toString() of `EncryptPredicateToken` to append `tableName` from `ColumnSegment` to result.  #### Looking forward to your participation. </body>
		<created>2019-10-14 12:22:51</created>
		<closed>2019-10-16 13:17:25</closed>
	</bug>
	<bug>
		<id>3259</id>
		<title>Clear SQL92 problems for encrypt tests</title>
		<body>### Which version of ShardingSphere did you use? 4.0.0-RC3-SNAPSHOT ### Which project did you use? Sharding-JDBC or Sharding-Proxy? Both ### Expected behavior All test cases in incubator-shardingsphere/sharding-core/sharding-core-rewrite/src/test/resources/encrypt should pass. ### Actual behavior SQLs with single quotes can not pass the tests ### Reason analyze (If you can) Lexers with single quotes should be treated as string instead of identifier. ### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc. Execute assertRewrite(). ### Example codes for reproduce this issue (such as a github link). incubator-shardingsphere/sharding-core/sharding-core-rewrite/src/test/resources/encrypt</body>
		<created>2019-10-14 10:42:36</created>
		<closed>2019-10-14 12:46:46</closed>
	</bug>
	<bug>
		<id>3247</id>
		<title>concat() nest left() function--&gt;&gt;can not find the logic table name</title>
		<body>when I use concat() --&gt; OK when I use left() --&gt; OK when I use concat()&amp;left() such as: concat(left(column-id,8),"test") --&gt; ✖ can not find the logic table name,then select a random datasource.  db:mysql version:  Both 4.0.0-RC1  and  4.0.0-RC2 </body>
		<created>2019-10-14 04:05:35</created>
		<closed>2019-10-16 08:12:35</closed>
	</bug>
	<bug>
		<id>3243</id>
		<title>Insert multiple with mix literals and parameters will cause encrypt error</title>
		<body>For example, the SQL is like:  ```sql INSERT INTO t_account(account_id, password) VALUES (?, ?), (2, 'bbb'), (?, ?) ```  The SQL parameter will be encrypted by literals. For this example, parameter will encrypt `bbb`, not the 3rd parameters of value group.</body>
		<created>2019-10-13 13:22:40</created>
		<closed>2019-10-13 14:09:29</closed>
	</bug>
	<bug>
		<id>3240</id>
		<title>SQL92 parse or expression have problem</title>
		<body>When using sql92 to parse sql, the expression is error, but MySQL dialect is ok.  ```sql DELETE FROM t_cipher_assisted_query_plain WHERE encrypt_1 = ? or encrypt_2 IN (?,?,?) ```  It maybe cause by `OR`, we need to investigate it.</body>
		<created>2019-10-13 05:33:00</created>
		<closed>2019-10-14 11:49:22</closed>
	</bug>
	<bug>
		<id>3237</id>
		<title>Parse `ON DUPLICATE KEY UPDATE xxx= VALUES(xxx)` error</title>
		<body>Can not parse SQL `ON DUPLICATE KEY UPDATE` with `VALUES` </body>
		<created>2019-10-12 10:33:29</created>
		<closed>2019-10-12 11:25:13</closed>
	</bug>
	<bug>
		<id>3234</id>
		<title>When insert by mybatis, the parameters were still found to be out of ordered. </title>
		<body>### Which version of ShardingSphere did you use? 4.0.0-RC3-SNAPSHOT ### Which project did you use? Sharding-JDBC or Sharding-Proxy? Sharding-JDBC ### Expected behavior insert correct ### Actual behavior When insert by mybatis, the parameters were still found to be out of ordered.  ### Reason analyze (If you can)  ### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.  ==&gt; Preparing: insert into cust_contact_sharding (id,cust_id, unique_id, contact_name, contact_relation, contact_mobile, contact_address, time_inst, time_upd) values (?,?, ?, ?, ?, ?, ?, now() , ?) ==&gt; Parameters: 117001(Long), 4(Long), 84719733d69047eba078e914c49488c7(String), 歉(String), TEST(String), 15907200513(String), 测试地址(String), null  sharding value 84719733d69047eba078e914c49488c7,value after sharding cust_contact_6 Rule Type: sharding Logic SQL: insert into cust_contact_sharding (id,cust_id, unique_id, contact_name, contact_relation, contact_mobile, contact_address, time_inst, time_upd) values (?,?, ?, ?, ?, ?, ?, now() , ?) ShardingSphere-SQL: SQLStatement: InsertSQLStatementContext(super=CommonSQLStatementContext(sqlStatement=org.apache.shardingsphere.core.parse.sql.statement.dml.InsertStatement@1723c231, tablesContext=TablesContext(tables=[Table(name=cust_contact_sharding, alias=Optional.absent())], schema=Optional.absent())), columnNames=[id, cust_id, unique_id, contact_name, contact_relation, contact_mobile, contact_address, time_inst, time_upd], insertValueContexts=[InsertValueContext(parametersCount=8, valueExpressions=[ParameterMarkerExpressionSegment(startIndex=170, stopIndex=170, parameterMarkerIndex=0), ParameterMarkerExpressionSegment(startIndex=172, stopIndex=172, parameterMarkerIndex=1), ParameterMarkerExpressionSegment(startIndex=175, stopIndex=175, parameterMarkerIndex=2), ParameterMarkerExpressionSegment(startIndex=178, stopIndex=178, parameterMarkerIndex=3), ParameterMarkerExpressionSegment(startIndex=188, stopIndex=188, parameterMarkerIndex=4), ParameterMarkerExpressionSegment(startIndex=191, stopIndex=191, parameterMarkerIndex=5), ParameterMarkerExpressionSegment(startIndex=194, stopIndex=194, parameterMarkerIndex=6), CommonExpressionSegment(startIndex=205, stopIndex=209, text=now()), ParameterMarkerExpressionSegment(startIndex=213, stopIndex=213, parameterMarkerIndex=7), DerivedParameterMarkerExpressionSegment(super=ParameterMarkerExpressionSegment(startIndex=0, stopIndex=0, parameterMarkerIndex=8)), DerivedParameterMarkerExpressionSegment(super=ParameterMarkerExpressionSegment(startIndex=0, stopIndex=0, parameterMarkerIndex=9)), DerivedParameterMarkerExpressionSegment(super=ParameterMarkerExpressionSegment(startIndex=0, stopIndex=0, parameterMarkerIndex=10))], parameters=[117001, 4, 84719733d69047eba078e914c49488c7, 歉, TEST, 15907200513, 测试地址, null])])  Actual SQL: ds0 ::: insert into cust_contact_6 (id,cust_id, unique_id, contact_name_enc, contact_relation, contact_mobile_enc, contact_address_enc, time_inst, time_upd, contact_name, **contact_mobile, contact_address**) values (?, ?, ?, ?, ?, ?, ?, now(), ?, ?, ?, ?) ::: [117001, 4, 84719733d69047eba078e914c49488c7, *n08ZSeAE+q5GlnThhlUqhAg==, TEST, *mJeSoexiPoMJYtc6tM8/Ggw==, *aBNIM+OZDMbR9FRHMUYeej7zfTz0WMhaq0pJfT0voBt2wpN0malEcyYDjuA18AO84GkUjtoaMHXEdfyLQZ5fo/g==, null, 歉, **测试地址, 15907200513**]  _the follow parameter has been inverse:_ **contact_mobile, contact_address 测试地址, 15907200513**  ### Example codes for reproduce this issue (such as a github link). </body>
		<created>2019-10-12 07:40:57</created>
		<closed>2019-10-22 05:33:30</closed>
	</bug>
	<bug>
		<id>3233</id>
		<title>shardingsphere proxy 4.0.0-RC3-SNAPSHOT   JDBC execute SQL report org.apache.shardingsphere.shardingproxy.frontend.command.CommandExecutorTask - Exception occur:  java.lang.IndexOutOfBoundsException: readerIndex(22) + length(2) exceeds writerIndex(23): PooledSlicedByteBuf(ridx: 22, widx: 23, cap: 23/23, unwrapped: </title>
		<body>## Bug Report  **For English only**, other languages will not accept.  Before report a bug, make sure you have:  - Searched open and closed [GitHub issues](https://github.com/apache/incubator-shardingsphere/issues). - Read documentation: [ShardingSphere Doc](https://shardingsphere.apache.org/document/current/en/overview).  Please pay attention on issues you submitted, because we maybe need more details.  If no response **more than 7 days** and we cannot reproduce it on current information, we will **close it**.  Please answer these questions before submitting your issue. Thanks!  ### Which version of ShardingSphere did you use?  ### Which project did you use? Sharding-JDBC or Sharding-Proxy?  ### Expected behavior  ### Actual behavior  ### Reason analyze (If you can)  ### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.  ### Example codes for reproduce this issue (such as a github link).   10:26:19.032 [pool-5-thread-1] ERROR org.apache.shardingsphere.shardingproxy.frontend.command.CommandExecutorTask - Exception occur:  java.lang.IndexOutOfBoundsException: readerIndex(22) + length(2) exceeds writerIndex(23): PooledSlicedByteBuf(ridx: 22, widx: 23, cap: 23/23, unwrapped: PooledUnsafeDirectByteBuf(ridx: 94, widx: 94, cap: 496)) at io.netty.buffer.AbstractByteBuf.checkReadableBytes0(AbstractByteBuf.java:1401) ~[netty-all-4.1.16.Final.jar:4.1.16.Final] at io.netty.buffer.AbstractByteBuf.readShort(AbstractByteBuf.java:726) ~[netty-all-4.1.16.Final.jar:4.1.16.Final] at org.apache.shardingsphere.shardingproxy.transport.postgresql.payload.PostgreSQLPacketPayload.readInt2(PostgreSQLPacketPayload.java:62) ~[sharding-proxy-transport-postgresql-4.0.0-RC3-SNAPSHOT.jar:4.0.0-RC3-SNAPSHOT] at org.apache.shardingsphere.shardingproxy.transport.postgresql.packet.command.query.binary.bind.PostgreSQLComBindPacket.&lt;init&gt;(PostgreSQLComBindPacket.java:64) ~[sharding-proxy-transport-postgresql-4.0.0-RC3-SNAPSHOT.jar:4.0.0-RC3-SNAPSHOT] at org.apache.shardingsphere.shardingproxy.transport.postgresql.packet.command.PostgreSQLCommandPacketFactory.newInstance(PostgreSQLCommandPacketFactory.java:59) ~[sharding-proxy-transport-postgresql-4.0.0-RC3-SNAPSHOT.jar:4.0.0-RC3-SNAPSHOT] at org.apache.shardingsphere.shardingproxy.frontend.postgresql.command.PostgreSQLCommandExecuteEngine.getCommandPacket(PostgreSQLCommandExecuteEngine.java:56) ~[sharding-proxy-frontend-postgresql-4.0.0-RC3-SNAPSHOT.jar:4.0.0-RC3-SNAPSHOT] at org.apache.shardingsphere.shardingproxy.frontend.postgresql.command.PostgreSQLCommandExecuteEngine.getCommandPacket(PostgreSQLCommandExecuteEngine.java:47) ~[sharding-proxy-frontend-postgresql-4.0.0-RC3-SNAPSHOT.jar:4.0.0-RC3-SNAPSHOT] at org.apache.shardingsphere.shardingproxy.frontend.command.CommandExecutorTask.executeCommand(CommandExecutorTask.java:84) ~[sharding-proxy-frontend-core-4.0.0-RC3-SNAPSHOT.jar:4.0.0-RC3-SNAPSHOT] at org.apache.shardingsphere.shardingproxy.frontend.command.CommandExecutorTask.run(CommandExecutorTask.java:66) [sharding-proxy-frontend-core-4.0.0-RC3-SNAPSHOT.jar:4.0.0-RC3-SNAPSHOT] at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128) [?:?] at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628) [?:?] at java.lang.Thread.run(Thread.java:834) [?:?] </body>
		<created>2019-10-12 02:29:17</created>
		<closed>2019-10-23 10:47:46</closed>
	</bug>
	<bug>
		<id>3231</id>
		<title>Issue with data type "INT UNSIGNED"</title>
		<body>## Bug Report  1. Create the table &gt;CREATE TABLE IF NOT EXISTS `table_name` (   `my_id` int(11) unsigned NOT NULL, ) ENGINE=InnoDB DEFAULT CHARSET=utf8; 2.  I'm trying to extract value:  &gt; resultSet.getLong("my_id")  Exception occurs:   &gt; java.sql.SQLDataException: Value '4294967295' is outside of valid range for type java.lang.Integer at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:114) at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97) at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89) at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63) at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73) at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:92) at com.mysql.cj.jdbc.result.ResultSetImpl.getInt(ResultSetImpl.java:805) at com.zaxxer.hikari.pool.HikariProxyResultSet.getInt(HikariProxyResultSet.java) at org.apache.shardingsphere.core.execute.sql.execute.result.QueryResultUtil.getValueByColumnType(QueryResultUtil.java:59) at org.apache.shardingsphere.core.execute.sql.execute.result.QueryResultUtil.getValue(QueryResultUtil.java:45) at org.apache.shardingsphere.core.execute.sql.execute.result.StreamQueryResult.getValue(StreamQueryResult.java:75) at org.apache.shardingsphere.core.merge.dql.common.StreamMergedResult.getValue(StreamMergedResult.java:56) at org.apache.shardingsphere.shardingjdbc.jdbc.core.resultset.ShardingResultSet.getLong(ShardingResultSet.java:112)  Version: Sharding-JDBC 4.0.0RC2  It should extract value as Long.  Mysql jdbc driver in MysqlType.java contains such declaration for it: &gt; INT_UNSIGNED("INT UNSIGNED", Types.INTEGER, Long.class, MysqlType.FIELD_FLAG_UNSIGNED | MysqlType.FIELD_FLAG_ZEROFILL, MysqlType.IS_DECIMAL, 10L,             "[(M)] [UNSIGNED] [ZEROFILL]"), </body>
		<created>2019-10-11 11:16:58</created>
		<closed>2019-10-17 08:05:30</closed>
	</bug>
	<bug>
		<id>3207</id>
		<title>the plain column and cipher column are out of order when update</title>
		<body>### Which version of ShardingSphere did you use? 4.0.3-RC3-SNAPSHOT ### Which project did you use? Sharding-JDBC or Sharding-Proxy? sharding-jdbc ### Expected behavior can update plain column and cipher column corrected ### Actual behavior the plain column and cipher column are out of order when update ### Reason analyze (If you can)  ### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.  ==&gt;  Preparing: update user_info SET id = ?, cust_id = ?, unique_id = ?, name = ?, ident = ?, mobile = ?, password = ?, reg_time = ?, modify_time = ?, reg_source = ?, reg_app_channel = ?, reg_device_info = ?, status = ?, is_mobile_authed = ?, time_inst = ?, time_upd = ?, has_checked = ? WHERE ( mobile = ? and name = ? and ident = ? and unique_id = ? )   ==&gt; Parameters: 2119273269(Long), 1(Long), 94ae78a2509241b2a26ffcc6cb08dce5(String), 潋(String), 712524195602266985(String), 13400456926(String), ~(String), 2019-10-10 15:57:38.0(Timestamp), 2018-04-08 10:49:13(String), MQQXFQ(String), msxf(String), iOSNMS; 10.3.2; Appstore; 242; Apple; iPhone; iPhone8,1; 2.4.2.0; fe61c84f921642cf6c20231510bd34f73ad3e242; 22.541951,114.060576; 2; 172.18.4.135; 0(String), NORMAL(String), 0(String), 2019-10-10 15:57:24.0(Timestamp), 2019-10-10 15:57:24.0(Timestamp), 1(String), 15607784921(String), 观(String), 532525199301078369(String), 94ae78a2509241b2a26ffcc6cb08dce5(String)  Rule Type: sharding Logic SQL: update user_info      SET id = ?,              cust_id = ?,                     unique_id = ?,               name = ?,                    ident = ?,                 mobile = ?,                    password = ?,                   reg_time = ?,                  modify_time = ?,                  reg_source = ?,                   reg_app_channel = ?,                     reg_device_info = ?,                     status = ?,                     is_mobile_authed = ?,                          time_inst = ?,         time_upd = ?,                    has_checked = ?          WHERE (  mobile = ?               and name = ?               and ident = ?               and unique_id = ? ) SQLStatement: CommonSQLStatementContext(sqlStatement=org.apache.shardingsphere.core.parse.sql.statement.dml.UpdateStatement@7d68b8a7, tablesContext=TablesContext(tables=[Table(name=user_info, alias=Optional.absent())], schema=Optional.absent()))  Actual SQL: ds0 ::: update user_info      SET id = ?,              cust_id = ?,             unique_id = ?,         name = ?, name_enc = ?,                 **ident = ?, ident_enc = ?,**                 **mobile = ?, mobile_enc = ?,**         password = ?,         reg_time = ?,            modify_time = ?,             reg_source = ?,               reg_app_channel = ?,                    reg_device_info = ?,                status = ?,         is_mobile_authed = ?,         time_inst = ?,         time_upd = ?,         has_checked = ?       WHERE (  mobile = ?and name = ?and ident = ?and unique_id = ? )   [2119273269, 1, 94ae78a2509241b2a26ffcc6cb08dce5, 潋, *nHN0OtJa1xaZNY2uCrwhujw==, *iqfgSbhOWnF+zchh6CpKdE6Cw4YstuSPWa/SrPjZk/W4=, *mMNciYwYpfMPsnZiaOMKNRg==, 712524195602266985, 13400456926, ~, 2019-10-10 15:57:38.0, 2018-04-08 10:49:13, MQQXFQ, msxf, iOSNMS; 10.3.2; Appstore; 242; Apple; iPhone; iPhone8,1; 2.4.2.0; fe61c84f921642cf6c20231510bd34f73ad3e242; 22.541951,114.060576; 2; 172.18.4.135; 0, NORMAL, 0, 2019-10-10 15:57:24.0, 2019-10-10 15:57:24.0, 1, 15607784921, 观, 532525199301078369, 94ae78a2509241b2a26ffcc6cb08dce5]  **ident  ident_enc  mobile  mobile_enc are out of order!!!!**   ### Example codes for reproduce this issue (such as a github link). UserInfoExample example = new UserInfoExample(); UserInfoExample.Criteria criteria = example.createCriteria(); criteria.andUniqueIdEqualTo(uniqueId); UserInfo db = userInfos.get(0); String newMobile = JunitHelper.getMobile(); String newName = JunitHelper.getChineseName(); String newIdent = JunitHelper.getRandomID(); db.setName(newName); db.setIdent(newIdent); db.setMobile(newMobile); int rs = this.userInfoMapper.updateByExampleSelective(db, example);</body>
		<created>2019-10-10 08:33:59</created>
		<closed>2019-10-11 10:55:44</closed>
	</bug>
	<bug>
		<id>3155</id>
		<title>Sharding jdbc parse sql statement which have a table name alias as T whill case error</title>
		<body>## Bug Report ShardingSphere version is 4.0.0-RC2.  my project maven pom have import sharding-jdbc-core and  sharding-jdbc-spring-boot-starter. This is my shard config   ``` spring.shardingsphere.enabled=true spring.shardingsphere.datasource.names=mscheck-ha,mscheck-sd spring.shardingsphere.datasource.mscheck-ha.type=com.zaxxer.hikari.HikariDataSource spring.shardingsphere.datasource.mscheck-ha.driver-class-name=com.mysql.cj.jdbc.Driver spring.shardingsphere.datasource.mscheck-ha.jdbc-url=jdbc:mysql://localhost:3306/mysqldb1?useUnicode=true&amp;serverTimezone=GMT%2B8&amp;characterEncoding=utf-8&amp;nullCatalogMeansCurrent=false spring.shardingsphere.datasource.mscheck-ha.username=root spring.shardingsphere.datasource.mscheck-ha.password=123456 spring.shardingsphere.datasource.mscheck-ha.schema=mysqldb1  spring.shardingsphere.datasource.mscheck-sd.type=com.zaxxer.hikari.HikariDataSource spring.shardingsphere.datasource.mscheck-sd.driver-class-name=com.mysql.cj.jdbc.Driver spring.shardingsphere.datasource.mscheck-sd.jdbc-url=jdbc:mysql://localhost:13306/mysqldb2?useUnicode=true&amp;serverTimezone=GMT%2B8&amp;characterEncoding=utf-8&amp;nullCatalogMeansCurrent=false spring.shardingsphere.datasource.mscheck-sd.username=root spring.shardingsphere.datasource.mscheck-sd.password=123456 spring.shardingsphere.datasource.mscheck-sd.schema=mysqldb2  spring.shardingsphere.sharding.default-data-source-name=mscheck-ha`   # 默认数据策略hint，默认分片算法使用自定义的ProvinceHintShardingAlgorithm spring.shardingsphere.sharding.default-database-strategy.hint.algorithm-class-name=com.xxxx.yyy.config.shard.ProvinceHintShardingAlgorithm  spring.shardingsphere.props.sql.show=true ```  My Sharding Algorithm Class: ``` public class ProvinceHintShardingAlgorithm implements HintShardingAlgorithm&lt;String&gt; {     private static final Logger LOGGER = LoggerFactory.getLogger(ProvinceHintShardingAlgorithm.class);      @Override     public Collection&lt;String&gt; doSharding(Collection&lt;String&gt; availableTargetNames, HintShardingValue&lt;String&gt; shardingValue) {         List&lt;String&gt; result = new ArrayList&lt;&gt;();         for (String value : shardingValue.getValues()) {             if(availableTargetNames.contains(value)){                 result.add(value);                 return result;             }         }         //return null;          if(result.isEmpty()){             result.add("mscheck-ha");         }          return result;     }  } ```  Where shardingjdbc execute sql like this `select T.*     from ACT_RU_TASK T     where T.PROC_INST_ID_ = ?` shardingjdbc will throw a error: ``` line 1:7 mismatched input 'T' expecting {'!', '~', '+', '-', '*', '.', '(', '{', '?', '@', TRUNCATE, POSITION, VIEW, DISTINCT, CASE, CAST, TRIM, SUBSTRING, IF, NOT, NULL, TRUE, FALSE, EXISTS, ALL, ANY, OFFSET, BEGIN, COMMIT, ROLLBACK, SAVEPOINT, BOOLEAN, CHAR, INTERVAL, DATE, TIME, TIMESTAMP, LOCALTIME, LOCALTIMESTAMP, YEAR, QUARTER, MONTH, WEEK, DAY, HOUR, MINUTE, SECOND, MICROSECOND, MAX, MIN, SUM, COUNT, AVG, CURRENT, ENABLE, DISABLE, INSTANCE, DO, DEFINER, CASCADED, LOCAL, CLOSE, OPEN, NEXT, NAME, TABLES, TABLESPACE, COLUMNS, FIELDS, INDEXES, STATUS, REPLACE, MODIFY, DISTINCTROW, VALUE, DUPLICATE, FIRST, LAST, AFTER, OJ, ACCOUNT, USER, ROLE, START, TRANSACTION, ROW, WITHOUT, BINARY, ESCAPE, SUBPARTITION, STORAGE, SUPER, SUBSTR, TEMPORARY, THAN, UNBOUNDED, UPGRADE, VALIDATION, ROLLUP, SOUNDS, UNKNOWN, OFF, ALWAYS, COMMITTED, LEVEL, NO, PASSWORD, PRIVILEGES, ACTION, ALGORITHM, AUTOCOMMIT, BTREE, CHAIN, CHARSET, CHECKSUM, CIPHER, CLIENT, COALESCE, COMMENT, COMPACT, COMPRESSED, COMPRESSION, CONNECTION, CONSISTENT, CONVERT, DATA, DISCARD, DISK, ENCRYPTION, END, ENGINE, EVENT, EXCHANGE, EXECUTE, EXTRACT, FILE, FIXED, FOLLOWING, GLOBAL, HASH, IMPORT_, LESS, MATCH, MEMORY, NONE, NOW, PARSER, PARTIAL, PARTITIONING, PERSIST, PRECEDING, PROCESS, PROXY, QUICK, REBUILD, REDUNDANT, RELOAD, REMOVE, REORGANIZE, REPAIR, REVERSE, SESSION, SHUTDOWN, SIMPLE, SLAVE, VISIBLE, INVISIBLE, ENFORCED, AGAINST, LANGUAGE, MODE, QUERY, EXTENDED, EXPANSION, VARIANCE, MAX_ROWS, MIN_ROWS, HIGH_PRIORITY, SQL_BIG_RESULT, SQL_BUFFER_RESULT, SQL_CACHE, SQL_CALC_FOUND_ROWS, SQL_NO_CACHE, SQL_SMALL_RESULT, STATS_AUTO_RECALC, STATS_PERSISTENT, STATS_SAMPLE_PAGES, ROW_FORMAT, STRAIGHT_JOIN, WEIGHT_STRING, COLUMN_FORMAT, INSERT_METHOD, KEY_BLOCK_SIZE, PACK_KEYS, PERSIST_ONLY, BIT_AND, BIT_OR, BIT_XOR, GROUP_CONCAT, JSON_ARRAYAGG, JSON_OBJECTAGG, STD, STDDEV, STDDEV_POP, STDDEV_SAMP, VAR_POP, VAR_SAMP, AUTO_INCREMENT, AVG_ROW_LENGTH, DELAY_KEY_WRITE, CURRENT_TIMESTAMP, ROTATE, MASTER, BINLOG, ERROR, SCHEDULE, COMPLETION, EVERY, HOST, SOCKET, PORT, SERVER, WRAPPER, OPTIONS, OWNER, RETURNS, CONTAINS, SECURITY, INVOKER, TEMPTABLE, MERGE, UNDEFINED, DATAFILE, FILE_BLOCK_SIZE, EXTENT_SIZE, INITIAL_SIZE, AUTOEXTEND_SIZE, MAX_SIZE, NODEGROUP, WAIT, LOGFILE, UNDOFILE, UNDO_BUFFER_SIZE, REDO_BUFFER_SIZE, HANDLER, PREV, ORGANIZATION, DEFINITION, DESCRIPTION, REFERENCE, FOLLOWS, PRECEDES, IMPORT, CONCURRENT, XML, DUMPFILE, SHARE, IDENTIFIER_, STRING_, NUMBER_, HEX_DIGIT_, BIT_NUM_} 2019-09-28 15:55:52 | ERROR | http-nio-8090-exec-2 | org.flowable.common.engine.impl.interceptor.CommandContext | Error while closing command context org.apache.ibatis.exceptions.PersistenceException:  ### Error querying database.  Cause: java.lang.IllegalStateException ### The error may exist in org/flowable/task/service/db/mapping/entity/Task.xml ### The error may involve org.flowable.task.service.impl.persistence.entity.TaskEntityImpl.selectTasksByProcessInstanceId-Inline ### The error occurred while setting parameters ### SQL: select T.*     from ACT_RU_TASK T     where T.PROC_INST_ID_ = ? ### Cause: java.lang.IllegalStateException at org.apache.ibatis.exceptions.ExceptionFactory.wrapException(ExceptionFactory.java:30) at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:149) at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140) at org.flowable.common.engine.impl.db.DbSqlSession.selectListWithRawParameter(DbSqlSession.java:202) at org.flowable.common.engine.impl.db.DbSqlSession.selectListWithRawParameter(DbSqlSession.java:196) at org.flowable.common.engine.impl.db.DbSqlSession.selectList(DbSqlSession.java:157) at org.flowable.common.engine.impl.db.DbSqlSession.selectList(DbSqlSession.java:162) at org.flowable.common.engine.impl.db.DbSqlSession.selectList(DbSqlSession.java:142) at org.flowable.common.engine.impl.db.AbstractDataManager.getList(AbstractDataManager.java:149) at org.flowable.task.service.impl.persistence.entity.data.impl.MybatisTaskDataManager.findTasksByProcessInstanceId(MybatisTaskDataManager.java:79) at org.flowable.task.service.impl.persistence.entity.TaskEntityManagerImpl.findTasksByProcessInstanceId(TaskEntityManagerImpl.java:166) at org.flowable.task.service.impl.TaskServiceImpl.findTasksByProcessInstanceId(TaskServiceImpl.java:48) at org.flowable.engine.impl.util.TaskHelper.deleteTasksByProcessInstanceId(TaskHelper.java:411) at org.flowable.engine.impl.persistence.entity.ExecutionEntityManagerImpl.deleteProcessInstanceCascade(ExecutionEntityManagerImpl.java:482) at org.flowable.engine.impl.persistence.entity.ExecutionEntityManagerImpl.deleteProcessInstance(ExecutionEntityManagerImpl.java:423) at org.flowable.engine.impl.cmd.DeleteProcessInstanceCmd.execute(DeleteProcessInstanceCmd.java:59) at org.flowable.engine.impl.cmd.DeleteProcessInstanceCmd.execute(DeleteProcessInstanceCmd.java:30) at org.flowable.engine.impl.interceptor.CommandInvoker$1.run(CommandInvoker.java:51) at org.flowable.engine.impl.interceptor.CommandInvoker.executeOperation(CommandInvoker.java:93) at org.flowable.engine.impl.interceptor.CommandInvoker.executeOperations(CommandInvoker.java:72) at org.flowable.engine.impl.interceptor.CommandInvoker.execute(CommandInvoker.java:56) at org.flowable.engine.impl.interceptor.BpmnOverrideContextInterceptor.execute(BpmnOverrideContextInterceptor.java:25) at org.flowable.common.engine.impl.interceptor.TransactionContextInterceptor.execute(TransactionContextInterceptor.java:53) at org.flowable.common.engine.impl.interceptor.CommandContextInterceptor.execute(CommandContextInterceptor.java:72) at org.flowable.common.spring.SpringTransactionInterceptor.execute(SpringTransactionInterceptor.java:51) at org.flowable.common.engine.impl.interceptor.LogInterceptor.execute(LogInterceptor.java:30) at org.flowable.common.engine.impl.cfg.CommandExecutorImpl.execute(CommandExecutorImpl.java:56) at org.flowable.common.engine.impl.cfg.CommandExecutorImpl.execute(CommandExecutorImpl.java:51) at org.flowable.engine.impl.RuntimeServiceImpl.deleteProcessInstance(RuntimeServiceImpl.java:184) at com.cmiot.mscheck.workorder.service.impl.FlowServiceImpl.deleteFlowByInstanceId(FlowServiceImpl.java:401) at com.cmiot.mscheck.workorder.service.impl.FlowServiceImpl.deleteFlowByBusinessKey(FlowServiceImpl.java:395) at com.cmiot.mscheck.workorder.service.impl.FlowServiceImpl.deleteFlow(FlowServiceImpl.java:381) at com.cmiot.mscheck.workorder.service.impl.FlowServiceImpl$$FastClassBySpringCGLIB$$743b1de6.invoke(&lt;generated&gt;) at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218) at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749) at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:295) at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98) at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688) at com.cmiot.mscheck.workorder.service.impl.FlowServiceImpl$$EnhancerBySpringCGLIB$$3b141cc6.deleteFlow(&lt;generated&gt;) at com.cmiot.mscheck.workorder.rest.controller.ProcessRestImpl.deleteFlow(ProcessRestImpl.java:126) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190) at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138) at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104) at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892) at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797) at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039) at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942) at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005) at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908) at javax.servlet.http.HttpServlet.service(HttpServlet.java:660) at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882) at javax.servlet.http.HttpServlet.service(HttpServlet.java:741) at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231) at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53) at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99) at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109) at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92) at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109) at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93) at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109) at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200) at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109) at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202) at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490) at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139) at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92) at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408) at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66) at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853) at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587) at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) at java.lang.Thread.run(Thread.java:748) Caused by: java.lang.IllegalStateException: null at com.google.common.base.Preconditions.checkState(Preconditions.java:492) at org.apache.shardingsphere.core.parse.core.extractor.util.ExtractorUtils.getFirstChildNode(ExtractorUtils.java:48) at org.apache.shardingsphere.core.parse.core.extractor.impl.dml.select.SelectItemsExtractor.extract(SelectItemsExtractor.java:54) at org.apache.shardingsphere.core.parse.core.extractor.SQLSegmentsExtractorEngine.extract(SQLSegmentsExtractorEngine.java:47) at org.apache.shardingsphere.core.parse.core.SQLParseKernel.parse(SQLParseKernel.java:62) at org.apache.shardingsphere.core.route.router.sharding.DatabaseHintSQLRouter.parse(DatabaseHintSQLRouter.java:50) at org.apache.shardingsphere.core.route.PreparedStatementRoutingEngine.route(PreparedStatementRoutingEngine.java:64) at org.apache.shardingsphere.core.PreparedQueryShardingEngine.route(PreparedQueryShardingEngine.java:60) at org.apache.shardingsphere.core.BaseShardingEngine.executeRoute(BaseShardingEngine.java:86) at org.apache.shardingsphere.core.BaseShardingEngine.shard(BaseShardingEngine.java:70) at org.apache.shardingsphere.shardingjdbc.jdbc.core.statement.ShardingPreparedStatement.shard(ShardingPreparedStatement.java:224) at org.apache.shardingsphere.shardingjdbc.jdbc.core.statement.ShardingPreparedStatement.execute(ShardingPreparedStatement.java:170) at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:64) at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79) at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63) at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324) at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156) at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109) at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83) at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147) ... 94 common frames omitted ``` If i replace the sql as `select b.*     from ACT_RU_TASK b     where b.PROC_INST_ID_ = ?` to execute everthing is ok. So i think sharding jdbc parse sql statement which have a table name alias as T whill case error?</body>
		<created>2019-09-29 23:43:08</created>
		<closed>2019-10-09 06:45:31</closed>
	</bug>
	<bug>
		<id>3144</id>
		<title>It show me "Can not update sharding key"， but my sharding key does not update, the sharding key value does not change, only just appears in the updated clause.</title>
		<body>## Bug Report  It show me "Can not update sharding key"， but my sharding key does not update, the sharding key value does not change, only just appears in the updated clause.   ### Which version of ShardingSphere did you use? 4.0.0-RC3-SNAPSHOT  ### Which project did you use? Sharding-JDBC or Sharding-Proxy? Sharding-JDBC   ### Expected behavior  Cause: org.apache.shardingsphere.core.exception.ShardingException: Can not update sharding key, logic table: [cust_contact_sharding], column: [org.apache.shardingsphere.core.parse.sql.segment.dml.assignment.AssignmentSegment...  ### Actual behavior no exception and update successfully  ### Reason analyze (If you can)  If the value of the sharding key does not really changed, such sql execution should be allowed  ### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.  **sharding key is unique_id** sql： update cust_contact_sharding **SET unique_id = ?**, contact_name = ?  where id = ? and **unique_id = ?**  param: Parameters: **a538e445280443e997f76b5657dd3f27**(String), 钳(String),  104501(Long), **a538e445280443e997f76b5657dd3f27**(String)  ### Example codes for reproduce this issue (such as a github link).  ![image](https://user-images.githubusercontent.com/8772975/65763922-01327880-e157-11e9-944b-dd326ab58cf9.png) </body>
		<created>2019-09-27 10:24:02</created>
		<closed>2019-10-11 12:13:16</closed>
	</bug>
	<bug>
		<id>3143</id>
		<title>EncryptRule has a risk for NullPointerException </title>
		<body>## Bug Report  **For English only**, other languages will not accept.  Before report a bug, make sure you have:  - Searched open and closed [GitHub issues](https://github.com/apache/incubator-shardingsphere/issues). - Read documentation: [ShardingSphere Doc](https://shardingsphere.apache.org/document/current/en/overview).  Please pay attention on issues you submitted, because we maybe need more details.  If no response **more than 7 days** and we cannot reproduce it on current information, we will **close it**.  Please answer these questions before submitting your issue. Thanks!  ### Which version of ShardingSphere did you use? 4.0.0-RC2 ### Which project did you use? Sharding-JDBC or Sharding-Proxy? Sharding-JDBC for Encrypt ### Expected behavior  ### Actual behavior  ### Reason analyze (If you can) EncryptRule.getEncryptColumnValues and EncryptRule.getEncryptAssistedColumnValues when the encrypted field set to null,will NullPointerException, because “input.toString()” ### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc. select * from XXXX where mobile_no=null; mobile_no for desensitization fields ### Example codes for reproduce this issue (such as a github link). </body>
		<created>2019-09-27 09:11:12</created>
		<closed>2019-10-07 03:40:54</closed>
	</bug>
	<bug>
		<id>3108</id>
		<title>Test can fail if HashMap iterates in a different order</title>
		<body>## Bug Report  **For English only**, other languages will not accept.  Before report a bug, make sure you have:  - Searched open and closed [GitHub issues](https://github.com/apache/incubator-shardingsphere/issues). - Read documentation: [ShardingSphere Doc](https://shardingsphere.apache.org/document/current/en/overview).  Please pay attention on issues you submitted, because we maybe need more details.  If no response **more than 7 days** and we cannot reproduce it on current information, we will **close it**.  Please answer these questions before submitting your issue. Thanks!  ### Which version of ShardingSphere did you use? dev branch: 4.0.0-RC3-SNAPSHOT ### Which project did you use? Sharding-JDBC or Sharding-Proxy? sharding-orchestration ### Expected behavior Tests that rely on `AUTHENTICATION_YAML` inside [ConfigurationServiceTest](https://github.com/apache/incubator-shardingsphere/blob/48ad82f690e59c4690fca936096b1149558a3880/sharding-orchestration/sharding-orchestration-core/src/test/java/org/apache/shardingsphere/orchestration/internal/registry/config/service/ConfigurationServiceTest.java) should pass regardless of the HashMap iteration orders. ### Actual behavior  Tests can fail if the order changes  ### Reason analyze (If you can) Currently, `YamlAuthenticationConfiguration.java` and `Authentication.java` are using HashMap to map users. However, HashMap does not guarantee any specific order of entries. Therefore the string version of `Authentication` objects do not always match `AUTHENTICATION_YAML` as expected by the tests.    ### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.  For examples, if `AUTHENTICATION_YAML` has `root2` comes before `root1` in the string, the tests would fail as iteration order is not same as the input.  ``` [ERROR]   ConfigurationServiceTest.assertPersistConfigurationForShardingRuleWithAuthenticationAndIsOverwrite:190 Argument(s) are different! Wanted: regCenter.persist(     "/test/config/authentication",     "users:   root2:     authorizedSchemas: sharding_db     password: root1   root1:     authorizedSchemas: sharding_db,ms_db     password: root2 " ); -&gt; at org.apache.shardingsphere.orchestration.internal.registry.config.service.ConfigurationServiceTest.assertPersistConfigurationForShardingRuleWithAuthenticationAndIsOverwrite(ConfigurationServiceTest.java:190) Actual invocation has different arguments: regCenter.persist(     "/test/config/authentication",     "users:   root1:     authorizedSchemas: sharding_db,ms_db     password: root2   root2:     authorizedSchemas: sharding_db     password: root1 " ); ```   ### Example codes for reproduce this issue (such as a github link). Changing `AUTHENTICATION_YAML` to have `root2` come first. ``` private static final String AUTHENTICATION_YAML = "users:\n" + "  root2:\n" + "    authorizedSchemas: sharding_db\n" + "    password: root1\n"             + "  root1:\n" + "    authorizedSchemas: sharding_db,ms_db\n" + "    password: root2\n";    ```</body>
		<created>2019-09-24 20:24:38</created>
		<closed>2019-09-25 03:12:40</closed>
	</bug>
	<bug>
		<id>3101</id>
		<title>error occurred while doing data masking</title>
		<body>i'm using sharding-jdbc my pom.xml configuration: ``` org.apache.shardingsphere.sharding-jdbc-spring-boot-starter(version :  4.0.0-RC2) &amp; org.apache.shardingsphere.sharding-jdbc-spring-namespace(version : 4.0.0-RC2)  ``` my table sql: ``` CREATE TABLE `t_user_info` (   `id` int(11) NOT NULL AUTO_INCREMENT,   `user_name` varchar(32) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NOT NULL DEFAULT '' COMMENT '用户名',   `id_no` varchar(18) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NOT NULL DEFAULT '' COMMENT '用户身份证号',   `cipher_id_no` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci DEFAULT '' COMMENT '用户身份证密文',   `age` int(11) NOT NULL COMMENT '年龄',   `mobile` varchar(11) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NOT NULL DEFAULT '' COMMENT '用户手机号',   `cipher_mobile` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NOT NULL COMMENT '用户手机号密文',   PRIMARY KEY (`id`),   UNIQUE KEY `uk_id_no` (`id_no`) USING BTREE COMMENT '身份证号唯一索引' ) ENGINE=InnoDB AUTO_INCREMENT=3 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci; ```  my application.properties:  ``` spring.shardingsphere.datasource.name=ds  #数据库连接基本信息 spring.shardingsphere.datasource.ds.type=com.alibaba.druid.pool.DruidDataSource spring.shardingsphere.datasource.ds.driver-class-name=com.mysql.cj.jdbc.Driver spring.shardingsphere.datasource.ds.url=jdbc:mysql://localhost:3306/demo?characterEncoding=utf8&amp;serverTimezone=Asia/Shanghai&amp;useSSL=false spring.shardingsphere.datasource.ds.username=root spring.shardingsphere.datasource.ds.password=1123  #连接池参数配置 spring.shardingsphere.datasource.ds.max-total=20 spring.shardingsphere.datasource.ds.initialSize=1 spring.shardingsphere.datasource.ds.minIdle=1 spring.shardingsphere.datasource.ds.maxActive=20 spring.shardingsphere.datasource.ds.maxWait=3000 spring.shardingsphere.datasource.ds.validationQuery=SELECT 1 FROM DUAL spring.shardingsphere.datasource.ds.poolPreparedStatements=true spring.shardingsphere.datasource.ds.maxPoolPreparedStatementPerConnectionSize=20  #数据脱敏加密方式 spring.shardingsphere.encrypt.encryptors.encryptor_aes.type=aes spring.shardingsphere.encrypt.encryptors.encryptor_aes.props.aes.key.value=123456abc  #数据脱敏基本字段信息 spring.shardingsphere.encrypt.tables.t_user_info.columns.id_no.plainColumn=id_no spring.shardingsphere.encrypt.tables.t_user_info.columns.id_no.cipherColumn=cipher_id_no spring.shardingsphere.encrypt.tables.t_user_info.columns.id_no.encryptor=encryptor_aes  spring.shardingsphere.encrypt.tables.t_user_info.columns.mobile.plainColumn=mobile spring.shardingsphere.encrypt.tables.t_user_info.columns.mobile.cipherColumn=cipher_mobile spring.shardingsphere.encrypt.tables.t_user_info.columns.mobile.encryptor=encryptor_aes  #是否打印SQL spring.shardingsphere.props.sql.show=true  #查询是否走密文字段 spring.shardingsphere.props.query.with.cipher.column=false ```  my junit case:  ``` @RunWith(SpringRunner.class) @SpringBootTest @FixMethodOrder(MethodSorters.JVM) @Rollback //@Transactional public class UserInfoTest {  private static final String ID_NO = "xxxx"; private static final String UPDATE_ID_NO = "xxxxx"; private static final String MOBILE = "xxxxx"; private static final String UPDATE_MOBILE = "xxxxx";  @Resource private UserMapper userMapper;  @Test public void insertTest(){ User user = new User();  user.setUserName("test"); user.setIdNo(ID_NO); user.setAge(23); user.setMobile(MOBILE);  int result = userMapper.insert(user); Assert.assertEquals(result, 1); }  @Test public void selectBeforeUpdateTest(){ User user = userMapper.selectByIdNo(ID_NO); Assert.assertNotNull(user); }  @Test public void updateTest(){ User user = userMapper.selectByIdNo(ID_NO); Assert.assertNotNull(user);  //user.setIdNo(UPDATE_ID_NO); //user.setMobile(UPDATE_MOBILE); // //int result = userMapper.updateByPrimaryKey(user); //Assert.assertEquals(result, 1); // //User oldUser = userMapper.selectByIdNo(ID_NO); //Assert.assertNotNull(oldUser); // //User newUser = userMapper.selectByIdNo(UPDATE_ID_NO); //Assert.assertNull(newUser); }  @Test public void deleteTest(){ //TODO 删除就不写了，没啥用 } } ```  error occured while "userMapper.selectByIdNo(ID_NO);" is running   according to this document ： [https://shardingsphere.apache.org/document/current/cn/features/orchestration/encrypt/](url)  when `query.with.cipher.column=false` ， it means the sharding-jdbc query opreation will only use the plainColumn. however, when my junit case runnning , i found the exception ,because the sharding-jdbc wanted to decrypt the plainColunmn.  i try to debug and found the reason, and it turns out that  StreamQueryResult class has a operation   `queryResultMetaData.getShardingEncryptor(column_index)`  the result is not null, and then the sharding-jdbc decrypt the plainColumn value.  Is this a bug or normal logic , what can i do to fix this thing?</body>
		<created>2019-09-24 09:03:20</created>
		<closed>2019-10-09 02:59:14</closed>
	</bug>
	<bug>
		<id>3097</id>
		<title>Unknown system variable 'query_cache_size'</title>
		<body>## Bug Report  - There are 4 similar issues, but none of them are exactly like me - I've tried after the document, but still can not solve the problem  ### Which version of ShardingSphere did you use? First, I tried apache-shardingsphere-incubating-4.0.0-RC2-sharding-proxy-bin, Then, I build myself from dev branch (2019-09-24)  ### Which project did you use? Sharding-JDBC or Sharding-Proxy? Sharding-Proxy  ### Expected behavior Connected successfully by SpringBoot Application with Druid Or HikariCP Datasource  ### Actual behavior Connected successfully by Navicat (sometimes throws NullPointerException: null, but still work)  Both of Druid or HikariCP in my SpringBoot Application start faild by throwing "Failed to initialize pool: Unknown system variable 'query_cache_size' "  ### Reason analyze (If you can)  ### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc. 1. Sharding-Proxy (4.0.0-RC2) (config-sharding.yaml) 2. SprintBoot with Druid or HikariCP 3. MySQL 8.0.12 4. Tried mysql-connector-java-5.1.44、mysql-connector-java-8.0.17.jar in SpringBoot application and sharding-proxy/lib，none of them works  ### Example codes for reproduce this issue (such as a github link). [config-sharding.yaml.txt](https://github.com/apache/incubator-shardingsphere/files/3645028/config-sharding.yaml.txt)  [server.yaml.txt](https://github.com/apache/incubator-shardingsphere/files/3645029/server.yaml.txt) </body>
		<created>2019-09-24 03:05:12</created>
		<closed>2020-05-22 13:59:53</closed>
	</bug>
	<bug>
		<id>3092</id>
		<title>SCTL statement get error when sql contains comments</title>
		<body>## Bug Report  ### Which version of ShardingSphere did you use?  Dev  ### Which project did you use? Sharding-JDBC or Sharding-Proxy?  Sharding-Proxy  ### Expected behavior  SCTL statement can get correct results  ### Actual behavior  When sql contains comments, the stcl statement will report an error.  ### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.  First i use DataGrip to execute command, and it get an error  ![image](https://user-images.githubusercontent.com/30677017/65427578-2f594500-de45-11e9-9096-f8e094dc9626.png)  so, i use command line tool to execute it, it works fine. but if sql has comments, will get error. ![image](https://user-images.githubusercontent.com/30677017/65427641-557ee500-de45-11e9-8272-de7bcaf333ec.png) </body>
		<created>2019-09-23 13:02:44</created>
		<closed>2019-09-24 09:00:30</closed>
	</bug>
	<bug>
		<id>3071</id>
		<title>Test can fail if HashMap iterates in a different order</title>
		<body>## Bug Report  **For English only**, other languages will not accept.  Before report a bug, make sure you have:  - Searched open and closed [GitHub issues](https://github.com/apache/incubator-shardingsphere/issues). - Read documentation: [ShardingSphere Doc](https://shardingsphere.apache.org/document/current/en/overview).  Please pay attention on issues you submitted, because we maybe need more details.  If no response **more than 7 days** and we cannot reproduce it on current information, we will **close it**.  Please answer these questions before submitting your issue. Thanks!  ### Which version of ShardingSphere did you use? `dev` branch: 4.0.0-RC3-SNAPSHOT ### Which project did you use? Sharding-JDBC or Sharding-Proxy? Sharding-JDBC ### Expected behavior The test `org.apache.shardingsphere.shardingjdbc.jdbc.core.datasource.MasterSlaveDataSourceTest#assertGetDatabaseProductName` always passes regardless of iteration orders of the map iterator. ### Actual behavior Test can fail if the order changes ### Reason analyze (If you can)  Currently, the test uses a HashMap to store data source connections. However HashMap does not guarantee any specific order of entries. In particular, `createCachedDatabaseMetaData` in `MasterSlaveRuntimeContext.java` will eventually receive the map and access the first connection, which may not always be the master connection due to differences in orderings, and close that connection. If the first connection happens to be a slave connection, the test will fail due to being closed too many times.  ### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc. To simulate a different ordering, changing the `"masterDatasource"` to `"zmasterDatasource"` in https://github.com/apache/incubator-shardingsphere/blob/818a722b15dd66385be644c592016bcba53a7675/sharding-jdbc/sharding-jdbc-core/src/test/java/org/apache/shardingsphere/shardingjdbc/jdbc/core/datasource/MasterSlaveDataSourceTest.java#L110 will lead to a different iteration order and the test fails  ### Example codes for reproduce this issue (such as a github link). ```         dataSourceMap.put("zmasterDataSource", masterDataSource);         dataSourceMap.put("slaveDataSource1", slaveDataSource1);         dataSourceMap.put("slaveDataSource2", slaveDataSource2); ``` in `assertGetDatabaseProductName()`</body>
		<created>2019-09-19 20:34:27</created>
		<closed>2019-09-20 07:03:30</closed>
	</bug>
	<bug>
		<id>3068</id>
		<title>Sharding-Proxy: Configuring user access to the database is invalid</title>
		<body>## Bug Report  ### Which version of ShardingSphere did you use? dev  ### Which project did you use? Sharding-JDBC or Sharding-Proxy? Sharding-Proxy  ### Expected behavior According to the configuration file, users are prohibited from accessing databases that are not authorized for them.  ### Actual behavior User does not have access to a database，but this user can access it.  ### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc. I have two config yaml to configure two logic datasource, user access is configured in the sever.yaml, this user has only one of the database permissions, but he can access both database.  config-sharding.yaml： ```yaml schemaName: sharding_db  dataSources:   ds0:    ···   ds1:    ··· ```  config-sharding-remote.yaml： ```yaml schemaName: sharding_db_remote  dataSources:   ds0:     ···   ds1:     ··· ```  server.yaml： ```yaml authentication:   users:     root:       password: root     sharding:       password: sharding       authorizedSchemas: sharding_db     zhyee:       password: zhyee       authorizedSchemas: sharding_db_remote ```  my Springboot demo configuration is: ```yaml spring:   datasource:     url: jdbc:mysql://localhost:3307/sharding_db     driver-class-name: com.mysql.jdbc.Driver     username: zhyee     password: zhyee ``` and it works.  </body>
		<created>2019-09-19 14:49:17</created>
		<closed>2019-09-23 12:01:49</closed>
	</bug>
	<bug>
		<id>3063</id>
		<title>Build error: spring-boot-maven-plugin version not defined</title>
		<body>## Bug Report  **For English only**, other languages will not accept.  Before report a bug, make sure you have:  - Searched open and closed [GitHub issues](https://github.com/apache/incubator-shardingsphere/issues). - Read documentation: [ShardingSphere Doc](https://shardingsphere.apache.org/document/current/en/overview).  Please pay attention on issues you submitted, because we maybe need more details.  If no response **more than 7 days** and we cannot reproduce it on current information, we will **close it**.  Please answer these questions before submitting your issue. Thanks!  ### Which version of ShardingSphere did you use? 4.0.0-RC3-SNAPSHOT  ### Which project did you use? Sharding-JDBC or Sharding-Proxy? sharding-ui  ### Expected behavior mvn clean install - success  ### Actual behavior mvn clean install - failed in some case  ### Reason analyze (If you can) Spring-boot-maven-plugin version not defined, if your local maven repository has an old version(&lt;= 1.4.2.RELEASE) of spring-boot-maven-plugin, it will fail.  ### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.  ### Example codes for reproduce this issue (such as a github link). </body>
		<created>2019-09-19 03:35:06</created>
		<closed>2019-09-22 13:00:49</closed>
	</bug>
	<bug>
		<id>3027</id>
		<title>Return Wrong type for tinyint and smallint column</title>
		<body>## Bug Report  ### Which version of ShardingSphere did you use?  4.0.0-RC2  ### Which project did you use? Sharding-JDBC or Sharding-Proxy?  Sharding-JDBC  ### Expected behavior  Get `tinyint` type column value from results is `integer` type for MySQL  ### Actual behavior  Get `tinyint` type column value from results is `byte` type for MySQL  ### Reason analyze (If you can)  ShardingSphere will getByte in `QueryResultUtil` for tinyint type column, But the tinyint type get from native JDBC getObject is `Integet` type.  Same as `small int` type. I also test `small int` type for DB2, PostgreSQL, all return `Integet` type from native JDBC getObject.  ### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.  ### Example codes for reproduce this issue (such as a github link). </body>
		<created>2019-09-12 08:23:15</created>
		<closed>2019-09-12 14:47:26</closed>
	</bug>
	<bug>
		<id>3017</id>
		<title>By Use EncryptDataSource the query with text column occurs error</title>
		<body>## Bug Report  **For English only**, other languages will not accept.  Before report a bug, make sure you have:  - Searched open and closed [GitHub issues](https://github.com/apache/incubator-shardingsphere/issues). - Read documentation: [ShardingSphere Doc](https://shardingsphere.apache.org/document/current/en/overview).  Please pay attention on issues you submitted, because we maybe need more details.  If no response **more than 7 days** and we cannot reproduce it on current information, we will **close it**.  Please answer these questions before submitting your issue. Thanks!  ### Which version of ShardingSphere did you use? 4.0.0-RC2  ### Which project did you use? Sharding-JDBC or Sharding-Proxy? Sharding-JDBC  ### Expected behavior By Use EncryptDataSource the query with text column can return correct result  ### Actual behavior By Use EncryptDataSource the query with text column occurs error  ### Reason analyze (If you can) By Use EncryptDataSource the query with text column is not convert correctly  ### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc. ![image](https://user-images.githubusercontent.com/31396902/64663070-2ba8e400-d47d-11e9-8fbb-a0f5867132b4.png) ![image](https://user-images.githubusercontent.com/31396902/64663314-f6e95c80-d47d-11e9-9fa1-6669272ee011.png) ![image](https://user-images.githubusercontent.com/31396902/64663327-036db500-d47e-11e9-8eee-fd30f260859a.png) ![image](https://user-images.githubusercontent.com/31396902/64663362-20a28380-d47e-11e9-83c3-b08233eca033.png) ![image](https://user-images.githubusercontent.com/31396902/64663380-2bf5af00-d47e-11e9-924b-b980aca06d78.png)  ### Example codes for reproduce this issue (such as a github link). </body>
		<created>2019-09-11 02:25:02</created>
		<closed>2019-10-10 10:08:59</closed>
	</bug>
	<bug>
		<id>3014</id>
		<title>if distinct column value is null,QueryRow will throw NullPointException</title>
		<body>## Bug Report  **For English only**, other languages will not accept.  Before report a bug, make sure you have:  - Searched open and closed [GitHub issues](https://github.com/apache/incubator-shardingsphere/issues). - Read documentation: [ShardingSphere Doc](https://shardingsphere.apache.org/document/current/en/overview).  Please pay attention on issues you submitted, because we maybe need more details.  If no response **more than 7 days** and we cannot reproduce it on current information, we will **close it**.  Please answer these questions before submitting your issue. Thanks!  ### Which version of ShardingSphere did you use? 4.0.0-RC2 ### Which project did you use? Sharding-JDBC or Sharding-Proxy? Sharding-JDBC ### Expected behavior when the anyone distinct column value is null,can return normal result ### Actual behavior will throw NullPointException ### Reason analyze (If you can) org.apache.shardingsphere.core.execute.sql.execute.row.QueryRow#isEqualPartly line 69  if the distinct column value is null,will throw NullPointException, if the rowData.get(i)==null, i think should continue ### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc. ``` sql SELECT DISTINCT sa.aid, sa.avatar_Url, sa.birthday, sa.create_time, sa.curr_address, sa.degree, sa.email,         sa.gender, sa.height, sa.identity_no, sa.identity_type, sa.image_id, sa.image_type, sa.image_url, sa.mark_info,         sa.married, sa.nation, sa.occupation, sa.person_name, sa.phone_no, sa.source_type, sa.sys_code, sa.thumbnail_url,         sa.update_time, sa.last_appear, sa.last_thumbnail_id, sa.event_count, sa.event_day_count         FROM                 t_skynet_archive sa         LEFT JOIN t_skynet_archive_label_relation salr ON sa.aid=salr.aid ``` anyone distinct column value is null will throw NullpointException ### Example codes for reproduce this issue (such as a github link). </body>
		<created>2019-09-10 04:06:24</created>
		<closed>2019-09-25 03:09:26</closed>
	</bug>
	<bug>
		<id>3013</id>
		<title>4.0.0-RC2 sharding-proxy use zookeeper can not start</title>
		<body>i can use zookeeper in sharding-proxy, but can not start. server.xml: orchestration:   name: orchestration_ds   overwrite: false   registry:     type: zookeeper     serverLists: localhost:2181     namespace: orchestration  error: [INFO ] 09:54:56.858 [main] o.a.c.f.imps.CuratorFrameworkImpl - Starting [INFO ] 09:54:56.863 [main] org.apache.zookeeper.ZooKeeper - Client environment:zookeeper.version=3.4.10-39d3a4f269333c922ed3db283be479f9deacaa0f, built on 03/23/2017 10:13 GMT [INFO ] 09:54:56.863 [main] org.apache.zookeeper.ZooKeeper - Client environment:host.name=server02 [INFO ] 09:54:56.863 [main] org.apache.zookeeper.ZooKeeper - Client environment:java.version=1.8.0_171 [INFO ] 09:54:56.863 [main] org.apache.zookeeper.ZooKeeper - Client environment:java.vendor=Oracle Corporation [INFO ] 09:54:56.863 [main] org.apache.zookeeper.ZooKeeper - Client environment:java.home=/usr/java/jdk1.8.0_171/jre [INFO ] 09:54:56.863 [main] org.apache.zookeeper.ZooKeeper - Client environment:java.class.path=.:/root/apache-shardingsphere-incubating-4.0.0-RC2-sharding-proxy-bin/conf:/root/apache-shardingsphere-incubating-4.0.0-RC2-sharding-proxy-bin/lib/sharding-proxy-bootstrap-4.0.0-RC2.jar:/root/apache-shardingsphere-incubating-4.0.0-RC2-sharding-proxy-bin/lib/sharding-proxy-common-4.0.0-RC2.jar:/root/apache-shardingsphere-incubating-4.0.0-RC2-sharding-proxy-bin/lib/sharding-core-entry-4.0.0-RC2.jar:/root/apache-shardingsphere-incubating-4.0.0-RC2-sharding-proxy-bin/lib/sharding-core-api-4.0.0-RC2.jar:/root/apache-shardingsphere-incubating-4.0.0-RC2-sharding-proxy-bin/lib/guava-18.0.jar:/root/apache-shardingsphere-incubating-4.0.0-RC2-sharding-proxy-bin/lib/slf4j-api-1.7.7.jar:/root/apache-shardingsphere-incubating-4.0.0-RC2-sharding-proxy-bin/lib/jcl-over-slf4j-1.7.7.jar:/root/apache-shardingsphere-incubating-4.0.0-RC2-sharding-proxy-bin/lib/sharding-core-common-4.0.0-RC2.jar:/root/apache-shardingsphere-incubating-4.0.0-RC2-sharding-proxy-bin/lib/groovy-2.4.5-indy.jar:/root/apache-shardingsphere-incubating-4.0.0-RC2-sharding-proxy-bin/lib/snakeyaml-1.16.jar:/root/apache-shardingsphere-incubating-4.0.0-RC2-sharding-proxy-bin/lib/commons-codec-1.10.jar:/root/apache-shardingsphere-incubating-4.0.0-RC2-sharding-proxy-bin/lib/sharding-core-parse-common-4.0.0-RC2.jar:/root/apache-shardingsphere-incubating-4.0.0-RC2-sharding-proxy-bin/lib/sharding-core-parse-spi-4.0.0-RC2.jar:/root/apache-shardingsphere-incubating-4.0.0-RC2-sharding-proxy-bin/lib/antlr4-runtime-4.7.1.jar:/root/apache-shardingsphere-incubating-4.0.0-RC2-sharding-proxy-bin/lib/commons-collections4-4.2.jar:/root/apache-shardingsphere-incubating-4.0.0-RC2-sharding-proxy-bin/lib/sharding-core-parse-mysql-4.0.0-RC2.jar:/root/apache-shardingsphere-incubating-4.0.0-RC2-sharding-proxy-bin/lib/sharding-core-parse-postgresql-4.0.0-RC2.jar:/root/apache-shardingsphere-incubating-4.0.0-RC2-sharding-proxy-bin/lib/sharding-core-parse-oracle-4.0.0-RC2.jar:/root/apache-shardingsphere-incubating-4.0.0-RC2-sharding-proxy-bin/lib/sharding-core-parse-sqlserver-4.0.0-RC2.jar:/root/apache-shardingsphere-incubating-4.0.0-RC2-sharding-proxy-bin/lib/sharding-core-optimize-4.0.0-RC2.jar:/root/apache-shardingsphere-incubating-4.0.0-RC2-sharding-proxy-bin/lib/sharding-core-route-4.0.0-RC2.jar:/root/apache-shardingsphere-incubating-4.0.0-RC2-sharding-proxy-bin/lib/sharding-core-rewrite-4.0.0-RC2.jar:/root/apache-shardingsphere-incubating-4.0.0-RC2-sharding-proxy-bin/lib/sharding-core-execute-4.0.0-RC2.jar:/root/apache-shardingsphere-incubating-4.0.0-RC2-sharding-proxy-bin/lib/sharding-core-merge-4.0.0-RC2.jar:/root/apache-shardingsphere-incubating-4.0.0-RC2-sharding-proxy-bin/lib/sharding-orchestration-core-4.0.0-RC2.jar:/root/apache-shardingsphere-incubating-4.0.0-RC2-sharding-proxy-bin/lib/sharding-orchestration-reg-api-4.0.0-RC2.jar:/root/apache-shardingsphere-incubating-4.0.0-RC2-sharding-proxy-bin/lib/HikariCP-java7-2.4.11.jar:/root/apache-shardingsphere-incubating-4.0.0-RC2-sharding-proxy-bin/lib/sharding-proxy-transport-core-4.0.0-RC2.jar:/root/apache-shardingsphere-incubating-4.0.0-RC2-sharding-proxy-bin/lib/netty-all-4.1.16.Final.jar:/root/apache-shardingsphere-incubating-4.0.0-RC2-sharding-proxy-bin/lib/sharding-proxy-transport-mysql-4.0.0-RC2.jar:/root/apache-shardingsphere-incubating-4.0.0-RC2-sharding-proxy-bin/lib/sharding-transaction-core-4.0.0-RC2.jar:/root/apache-shardingsphere-incubating-4.0.0-RC2-sharding-proxy-bin/lib/sharding-proxy-transport-postgresql-4.0.0-RC2.jar:/root/apache-shardingsphere-incubating-4.0.0-RC2-sharding-proxy-bin/lib/sharding-proxy-frontend-core-4.0.0-RC2.jar:/root/apache-shardingsphere-incubating-4.0.0-RC2-sharding-proxy-bin/lib/sharding-proxy-frontend-spi-4.0.0-RC2.jar:/root/apache-shardingsphere-incubating-4.0.0-RC2-sharding-proxy-bin/lib/sharding-proxy-backend-4.0.0-RC2.jar:/root/apache-shardingsphere-incubating-4.0.0-RC2-sharding-proxy-bin/lib/sharding-transaction-xa-core-4.0.0-RC2.jar:/root/apache-shardingsphere-incubating-4.0.0-RC2-sharding-proxy-bin/lib/sharding-transaction-xa-spi-4.0.0-RC2.jar:/root/apache-shardingsphere-incubating-4.0.0-RC2-sharding-proxy-bin/lib/jta-1.1.jar:/root/apache-shardingsphere-incubating-4.0.0-RC2-sharding-proxy-bin/lib/sharding-transaction-xa-atomikos-manager-4.0.0-RC2.jar:/root/apache-shardingsphere-incubating-4.0.0-RC2-sharding-proxy-bin/lib/transactions-4.0.6.jar:/root/apache-shardingsphere-incubating-4.0.0-RC2-sharding-proxy-bin/lib/transactions-api-4.0.6.jar:/root/apache-shardingsphere-incubating-4.0.0-RC2-sharding-proxy-bin/lib/atomikos-util-4.0.6.jar:/root/apache-shardingsphere-incubating-4.0.0-RC2-sharding-proxy-bin/lib/transactions-jta-4.0.6.jar:/root/apache-shardingsphere-incubating-4.0.0-RC2-sharding-proxy-bin/lib/transactions-jdbc-4.0.6.jar:/root/apache-shardingsphere-incubating-4.0.0-RC2-sharding-proxy-bin/lib/postgresql-42.2.5.jar:/root/apache-shardingsphere-incubating-4.0.0-RC2-sharding-proxy-bin/lib/sharding-proxy-frontend-mysql-4.0.0-RC2.jar:/root/apache-shardingsphere-incubating-4.0.0-RC2-sharding-proxy-bin/lib/sharding-proxy-frontend-postgresql-4.0.0-RC2.jar:/root/apache-shardingsphere-incubating-4.0.0-RC2-sharding-proxy-bin/lib/sharding-orchestration-reg-zookeeper-curator-4.0.0-RC2.jar:/root/apache-shardingsphere-incubating-4.0.0-RC2-sharding-proxy-bin/lib/curator-framework-2.10.0.jar:/root/apache-shardingsphere-incubating-4.0.0-RC2-sharding-proxy-bin/lib/curator-client-2.10.0.jar:/root/apache-shardingsphere-incubating-4.0.0-RC2-sharding-proxy-bin/lib/log4j-1.2.16.jar:/root/apache-shardingsphere-incubating-4.0.0-RC2-sharding-proxy-bin/lib/jline-0.9.94.jar:/root/apache-shardingsphere-incubating-4.0.0-RC2-sharding-proxy-bin/lib/curator-recipes-2.10.0.jar:/root/apache-shardingsphere-incubating-4.0.0-RC2-sharding-proxy-bin/lib/sharding-opentracing-4.0.0-RC2.jar:/root/apache-shardingsphere-incubating-4.0.0-RC2-sharding-proxy-bin/lib/opentracing-util-0.30.0.jar:/root/apache-shardingsphere-incubating-4.0.0-RC2-sharding-proxy-bin/lib/opentracing-api-0.30.0.jar:/root/apache-shardingsphere-incubating-4.0.0-RC2-sharding-proxy-bin/lib/opentracing-noop-0.30.0.jar:/root/apache-shardingsphere-incubating-4.0.0-RC2-sharding-proxy-bin/lib/logback-classic-1.2.0.jar:/root/apache-shardingsphere-incubating-4.0.0-RC2-sharding-proxy-bin/lib/logback-core-1.2.0.jar:/root/apache-shardingsphere-incubating-4.0.0-RC2-sharding-proxy-bin/lib/sharding-proxy-distribution-4.0.0-RC2.jar:/root/apache-shardingsphere-incubating-4.0.0-RC2-sharding-proxy-bin/lib/mysql-connector-java-5.1.47.jar:/root/apache-shardingsphere-incubating-4.0.0-RC2-sharding-proxy-bin/lib/zookeeper-3.4.10.jar [INFO ] 09:54:56.863 [main] org.apache.zookeeper.ZooKeeper - Client environment:java.library.path=/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib [INFO ] 09:54:56.863 [main] org.apache.zookeeper.ZooKeeper - Client environment:java.io.tmpdir=/tmp [INFO ] 09:54:56.863 [main] org.apache.zookeeper.ZooKeeper - Client environment:java.compiler=&lt;NA&gt; [INFO ] 09:54:56.863 [main] org.apache.zookeeper.ZooKeeper - Client environment:os.name=Linux [INFO ] 09:54:56.863 [main] org.apache.zookeeper.ZooKeeper - Client environment:os.arch=amd64 [INFO ] 09:54:56.863 [main] org.apache.zookeeper.ZooKeeper - Client environment:os.version=3.10.0-862.el7.x86_64 [INFO ] 09:54:56.863 [main] org.apache.zookeeper.ZooKeeper - Client environment:user.name=root [INFO ] 09:54:56.863 [main] org.apache.zookeeper.ZooKeeper - Client environment:user.home=/root [INFO ] 09:54:56.863 [main] org.apache.zookeeper.ZooKeeper - Client environment:user.dir=/root/apache-shardingsphere-incubating-4.0.0-RC2-sharding-proxy-bin [INFO ] 09:54:56.864 [main] org.apache.zookeeper.ZooKeeper - Initiating client connection, connectString=localhost:2181 sessionTimeout=60000 watcher=org.apache.curator.ConnectionState@67c33749 [INFO ] 09:54:56.874 [main-SendThread(localhost:2181)] org.apache.zookeeper.ClientCnxn - Opening socket connection to server localhost/127.0.0.1:2181. Will not attempt to authenticate using SASL (unknown error) [INFO ] 09:54:56.904 [main-SendThread(localhost:2181)] org.apache.zookeeper.ClientCnxn - Socket connection established to localhost/127.0.0.1:2181, initiating session [INFO ] 09:54:56.922 [main-SendThread(localhost:2181)] org.apache.zookeeper.ClientCnxn - Session establishment complete on server localhost/127.0.0.1:2181, sessionid = 0x16d18c861d00003, negotiated timeout = 40000 [INFO ] 09:54:56.924 [main-EventThread] o.a.c.f.state.ConnectionStateManager - State change: CONNECTED [INFO ] 09:54:57.457 [Curator-Framework-0] o.a.c.f.imps.CuratorFrameworkImpl - backgroundOperationsLoop exiting [INFO ] 09:54:57.466 [main] org.apache.zookeeper.ZooKeeper - Session: 0x16d18c861d00003 closed [INFO ] 09:54:57.466 [main-EventThread] org.apache.zookeeper.ClientCnxn - EventThread shut down for session: 0x16d18c861d00003 Exception in thread "main" java.lang.NullPointerException at java.util.regex.Matcher.getTextLength(Matcher.java:1283) at java.util.regex.Matcher.reset(Matcher.java:309) at java.util.regex.Matcher.&lt;init&gt;(Matcher.java:229) at java.util.regex.Pattern.matcher(Pattern.java:1093) at org.yaml.snakeyaml.reader.StreamReader.checkPrintable(StreamReader.java:64) at org.yaml.snakeyaml.reader.StreamReader.&lt;init&gt;(StreamReader.java:47) at org.yaml.snakeyaml.Yaml.loadAs(Yaml.java:427) at org.apache.shardingsphere.core.yaml.engine.YamlEngine.unmarshal(YamlEngine.java:87) at org.apache.shardingsphere.orchestration.internal.registry.config.service.ConfigurationService.loadAuthentication(ConfigurationService.java:244) at org.apache.shardingsphere.shardingproxy.Bootstrap.startWithRegistryCenter(Bootstrap.java:110) at org.apache.shardingsphere.shardingproxy.Bootstrap.main(Bootstrap.java:80)  Does anyone know how to solve this problem? </body>
		<created>2019-09-10 03:52:41</created>
		<closed>2019-09-17 11:29:57</closed>
	</bug>
	<bug>
		<id>3005</id>
		<title>error "There is no primary key here. Update will only use exact matching of the old values of the columns here. Thus, it may update more than one record."</title>
		<body>project: sharding-proxy version: v3.1.0 &amp; v4.0.0-RC2  question: when i use navicate to connect sharding-proxy, and do double-click the table(any table), it can load all the datas but just threw the errors like "There is no primary key here. Update will only use exact matching of the old values of the columns here. Thus, it may update more than one record." </body>
		<created>2019-09-09 07:18:15</created>
		<closed>2019-10-29 10:20:22</closed>
	</bug>
	<bug>
		<id>2992</id>
		<title>Data does not decrypt</title>
		<body>encryptRule:   encryptors:     aes_encryptor:       props:         aes.key.value: zqAvW0yEdH       type: AES   tables:     task:       columns:         phone:           cipherColumn: phone_cipher           encryptor: aes_encryptor           plainColumn: phone  ![image](https://user-images.githubusercontent.com/4637107/64430682-5eed1b00-d0eb-11e9-89b3-77991af8039f.png)  insert  is well, it worked. but when I select this record  the phone is null,  I used mybatis. ![image](https://user-images.githubusercontent.com/4637107/64430901-d458eb80-d0eb-11e9-8448-e9e049dec15e.png)   ![image](https://user-images.githubusercontent.com/4637107/64430949-f5b9d780-d0eb-11e9-9ac7-2e1d29d112a4.png) when I insert  it use encrypt method, but when i select  it dosen't call decrypt method.</body>
		<created>2019-09-06 13:16:43</created>
		<closed>2019-09-09 06:06:09</closed>
	</bug>
	<bug>
		<id>2987</id>
		<title>SQLServer OFFSET FETCH pagination return wrong results.</title>
		<body>## Bug Report  ### Which version of ShardingSphere did you use? 4.0.0-RC2  ### Which project did you use? Sharding-JDBC or Sharding-Proxy? Sharding-JDBC  ### Expected behavior SQL with "OFFSET 0 ROW FETCH NEXT 2 ROWS ONLY" returns 2 items. ### Actual behavior SQL with "OFFSET 0 ROW FETCH NEXT 2 ROWS ONLY" returns 4 items. ### Reason analyze (If you can)  ### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.  1. DataBase Two SQLServer databases, each has two tables : t_order_0 and t_order_1. 2. Datas Database : ds0 only table t_order_0 has data, t_order_1 has no data. ![image](https://user-images.githubusercontent.com/1227977/64414678-60581c80-d0c6-11e9-9eb2-77a3625f2664.png) Database : ds1 only table t_order_1 has data, t_order_0 has no data. ![image](https://user-images.githubusercontent.com/1227977/64414723-736aec80-d0c6-11e9-950e-3b8893367863.png)  3. shardingrule configuration ```YAML shardingRule:   tables:     t_order:       actualDataNodes: ds${0..1}.t_order_${0..1}       databaseStrategy:         inline:           shardingColumn: user_id           algorithmExpression: ds${user_id % 2}       tableStrategy:         inline:           shardingColumn: order_id           algorithmExpression: t_order_${order_id % 2}       keyGenerator:         type: SNOWFLAKE         column: order_id    defaultDataSourceName: ds0   defaultTableStrategy:     none:   defaultKeyGenerator:     type: SNOWFLAKE     column: order_id  props:   sql.show: true ``` 4. Ouput ``` 2019-09-06 16:46:47 INFO [ShardingSphere-SQL] Rule Type: sharding 2019-09-06 16:46:47 INFO [ShardingSphere-SQL] Logic SQL: select user_id, order_id, order_no from t_order order by order_id asc OFFSET 0 ROW FETCH NEXT 2 ROWS ONLY 2019-09-06 16:46:47 INFO [ShardingSphere-SQL] SQLStatement: ShardingSelectOptimizedStatement(tables=Tables(tables=[Table(name=t_order, alias=Optional.absent())], schema=Optional.absent()), groupBy=org.apache.shardingsphere.core.optimize.sharding.segment.select.groupby.GroupBy@63fd4873, orderBy=org.apache.shardingsphere.core.optimize.sharding.segment.select.orderby.OrderBy@1e11bc55, selectItems=SelectItems(startIndex=7, stopIndex=33, distinctRow=false, items=[ColumnSelectItem(owner=null, name=user_id, alias=Optional.absent()), ColumnSelectItem(owner=null, name=order_id, alias=Optional.absent()), ColumnSelectItem(owner=null, name=order_no, alias=Optional.absent())], tables=[TableSegment(startIndex=40, stopIndex=46, name=t_order, quoteCharacter=NONE, owner=Optional.absent(), alias=Optional.absent())]), pagination=org.apache.shardingsphere.core.optimize.sharding.segment.select.pagination.Pagination@7544a1e4, containsSubquery=false) 2019-09-06 16:46:47 INFO [ShardingSphere-SQL] Actual SQL: ds0 ::: select user_id, order_id, order_no from t_order_0 order by order_id asc OFFSET 0 ROW FETCH NEXT 2 ROWS ONLY 2019-09-06 16:46:47 INFO [ShardingSphere-SQL] Actual SQL: ds0 ::: select user_id, order_id, order_no from t_order_1 order by order_id asc OFFSET 0 ROW FETCH NEXT 2 ROWS ONLY 2019-09-06 16:46:47 INFO [ShardingSphere-SQL] Actual SQL: ds1 ::: select user_id, order_id, order_no from t_order_0 order by order_id asc OFFSET 0 ROW FETCH NEXT 2 ROWS ONLY 2019-09-06 16:46:47 INFO [ShardingSphere-SQL] Actual SQL: ds1 ::: select user_id, order_id, order_no from t_order_1 order by order_id asc OFFSET 0 ROW FETCH NEXT 2 ROWS ONLY Begin to print results order00 order01 order02 order03 Finish to print results ```  From above we can see that returns 4 items, but expected is 2.  The query SQL is without sharding field(there is no where condition) ```SQL select user_id, order_id, order_no from t_order order by order_id asc OFFSET 0 ROW FETCH NEXT 2 ROWS ONLY ```  ### Example codes for reproduce this issue (such as a github link). </body>
		<created>2019-09-06 08:55:27</created>
		<closed>2019-12-19 01:53:34</closed>
	</bug>
	<bug>
		<id>2981</id>
		<title>It doesn't work when set properties for ShardingPreparedStatement.</title>
		<body>## Bug Report  **For English only**, other languages will not accept.  Before report a bug, make sure you have:  - Searched open and closed [GitHub issues](https://github.com/apache/incubator-shardingsphere/issues). - Read documentation: [ShardingSphere Doc](https://shardingsphere.apache.org/document/current/en/overview).  Please pay attention on issues you submitted, because we maybe need more details.  If no response **more than 7 days** and we cannot reproduce it on current information, we will **close it**.  Please answer these questions before submitting your issue. Thanks!  ### Which version of ShardingSphere did you use? &gt; 4.0.0.RC3 ### Which project did you use? Sharding-JDBC or Sharding-Proxy? &gt; Sharding-JDBC ### Expected behavior  ### Actual behavior &gt; When set queryTimeout property for ShardingPreparedStatement, it doesn't work. ### Reason analyze (If you can)  &gt; Because when ShardingPreparedStatement is created, there is no actual PreparedStatement in ShardingPreparedStatement. Only when you call execute() or executeQuery(),  PreparedStatement is created. So before execute() is called, any assignment for PreparedStatement will not work.  ### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc. &gt; One solution is to create PreparedStatement once ShardingPreparedStatement is created. You need to split function of initPreparedStatementExecutor() in ShardingPreparedStatement. Here are related codes in ShardingPreparedStatement: ``` public ShardingPreparedStatement(final ShardingConnection connection, final String sql) {         this(connection, sql, ResultSet.TYPE_FORWARD_ONLY, ResultSet.CONCUR_READ_ONLY, ResultSet.HOLD_CURSORS_OVER_COMMIT, false);     } --- @Override     public ResultSet executeQuery() throws SQLException {         ResultSet result;         try {             clearPrevious();             shard();             initPreparedStatementExecutor();             MergeEngine mergeEngine = MergeEngineFactory.newInstance(connection.getRuntimeContext().getDatabaseType(),                      connection.getRuntimeContext().getRule(), sqlRouteResult, connection.getRuntimeContext().getMetaData().getTables(), preparedStatementExecutor.executeQuery());             result = getResultSet(mergeEngine);         } finally {             clearBatch();         }         currentResultSet = result;         return result;     } --- private void initPreparedStatementExecutor() throws SQLException {         preparedStatementExecutor.init(sqlRouteResult);         setParametersForStatements();     } --- In PreparedStatementExecutor.java public void init(final SQLRouteResult routeResult) throws SQLException {         setOptimizedStatement(routeResult.getShardingStatement());         getExecuteGroups().addAll(obtainExecuteGroups(routeResult.getRouteUnits()));         cacheStatements();     } ``` ### Example codes for reproduce this issue (such as a github link). </body>
		<created>2019-09-05 08:21:41</created>
		<closed>2019-09-08 08:20:35</closed>
	</bug>
	<bug>
		<id>2974</id>
		<title>when set two column to encrypt, one of the cipher-column is plain data, the other is correct</title>
		<body>Sharding-encript version:4.0.0-RC2-SNAPSHOT my logical sql SQL: update cf_application_info set phone=?,idNo=? where applyNum = ? the question is when i set phone and idN is the cipher column,and alter my table by adding phone_cipher,idNo_cipher column,i update my data,the result is phone_cipher has the plain data,and the phone column has the cipher data,this is strange and i think this is a bug. </body>
		<created>2019-09-04 12:33:22</created>
		<closed>2019-09-05 02:17:30</closed>
	</bug>
	<bug>
		<id>2973</id>
		<title>decrypt the plain data when "query.with.cipher.column" is false</title>
		<body>Sharding-encript version:4.0.0-RC2-SNAPSHOT my logical sql SQL: select           id, applyNum, status,           applyName, idNo, phone         from cf_application_info         where applyNum = ? the bug is:when my setting "query.with.cipher.column" is false,i query my origin data(plain data) ,it happens exception.it seems the code still using the aks to decrypt my data. this is the exception: Caused by: at com.jdd.aks.extend.AksShardingExtend.decrypt(AksShardingExtend.java:122) at org.apache.shardingsphere.core.execute.sql.execute.result.StreamQueryResult.decrypt(StreamQueryResult.java:162) at org.apache.shardingsphere.core.execute.sql.execute.result.StreamQueryResult.decrypt(StreamQueryResult.java:157) at org.apache.shardingsphere.core.execute.sql.execute.result.StreamQueryResult.getValue(StreamQueryResult.java:75) at org.apache.shardingsphere.core.merge.dql.common.StreamMergedResult.getValue(StreamMergedResult.java:56) at org.apache.shardingsphere.shardingjdbc.jdbc.core.resultset.EncryptResultSet.getString(EncryptResultSet.java:185) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at java.lang.reflect.Method.invoke(Method.java:498) at org.apache.ibatis.logging.jdbc.ResultSetLogger.invoke(ResultSetLogger.java:68) at org.apache.ibatis.type.StringTypeHandler.getNullableResult(StringTypeHandler.java:37) at org.apache.ibatis.type.StringTypeHandler.getNullableResult(StringTypeHandler.java:26) at org.apache.ibatis.type.BaseTypeHandler.getResult(BaseTypeHandler.java:66) ... 43 more i hope this can be fixed.thanks</body>
		<created>2019-09-04 12:22:23</created>
		<closed>2019-09-05 02:16:32</closed>
	</bug>
	<bug>
		<id>2972</id>
		<title>when using sharding master-slave-rules,the encryptRule is not worked for result,but is wored for param</title>
		<body>## Bug Report  **For English only**, other languages will not accept.  Before report a bug, make sure you have:  - Searched open and closed [GitHub issues](https://github.com/apache/incubator-shardingsphere/issues). - Read documentation: [ShardingSphere Doc](https://shardingsphere.apache.org/document/current/en/overview).  Please pay attention on issues you submitted, because we maybe need more details.  If no response **more than 7 days** and we cannot reproduce it on current information, we will **close it**.  Please answer these questions before submitting your issue. Thanks!  ### Which version of ShardingSphere did you use? 4.0.0-RC2  ### Which project did you use? Sharding-JDBC or Sharding-Proxy? Sharding-JDBC  ### Expected behavior the query result is decrypt  ### Actual behavior the query result is still encrypt  ### Reason analyze (If you can) thie query result not use the encryptRule to decrypt  **this question is not dupe! I use the master-slave-rules! I want the master-slave-rules and the encrpt can combine use!**  ### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.  ### Example codes for reproduce this issue (such as a github link). spring: shardingsphere: datasource: names: master,slave0 master: type: com.alibaba.druid.pool.DruidDataSource driver-class-name: org.h2.Driver url: jdbc:h2:mem:dbtest:public;DB_CLOSE_DELAY=-1;MODE=MySQL slave0: type: com.alibaba.druid.pool.DruidDataSource driver-class-name: org.h2.Driver url: jdbc:h2:mem:dbtest:public;DB_CLOSE_DELAY=-1;MODE=MySQL sharding: defaultDataSourceName: dataSource master-slave-rules: dataSource: master-data-source-name: master slave-data-source-names[0]: slave0 load-balance-algorithm-type: ROUND_ROBIN encryptRule: encryptors: encryptor_aes: type: AES props: aes.key.value: 123456 tables: company: columns: address: cipherColumn: address encryptor: encryptor_aes full_name: cipherColumn: full_name encryptor: encryptor_aes props: sql.show: true</body>
		<created>2019-09-04 09:37:25</created>
		<closed>2019-09-09 03:57:05</closed>
	</bug>
	<bug>
		<id>2961</id>
		<title>Delete with alias error</title>
		<body>Sharding-jdbc version:4.0.0-RC1 my logical sql  delete Goods from goods AS Goods WHERE Goods.goods_id   &lt;=   ?  However sharding-jdbc replace alias and the table name totally, just like this delete goods_1 from goods_1 AS Goods WHERE Goods.goods_id   &lt;=   ? this will execute error in mysql 5.6  One solution is to change to another alias different table name, but this may difficult for me. What else should I do? </body>
		<created>2019-09-02 12:33:42</created>
		<closed>2019-09-05 13:41:38</closed>
	</bug>
	<bug>
		<id>2926</id>
		<title>mysql page limit Long parameter type error</title>
		<body>## Bug Report  **For English only**, other languages will not accept.  Before report a bug, make sure you have:  - Searched open and closed [GitHub issues](https://github.com/apache/incubator-shardingsphere/issues). - Read documentation: [ShardingSphere Doc](https://shardingsphere.apache.org/document/current/en/overview).  Please pay attention on issues you submitted, because we maybe need more details.  If no response **more than 7 days** and we cannot reproduce it on current information, we will **close it**.  Please answer these questions before submitting your issue. Thanks!  ### Which version of ShardingSphere did you use? 4.0.0-RC2-SNAPSHOT(clone from dev branch) ### Which project did you use? Sharding-JDBC or Sharding-Proxy? Sharding-JDBC ### Expected behavior sql execute success ### Actual behavior Caused by: java.lang.ClassCastException: java.lang.Long cannot be cast to java.lang.Integer ### Reason analyze (If you can) my code below: public List&lt;User&gt; findUsersByPageIntType(Integer begin, Integer end){ String sql = "select id,name,age,email from user limit ?,? "; Object[] params = new Object[] {begin, end}; List&lt;User&gt; userList = jdbcTemplate.query(sql, params, getUserMapper()); return userList; } public List&lt;User&gt; findUsersByPageLongType(Long begin, Long end){ String sql = "select id,name,age,email from user limit ?,? "; Object[] params = new Object[] {begin, end}; List&lt;User&gt; userList = jdbcTemplate.query(sql, params, getUserMapper()); return userList; }   first, call findUsersByPageIntType method, it's ok but call findUsersByPageLongType method there was an error -&gt; Caused by: java.lang.ClassCastException: java.lang.Long cannot be cast to java.lang.Integer  ### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc. 1.application.properties spring.shardingsphere.datasource.names=ds0 spring.shardingsphere.datasource.ds0.type=com.zaxxer.hikari.HikariDataSource spring.shardingsphere.datasource.ds0.driver-class-name=com.mysql.jdbc.Driver spring.shardingsphere.datasource.ds0.jdbc-url=jdbc:mysql://127.0.0.1:3306/ttx_util?useUnicode=true&amp;useSSL=false&amp;characterEncoding=utf8 spring.shardingsphere.datasource.ds0.username=test spring.shardingsphere.datasource.ds0.password=test  spring.shardingsphere.sharding.tables.user.actual-data-nodes=ds0.user_$-&gt;{0..1} spring.shardingsphere.sharding.tables.user.table-strategy.inline.sharding-column=erp_id spring.shardingsphere.sharding.tables.user.table-strategy.inline.algorithm-expression=user_$-&gt;{erp_id % 2} spring.shardingsphere.sharding.tables.user.key-generator.column=id spring.shardingsphere.sharding.tables.user.key-generator.type=SNOWFLAKE #是否开启SQL显示，默认值: false spring.shardingsphere.props.sql.show=true 2.table create sql: CREATE TABLE `user_0` (   `id` bigint(20) NOT NULL COMMENT '主键ID', `erp_id` int(11) NOT NULL COMMENT '分表erpId',   `name` varchar(30) DEFAULT NULL COMMENT '姓名',   `age` int(11) DEFAULT NULL COMMENT '年龄',   `email` varchar(50) DEFAULT NULL COMMENT '邮箱',   PRIMARY KEY (`id`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;  CREATE TABLE `user_1` (   `id` bigint(20) NOT NULL COMMENT '主键ID', `erp_id` int(11) NOT NULL COMMENT '分表erpId',   `name` varchar(30) DEFAULT NULL COMMENT '姓名',   `age` int(11) DEFAULT NULL COMMENT '年龄',   `email` varchar(50) DEFAULT NULL COMMENT '邮箱',   PRIMARY KEY (`id`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4; ### Example codes for reproduce this issue (such as a github link). </body>
		<created>2019-08-26 10:00:40</created>
		<closed>2019-09-08 20:48:00</closed>
	</bug>
	<bug>
		<id>2923</id>
		<title>when using EncryptPreparedStatement to savebatch occours error</title>
		<body>## Bug Report  **For English only**, other languages will not accept.  Before report a bug, make sure you have:  - Searched open and closed [GitHub issues](https://github.com/apache/incubator-shardingsphere/issues). - Read documentation: [ShardingSphere Doc](https://shardingsphere.apache.org/document/current/en/overview).  Please pay attention on issues you submitted, because we maybe need more details.  If no response **more than 7 days** and we cannot reproduce it on current information, we will **close it**.  Please answer these questions before submitting your issue. Thanks!  ### Which version of ShardingSphere did you use? 4.0.0-RC2  ### Which project did you use? Sharding-JDBC or Sharding-Proxy? Sharding-JDBC  ### Expected behavior ![image](https://user-images.githubusercontent.com/31396902/63673204-599fee80-c816-11e9-8d89-04e1142dec64.png) preparedStatement is not null  ### Actual behavior preparedStatement is null  ### Reason analyze (If you can) when use EncryptPreparedStatement to batch operation, preparedStatement will not Initialization  ### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.  ### Example codes for reproduce this issue (such as a github link). </body>
		<created>2019-08-26 07:32:13</created>
		<closed>2019-09-09 03:18:11</closed>
	</bug>
	<bug>
		<id>2922</id>
		<title>IllegalArgumentException will occur when execute 'show databases' use sharding-jdbc</title>
		<body>## Bug Report  **For English only**, other languages will not accept.  Before report a bug, make sure you have:  - Searched open and closed [GitHub issues](https://github.com/apache/incubator-shardingsphere/issues). - Read documentation: [ShardingSphere Doc](https://shardingsphere.apache.org/document/current/en/overview).  Please pay attention on issues you submitted, because we maybe need more details.  If no response **more than 7 days** and we cannot reproduce it on current information, we will **close it**.  Please answer these questions before submitting your issue. Thanks!  ### Which version of ShardingSphere did you use? the dev branch ### Which project did you use? Sharding-JDBC or Sharding-Proxy?  Sharding-JDBC ### Expected behavior no Exception ### Actual behavior occur an IllegalArgumentException ### Reason analyze (If you can) initialization of AbstractResultSetAdapter check resultSets whether empty ，but resultSets will empty when you show databases ### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc. &lt;img width="981" alt="testBugShow" src="https://user-images.githubusercontent.com/4453100/63668150-d88e2a80-c808-11e9-9e6f-bdb9adba5a44.png"&gt;  ### Example codes for reproduce this issue (such as a github link). &lt;img width="1072" alt="bugdetail" src="https://user-images.githubusercontent.com/4453100/63668160-e2179280-c808-11e9-9c8f-b6d269138184.png"&gt;  </body>
		<created>2019-08-26 05:53:59</created>
		<closed>2019-10-18 09:27:14</closed>
	</bug>
	<bug>
		<id>2919</id>
		<title>When the application restarts，LEAF_SEGMENT Distributed Primary Key Generation Not working properly in RC2</title>
		<body>## Bug Report  ### Which version of ShardingSphere did you use? sharding-orchestration:4.0.0-RC2 ### Which project did you use? Sharding-JDBC or Sharding-Proxy? Sharding-JDBC  ### Expected behavior When the program restarts, the primary key of LEAF_SEGMENT distribution can be generated normally. ### Actual behavior When the program restarts, the program throws a null pointer exception,  ### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.  Caused by: java.lang.NullPointerException at org.apache.shardingsphere.orchestration.reg.zookeeper.curator.CuratorZookeeperRegistryCenter.tryLock(CuratorZookeeperRegistryCenter.java:306) at org.apache.shardingsphere.orchestration.internal.keygen.LeafSegmentKeyGenerator.incrementCacheId(LeafSegmentKeyGenerator.java:136)  ### Reason analyze (If you can) When the program restarts, **CuratorZookeeperRegistryCenter leafLock is not initialized properly，** related code: 1. [LeafSegmentKeyGenerator.java#L95](https://github.com/apache/incubator-shardingsphere/blob/dev/sharding-orchestration/sharding-orchestration-core/src/main/java/org/apache/shardingsphere/orchestration/internal/keygen/LeafSegmentKeyGenerator.java#L95)  2. [CuratorZookeeperRegistryCenter.java:#306](https://github.com/apache/incubator-shardingsphere/blob/dev/sharding-orchestration/sharding-orchestration-reg/sharding-orchestration-reg-zookeeper-curator/src/main/java/org/apache/shardingsphere/orchestration/reg/zookeeper/curator/CuratorZookeeperRegistryCenter.java#L306) </body>
		<created>2019-08-24 09:18:41</created>
		<closed>2019-08-28 10:16:42</closed>
	</bug>
	<bug>
		<id>2917</id>
		<title>NullPointerException will occur when bindingtable have no tablerule but have a default datasource</title>
		<body>## Bug Report  **For English only**, other languages will not accept.  Before report a bug, make sure you have:  - Searched open and closed [GitHub issues](https://github.com/apache/incubator-shardingsphere/issues). - Read documentation: [ShardingSphere Doc](https://shardingsphere.apache.org/document/current/en/overview).  Please pay attention on issues you submitted, because we maybe need more details.  If no response **more than 7 days** and we cannot reproduce it on current information, we will **close it**.  Please answer these questions before submitting your issue. Thanks!  ### Which version of ShardingSphere did you use? the dev branch ### Which project did you use? Sharding-JDBC or Sharding-Proxy?  Sharding-JDBC ### Expected behavior can work and not occur NullPointerException ### Actual behavior occur a NullPointerException ### Reason analyze (If you can) the initialization of bindingTableRules of ShardingRule use broadcastTables when broadcastTables have not been initialized  ### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.  ### Example codes for reproduce this issue (such as a github link).  &gt; Map&lt;String, DataSource&gt; dataSourceMap = new HashMap&lt;&gt;();         dataSourceMap.put("master_0", getMysqlDatasource("demo_ds_master_0"));         ShardingRuleConfiguration configuration = new ShardingRuleConfiguration();         configuration.setBindingTableGroups(Arrays.asList("user","user_detail"));         configuration.setDefaultDataSourceName("master_0");         ShardingDataSourceFactory.createDataSource(dataSourceMap,configuration,new Properties()); </body>
		<created>2019-08-23 11:50:32</created>
		<closed>2019-08-26 09:29:27</closed>
	</bug>
	<bug>
		<id>2883</id>
		<title>Encrypt replace the table name with the column name.</title>
		<body>## Bug Report  ### Which version of ShardingSphere did you use?  4.0.0-RC2-SNAPSHOT  ### Which project did you use? Sharding-JDBC or Sharding-Proxy?  Sharding-JDBC   ### Expected behavior  encrypt successfully.  ### Actual behavior  Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'status.status' in 'field list'  ### Reason analyze (If you can)  Logic SQL: `select orderentit0_.order_id as order_id1_1_, orderentit0_.status as status2_1_, orderentit0_.user_id as user_id3_1_ from t_order orderentit0_`  actual SQL: `select orderentit0_.order_id as order_id1_1_, status.status as status2_1_, orderentit0_.user_id as user_id3_1_ from t_order orderentit0_`  Replace the table name with column name when rewrite.  ### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.  clone example code use `local-zookeeper-encrypt` as spring.profiles.active run `/Users/yangyi/Documents/java/sharding-sphere-example-sion/sharding-jdbc-example/orchestration-example/orchestration-spring-boot-example/src/main/java/org/apache/shardingsphere/example/orchestration/spring/boot/SpringBootExample`  ### Example codes for reproduce this issue (such as a github link).  https://github.com/apache/incubator-shardingsphere-example </body>
		<created>2019-08-16 08:43:09</created>
		<closed>2019-08-16 14:06:16</closed>
	</bug>
	<bug>
		<id>2868</id>
		<title>Use `position` with column without quote will cause parse failure for MySQL</title>
		<body>`position` is not a keyword, but will use on position function, so we should add it to unreserved word</body>
		<created>2019-08-13 15:14:56</created>
		<closed>2019-08-13 15:27:55</closed>
	</bug>
	<bug>
		<id>2862</id>
		<title>Wring rewritten SQL in mulitiple threads</title>
		<body>## Bug Report  **For English only**, other languages will not accept.  Before report a bug, make sure you have:  - Searched open and closed [GitHub issues](https://github.com/apache/incubator-shardingsphere/issues). - Read documentation: [ShardingSphere Doc](https://shardingsphere.apache.org/document/current/en/overview).  Please pay attention on issues you submitted, because we maybe need more details.  If no response **more than 7 days** and we cannot reproduce it on current information, we will **close it**.  Please answer these questions before submitting your issue. Thanks!  ### Which version of ShardingSphere did you use?  ### Which project did you use? Sharding-JDBC or Sharding-Proxy?  ### Expected behavior  ### Actual behavior  ### Reason analyze (If you can)  ### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.  ### Example codes for reproduce this issue (such as a github link). </body>
		<created>2019-08-13 08:21:16</created>
		<closed>2019-08-13 08:50:42</closed>
	</bug>
	<bug>
		<id>2838</id>
		<title>group by with keyword alias miss back quote when rewriting</title>
		<body>## Bug Report  **For English only**, other languages will not accept.  Before report a bug, make sure you have:  - Searched open and closed [GitHub issues](https://github.com/apache/incubator-shardingsphere/issues). - Read documentation: [ShardingSphere Doc](https://shardingsphere.apache.org/document/current/en/overview).  Please pay attention on issues you submitted, because we maybe need more details.  If no response **more than 7 days** and we cannot reproduce it on current information, we will **close it**.  Please answer these questions before submitting your issue. Thanks!  ### Which version of ShardingSphere did you use? 4.0.0-RC2-SNAPSHOT ### Which project did you use? Sharding-JDBC or Sharding-Proxy? Sharding-JDBC and Sharding-Proxy ### Expected behavior logical SQL: SELECT SUM(order_id) AS orders_sum, user_id as `key` FROM t_order GROUP BY `key` actual SQL: SELECT SUM(order_id) AS orders_sum, user_id as `key` FROM t_order GROUP BY `key` ORDER BY 'key' ASC ### Actual behavior SELECT SUM(order_id) AS orders_sum, user_id as `key` FROM t_order GROUP BY `key` ORDER BY key ASC ### Reason analyze (If you can) miss back quote when rewriting ### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.  ### Example codes for reproduce this issue (such as a github link). </body>
		<created>2019-08-09 04:22:48</created>
		<closed>2019-08-09 04:23:07</closed>
	</bug>
	<bug>
		<id>2823</id>
		<title>Can not rewrite correctly when use plainColumn</title>
		<body>## Bug Report  **For English only**, other languages will not accept.  Before report a bug, make sure you have:  - Searched open and closed [GitHub issues](https://github.com/apache/incubator-shardingsphere/issues). - Read documentation: [ShardingSphere Doc](https://shardingsphere.apache.org/document/current/en/overview).  Please pay attention on issues you submitted, because we maybe need more details.  If no response **more than 7 days** and we cannot reproduce it on current information, we will **close it**.  Please answer these questions before submitting your issue. Thanks!  ### Which version of ShardingSphere did you use? 4.0.0.RC2 ### Which project did you use? Sharding-JDBC or Sharding-Proxy? Sharding-JDBC ### Expected behavior When use plainColumn, The SQL will be rewritten to Select plainColumn from tb. ### Actual behavior When use plainColumn, The SQL will be rewritten to Select cipherColumn from tb. ### Reason analyze (If you can)  ### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.  ### Example codes for reproduce this issue (such as a github link). </body>
		<created>2019-08-07 11:49:11</created>
		<closed>2019-08-08 09:33:42</closed>
	</bug>
	<bug>
		<id>2784</id>
		<title>Wrong resultSet when execute `desc table;` using EncryptRule</title>
		<body>## Bug Report  **For English only**, other languages will not accept.  Before report a bug, make sure you have:  - Searched open and closed [GitHub issues](https://github.com/apache/incubator-shardingsphere/issues). - Read documentation: [ShardingSphere Doc](https://shardingsphere.apache.org/document/current/en/overview).  Please pay attention on issues you submitted, because we maybe need more details.  If no response **more than 7 days** and we cannot reproduce it on current information, we will **close it**.  Please answer these questions before submitting your issue. Thanks!  ### Which version of ShardingSphere did you use? 4.0.0.RC2 ### Which project did you use? Sharding-JDBC or Sharding-Proxy? Sharding-Proxy ### Expected behavior When execute `desc encryptTable`, it will show logic columns of encryptTable ### Actual behavior when execute `desc encryptTable`, it shows actual columns of encryptTable ### Reason analyze (If you can)  ### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.  ### Example codes for reproduce this issue (such as a github link). The coding entrance: ``` JDBCDatabaseCommunicationEngine.java  private BackendResponse merge(final SQLRouteResult routeResult) throws SQLException {         if (response instanceof UpdateResponse) {             if (!isAllBroadcastTables(routeResult.getOptimizedStatement())) {                 ((UpdateResponse) response).mergeUpdateCount();             }             return response;         }         mergedResult = MergeEngineFactory.newInstance(databaseType,                  logicSchema.getShardingRule(), routeResult, logicSchema.getMetaData().getTable(), ((QueryResponse) response).getQueryResults()).merge();         if (mergedResult instanceof ShowTablesMergedResult) {             ((ShowTablesMergedResult) mergedResult).resetColumnLabel(logicSchema.getName());         }         handleColumnsForQueryHeader(routeResult);         return response;     } ``` &gt; You need to replace actual columns of BackendResponse with logic columns here.  Here are some ideas: 1.  Create DescribeTableMergedResult extends MemoryMergedResult to handle QueryResults of `DESC encryptTable`, but U need to pass ShardingRuel not EncryptRule to DALMergeEngine 2. Modify BackendResponse in merge() of JDBCDatabaseCommunicationEngine </body>
		<created>2019-07-30 02:46:36</created>
		<closed>2019-09-03 12:23:45</closed>
	</bug>
	<bug>
		<id>2777</id>
		<title>Distinct Throw exception java.lang.IndexOutOfBoundsException: Index: 0, Size: 0</title>
		<body>## Bug Report  java.lang.IndexOutOfBoundsException: Index: 0, Size: 0  ### Which version of ShardingSphere did you use?  4.0.0-RC2  ### Which project did you use? Sharding-JDBC or Sharding-Proxy?  Sharding-Proxy  ### Expected behavior  execute SQL `select distinct(user_id) from t_order` success  ### Actual behavior  ``` [ERROR] 10:06:09.837 [ShardingSphere-Command-4] o.a.s.s.f.c.CommandExecutorTask - Exception occur:  java.lang.IndexOutOfBoundsException: Index: 0, Size: 0 at java.util.ArrayList.rangeCheck(ArrayList.java:657) at java.util.ArrayList.get(ArrayList.java:433) at org.apache.shardingsphere.core.execute.sql.execute.result.DistinctQueryResult.getColumnIndex(DistinctQueryResult.java:208) at org.apache.shardingsphere.core.execute.sql.execute.result.DistinctQueryResult$1.apply(DistinctQueryResult.java:95) at org.apache.shardingsphere.core.execute.sql.execute.result.DistinctQueryResult$1.apply(DistinctQueryResult.java:91) at com.google.common.collect.Lists$TransformingRandomAccessList$1.transform(Lists.java:617) at com.google.common.collect.TransformedIterator.next(TransformedIterator.java:48) at com.google.common.collect.TransformedIterator.next(TransformedIterator.java:48) at java.util.AbstractList.hashCode(AbstractList.java:540) at org.apache.shardingsphere.core.execute.sql.execute.row.QueryRow.hashCode(QueryRow.java:84) at java.util.HashMap.hash(HashMap.java:339) at java.util.HashMap.put(HashMap.java:612) at java.util.HashSet.add(HashSet.java:220) at org.apache.shardingsphere.core.execute.sql.execute.result.DistinctQueryResult.fill(DistinctQueryResult.java:111) at org.apache.shardingsphere.core.execute.sql.execute.result.DistinctQueryResult.getResultData(DistinctQueryResult.java:99) at org.apache.shardingsphere.core.execute.sql.execute.result.DistinctQueryResult.&lt;init&gt;(DistinctQueryResult.java:67) at org.apache.shardingsphere.core.merge.dql.DQLMergeEngine.getRealQueryResults(DQLMergeEngine.java:85) at org.apache.shardingsphere.core.merge.dql.DQLMergeEngine.&lt;init&gt;(DQLMergeEngine.java:71) at org.apache.shardingsphere.core.merge.MergeEngineFactory.newInstance(MergeEngineFactory.java:58) at org.apache.shardingsphere.shardingproxy.backend.communication.jdbc.JDBCDatabaseCommunicationEngine.merge(JDBCDatabaseCommunicationEngine.java:110) at org.apache.shardingsphere.shardingproxy.backend.communication.jdbc.JDBCDatabaseCommunicationEngine.execute(JDBCDatabaseCommunicationEngine.java:95) at org.apache.shardingsphere.shardingproxy.backend.communication.jdbc.JDBCDatabaseCommunicationEngine.execute(JDBCDatabaseCommunicationEngine.java:77) at org.apache.shardingsphere.shardingproxy.backend.text.query.QueryBackendHandler.execute(QueryBackendHandler.java:54) at org.apache.shardingsphere.shardingproxy.frontend.mysql.command.query.text.query.MySQLComQueryPacketExecutor.execute(MySQLComQueryPacketExecutor.java:72) at org.apache.shardingsphere.shardingproxy.frontend.command.CommandExecutorTask.executeCommand(CommandExecutorTask.java:86) at org.apache.shardingsphere.shardingproxy.frontend.command.CommandExecutorTask.run(CommandExecutorTask.java:66) at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) at java.lang.Thread.run(Thread.java:748) ```  ### Reason analyze (If you can)  The input `distinctColumnLabels` in `DistinctQueryResult` is `(user_id)`, but columnLabel in ResultSet and `columnLabelAndIndexMap` is `user_id`, so can find this columnLabel.  `distinctColumnLabels` is come from `ShardingSelectOptimizedStatement`, so there may be mistakes in Optimize.  ### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.  sharding rule configuration: ``` schemaName: sharding_db  dataSources:   ds_0:     url: jdbc:mysql://127.0.0.1:3306/demo_ds_0?serverTimezone=UTC&amp;useSSL=false     username: root     password:     connectionTimeoutMilliseconds: 30000     idleTimeoutMilliseconds: 60000     maxLifetimeMilliseconds: 1800000     maxPoolSize: 50   ds_1:     url: jdbc:mysql://127.0.0.1:3306/demo_ds_1?serverTimezone=UTC&amp;useSSL=false     username: root     password:     connectionTimeoutMilliseconds: 30000     idleTimeoutMilliseconds: 60000     maxLifetimeMilliseconds: 1800000     maxPoolSize: 50  shardingRule:   tables:     t_order:       actualDataNodes: ds_${0..1}.t_order_${0..1}       tableStrategy:         inline:           shardingColumn: order_id           algorithmExpression: t_order_${order_id % 2}       keyGenerator:         type: SNOWFLAKE         column: order_id     t_order_item:       actualDataNodes: ds_${0..1}.t_order_item_${0..1}       tableStrategy:         inline:           shardingColumn: order_id           algorithmExpression: t_order_item_${order_id % 2}       keyGenerator:         type: SNOWFLAKE         column: order_item_id   bindingTables:     - t_order,t_order_item   defaultDatabaseStrategy:     inline:       shardingColumn: user_id       algorithmExpression: ds_${user_id % 2}   defaultTableStrategy:     none: ```  SQL: ``` CREATE TABLE IF NOT EXISTS t_order (order_id BIGINT AUTO_INCREMENT, user_id INT NOT NULL, status VARCHAR(50), PRIMARY KEY (order_id));  CREATE TABLE IF NOT EXISTS t_order_item (order_item_id BIGINT AUTO_INCREMENT, order_id BIGINT, user_id INT NOT NULL, status VARCHAR(50) , PRIMARY KEY (order_item_id), KEY order_id(order_id));  select distinct(user_id) from t_order ``` ### Example codes for reproduce this issue (such as a github link). </body>
		<created>2019-07-29 02:30:31</created>
		<closed>2019-07-29 09:19:29</closed>
	</bug>
	<bug>
		<id>2768</id>
		<title>Get ShardingException when use `NSERT INTO t_plain_encrypt(col3, col4) VALUES (?, ?), (3, 4)`</title>
		<body>## Bug Report  **For English only**, other languages will not accept.  Before report a bug, make sure you have:  - Searched open and closed [GitHub issues](https://github.com/apache/incubator-shardingsphere/issues). - Read documentation: [ShardingSphere Doc](https://shardingsphere.apache.org/document/current/en/overview).  Please pay attention on issues you submitted, because we maybe need more details.  If no response **more than 7 days** and we cannot reproduce it on current information, we will **close it**.  Please answer these questions before submitting your issue. Thanks!  ### Which version of ShardingSphere did you use? 4.0.0.rc2 ### Which project did you use? Sharding-JDBC or Sharding-Proxy? Sharding-JDBC ### Expected behavior  ### Actual behavior throw new ShardingException("Index Out Of Bounds For InsertOptimizeResultUnit.") ### Reason analyze (If you can)  ### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.  ### Example codes for reproduce this issue (such as a github link). </body>
		<created>2019-07-26 04:54:03</created>
		<closed>2019-07-26 08:28:49</closed>
	</bug>
	<bug>
		<id>2761</id>
		<title>`SelectItems.getColumnLabels()` should get `columnLabel` instead of `expression` from `SelectItem`</title>
		<body>## Bug Report  **For English only**, other languages will not accept.  Before report a bug, make sure you have:  - Searched open and closed [GitHub issues](https://github.com/apache/incubator-shardingsphere/issues). - Read documentation: [ShardingSphere Doc](https://shardingsphere.apache.org/document/current/en/overview).  Please pay attention on issues you submitted, because we maybe need more details.  If no response **more than 7 days** and we cannot reproduce it on current information, we will **close it**.  Please answer these questions before submitting your issue. Thanks!  ### Which version of ShardingSphere did you use? 4.0.0-RC2-SNAPSHOT  ### Which project did you use? Sharding-JDBC or Sharding-Proxy? Sharding-Proxy  ### Reason analyze (If you can) Throw an exception when call `DistinctQueryResult.getColumnIndex()` with `SelectItems.getColumnLabels()` result. Cause `SelectItems.getColumnLabels()` return `expression` like `table.column`, but there is a map with `column` in `DistinctQueryResult`.  ### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc. Try to sql like this. ```sql SELECT DISTINCT book.name FROM book; ```  ### Example codes for reproduce this issue (such as a github link). You can find this situation in https://github.com/apache/incubator-shardingsphere/issues/2715.  ### Steps to solve the issue. - [x] add `getColumnLabel()` in `SelectItem` - [x] overwrite `getColumnLabel()` in `SelectItem`'s subclass - [x] modify constructor in `SelectItem`'s subclass - [x] replace `getExpression()` with `getColumnLabel()` on some where should get columnLabel - [x] add UT for this </body>
		<created>2019-07-25 07:39:51</created>
		<closed>2019-07-29 13:56:25</closed>
	</bug>
	<bug>
		<id>2715</id>
		<title>Optimization of `DISTINCT` SQL.</title>
		<body>### Optimization of `DISTINCT` SQL.  - [x] Fix bug: can not execute`select distinct t_order.order_id from t_order;` - [x] Support to use `select distinct t_order.*, t_order_item.order_id from t_order, t_order_item where t_order.order_id = t_order_item.order_id` &gt; when there is `*` in sql, we need to get exact columns from shardingMetadata. - [ ] Add integrated test cases of `distinct` SQL to cover SQLS mentioned above. - [ ] Instead of `columnLabelAndIndexMap`, use `QueryResultMetaData` for DistinctQueryResult - [ ] Instead of `TreeMap`, we should consider to use `HashMultimap` for QueryResultMetaData</body>
		<created>2019-07-17 02:16:53</created>
		<closed>2019-08-12 11:42:31</closed>
	</bug>
	<bug>
		<id>2687</id>
		<title>"select code from t group by code" got duplicate records</title>
		<body>## Bug Report  ### Which version of ShardingSphere did you use? 3.0.0  ### Which project did you use? Sharding-JDBC or Sharding-Proxy? Sharding-Proxy  ### Expected behavior I have a logic table 't' with 2 shards, actual table are 't_0' and 't_1'. When I excute "select code from t group by code" on Sharding-Proxy-3.0.0, it should returns code without duplicate.  ### Actual behavior but in fact, it returns duplicate records.  ### Reason analyze (If you can) My backend db is mysql5.7.   COLLATE is 'utf8mb4_unicode_ci'.  The group-by merger may add 'order by code' clause for using stream merge, and the result set is sorted by case insensitive. But the merger compares value with case sensitive(because use java compareTo method).  ### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.    #### sharding rule:  ```   tables:     t:       actualDataNodes: ds_${0}.t_${0..1}       tableStrategy:         inline:           shardingColumn: id           algorithmExpression: t_${id % 2} ```  #### prepare sql script:  ``` CREATE TABLE `t_0` ( `id` INT NOT NULL, `code` VARCHAR(40) NOT NULL, PRIMARY KEY (`id`) ) COLLATE='utf8mb4_unicode_ci' ; CREATE TABLE `t_1` ( `id` INT NOT NULL, `code` VARCHAR(40) NOT NULL, PRIMARY KEY (`id`) ) COLLATE='utf8mb4_unicode_ci' ; insert into t values (11, '11035801128253'); insert into t values (13, '110358011282f5'); insert into t values (15, '110358011282G1'); insert into t values (17, '110358011282H5'); insert into t values (19, '110358011282T4'); insert into t values (21, '110358011282U5'); insert into t values (23, '110358011282z1'); insert into t values (22, '110358011282D4'); insert into t values (24, '110358011282E9'); insert into t values (26, '110358011282h8'); insert into t values (28, '110358011282I0'); insert into t values (30, '110358011282l1'); insert into t values (32, '110358011282O7'); insert into t values (34, '110358011282P0'); insert into t values (36, '110358011282T4'); insert into t values (38, '110358011282w6');   mysql&gt; select 't_0' as tab, code from t_0; +------+----------------+ | tab  | code           | +------+----------------+ | t_0  | 110358011282D4 | | t_0  | 110358011282E9 | | t_0  | 110358011282h8 | | t_0  | 110358011282I0 | | t_0  | 110358011282l1 | | t_0  | 110358011282O7 | | t_0  | 110358011282P0 | | t_0  | 110358011282T4 | | t_0  | 110358011282w6 | +------+----------------+ 9 rows in set (0.00 sec)  mysql&gt; select 't_1' as tab, code from t_1; +------+----------------+ | tab  | code           | +------+----------------+ | t_1  | 11035801128253 | | t_1  | 110358011282f5 | | t_1  | 110358011282G1 | | t_1  | 110358011282H5 | | t_1  | 110358011282T4 | | t_1  | 110358011282U5 | | t_1  | 110358011282z1 | +------+----------------+ 7 rows in set (0.00 sec) ```  #### execute result  ( duplicate code is 110358011282T4 .)  ``` mysql&gt; select code from t group by code; +----------------+ | code           | +----------------+ | 11035801128253 | | 110358011282D4 | | 110358011282E9 | | 110358011282f5 | | 110358011282G1 | | 110358011282H5 | | 110358011282T4 | | 110358011282U5 | | 110358011282h8 | | 110358011282I0 | | 110358011282l1 | | 110358011282O7 | | 110358011282P0 | | 110358011282T4 | | 110358011282w6 | | 110358011282z1 | +----------------+ 16 rows in set (0.01 sec) ```  I tried following SQL then I got right result.  ``` mysql&gt; select max(code) from t group by upper(code); +----------------+ | max(code)      | +----------------+ | 11035801128253 | | 110358011282D4 | | 110358011282E9 | | 110358011282f5 | | 110358011282G1 | | 110358011282H5 | | 110358011282h8 | | 110358011282I0 | | 110358011282l1 | | 110358011282O7 | | 110358011282P0 | | 110358011282T4 | | 110358011282U5 | | 110358011282w6 | | 110358011282z1 | +----------------+ 15 rows in set (0.01 sec)  ```   ### Example codes for reproduce this issue (such as a github link). </body>
		<created>2019-07-10 08:02:02</created>
		<closed>2019-07-15 07:16:36</closed>
	</bug>
	<bug>
		<id>2629</id>
		<title>Get NullPointerException when execute SQL on tables without sharding rule</title>
		<body>## Bug Report  **For English only**, other languages will not accept.  Before report a bug, make sure you have:  - Searched open and closed [GitHub issues](https://github.com/apache/incubator-shardingsphere-example/issues). - Read documentation: [ShardingSphere Doc](https://shardingsphere.apache.org/document/current/en/overview).  Please pay attention on issues you submitted, because we maybe need more details.  If no response **more than 7 days** and we cannot reproduce it on current information, we will **close it**.  Please answer these questions before submitting your issue. Thanks!  ### Which version of ShardingSphere did you use?  ### Which project did you use? Sharding-JDBC or Sharding-Proxy? Sharding-JDBC and Sharding-Proxy ### Expected behavior Get Sharding Execption when execute SQL on tables without sharding rule ### Actual behavior Get NullPointerException when execute SQL on tables without sharding rule ### Reason analyze (If you can) Parse engine will parse tableName, Route engine pass the SQLStatement to UnicastRoutingEngine, which return RoutingResult with null datasource name. Ref: ``` RoutingEngineFactory.java if (shardingRule.isAllBroadcastTables(tableNames)) {             return sqlStatement instanceof SelectStatement ? new UnicastRoutingEngine(shardingRule, tableNames) : new DatabaseBroadcastRoutingEngine(shardingRule);         }  ShardingDataSourceNames.java public String getDefaultDataSourceName() {         return 1 == dataSourceNames.size() ? dataSourceNames.iterator().next() : shardingRuleConfig.getDefaultDataSourceName();     } ``` ### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.  ### Example codes for reproduce this issue (such as a github link). </body>
		<created>2019-07-01 02:46:39</created>
		<closed>2019-07-09 03:13:06</closed>
	</bug>
	<bug>
		<id>2613</id>
		<title>recieve ClassCastException while testing ComplexKeysShardingAlgorithm</title>
		<body>## Bug Report  **For English only**, other languages will not accept.  Before report a bug, make sure you have:  - Searched open and closed [GitHub issues](https://github.com/apache/incubator-shardingsphere-example/issues). - Read documentation: [ShardingSphere Doc](https://shardingsphere.apache.org/document/current/en/overview).  Please pay attention on issues you submitted, because we maybe need more details.  If no response **more than 7 days** and we cannot reproduce it on current information, we will **close it**.  Please answer these questions before submitting your issue. Thanks!  ### Which version of ShardingSphere did you use? - sharding-jdbc-core:4.0.0-RC1  ### Which project did you use? Sharding-JDBC or Sharding-Proxy? - Sharding-JDBC  ### Expected behavior - return the right type of RouteValue  ### Actual behavior - java.lang.ClassCastException  ### Reason analyze (If you can)  - just BetweenRouteValue cast to ListRouteValue error.  - i think it`s no need to cast to ListRouteValue, just let us to deal with it  - at org.apache.shardingsphere.core.strategy.route.complex.ComplexShardingStrategy  ```java line 61:  columnShardingValues.put(each.getColumnName(), ((ListRouteValue) each).getValues());  ```     ### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.  - i am trying to test the ComplexKeysShardingAlgorithm, but before it come into my code, it occur a java.lang.ClassCastException,   - the table configuration    ```java   public static TableRuleConfiguration defaultCreateTimeTableRuleConfiguration(String datasourceName, String tableName) {           TableRuleConfiguration tableRule = new TableRuleConfiguration(tableName, String.format("%s.%s_$-&gt;{19..19}0$-&gt;{1..6}", datasourceName, tableName));           tableRule.setTableShardingStrategyConfig(                   new ComplexShardingStrategyConfiguration("id,create_time", new BaseComplexKeysShardingAlgorithm()));           return tableRule;   }   ```  - my algorithm -- yes, it do nothing but log    ```java   @Slf4j(topic = "sharding")   public class BaseComplexKeysShardingAlgorithm implements ComplexKeysShardingAlgorithm {          @Override       public Collection&lt;String&gt; doSharding(Collection availableTargetNames, ComplexKeysShardingValue shardingValue) {           log.info("availableTargetNames: {}\nshardingValue: {}", availableTargetNames, shardingValue);           return availableTargetNames;       }      }   ```  - sql     ```sql   select * from t_order order0_ where order0_.create_time between ? and ?   ```    ```sql   create table sharding.t_order   (   create_time timestamp default CURRENT_TIMESTAMP not null on update CURRENT_TIMESTAMP,   id varchar(255) not null   primary key,   update_time datetime null,   name varchar(255) null,   test_id int null   )   ```  - JDK    ```   java 11.0.3 2019-04-16 LTS   ```  - framework    ```xml   spring-boot-starter-data-jpa:2.1.4RELEASE   &lt;spring-cloud.version&gt;Greenwich.RELEASE&lt;/spring-cloud.version&gt;   ```  - the full trace is here  ```java Caused by: java.lang.ClassCastException: class org.apache.shardingsphere.core.strategy.route.value.BetweenRouteValue cannot be cast to class org.apache.shardingsphere.core.strategy.route.value.ListRouteValue (org.apache.shardingsphere.core.strategy.route.value.BetweenRouteValue and org.apache.shardingsphere.core.strategy.route.value.ListRouteValue are in unnamed module of loader 'app') at org.apache.shardingsphere.core.strategy.route.complex.ComplexShardingStrategy.doSharding(ComplexShardingStrategy.java:61) ~[sharding-core-common-4.0.0-RC1.jar:4.0.0-RC1] at org.apache.shardingsphere.core.route.type.standard.StandardRoutingEngine.routeTables(StandardRoutingEngine.java:199) ~[sharding-core-route-4.0.0-RC1.jar:4.0.0-RC1] at org.apache.shardingsphere.core.route.type.standard.StandardRoutingEngine.route(StandardRoutingEngine.java:181) ~[sharding-core-route-4.0.0-RC1.jar:4.0.0-RC1] at org.apache.shardingsphere.core.route.type.standard.StandardRoutingEngine.routeByShardingConditionsWithCondition(StandardRoutingEngine.java:108) ~[sharding-core-route-4.0.0-RC1.jar:4.0.0-RC1] at org.apache.shardingsphere.core.route.type.standard.StandardRoutingEngine.routeByShardingConditions(StandardRoutingEngine.java:102) ~[sharding-core-route-4.0.0-RC1.jar:4.0.0-RC1] at org.apache.shardingsphere.core.route.type.standard.StandardRoutingEngine.getDataNodes(StandardRoutingEngine.java:87) ~[sharding-core-route-4.0.0-RC1.jar:4.0.0-RC1] at org.apache.shardingsphere.core.route.type.standard.StandardRoutingEngine.route(StandardRoutingEngine.java:69) ~[sharding-core-route-4.0.0-RC1.jar:4.0.0-RC1] at org.apache.shardingsphere.core.route.router.sharding.ParsingSQLRouter.route(ParsingSQLRouter.java:106) ~[sharding-core-route-4.0.0-RC1.jar:4.0.0-RC1] at org.apache.shardingsphere.core.route.PreparedStatementRoutingEngine.route(PreparedStatementRoutingEngine.java:66) ~[sharding-core-route-4.0.0-RC1.jar:4.0.0-RC1] at org.apache.shardingsphere.core.PreparedQueryShardingEngine.route(PreparedQueryShardingEngine.java:60) ~[sharding-core-entry-4.0.0-RC1.jar:4.0.0-RC1] at org.apache.shardingsphere.core.BaseShardingEngine.shard(BaseShardingEngine.java:64) ~[sharding-core-entry-4.0.0-RC1.jar:4.0.0-RC1] at org.apache.shardingsphere.shardingjdbc.jdbc.core.statement.ShardingPreparedStatement.shard(ShardingPreparedStatement.java:224) ~[sharding-jdbc-core-4.0.0-RC1.jar:4.0.0-RC1] at org.apache.shardingsphere.shardingjdbc.jdbc.core.statement.ShardingPreparedStatement.executeQuery(ShardingPreparedStatement.java:109) ~[sharding-jdbc-core-4.0.0-RC1.jar:4.0.0-RC1] at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.extract(ResultSetReturnImpl.java:60) ~[hibernate-core-5.3.9.Final.jar:5.3.9.Final] at org.hibernate.loader.Loader.getResultSet(Loader.java:2167) ~[hibernate-core-5.3.9.Final.jar:5.3.9.Final] at org.hibernate.loader.Loader.executeQueryStatement(Loader.java:1930) ~[hibernate-core-5.3.9.Final.jar:5.3.9.Final] at org.hibernate.loader.Loader.executeQueryStatement(Loader.java:1892) ~[hibernate-core-5.3.9.Final.jar:5.3.9.Final] at org.hibernate.loader.Loader.doQuery(Loader.java:937) ~[hibernate-core-5.3.9.Final.jar:5.3.9.Final] at org.hibernate.loader.Loader.doQueryAndInitializeNonLazyCollections(Loader.java:340) ~[hibernate-core-5.3.9.Final.jar:5.3.9.Final] at org.hibernate.loader.Loader.doList(Loader.java:2689) ~[hibernate-core-5.3.9.Final.jar:5.3.9.Final] at org.hibernate.loader.Loader.doList(Loader.java:2672) ~[hibernate-core-5.3.9.Final.jar:5.3.9.Final] at org.hibernate.loader.Loader.listIgnoreQueryCache(Loader.java:2506) ~[hibernate-core-5.3.9.Final.jar:5.3.9.Final] at org.hibernate.loader.Loader.list(Loader.java:2501) ~[hibernate-core-5.3.9.Final.jar:5.3.9.Final] at org.hibernate.loader.hql.QueryLoader.list(QueryLoader.java:504) ~[hibernate-core-5.3.9.Final.jar:5.3.9.Final] at org.hibernate.hql.internal.ast.QueryTranslatorImpl.list(QueryTranslatorImpl.java:395) ~[hibernate-core-5.3.9.Final.jar:5.3.9.Final] at org.hibernate.engine.query.spi.HQLQueryPlan.performList(HQLQueryPlan.java:220) ~[hibernate-core-5.3.9.Final.jar:5.3.9.Final] at org.hibernate.internal.SessionImpl.list(SessionImpl.java:1507) ~[hibernate-core-5.3.9.Final.jar:5.3.9.Final] at org.hibernate.query.internal.AbstractProducedQuery.doList(AbstractProducedQuery.java:1537) ~[hibernate-core-5.3.9.Final.jar:5.3.9.Final] at org.hibernate.query.internal.AbstractProducedQuery.list(AbstractProducedQuery.java:1505) ~[hibernate-core-5.3.9.Final.jar:5.3.9.Final] at org.hibernate.query.Query.getResultList(Query.java:132) ~[hibernate-core-5.3.9.Final.jar:5.3.9.Final] at com.querydsl.jpa.impl.AbstractJPAQuery.getResultList(AbstractJPAQuery.java:160) ~[querydsl-jpa-4.2.1.jar:na] at com.querydsl.jpa.impl.AbstractJPAQuery.fetch(AbstractJPAQuery.java:202) ~[querydsl-jpa-4.2.1.jar:na] at com.f5futurestore.cloud.demo.service.OrderServiceImpl.test(OrderServiceImpl.java:103) ~[classes/:na] at com.f5futurestore.cloud.demo.service.OrderServiceImpl$$FastClassBySpringCGLIB$$d3d4b7a6.invoke(&lt;generated&gt;) ~[classes/:na] at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218) ~[spring-core-5.1.6.RELEASE.jar:5.1.6.RELEASE] at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749) ~[spring-aop-5.1.6.RELEASE.jar:5.1.6.RELEASE] at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.1.6.RELEASE.jar:5.1.6.RELEASE] at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:294) ~[spring-tx-5.1.6.RELEASE.jar:5.1.6.RELEASE] at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98) ~[spring-tx-5.1.6.RELEASE.jar:5.1.6.RELEASE] at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.6.RELEASE.jar:5.1.6.RELEASE] at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688) ~[spring-aop-5.1.6.RELEASE.jar:5.1.6.RELEASE] at com.f5futurestore.cloud.demo.service.OrderServiceImpl$$EnhancerBySpringCGLIB$$4987f585.test(&lt;generated&gt;) ~[classes/:na] at com.f5futurestore.cloud.demo.controller.DemoController.test(DemoController.java:39) ~[classes/:na] at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:na] at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:na] at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:na] at java.base/java.lang.reflect.Method.invoke(Method.java:566) ~[na:na] at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:363) ~[spring-beans-5.1.6.RELEASE.jar:5.1.6.RELEASE] at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeInitMethods(InitDestroyAnnotationBeanPostProcessor.java:307) ~[spring-beans-5.1.6.RELEASE.jar:5.1.6.RELEASE] at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeInitialization(InitDestroyAnnotationBeanPostProcessor.java:136) ~[spring-beans-5.1.6.RELEASE.jar:5.1.6.RELEASE] ```  ### Example codes for reproduce this issue (such as a github link).  i will post it to github later</body>
		<created>2019-06-26 12:50:12</created>
		<closed>2019-07-16 09:29:18</closed>
	</bug>
	<bug>
		<id>2604</id>
		<title>The query entity throws an exception when a boolean property exists in the entity</title>
		<body>## Bug Report  **For English only**, other languages will not accept.  Before report a bug, make sure you have:  - Searched open and closed [GitHub issues](https://github.com/apache/incubator-shardingsphere-example/issues). - Read documentation: [ShardingSphere Doc](https://shardingsphere.apache.org/document/current/en/overview).  Please pay attention on issues you submitted, because we maybe need more details.  If no response **more than 7 days** and we cannot reproduce it on current information, we will **close it**.  Please answer these questions before submitting your issue. Thanks!  ### Which version of ShardingSphere did you use? 4.0.0-RC2-SNAPSHOT，4.0.0-RC1 version work well ### Which project did you use? Sharding-JDBC or Sharding-Proxy? Sharding-JDBC ### Expected behavior Work well ### Actual behavior throw java.lang.ClassCastException: [B cannot be cast to java.lang.Boolean ### Reason analyze (If you can) MySQL column type is BIT, MergeResultSet value is an byte array, can not convert to boolean. ### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc. pom.xml ```xml         &lt;properties&gt; &lt;project.build.sourceEncoding&gt;UTF-8&lt;/project.build.sourceEncoding&gt; &lt;maven.compiler.source&gt;1.8&lt;/maven.compiler.source&gt; &lt;maven.compiler.target&gt;1.8&lt;/maven.compiler.target&gt; &lt;java.version&gt;1.8&lt;/java.version&gt; &lt;!-- &lt;sharding-sphere.version&gt;4.0.0-RC1&lt;/sharding-sphere.version&gt; --&gt; &lt;sharding-sphere.version&gt;4.0.0-RC2-SNAPSHOT&lt;/sharding-sphere.version&gt; &lt;/properties&gt;  &lt;parent&gt; &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt; &lt;artifactId&gt;spring-boot-starter-parent&lt;/artifactId&gt; &lt;version&gt;2.0.1.RELEASE&lt;/version&gt; &lt;relativePath /&gt; &lt;/parent&gt;  &lt;dependencies&gt; &lt;dependency&gt; &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt; &lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt; &lt;/dependency&gt; &lt;dependency&gt; &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt; &lt;artifactId&gt;spring-boot-starter-data-jpa&lt;/artifactId&gt; &lt;/dependency&gt; &lt;dependency&gt; &lt;groupId&gt;mysql&lt;/groupId&gt; &lt;artifactId&gt;mysql-connector-java&lt;/artifactId&gt; &lt;/dependency&gt; &lt;dependency&gt; &lt;groupId&gt;org.apache.shardingsphere&lt;/groupId&gt; &lt;artifactId&gt;sharding-jdbc-spring-boot-starter&lt;/artifactId&gt; &lt;version&gt;${sharding-sphere.version}&lt;/version&gt; &lt;/dependency&gt; &lt;dependency&gt; &lt;groupId&gt;org.projectlombok&lt;/groupId&gt; &lt;artifactId&gt;lombok&lt;/artifactId&gt; &lt;scope&gt;provided&lt;/scope&gt; &lt;/dependency&gt; &lt;/dependencies&gt; ``` application.yml ```yml spring:   jpa:     show-sql: true     generate-ddl: true   shardingsphere:     datasource:       names: d0,d1       d0:         type: com.zaxxer.hikari.HikariDataSource         driver-class-name: com.mysql.jdbc.Driver         jdbc-url: jdbc:mysql://dbserver:3306/d0?useUnicode=true&amp;characterEncoding=utf-8&amp;zeroDateTimeBehavior=convertToNull&amp;useSSL=false         username: root         password:       d1:         type: com.zaxxer.hikari.HikariDataSource         driver-class-name: com.mysql.jdbc.Driver         jdbc-url: jdbc:mysql://dbserver:3306/d1?useUnicode=true&amp;characterEncoding=utf-8&amp;zeroDateTimeBehavior=convertToNull&amp;useSSL=false         username: root         password:     props:       sql:         show: true     sharding:       default-data-source-name: d0       tables:         demo:           actual-data-nodes: d$-&gt;{0..1}.demo           database-strategy:             inline:               sharding-column: id               algorithm-expression: d$-&gt;{id % 2}           key-generator:             column: id             type: SNOWFLAKE ``` Demo.java ```java @Entity @Table(name="demo") @Setter @Getter @ToString public class Demo {  @Id @GeneratedValue(strategy=GenerationType.IDENTITY) private Long id;  @Column private boolean test;  } ``` DemoRepository.java ```java @Repository public interface DemoRepository extends JpaRepository&lt;Demo, Long&gt; {  } ``` DemoApplication.java ```java @SpringBootApplication public class DemoApplication {  public static void main(String[] args) { try (ConfigurableApplicationContext applicationContext = SpringApplication.run(DemoApplication.class, args)) { DemoRepository demoRepository = applicationContext.getBean(DemoRepository.class); Demo demo = new Demo(); demo.setTest(true); demoRepository.saveAndFlush(demo); demoRepository.findById(demo.getId()); demoRepository.deleteAll(); } }  } ``` Log ``` Exception in thread "main" org.springframework.dao.InvalidDataAccessApiUsageException: [B cannot be cast to java.lang.Boolean; nested exception is java.lang.IllegalArgumentException: [B cannot be cast to java.lang.Boolean at org.springframework.orm.jpa.EntityManagerFactoryUtils.convertJpaAccessExceptionIfPossible(EntityManagerFactoryUtils.java:367) at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:227) at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:527) at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61) at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:242) at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:153) at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185) at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:135) at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185) at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92) at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185) at org.springframework.data.repository.core.support.SurroundingTransactionDetectorMethodInterceptor.invoke(SurroundingTransactionDetectorMethodInterceptor.java:61) at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185) at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) at com.sun.proxy.$Proxy83.findById(Unknown Source) at net.saisimon.demo.DemoApplication.main(DemoApplication.java:19) Caused by: java.lang.IllegalArgumentException: [B cannot be cast to java.lang.Boolean at org.hibernate.internal.SessionImpl.find(SessionImpl.java:3427) at org.hibernate.internal.SessionImpl.find(SessionImpl.java:3375) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:304) at com.sun.proxy.$Proxy81.find(Unknown Source) at org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById(SimpleJpaRepository.java:235) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:377) at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:200) at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:629) at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185) at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.doInvoke(RepositoryFactorySupport.java:593) at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.invoke(RepositoryFactorySupport.java:578) at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185) at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:59) at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185) at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:294) at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98) at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185) at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139) ... 10 more Caused by: java.lang.ClassCastException: [B cannot be cast to java.lang.Boolean at org.apache.shardingsphere.shardingjdbc.jdbc.core.resultset.ShardingResultSet.getBoolean(ShardingResultSet.java:71) at org.hibernate.type.descriptor.sql.BooleanTypeDescriptor$2.doExtract(BooleanTypeDescriptor.java:59) at org.hibernate.type.descriptor.sql.BasicExtractor.extract(BasicExtractor.java:47) at org.hibernate.type.AbstractStandardBasicType.nullSafeGet(AbstractStandardBasicType.java:261) at org.hibernate.type.AbstractStandardBasicType.nullSafeGet(AbstractStandardBasicType.java:257) at org.hibernate.type.AbstractStandardBasicType.nullSafeGet(AbstractStandardBasicType.java:247) at org.hibernate.type.AbstractStandardBasicType.hydrate(AbstractStandardBasicType.java:333) at org.hibernate.persister.entity.AbstractEntityPersister.hydrate(AbstractEntityPersister.java:2854) at org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl.loadFromResultSet(EntityReferenceInitializerImpl.java:305) at org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl.hydrateEntityState(EntityReferenceInitializerImpl.java:233) at org.hibernate.loader.plan.exec.process.internal.AbstractRowReader.readRow(AbstractRowReader.java:103) at org.hibernate.loader.plan.exec.internal.EntityLoadQueryDetails$EntityLoaderRowReader.readRow(EntityLoadQueryDetails.java:241) at org.hibernate.loader.plan.exec.process.internal.ResultSetProcessorImpl.extractResults(ResultSetProcessorImpl.java:122) at org.hibernate.loader.plan.exec.internal.AbstractLoadPlanBasedLoader.executeLoad(AbstractLoadPlanBasedLoader.java:122) at org.hibernate.loader.plan.exec.internal.AbstractLoadPlanBasedLoader.executeLoad(AbstractLoadPlanBasedLoader.java:86) at org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader.load(AbstractLoadPlanBasedEntityLoader.java:167) at org.hibernate.persister.entity.AbstractEntityPersister.load(AbstractEntityPersister.java:4107) at org.hibernate.event.internal.DefaultLoadEventListener.loadFromDatasource(DefaultLoadEventListener.java:508) at org.hibernate.event.internal.DefaultLoadEventListener.doLoad(DefaultLoadEventListener.java:478) at org.hibernate.event.internal.DefaultLoadEventListener.load(DefaultLoadEventListener.java:219) at org.hibernate.event.internal.DefaultLoadEventListener.proxyOrLoad(DefaultLoadEventListener.java:278) at org.hibernate.event.internal.DefaultLoadEventListener.doOnLoad(DefaultLoadEventListener.java:121) at org.hibernate.event.internal.DefaultLoadEventListener.onLoad(DefaultLoadEventListener.java:89) at org.hibernate.internal.SessionImpl.fireLoad(SessionImpl.java:1239) at org.hibernate.internal.SessionImpl.access$1900(SessionImpl.java:203) at org.hibernate.internal.SessionImpl$IdentifierLoadAccessImpl.doLoad(SessionImpl.java:2803) at org.hibernate.internal.SessionImpl$IdentifierLoadAccessImpl.load(SessionImpl.java:2777) at org.hibernate.internal.SessionImpl.find(SessionImpl.java:3406) ... 35 more ``` ### Example codes for reproduce this issue (such as a github link). </body>
		<created>2019-06-24 09:15:51</created>
		<closed>2019-07-18 08:19:32</closed>
	</bug>
	<bug>
		<id>2596</id>
		<title>use sharding-jdbc-spring-boot-starter throw java.util.NoSuchElementException: No value bound</title>
		<body>## Bug Report  **For English only**, other languages will not accept.  Before report a bug, make sure you have:  - Searched open and closed [GitHub issues](https://github.com/apache/incubator-shardingsphere-example/issues). - Read documentation: [ShardingSphere Doc](https://shardingsphere.apache.org/document/current/en/overview).  Please pay attention on issues you submitted, because we maybe need more details.  If no response **more than 7 days** and we cannot reproduce it on current information, we will **close it**.  Please answer these questions before submitting your issue. Thanks!  ### Which version of ShardingSphere did you use? 4.0.0-RC2-SNAPSHOT ### Which project did you use? Sharding-JDBC or Sharding-Proxy? Sharding-JDBC ### Expected behavior Do not throw an exception ### Actual behavior throw an exception ### Reason analyze (If you can) spring.shardingsphere.encrypt.encryptors is not configured ### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc. pom.xml ```xml         &lt;properties&gt; &lt;project.build.sourceEncoding&gt;UTF-8&lt;/project.build.sourceEncoding&gt; &lt;maven.compiler.source&gt;1.8&lt;/maven.compiler.source&gt; &lt;maven.compiler.target&gt;1.8&lt;/maven.compiler.target&gt; &lt;java.version&gt;1.8&lt;/java.version&gt; &lt;!-- &lt;sharding-sphere.version&gt;4.0.0-RC1&lt;/sharding-sphere.version&gt; --&gt; &lt;sharding-sphere.version&gt;4.0.0-RC2-SNAPSHOT&lt;/sharding-sphere.version&gt; &lt;/properties&gt;  &lt;parent&gt; &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt; &lt;artifactId&gt;spring-boot-starter-parent&lt;/artifactId&gt; &lt;version&gt;2.0.1.RELEASE&lt;/version&gt; &lt;relativePath /&gt; &lt;/parent&gt;  &lt;dependencies&gt; &lt;dependency&gt; &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt; &lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt; &lt;/dependency&gt; &lt;dependency&gt; &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt; &lt;artifactId&gt;spring-boot-starter-data-jpa&lt;/artifactId&gt; &lt;/dependency&gt; &lt;dependency&gt; &lt;groupId&gt;mysql&lt;/groupId&gt; &lt;artifactId&gt;mysql-connector-java&lt;/artifactId&gt; &lt;/dependency&gt; &lt;dependency&gt; &lt;groupId&gt;org.apache.shardingsphere&lt;/groupId&gt; &lt;artifactId&gt;sharding-jdbc-spring-boot-starter&lt;/artifactId&gt; &lt;version&gt;${sharding-sphere.version}&lt;/version&gt; &lt;/dependency&gt; &lt;/dependencies&gt; ``` application.yml ```yml spring:   shardingsphere:     datasource:       names: d0,d1       d0:         type: com.zaxxer.hikari.HikariDataSource         driver-class-name: com.mysql.jdbc.Driver         jdbc-url: jdbc:mysql://dbserver:3306/d0?useUnicode=true&amp;characterEncoding=utf-8&amp;zeroDateTimeBehavior=convertToNull&amp;useSSL=false         username: root         password:       d1:         type: com.zaxxer.hikari.HikariDataSource         driver-class-name: com.mysql.jdbc.Driver         jdbc-url: jdbc:mysql://dbserver:3306/d1?useUnicode=true&amp;characterEncoding=utf-8&amp;zeroDateTimeBehavior=convertToNull&amp;useSSL=false         username: root         password:     props:       sql:         show: true ``` DemoApplication.java ```java @SpringBootApplication public class DemoApplication {  public static void main(String[] args) { SpringApplication.run(DemoApplication.class, args); }  } ``` Log ``` java.lang.reflect.InvocationTargetException: null at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_191] at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_191] at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191] at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191] at org.apache.shardingsphere.shardingjdbc.spring.boot.util.PropertyUtil.v2(PropertyUtil.java:98) ~[sharding-jdbc-spring-boot-starter-4.0.0-RC2-SNAPSHOT.jar:4.0.0-RC2-SNAPSHOT] at org.apache.shardingsphere.shardingjdbc.spring.boot.util.PropertyUtil.handle(PropertyUtil.java:61) ~[sharding-jdbc-spring-boot-starter-4.0.0-RC2-SNAPSHOT.jar:4.0.0-RC2-SNAPSHOT] at org.apache.shardingsphere.shardingjdbc.spring.boot.encrypt.EncryptRuleCondition.getMatchOutcome(EncryptRuleCondition.java:40) ~[sharding-jdbc-spring-boot-starter-4.0.0-RC2-SNAPSHOT.jar:4.0.0-RC2-SNAPSHOT] at org.springframework.boot.autoconfigure.condition.SpringBootCondition.matches(SpringBootCondition.java:47) ~[spring-boot-autoconfigure-2.0.1.RELEASE.jar:2.0.1.RELEASE] at org.springframework.context.annotation.ConditionEvaluator.shouldSkip(ConditionEvaluator.java:108) ~[spring-context-5.0.5.RELEASE.jar:5.0.5.RELEASE] at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitionsForBeanMethod(ConfigurationClassBeanDefinitionReader.java:179) ~[spring-context-5.0.5.RELEASE.jar:5.0.5.RELEASE] at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitionsForConfigurationClass(ConfigurationClassBeanDefinitionReader.java:141) ~[spring-context-5.0.5.RELEASE.jar:5.0.5.RELEASE] at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitions(ConfigurationClassBeanDefinitionReader.java:117) ~[spring-context-5.0.5.RELEASE.jar:5.0.5.RELEASE] at org.springframework.context.annotation.ConfigurationClassPostProcessor.processConfigBeanDefinitions(ConfigurationClassPostProcessor.java:328) ~[spring-context-5.0.5.RELEASE.jar:5.0.5.RELEASE] at org.springframework.context.annotation.ConfigurationClassPostProcessor.postProcessBeanDefinitionRegistry(ConfigurationClassPostProcessor.java:233) ~[spring-context-5.0.5.RELEASE.jar:5.0.5.RELEASE] at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanDefinitionRegistryPostProcessors(PostProcessorRegistrationDelegate.java:273) ~[spring-context-5.0.5.RELEASE.jar:5.0.5.RELEASE] at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(PostProcessorRegistrationDelegate.java:93) ~[spring-context-5.0.5.RELEASE.jar:5.0.5.RELEASE] at org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:694) ~[spring-context-5.0.5.RELEASE.jar:5.0.5.RELEASE] at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:532) ~[spring-context-5.0.5.RELEASE.jar:5.0.5.RELEASE] at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:140) ~[spring-boot-2.0.1.RELEASE.jar:2.0.1.RELEASE] at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:759) [spring-boot-2.0.1.RELEASE.jar:2.0.1.RELEASE] at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:395) [spring-boot-2.0.1.RELEASE.jar:2.0.1.RELEASE] at org.springframework.boot.SpringApplication.run(SpringApplication.java:327) [spring-boot-2.0.1.RELEASE.jar:2.0.1.RELEASE] at org.springframework.boot.SpringApplication.run(SpringApplication.java:1255) [spring-boot-2.0.1.RELEASE.jar:2.0.1.RELEASE] at org.springframework.boot.SpringApplication.run(SpringApplication.java:1243) [spring-boot-2.0.1.RELEASE.jar:2.0.1.RELEASE] at net.saisimon.demo.DemoApplication.main(DemoApplication.java:10) [classes/:na] Caused by: java.util.NoSuchElementException: No value bound at org.springframework.boot.context.properties.bind.BindResult.get(BindResult.java:56) ~[spring-boot-2.0.1.RELEASE.jar:2.0.1.RELEASE] ... 25 common frames omitted ``` ### Example codes for reproduce this issue (such as a github link). </body>
		<created>2019-06-23 05:09:07</created>
		<closed>2019-06-24 06:10:39</closed>
	</bug>
	<bug>
		<id>2592</id>
		<title>Sharding-Proxing change database error</title>
		<body>## Bug Report  **For English only**, other languages will not accept.  Before report a bug, make sure you have:  - Searched open and closed [GitHub issues](https://github.com/apache/incubator-shardingsphere-example/issues). - Read documentation: [ShardingSphere Doc](https://shardingsphere.apache.org/document/current/en/overview).  Please pay attention on issues you submitted, because we maybe need more details.  If no response **more than 7 days** and we cannot reproduce it on current information, we will **close it**.  Please answer these questions before submitting your issue. Thanks!  ### Which version of ShardingSphere did you use? 4.0.0-RC2 ### Which project did you use? Sharding-JDBC or Sharding-Proxy? Sharding-Proxy ### Expected behavior No Exception ### Actual behavior use cloud; #cloud is a database name ### Reason analyze (If you can)  ### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc. Here is my configuration: ```  schemaName: cloud  dataSources:   cloud_0:     url: jdbc:mysql://192.168.8.252:8806/cloud?serverTimezone=UTC&amp;useSSL=false&amp;useUnicode=true&amp;characterEncoding=UTF-8     username: root     password: 123     connectionTimeoutMilliseconds: 30000     idleTimeoutMilliseconds: 60000     maxLifetimeMilliseconds: 1800000     maxPoolSize: 500   cloud_1:     url: jdbc:mysql://192.168.8.252:8807/cloud?serverTimezone=UTC&amp;useSSL=false&amp;useUnicode=true&amp;characterEncoding=UTF-8     username: root     password: 123     connectionTimeoutMilliseconds: 30000     idleTimeoutMilliseconds: 60000     maxLifetimeMilliseconds: 1800000     maxPoolSize: 500  shardingRule:   defaultDataSourceName: cloud_0   defaultDatabaseStrategy:     inline:       shardingColumn: id       algorithmExpression: cloud_${id % 2}   defaultTableStrategy:     none:   defaultKeyGenerator:     type: SNOWFLAKE     column: id ``` And here is the log: ``` [INFO ] 16:07:04.032 [ShardingSphere-Command-2] ShardingSphere-SQL - Rule Type: sharding [INFO ] 16:07:04.032 [ShardingSphere-Command-2] ShardingSphere-SQL - Logic SQL: SET PROFILING = 1 [INFO ] 16:07:04.032 [ShardingSphere-Command-2] ShardingSphere-SQL - SQLStatement: DALStatement(super=AbstractSQLStatement(type=DAL, sqlSegments=[], tables=Tables(tables=[]), shardingConditions=Conditions(orConditions=[]), encryptConditions=Conditions(orConditions=[]), parametersIndex=0, logicSQL=SET PROFILING = 1)) [INFO ] 16:07:04.032 [ShardingSphere-Command-2] ShardingSphere-SQL - Actual SQL: cloud_0 ::: SET PROFILING = 1 [INFO ] 16:07:04.034 [ShardingSphere-Command-1] ShardingSphere-SQL - Rule Type: sharding [INFO ] 16:07:04.034 [ShardingSphere-Command-1] ShardingSphere-SQL - Logic SQL: SHOW STATUS [INFO ] 16:07:04.034 [ShardingSphere-Command-1] ShardingSphere-SQL - SQLStatement: DALStatement(super=AbstractSQLStatement(type=DAL, sqlSegments=[], tables=Tables(tables=[]), shardingConditions=Conditions(orConditions=[]), encryptConditions=Conditions(orConditions=[]), parametersIndex=0, logicSQL=SHOW STATUS)) [INFO ] 16:07:04.034 [ShardingSphere-Command-1] ShardingSphere-SQL - Actual SQL: cloud_0 ::: SHOW STATUS [INFO ] 16:07:04.052 [ShardingSphere-Command-4] ShardingSphere-SQL - Rule Type: sharding [INFO ] 16:07:04.052 [ShardingSphere-Command-4] ShardingSphere-SQL - Logic SQL: SHOW STATUS [INFO ] 16:07:04.052 [ShardingSphere-Command-4] ShardingSphere-SQL - SQLStatement: DALStatement(super=AbstractSQLStatement(type=DAL, sqlSegments=[], tables=Tables(tables=[]), shardingConditions=Conditions(orConditions=[]), encryptConditions=Conditions(orConditions=[]), parametersIndex=0, logicSQL=SHOW STATUS)) [INFO ] 16:07:04.052 [ShardingSphere-Command-4] ShardingSphere-SQL - Actual SQL: cloud_0 ::: SHOW STATUS [ERROR] 16:07:04.061 [ShardingSphere-Command-0] o.a.s.s.f.c.CommandExecutorTask - Exception occur:  java.lang.NullPointerException: null ```  ### Example codes for reproduce this issue (such as a github link). </body>
		<created>2019-06-20 08:08:28</created>
		<closed>2019-06-25 14:20:35</closed>
	</bug>
	<bug>
		<id>2587</id>
		<title>Update not data sharding on 4.0.0.RC2</title>
		<body>My table config: ``` shardingRule:     tables:     t_role_info:        actualDataNodes: r_game_sub${0..1}.t_role_info${0..2}       databaseStrategy:         inline:           shardingColumn: roleId           algorithmExpression: r_game_sub${roleId % 2}       tableStrategy:          inline:           shardingColumn: roleId           algorithmExpression: t_role_info${roleId % 3}       keyGenerator:         type: SNOWFLAKE         column: roleId ```  But when i exec update sql the sql log is: ``` 2019-06-19 20:41:07,720 INFO [ShardingSphere-SQL] Rule Type: sharding 2019-06-19 20:41:07,720 INFO [ShardingSphere-SQL] Logic SQL: update t_role_info set activeTime=?, head=?, headBorderId=?, level=?, lockReason=?, lockTime=?, sex=?, status=?, type=?, vipLevel=?, langStr=? where roleId=? 2019-06-19 20:41:07,720 INFO [ShardingSphere-SQL] SQLStatement: UpdateStatement(super=DMLStatement(super=AbstractSQLStatement(sqlSegments=[TableSegment(startIndex=7, stopIndex=17, name=t_role_info, quoteCharacter=NONE, owner=Optional.absent(), alias=Optional.absent()), ColumnSegment(startIndex=23, stopIndex=32, name=activeTime, quoteCharacter=NONE, owner=Optional.absent()), ColumnSegment(startIndex=37, stopIndex=40, name=head, quoteCharacter=NONE, owner=Optional.absent()), ColumnSegment(startIndex=45, stopIndex=56, name=headBorderId, quoteCharacter=NONE, owner=Optional.absent()), ColumnSegment(startIndex=61, stopIndex=65, name=level, quoteCharacter=NONE, owner=Optional.absent()), ColumnSegment(startIndex=70, stopIndex=79, name=lockReason, quoteCharacter=NONE, owner=Optional.absent()), ColumnSegment(startIndex=84, stopIndex=91, name=lockTime, quoteCharacter=NONE, owner=Optional.absent()), ColumnSegment(startIndex=96, stopIndex=98, name=sex, quoteCharacter=NONE, owner=Optional.absent()), ColumnSegment(startIndex=103, stopIndex=108, name=status, quoteCharacter=NONE, owner=Optional.absent()), ColumnSegment(startIndex=113, stopIndex=116, name=type, quoteCharacter=NONE, owner=Optional.absent()), ColumnSegment(startIndex=121, stopIndex=128, name=vipLevel, quoteCharacter=NONE, owner=Optional.absent()), ColumnSegment(startIndex=133, stopIndex=139, name=langStr, quoteCharacter=NONE, owner=Optional.absent()), ColumnSegment(startIndex=149, stopIndex=154, name=roleId, quoteCharacter=NONE, owner=Optional.absent()), org.apache.shardingsphere.core.parse.sql.segment.dml.assignment.SetAssignmentsSegment@55358433, org.apache.shardingsphere.core.parse.sql.segment.dml.WhereSegment@72f74525, org.apache.shardingsphere.core.parse.sql.segment.dml.predicate.OrPredicateSegment@666e5b2a], tables=Tables(tables=[Table(name=t_role_info, alias=Optional.absent())]), logicSQL=update t_role_info set activeTime=?, head=?, headBorderId=?, level=?, lockReason=?, lockTime=?, sex=?, status=?, type=?, vipLevel=?, langStr=? where roleId=?, parametersCount=12), shardingConditions=Conditions(orConditions=[AndCondition(conditions=[Condition(column=Column(name=roleId, tableName=t_role_info), predicateSegment=org.apache.shardingsphere.core.parse.sql.segment.dml.predicate.PredicateSegment@6ac94217, operator=EQUAL, positionValueMap={}, positionIndexMap={0=11})])]), encryptConditions=Conditions(orConditions=[])), assignments={Column(name=activeTime, tableName=t_role_info)=org.apache.shardingsphere.core.parse.sql.segment.dml.expr.simple.ParameterMarkerExpressionSegment@13244761, Column(name=head, tableName=t_role_info)=org.apache.shardingsphere.core.parse.sql.segment.dml.expr.simple.ParameterMarkerExpressionSegment@5bb2e64d, Column(name=headBorderId, tableName=t_role_info)=org.apache.shardingsphere.core.parse.sql.segment.dml.expr.simple.ParameterMarkerExpressionSegment@4f11411a, Column(name=level, tableName=t_role_info)=org.apache.shardingsphere.core.parse.sql.segment.dml.expr.simple.ParameterMarkerExpressionSegment@6fe87b15, Column(name=lockReason, tableName=t_role_info)=org.apache.shardingsphere.core.parse.sql.segment.dml.expr.simple.ParameterMarkerExpressionSegment@5e4636c6, Column(name=lockTime, tableName=t_role_info)=org.apache.shardingsphere.core.parse.sql.segment.dml.expr.simple.ParameterMarkerExpressionSegment@128a33cd, Column(name=sex, tableName=t_role_info)=org.apache.shardingsphere.core.parse.sql.segment.dml.expr.simple.ParameterMarkerExpressionSegment@57d6b917, Column(name=status, tableName=t_role_info)=org.apache.shardingsphere.core.parse.sql.segment.dml.expr.simple.ParameterMarkerExpressionSegment@7b4a502b, Column(name=type, tableName=t_role_info)=org.apache.shardingsphere.core.parse.sql.segment.dml.expr.simple.ParameterMarkerExpressionSegment@14d5b982, Column(name=vipLevel, tableName=t_role_info)=org.apache.shardingsphere.core.parse.sql.segment.dml.expr.simple.ParameterMarkerExpressionSegment@5782e48e, Column(name=langStr, tableName=t_role_info)=org.apache.shardingsphere.core.parse.sql.segment.dml.expr.simple.ParameterMarkerExpressionSegment@357ee168}, whereStartIndex=143, whereStopIndex=156, whereParameterStartIndex=11, whereParameterEndIndex=11) 2019-06-19 20:41:07,721 INFO [ShardingSphere-SQL] Actual SQL: r_game_sub0 ::: update t_role_info0 set activeTime=?, head=?, headBorderId=?, level=?, lockReason=?, lockTime=?, sex=?, status=?, type=?, vipLevel=?, langStr=? where roleId=? ::: [2019-06-19 20:38:01.0, 0, 0, 1, , 0, 0, 1, 1, 0, cn, 464170103659832306] 2019-06-19 20:41:07,721 INFO [ShardingSphere-SQL] Actual SQL: r_game_sub0 ::: update t_role_info1 set activeTime=?, head=?, headBorderId=?, level=?, lockReason=?, lockTime=?, sex=?, status=?, type=?, vipLevel=?, langStr=? where roleId=? ::: [2019-06-19 20:38:01.0, 0, 0, 1, , 0, 0, 1, 1, 0, cn, 464170103659832306] 2019-06-19 20:41:07,721 INFO [ShardingSphere-SQL] Actual SQL: r_game_sub0 ::: update t_role_info2 set activeTime=?, head=?, headBorderId=?, level=?, lockReason=?, lockTime=?, sex=?, status=?, type=?, vipLevel=?, langStr=? where roleId=? ::: [2019-06-19 20:38:01.0, 0, 0, 1, , 0, 0, 1, 1, 0, cn, 464170103659832306] 2019-06-19 20:41:07,722 INFO [ShardingSphere-SQL] Actual SQL: r_game_sub1 ::: update t_role_info0 set activeTime=?, head=?, headBorderId=?, level=?, lockReason=?, lockTime=?, sex=?, status=?, type=?, vipLevel=?, langStr=? where roleId=? ::: [2019-06-19 20:38:01.0, 0, 0, 1, , 0, 0, 1, 1, 0, cn, 464170103659832306] 2019-06-19 20:41:07,722 INFO [ShardingSphere-SQL] Actual SQL: r_game_sub1 ::: update t_role_info1 set activeTime=?, head=?, headBorderId=?, level=?, lockReason=?, lockTime=?, sex=?, status=?, type=?, vipLevel=?, langStr=? where roleId=? ::: [2019-06-19 20:38:01.0, 0, 0, 1, , 0, 0, 1, 1, 0, cn, 464170103659832306] 2019-06-19 20:41:07,722 INFO [ShardingSphere-SQL] Actual SQL: r_game_sub1 ::: update t_role_info2 set activeTime=?, head=?, headBorderId=?, level=?, lockReason=?, lockTime=?, sex=?, status=?, type=?, vipLevel=?, langStr=? where roleId=? ::: [2019-06-19 20:38:01.0, 0, 0, 1, , 0, 0, 1, 1, 0, cn, 464170103659832306]  ``` </body>
		<created>2019-06-19 12:47:30</created>
		<closed>2019-06-20 08:38:32</closed>
	</bug>
	<bug>
		<id>2564</id>
		<title>mysql use function  errror o viable alternative at input </title>
		<body>## Bug Report  **For English only**, other languages will not accept.  Before report a bug, make sure you have:  - Searched open and closed [GitHub issues](https://github.com/sharding-sphere/sharding-sphere/issues). - Read documentation: [ShardingSphere Doc](http://shardingsphere.io/document/current/en/overview/).  Please pay attention on issues you submitted, because we maybe need more details.  If no response **more than 7 days** and we cannot reproduce it on current information, we will **close it**.  Please answer these questions before submitting your issue. Thanks!  ### Which version of ShardingSphere did you use? 4.00.RC1 ### Which project did you use? Sharding-JDBC or Sharding-Proxy? sharding-jdbc ### Expected behavior update success ### Actual behavior line 3:86 no viable alternative at input 'SUBSTRING(UPPER(MD5(CONCAT(balance,account_no,'LOVECHINA'))),' line 3:70 mismatched input ',' expecting '=' line 3:83 mismatched input ')' expecting '=' line 3:90 mismatched input ')' expecting '=' line 5:88 no viable alternative at input 'SUBSTRING(UPPER(MD5(CONCAT(balance,account_no,'LOVECHINA'))),' ### Reason analyze (If you can) can not support UPPER,MD5,CONCAT function ### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.  UPDATE test         SET balance   = balance - 1,             bal_check = SUBSTRING(UPPER(MD5(CONCAT(balance, account_no, 'LOVECHINA'))), 16)         WHERE account_No = 1234 AND               bal_check = SUBSTRING(UPPER(MD5(CONCAT(balance, account_no, 'LOVECHINA'))), 16)               AND  balance - 1 &gt;= 0 ### Example codes for reproduce this issue (such as a github link). </body>
		<created>2019-06-15 08:12:23</created>
		<closed>2019-06-17 12:35:53</closed>
	</bug>
	<bug>
		<id>2549</id>
		<title>parse insert statement error while containing curate() function</title>
		<body>## Bug Report  ### Which version of ShardingSphere did you use? 4.0.0-RC2-SNAPSHOT  ### Which project did you use? Sharding-JDBC or Sharding-Proxy? Sharding-JDBC &amp; Sharding-Proxy  ### Expected behavior sharding-column: debitacc `insert into journal (flowdate,amount,state,debitacc,creditacc) values (curdate(),1,'0', ?, ?)"` should be parsed succeed  ### Actual behavior parsed insert statement contains wrong positionIndexMap, it resolve to sharding-value is wrong  ![image](https://user-images.githubusercontent.com/8317649/59403370-f84eae80-8dd4-11e9-95cc-a882bd188f58.png)  and this sql `insert into bill (flowno, flowdate, account_no, debitamount, credityield, customer_no) values (?, curdate(), ?, 1, 0, ?)` will be routed to all datanode, sharding-column is customer_no  ### Reason analyze (If you can)  ### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.  ### Example codes for reproduce this issue (such as a github link).</body>
		<created>2019-06-13 04:18:37</created>
		<closed>2019-06-18 14:13:50</closed>
	</bug>
	<bug>
		<id>2538</id>
		<title>null and pagination question</title>
		<body>## Question  I am using the sharding-proxy, the PreparedStatement setString, I set the field to be null object not the 'null' string, the sharding-proxy will treat it as a string to be inserted into table,which is not my expected result is also not the same as in jdbc. for the pagination, it is not support the sql like  'limit 20 offset 0' ;only support the 'limit 0,20'. if this limit offset statement can be supported in the future? </body>
		<created>2019-06-11 10:22:01</created>
		<closed>2019-06-12 08:21:08</closed>
	</bug>
	<bug>
		<id>2534</id>
		<title>`AVG(DISTINCT) ` or `COUNT/SUMM(DISTINCT)`can not be executed well</title>
		<body>When execute `AVG(DISTINCT) ` or `COUNT/SUMM(DISTINCT)`, throw IndexOutOfBoundsException.</body>
		<created>2019-06-11 06:31:52</created>
		<closed>2019-06-11 07:47:13</closed>
	</bug>
	<bug>
		<id>2528</id>
		<title>tinyint column don't return a 8-bit integer value but a boolean value</title>
		<body>## Bug Report  **For English only**, other languages will not accept.  Before report a bug, make sure you have:  - Searched open and closed [GitHub issues](https://github.com/sharding-sphere/sharding-sphere/issues). - Read documentation: [ShardingSphere Doc](http://shardingsphere.io/document/current/en/overview/).  Please pay attention on issues you submitted, because we maybe need more details.  If no response **more than 7 days** and we cannot reproduce it on current information, we will **close it**.  Please answer these questions before submitting your issue. Thanks!  ### Which version of ShardingSphere did you use? 4.0.0-RC1-SNAPSHOT ### Which project did you use? Sharding-JDBC or Sharding-Proxy? Sharding-Proxy ### Expected behavior When the column type is **tinyint**, return a 8-bit integer in MySQL protocol ### Actual behavior When the column type is **tinyint**, return a boolean value in MySQL protocol ### Reason analyze (If you can) JDBC's getObject() return a boolean value if the column occupy one byte. ### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc. Any query SQL. ### Example codes for reproduce this issue (such as a github link). </body>
		<created>2019-06-10 12:13:18</created>
		<closed>2019-06-10 13:14:13</closed>
	</bug>
	<bug>
		<id>2527</id>
		<title>CachedDatabaseMetaData.getTables throw NullPointerException when use MasterSlaveDataSource</title>
		<body>## Bug Report  **For English only**, other languages will not accept.  Before report a bug, make sure you have:  - Searched open and closed [GitHub issues](https://github.com/sharding-sphere/sharding-sphere/issues). - Read documentation: [ShardingSphere Doc](http://shardingsphere.io/document/current/en/overview/).  Please pay attention on issues you submitted, because we maybe need more details.  If no response **more than 7 days** and we cannot reproduce it on current information, we will **close it**.  Please answer these questions before submitting your issue. Thanks!  ### Which version of ShardingSphere did you use? 4.0.0-RC1 ### Which project did you use? Sharding-JDBC or Sharding-Proxy? Sharding-JDBC ### Expected behavior Return table names ### Actual behavior Get npe ### Reason analyze (If you can) asset shardingRule is null ### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc. DatabaseMetaData databaseMetaData = connection.getMetaData(); databaseMetaData.getTables(null, null, "ACT_ID_PROPERTY", new String[]{ "TABLE" }); ### Example codes for reproduce this issue (such as a github link). </body>
		<created>2019-06-10 09:38:59</created>
		<closed>2019-06-12 03:29:31</closed>
	</bug>
	<bug>
		<id>2512</id>
		<title>the query results inlude milisecond data </title>
		<body>hello,       when i query data by sharding-proxy, I got results which including milisecond follow the datetime, eg. "2019-04-28 18:37:59.0", why ? is there any way to configure the proxy to avoid this ? ![image](https://user-images.githubusercontent.com/48242833/58952283-d6966b80-87c5-11e9-8921-606f9e08fb9c.png)  thx </body>
		<created>2019-06-05 11:13:36</created>
		<closed>2019-06-11 10:23:21</closed>
	</bug>
	<bug>
		<id>2460</id>
		<title>The problem that the value of the bit type cannot be returned correctly</title>
		<body>I used shardingproxy to do the sharding, but there is a field of bit type. The value stored in this field is 1 regardless of the number of questions. Please ask how to solve this problem. Thank you.</body>
		<created>2019-05-28 08:12:57</created>
		<closed>2019-05-30 03:49:09</closed>
	</bug>
	<bug>
		<id>2417</id>
		<title>Get error index info when use hibernate.hbm2ddl.auto=update</title>
		<body>## Version * Spring Boot 2.1.5.RELEASE * ShardingSphere 4.0.0-RC1 * MySQL 5.7 ## Question I have set the option "spring.jpa.properties.hibernate.hbm2ddl.auto=update"   config application.yml:  ``` datasource:   names: ds0, ds1, ds2  # ****  sharding:   default-data-source-name: ds0 # ...   tables:      cpn_code:         actual-data-nodes: ds$-&gt;{1..2}.cpn_code$-&gt;{0..9}  # ... ```  * Apllication start always send sql  **CREATE INDEX idx_cpnId ON cpn_code...**   Because  Index Name in MySql is 'idx_cpnId_cpn_code0, idx_cpnId_cpn_code2...' , hibernate entity ``` @Entity @Table(name = "cpn_code", indexes = {         @Index(name = "idx_cpnId", columnList = "cpnId") }) public class CouponCode { ```   * Sometimes application start fail because got Exception **Cannot find actual data node for data source name: 'ds0' and logic table name: 'cpn_code'**  ``` //org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl#performTablesMigration //org.hibernate.tool.schema.internal.AbstractSchemaMigrator#applyIndexes //org.hibernate.tool.schema.internal.AbstractSchemaMigrator#findMatchingIndex //org.hibernate.tool.schema.extract.internal.TableInformationImpl#getIndex //org.hibernate.tool.schema.extract.internal.TableInformationImpl#indexes //org.hibernate.tool.schema.extract.internal.InformationExtractorJdbcDatabaseMetaDataImpl#getIndexes //org.apache.shardingsphere.shardingjdbc.jdbc.core.datasource.metadata.ResultSetReturnedDatabaseMetaData#getIndexInfo  // when currentDataSourceName is 'ds0' , method getDataNode will throw Exception return null == table || null == shardingRule ? table : (shardingRule.findTableRule(table).isPresent() ? shardingRule.getDataNode(currentDataSourceName, table).getTableName() : table); // so I config actual-data-nodes: ds$-&gt;{0..2}  to avoid error ```  </body>
		<created>2019-05-21 11:45:32</created>
		<closed>2019-05-22 07:51:13</closed>
	</bug>
	<bug>
		<id>2401</id>
		<title>When using generated key and assisted query encrypt column to execute `Insert into t_order(user_id, status) values(1,1),(2,3) `,  wrong column values will be calculated.</title>
		<body>## Bug Report  **For English only**, other languages will not accept.  Before report a bug, make sure you have:  - Searched open and closed [GitHub issues](https://github.com/sharding-sphere/sharding-sphere/issues). - Read documentation: [ShardingSphere Doc](http://shardingsphere.io/document/current/en/overview/).  Please pay attention on issues you submitted, because we maybe need more details.  If no response **more than 7 days** and we cannot reproduce it on current information, we will **close it**.  Please answer these questions before submitting your issue. Thanks!  ### Which version of ShardingSphere did you use? 4.0.0-RC1 ### Which project did you use? Sharding-JDBC or Sharding-Proxy? jdbc ### Actual behavior When using sharding key generator + assisted Query encryptor tto execute `Insert into t_order(user_id, status) values(1,1),(2,3) `,  wrong column values will be calculated. ### Reason analyze (If you can) When insert multiple values, generated key will be firstly move and then append, the final order is wrong. ```     private void fillWithGeneratedKeyName(final InsertOptimizeResult insertOptimizeResult) {         String generateKeyColumnName = shardingRule.findGenerateKeyColumnName(insertStatement.getTables().getSingleTableName()).get();         insertOptimizeResult.getColumnNames().remove(generateKeyColumnName);         insertOptimizeResult.getColumnNames().add(generateKeyColumnName);     } ``` ### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.  ### Example codes for reproduce this issue (such as a github link). </body>
		<created>2019-05-17 09:26:05</created>
		<closed>2019-05-17 14:51:18</closed>
	</bug>
	<bug>
		<id>2398</id>
		<title>Wrong result set for `select between and` when using encrypt data source</title>
		<body>## Bug Report  **For English only**, other languages will not accept.  Before report a bug, make sure you have:  - Searched open and closed [GitHub issues](https://github.com/sharding-sphere/sharding-sphere/issues). - Read documentation: [ShardingSphere Doc](http://shardingsphere.io/document/current/en/overview/).  Please pay attention on issues you submitted, because we maybe need more details.  If no response **more than 7 days** and we cannot reproduce it on current information, we will **close it**.  Please answer these questions before submitting your issue. Thanks!  ### Which version of ShardingSphere did you use?  ### Which project did you use? Sharding-JDBC or Sharding-Proxy?  ### Expected behavior get correct result set for `select between and` when using encrypt data source ### Actual behavior get wrong result set for `select between and` when using encrypt data source ### Reason analyze (If you can) Actually, when data is encrypted and stored in db, user can not use `select encrypted column between value1 an value2` to get correct result set. The reason is that encrypted data in db is different from the original data. Therefore when ss finds this scenario, it will throw exception. ### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.  ### Example codes for reproduce this issue (such as a github link). </body>
		<created>2019-05-17 04:02:14</created>
		<closed>2019-05-17 04:05:42</closed>
	</bug>
	<bug>
		<id>2397</id>
		<title>MasterSlaveDatasource and shardingDatasource could be used together in shardingproxy?</title>
		<body>There is no such usage in the official example。version shardingProxy-4.0 </body>
		<created>2019-05-16 08:34:09</created>
		<closed>2019-05-22 10:04:37</closed>
	</bug>
	<bug>
		<id>2379</id>
		<title>delete from user where id=“xx” parse error in shading-jdbc 4.0.0-RC1</title>
		<body>When I upgrade sharding-jdbc version to 4.0.0-RC1, the SQL: `delete from user where id=“xx” `cannot execute correctly, but it is ok in sharding-jdbc 3.0.0. The log is: &gt; line 1:12 no viable alternative at in input 'fromuser' Actual SQL : ds_0 ::: delete from user where id=’xx‘ .  The SQL should be written to `delete from user_5 where id=“xx” .`  I debug this problem and found that AntlrSQLParser can't parse table-names accurately when parsing. I try to delete  USER kerword definition  in Keyword.g4 and rebuild , then the SQL can execute  correctly.  &gt; USER             : U S E R            ;  So I think there may be some mistakes in the antlr .g4 files when SQL table name is 'user'.</body>
		<created>2019-05-14 03:14:52</created>
		<closed>2019-05-14 03:47:54</closed>
	</bug>
	<bug>
		<id>2356</id>
		<title>proxy transaction cannot work with python client.</title>
		<body>mysql-python connector will send `SET @@SESSION.AUTOCOMMIT = OFF` command for begining a new transaction, we should intercept this sql to do Sharding transaction. </body>
		<created>2019-05-09 00:46:09</created>
		<closed>2019-05-10 00:53:02</closed>
	</bug>
	<bug>
		<id>2343</id>
		<title>Sharding-proxy Query result :extraneous data in "D" message ,reason: have chinese</title>
		<body>## Bug Report  **For English only**, other languages will not accept.  Before report a bug, make sure you have:  - Searched open and closed [GitHub issues](https://github.com/sharding-sphere/sharding-sphere/issues). - Read documentation: [ShardingSphere Doc](http://shardingsphere.io/document/current/en/overview/).  Please pay attention on issues you submitted, because we maybe need more details.  If no response **more than 7 days** and we cannot reproduce it on current information, we will **close it**.  Please answer these questions before submitting your issue. Thanks!  ### Which version of ShardingSphere did you use? 4.0.0-RC1 ### Which project did you use? Sharding-JDBC or Sharding-Proxy? Sharding-Proxy  ### Expected behavior table data have Chinese .select * from table show error message : extraneous data in "D" message ### Actual behavior proxy backend POSTGRES , frontend postgres  ### Reason analyze (If you can) reason Chinese , Postgres server_encoding ,client_encoding UTF-8 ### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc. any table ,have Chinese is error. ### Example codes for reproduce this issue (such as a github link).</body>
		<created>2019-05-07 23:53:04</created>
		<closed>2019-05-08 11:04:59</closed>
	</bug>
	<bug>
		<id>2331</id>
		<title>While using database,it will select a random database!!!</title>
		<body>the logs likes that: First use database: ![20](https://user-images.githubusercontent.com/34736778/57217009-082fe180-7024-11e9-90fc-b8ebeff438c3.png) Second use database: ![21](https://user-images.githubusercontent.com/34736778/57217050-25fd4680-7024-11e9-9231-f50c7c65d7af.png)   the sharding-proxy version is 4.0.0-RC2-SNAPSHOT. </body>
		<created>2019-05-06 09:24:35</created>
		<closed>2019-05-20 02:53:00</closed>
	</bug>
	<bug>
		<id>2329</id>
		<title>The SQL of `insert set` can not run well when sharding</title>
		<body>## Bug Report  **For English only**, other languages will not accept.  Before report a bug, make sure you have:  - Searched open and closed [GitHub issues](https://github.com/sharding-sphere/sharding-sphere/issues). - Read documentation: [ShardingSphere Doc](http://shardingsphere.io/document/current/en/overview/).  Please pay attention on issues you submitted, because we maybe need more details.  If no response **more than 7 days** and we cannot reproduce it on current information, we will **close it**.  Please answer these questions before submitting your issue. Thanks!  ### Which version of ShardingSphere did you use? 4.0.0-RC1 ### Which project did you use? Sharding-JDBC or Sharding-Proxy? Sharding-JDBC ### Expected behavior `insert into t_order set order_id =1, user_id =1; ` can run well. ### Actual behavior throw exception: &gt; ERROR 1064 (42000): You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'org.apache.shardingsphere.core.rewrite.placeholder.InsertSetPlaceholder@2f60192a'  ### Reason analyze (If you can) SQLBuilder does not handle `InsertSetPlaceholder`. ### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.  ### Example codes for reproduce this issue (such as a github link). </body>
		<created>2019-05-06 08:31:51</created>
		<closed>2019-05-06 15:51:42</closed>
	</bug>
	<bug>
		<id>2324</id>
		<title>SUM(IF(INTERVAL print error log "no viable alternative at input"</title>
		<body>## Bug Report  **For English only**, other languages will not accept.  Before report a bug, make sure you have:  - Searched open and closed [GitHub issues](https://github.com/sharding-sphere/sharding-sphere/issues). - Read documentation: [ShardingSphere Doc](http://shardingsphere.io/document/current/en/overview/).  Please pay attention on issues you submitted, because we maybe need more details.  If no response **more than 7 days** and we cannot reproduce it on current information, we will **close it**.  Please answer these questions before submitting your issue. Thanks!  ### Which version of ShardingSphere did you use? 4.0.0-RC1  ### Which project did you use? Sharding-JDBC or Sharding-Proxy? Sharding-JDBC  ### Actual behavior line 3:68 no viable alternative at input 'SUM(if(state=0andINTERVAL(total_amount,0,200.00)=1,' (It runs fine on version 3.0.0.M4)  ### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc. SQL like: select SUM(if(state=0 and INTERVAL(total_amount,${rangeParam.range1},${rangeParam.range2})=1,1,0)) as successNum1  from order; </body>
		<created>2019-05-05 16:52:02</created>
		<closed>2019-05-06 15:50:18</closed>
	</bug>
	<bug>
		<id>2319</id>
		<title>Insert error when field name was a keyword</title>
		<body>## Insert error when field name was a keyword.  ### Which version of ShardingSphere did you use?  4.0.0-RC1  ### Which project did you use? Sharding-JDBC or Sharding-Proxy?  Sharding-JDBC  ### Expected behavior  insert success.  ### Actual behavior   ``` [main] INFO ShardingSphere-SQL - Logic SQL: INSERT INTO `ts_order` (`id`, `desc`) VALUES ('1', 'abc') [main] INFO ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=ts_order, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=id, tableName=ts_order), operator=EQUAL, compareOperator=null, positionValueMap={0=1}, positionIndexMap={})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=ts_order, quoteCharacter=BACK_QUOTE, schemaNameLength=0), SQLToken(startIndex=23)], parametersIndex=0, logicSQL=INSERT INTO `ts_order` (`id`, `desc`) VALUES ('1', 'abc')), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[id, desc], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLTextExpression@5a62b2a4, org.apache.shardingsphere.core.parse.old.parser.expression.SQLTextExpression@1051817b])]) [main] INFO ShardingSphere-SQL - Actual SQL: ds_0 ::: INSERT INTO `ts_order_0001`  (id, desc) VALUES ('1', 'abc') Exception in thread "main" com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc) VALUES ('1', 'abc')' at line 1 ```  ### Reason analyze (If you can)  ### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.  ### Example codes for reproduce this issue (such as a github link).</body>
		<created>2019-05-05 03:45:12</created>
		<closed>2019-05-15 12:23:52</closed>
	</bug>
	<bug>
		<id>2312</id>
		<title>If there is quoteCharacter for index name, sql can not be executed</title>
		<body>## Bug Report  **For English only**, other languages will not accept.  Before report a bug, make sure you have:  - Searched open and closed [GitHub issues](https://github.com/sharding-sphere/sharding-sphere/issues). - Read documentation: [ShardingSphere Doc](http://shardingsphere.io/document/current/en/overview/).  Please pay attention on issues you submitted, because we maybe need more details.  If no response **more than 7 days** and we cannot reproduce it on current information, we will **close it**.  Please answer these questions before submitting your issue. Thanks!  ### Which version of ShardingSphere did you use? 4.0.0-RC1 ### Which project did you use? Sharding-JDBC or Sharding-Proxy? Sharding-Proxy ### Expected behavior The following SQL can be executed correctly. ``` CREATE TABLE `t_order` (   `order_id` varchar(100) NOT NULL,   `user_id` varchar(100) DEFAULT NULL,   `status` varchar(45) DEFAULT NULL,   PRIMARY KEY (`order_id`),   KEY `order_index_t_order` (`order_id`) )  DEFAULT CHARSET=utf8; ``` ### Actual behavior An exception is thrown. ``` ERROR 1064 (42000): You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '_t_order_0 (`order_id`) )  DEFAULT CHARSET=utf8' at line 1 ``` ### Reason analyze (If you can) The rewritten SQL is not correct：  &gt; CREATE TABLE `t_order_0` (   `order_id` varchar(100) NOT NULL,   `user_id` varchar(100) DEFAULT NULL,   `status` varchar(45) DEFAULT NULL,   PRIMARY KEY (`order_id`),   KEY \`order_index_t_order\`_t_order_0 (\`order_id\`) )  DEFAULT CHARSET=utf8  The related code is: In SQLRewriteEngine class: ``` private void appendIndexPlaceholder(final SQLBuilder sqlBuilder, final IndexToken indexToken, final int count) {         String indexName = originalSQL.substring(indexToken.getStartIndex(), indexToken.getStopIndex() + 1);         String logicTableName = indexToken.getTableName().toLowerCase();         if (Strings.isNullOrEmpty(logicTableName)) {             logicTableName = shardingRule.getLogicTableName(indexName);         }         sqlBuilder.appendPlaceholder(new IndexPlaceholder(indexName, logicTableName));         appendRest(sqlBuilder, count, indexToken.getStopIndex() + 1);     } ```  ### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.  ### Example codes for reproduce this issue (such as a github link). </body>
		<created>2019-05-01 07:22:39</created>
		<closed>2019-05-05 14:22:02</closed>
	</bug>
	<bug>
		<id>2299</id>
		<title>RoutingCondition for updateStatement after parsing is not correct.</title>
		<body>## Bug Report  Please answer these questions before submitting your issue. Thanks!  ### Which version of ShardingSphere did you use? 4.0.0-RC1-Snapshot  ### Which project did you use? Sharding-JDBC or Sharding-Proxy? sharding-jdbc &amp; sharding-proxy  ### Expected behavior Sharding key is `order_id`, RoutingConditon of below SQL can be filled correctly. `update t_order set user_id=user_id-1 where user_id =? and order_id =?`  ### Actual behavior RoutingCondition is empty. routeConditions=Conditions(orCondition=OrCondition(andConditions=[]))  ### Reason analyze (If you can) Antlr g4 file have a wrong parse rule for `set user_id=user_id-1`, `set user_id=user_id+1` can be parsed succeed.  ### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.  ### Example codes for reproduce this issue (such as a github link). </body>
		<created>2019-04-29 07:48:46</created>
		<closed>2019-04-30 06:15:21</closed>
	</bug>
	<bug>
		<id>2294</id>
		<title>subquery with error</title>
		<body>## Bug Report  **For English only**, other languages will not accept.  Before report a bug, make sure you have:  - Searched open and closed [GitHub issues](https://github.com/sharding-sphere/sharding-sphere/issues). i have try search with 'MissingMethodException' 'No signature of method' keywords yet - Read documentation: [ShardingSphere Doc](http://shardingsphere.io/document/current/en/overview/). i'm i have read all of it. Please pay attention on issues you submitted, because we maybe need more details.  If no response **more than 7 days** and we cannot reproduce it on current information, we will **close it**. i will be reply if you need more details. Please answer these questions before submitting your issue. Thanks!  ### Which version of ShardingSphere did you use? 4.0.0-RC2-SNAPSHOT  ### Which project did you use? Sharding-JDBC or Sharding-Proxy? Sharding-JDBC  ### Expected behavior as the document of ShardingSphere, the subquery of the sample can be support. ### Actual behavior can't be run correctly, and the error message as below.  [ERROR] 2019-04-28 21:22:11,442 --http-nio-8080-exec-4-- [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.PersistenceException:  ### Error querying database.  Cause: groovy.lang.MissingMethodException: No signature of method: java.lang.String.mod() is applicable for argument types: (java.lang.Integer) values: [2] Possible solutions: drop(int), any(), find(), find(java.lang.CharSequence), any(groovy.lang.Closure), is(java.lang.Object) ### The error may exist in org/apache/shardingsphere/samples/repository/OrderMapper.java (best guess) ### The error may involve org.apache.shardingsphere.samples.repository.OrderMapper.queryOrder-Inline ### The error occurred while setting parameters ### SQL: SELECT * FROM t_order WHERE order_id IN (SELECT order_id FROM t_order WHERE status = 'init') ### Cause: groovy.lang.MissingMethodException: No signature of method: java.lang.String.mod() is applicable for argument types: (java.lang.Integer) values: [2] Possible solutions: drop(int), any(), find(), find(java.lang.CharSequence), any(groovy.lang.Closure), is(java.lang.Object)] with root cause  groovy.lang.MissingMethodException: No signature of method: java.lang.String.mod() is applicable for argument types: (java.lang.Integer) values: [2] Possible solutions: drop(int), any(), find(), find(java.lang.CharSequence), any(groovy.lang.Closure), is(java.lang.Object) at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.unwrap(ScriptBytecodeAdapter.java:58) at org.codehaus.groovy.runtime.callsite.PojoMetaClassSite.call(PojoMetaClassSite.java:49) at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:125) at Script3$_run_closure1.doCall(Script3.groovy:1) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:497) at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93) at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:325) at org.codehaus.groovy.runtime.metaclass.ClosureMetaClass.invokeMethod(ClosureMetaClass.java:294) at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1019) at groovy.lang.Closure.call(Closure.java:426) at groovy.lang.Closure.call(Closure.java:420) at org.apache.shardingsphere.core.strategy.route.inline.InlineShardingStrategy.execute(InlineShardingStrategy.java:86) at org.apache.shardingsphere.core.strategy.route.inline.InlineShardingStrategy.doSharding(InlineShardingStrategy.java:68) at org.apache.shardingsphere.core.strategy.route.inline.InlineShardingStrategy.doSharding(InlineShardingStrategy.java:59) at org.apache.shardingsphere.core.route.type.standard.StandardRoutingEngine.routeTables(StandardRoutingEngine.java:201) at org.apache.shardingsphere.core.route.type.standard.StandardRoutingEngine.route(StandardRoutingEngine.java:183) at org.apache.shardingsphere.core.route.type.standard.StandardRoutingEngine.routeByShardingConditionsWithCondition(StandardRoutingEngine.java:110) at org.apache.shardingsphere.core.route.type.standard.StandardRoutingEngine.routeByShardingConditions(StandardRoutingEngine.java:104) at org.apache.shardingsphere.core.route.type.standard.StandardRoutingEngine.getDataNodes(StandardRoutingEngine.java:89) at org.apache.shardingsphere.core.route.type.standard.StandardRoutingEngine.route(StandardRoutingEngine.java:71) at org.apache.shardingsphere.core.route.router.sharding.ParsingSQLRouter.route(ParsingSQLRouter.java:106) at org.apache.shardingsphere.core.route.PreparedStatementRoutingEngine.route(PreparedStatementRoutingEngine.java:66) at org.apache.shardingsphere.core.PreparedQueryShardingEngine.route(PreparedQueryShardingEngine.java:60) at org.apache.shardingsphere.core.BaseShardingEngine.shard(BaseShardingEngine.java:64) at org.apache.shardingsphere.shardingjdbc.jdbc.core.statement.ShardingPreparedStatement.shard(ShardingPreparedStatement.java:224) at org.apache.shardingsphere.shardingjdbc.jdbc.core.statement.ShardingPreparedStatement.execute(ShardingPreparedStatement.java:170) at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:64) at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79) at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63) at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324) at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156) at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109) at com.github.pagehelper.PageInterceptor.intercept(PageInterceptor.java:108) at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:61) at com.sun.proxy.$Proxy73.query(Unknown Source) at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147) at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:497) at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433) at com.sun.proxy.$Proxy58.selectList(Unknown Source) at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:230) at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147) at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80) at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58) at com.sun.proxy.$Proxy63.queryOrder(Unknown Source) at org.apache.shardingsphere.samples.Application.queryAll(Application.java:47) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:497) at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:189) at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138) at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102) at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892) at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797) at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038) at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942) at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005) at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:897) at javax.servlet.http.HttpServlet.service(HttpServlet.java:634) at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882) at javax.servlet.http.HttpServlet.service(HttpServlet.java:741) at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231) at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53) at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99) at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92) at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93) at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200) at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:200) at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490) at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139) at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92) at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408) at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66) at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:834) at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1415) at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) at java.lang.Thread.run(Thread.java:745)   ### Reason analyze (If you can)  ### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.  ### Example codes for reproduce this issue (such as a github link). ```java  @Select("SELECT * FROM t_order WHERE order_id IN (SELECT order_id FROM t_order WHERE status = '#{status}')")     List&lt;Order&gt; queryOrder(String status); ``` you can visit [link](https://github.com/EvanDylan/incubator-shardingsphere/blob/dev/sharding-samples/src/main/java/org/apache/shardingsphere/samples/repository/OrderMapper.java) as well.</body>
		<created>2019-04-28 13:33:34</created>
		<closed>2019-04-29 09:42:22</closed>
	</bug>
	<bug>
		<id>2271</id>
		<title>INSERT ... ON DUPLICATE KEY UPDATE ,Reporting the following error</title>
		<body>sql: insert into t_order (id, avl_inventory, `type`,  create_person, create_time, update_person, update_time, is_deleted, version )  VALUES    (76667, 100, 1, 'xx(189870)', '2019-4-25 18:25:20', 'xx(189870)','2019-4-25 18:25:20', 0,0 ) ,   (78143, 100, 1, 'xx(189870)', '2019-4-25 18:25:20',  'xx(189870)', '2019-4-25 18:25:20', 0,0 )  ON DUPLICATE KEY UPDATE avl_inventory = VALUES(avl_inventory),  `type` = VALUES(`type`),  create_time = VALUES(create_time), create_person = VALUES(create_person),  update_time = VALUES(update_time), update_person = VALUES(update_person);  error: Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Duplicate entry '78143' for key 'PRIMARY' at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) at java.lang.reflect.Constructor.newInstance(Constructor.java:422) at com.mysql.jdbc.Util.handleNewInstance(Util.java:425) at com.mysql.jdbc.Util.getInstance(Util.java:408) at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:936) at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3973) at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3909) at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2527) at com.mysql.jdbc.ServerPreparedStatement.serverExecute(ServerPreparedStatement.java:1283) at com.mysql.jdbc.ServerPreparedStatement.executeInternal(ServerPreparedStatement.java:783) at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197) at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44) at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java) at org.apache.shardingsphere.shardingjdbc.executor.SQLExecuteCallbackFactory$2.executeSQL(SQLExecuteCallbackFactory.java:65) at org.apache.shardingsphere.shardingjdbc.executor.SQLExecuteCallbackFactory$2.executeSQL(SQLExecuteCallbackFactory.java:61) at org.apache.shardingsphere.core.execute.sql.execute.SQLExecuteCallback.execute0(SQLExecuteCallback.java:69) at org.apache.shardingsphere.core.execute.sql.execute.SQLExecuteCallback.execute(SQLExecuteCallback.java:58)</body>
		<created>2019-04-25 10:30:32</created>
		<closed>2019-05-08 11:04:26</closed>
	</bug>
	<bug>
		<id>2253</id>
		<title>shardingsphere4.0.0-RC1,Incorrect datetime value: 'now()' for column 'create_time' at row </title>
		<body>shardingsphere4.0.0-RC1,report the following error：  Incorrect datetime value: 'now()' for column 'create_time' at row   ShardingSphere-SQL - Actual SQL: rw0 ::: insert into t_order(id, first_channel, biz_bill_no, orig_bill_no, warehouse_id, sku_code, change_inv_type, change_num, change_time, remark, create_time, create_person, update_time, update_person, is_deleted, version, sale_company, owner_id, bill_type, warehouse_code, status) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, 'now()', ?, 'now()', ?, 0, 0, ?, ?, ?, ?, ?) ::: [xx, xx, hh, hhh, xx, bb, xx, -6, 2019-04-24 09:22:54.825, null, xx, xx, xx, xx, 6, 0303, 0]  It seems that sharding treats the mysql now() function as a string. </body>
		<created>2019-04-24 01:36:36</created>
		<closed>2019-04-26 07:07:05</closed>
	</bug>
	<bug>
		<id>2252</id>
		<title>insert with generated keys,when the last column value is null，cause NullPointerException</title>
		<body>sharding-jdbc &lt;version&gt;4.0.0-RC1&lt;/version&gt;  &lt;sharding:key-generator id="xxxxxx" type="SNOWFLAKE" column="id" /&gt; useGeneratedKeys，when insert sql the last column value is null,cause NullPointerException when update the last column，success! exception：  Caused by: java.lang.NullPointerException at org.apache.shardingsphere.core.route.type.standard.StandardRoutingEngine.isQualifiedInsertOptimizeResult(StandardRoutingEngine.java:221) at org.apache.shardingsphere.core.route.type.standard.StandardRoutingEngine.reviseInsertOptimizeResult(StandardRoutingEngine.java:211) at org.apache.shardingsphere.core.route.type.standard.StandardRoutingEngine.routeByShardingConditionsWithCondition(StandardRoutingEngine.java:110) at org.apache.shardingsphere.core.route.type.standard.StandardRoutingEngine.routeByShardingConditions(StandardRoutingEngine.java:102) at org.apache.shardingsphere.core.route.type.standard.StandardRoutingEngine.getDataNodes(StandardRoutingEngine.java:87) at org.apache.shardingsphere.core.route.type.standard.StandardRoutingEngine.route(StandardRoutingEngine.java:69) at org.apache.shardingsphere.core.route.router.sharding.ParsingSQLRouter.route(ParsingSQLRouter.java:106) at org.apache.shardingsphere.core.route.PreparedStatementRoutingEngine.route(PreparedStatementRoutingEngine.java:66) at org.apache.shardingsphere.core.PreparedQueryShardingEngine.route(PreparedQueryShardingEngine.java:60) at org.apache.shardingsphere.core.BaseShardingEngine.shard(BaseShardingEngine.java:64) at org.apache.shardingsphere.shardingjdbc.jdbc.core.statement.ShardingPreparedStatement.shard(ShardingPreparedStatement.java:224) at org.apache.shardingsphere.shardingjdbc.jdbc.core.statement.ShardingPreparedStatement.execute(ShardingPreparedStatement.java:170) at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:45) at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:73) at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:49) at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:115) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:606) at org.apache.ibatis.plugin.Invocation.proceed(Invocation.java:49) at cn.uce.core.db.interceptor.BatchUpdateExecutorInterceptor.intercept(BatchUpdateExecutorInterceptor.java:79) at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:61) at com.sun.proxy.$Proxy40.update(Unknown Source) at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:75) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:606) at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63) at com.sun.proxy.$Proxy40.update(Unknown Source) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:606) at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63) at com.sun.proxy.$Proxy40.update(Unknown Source) at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:170)</body>
		<created>2019-04-23 13:17:31</created>
		<closed>2019-05-05 12:02:55</closed>
	</bug>
	<bug>
		<id>2247</id>
		<title>Wrong comment format of windows start.bat</title>
		<body>## Bug Report  **For English only**, other languages will not accept.  Before report a bug, make sure you have:  - Searched open and closed [GitHub issues](https://github.com/sharding-sphere/sharding-sphere/issues). - Read documentation: [ShardingSphere Doc](http://shardingsphere.io/document/current/en/overview/).  Please pay attention on issues you submitted, because we maybe need more details.  If no response **more than 7 days** and we cannot reproduce it on current information, we will **close it**.  Please answer these questions before submitting your issue. Thanks!  ### Which version of ShardingSphere did you use? 4.0.0.0-RC1 ### Which project did you use? Sharding-JDBC or Sharding-Proxy? Sharding-Proxy ### Expected behavior [start.bat](https://github.com/apache/incubator-shardingsphere/blob/dev/sharding-distribution/sharding-proxy-distribution/src/main/resources/bin/start.bat) Batch Comment `@rem` or `rem` ### Actual behavior shell comment `#` ### Reason analyze (If you can)  ### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.  ### Example codes for reproduce this issue (such as a github link). </body>
		<created>2019-04-22 09:23:40</created>
		<closed>2019-04-22 09:48:43</closed>
	</bug>
	<bug>
		<id>2226</id>
		<title>select * missing column</title>
		<body>(1)alter table my_orders add dc decimal(10,2);  (2) show create table my_orders\G create table my_orders ( id int(10) not null auto_increment, name varchar(40) default null, create_time datetime default null, age int(11) default null, ttt datetime(3) default null, dc decimal(10,2) default null, primary key (id) )engine=innodb default charset=utf8;  (3) insert into my_orders (name,create_time,age) values ('ruiaylin1','2019-04-16 18:00:00',15);  (4)dc column missing select * from my_orders; id     name         create_time         age     ttt      1   ruiaylin1   2019-04-16 18:00:00      15     NULL  </body>
		<created>2019-04-18 02:54:14</created>
		<closed>2019-04-30 14:36:21</closed>
	</bug>
	<bug>
		<id>2224</id>
		<title>wrong result for the null value in  int column </title>
		<body>age null  mysql&gt; insert into my_orders(name,create_time,age,ttt,dc) values('ruiaylin1', '2019-04-16 18:00:00', null,null, 14.56) ; Query OK, 1 row affected (0.10 sec)  【proxy】 mysql&gt; select * from my_orders ;                   +------+-----------+-----------------------+------+------+-------+ | id   | name      | create_time           | age  | ttt  | dc    | +------+-----------+-----------------------+------+------+-------+ |    1 | ruiaylin  | 2019-04-15 18:00:00.0 |    0 | NULL |  NULL | |    2 | ruiaylin1 | 2019-04-16 18:00:00.0 |   15 | NULL |  NULL | |    3 | ruiaylin1 | 2019-04-16 18:00:00.0 |   15 | NULL | 14.56 | |    4 | ruiaylin1 | 2019-04-16 18:00:00.0 |    0 | NULL | 14.56 |   # age 0 +------+-----------+-----------------------+------+------+-------+ 4 rows in set (0.03 sec)  【mysql】 mysql&gt; mysql&gt; select * from  my_orders_201904 ; +----+-----------+---------------------+------+------+-------+ | id | name      | create_time         | age  | ttt  | dc    | +----+-----------+---------------------+------+------+-------+ |  1 | ruiaylin  | 2019-04-15 18:00:00 | NULL | NULL |  NULL | |  2 | ruiaylin1 | 2019-04-16 18:00:00 |   15 | NULL |  NULL | |  3 | ruiaylin1 | 2019-04-16 18:00:00 |   15 | NULL | 14.56 | |  4 | ruiaylin1 | 2019-04-16 18:00:00 | NULL | NULL | 14.56 |    # age NULL +----+-----------+---------------------+------+------+-------+ 4 rows in set (0.00 sec)  </body>
		<created>2019-04-18 01:53:24</created>
		<closed>2019-04-29 08:54:23</closed>
	</bug>
	<bug>
		<id>2222</id>
		<title>Incorrect integer value: 'NULL' for column</title>
		<body>【 int 】 (1)create table tb1 (id int);  (2)insert into tb1 values (null); ERROR 1366 (HY000): Incorrect integer value: 'NULL' for column 'id' at row 1  </body>
		<created>2019-04-17 05:31:47</created>
		<closed>2019-04-17 15:28:02</closed>
	</bug>
	<bug>
		<id>2211</id>
		<title>mysql insert decimal error</title>
		<body>sharding proxy version https://dist.apache.org/repos/dist/dev/incubator/shardingsphere/4.0.0-RC1/apache-shardingsphere-incubating-4.0.0-RC1-sharding-proxy-bin.tar.gz  (1) create table tbname1 (id int primary key,key_price decimal(16,2) DEFAULT NULL);  (2) mysql&gt; INSERT INTO tbname1 VALUES (1,13.00); ERROR 10002 (C1000): 2Unknown exception: [For input string: "13.00"]  thanks</body>
		<created>2019-04-15 11:06:59</created>
		<closed>2019-04-16 12:59:36</closed>
	</bug>
	<bug>
		<id>2208</id>
		<title>Support RLIKE  expression</title>
		<body>## Bug Report  **For English only**, other languages will not accept.  Before report a bug, make sure you have:  - Searched open and closed [GitHub issues](https://github.com/sharding-sphere/sharding-sphere/issues). - Read documentation: [ShardingSphere Doc](http://shardingsphere.io/document/current/en/overview/).  Please pay attention on issues you submitted, because we maybe need more details.  If no response **more than 7 days** and we cannot reproduce it on current information, we will **close it**.  Please answer these questions before submitting your issue. Thanks!  ### Which version of ShardingSphere did you use? 4.0.0-RC1 ### Which project did you use? Sharding-JDBC or Sharding-Proxy? Sharding-JDBC ### Expected behavior REGEXP = RLIKE in MySQL, so support rlike  expression. ### Actual behavior Not support ### Reason analyze (If you can) Ref: https://dev.mysql.com/doc/refman/5.7/en/regexp.html#operator_regexp ### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.  ### Example codes for reproduce this issue (such as a github link). </body>
		<created>2019-04-15 07:13:58</created>
		<closed>2019-04-15 08:47:35</closed>
	</bug>
	<bug>
		<id>2205</id>
		<title>When use ShardingQueryAssistedEncryptor to find assistedQueryColumns, an outOfIndex exception will occur.</title>
		<body>Here is the point: ``` ShardingEncryptorStrategy  /**      * Get assisted query column.      *      * @param logicTableName logic table name      * @param columnName column name      * @return assisted query column      */     public Optional&lt;String&gt; getAssistedQueryColumn(final String logicTableName, final String columnName) {         for (ColumnNode each : columns) {             ColumnNode target = new ColumnNode(logicTableName, columnName);             if (each.equals(target)) {                 return Optional.of(assistedQueryColumns.get(columns.indexOf(target)).getColumnName());             }         }         return Optional.absent();     } ```</body>
		<created>2019-04-15 03:12:16</created>
		<closed>2019-04-15 04:34:01</closed>
	</bug>
	<bug>
		<id>2204</id>
		<title> select a.id ,c.id  order by a.id, the result  can not sort by designated column</title>
		<body>## Bug Report  ### Which version of ShardingSphere did you use?    3.0.0.M1 ### Which project did you use? Sharding-JDBC or Sharding-Proxy? Sharding-JDBC  ### Expected behavior correct sort by designated column,or when cannot surpport throw exception inform  user ？  ### Actual behavior multi-result can not correct sort by designated column  ### Reason analyze (If you can)  i see the encapsulate select columns is map  and map's key from columnLabel,so the same column will be overwrite  ,when  setIndexForOrderItem(columnLabelIndexMap, orderByItems);  orderby column   will  find  error index ,so that result sort is wrong .i use alias with different table same column name and order by their alias can get a right result   ### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc. SELECT         i.user_id  ,o.user_id          FROM         t_order o, t_order_item i         WHERE         o.order_id = i.order_id         order by i.user_id  ### Example codes for reproduce this issue (such as a github link). </body>
		<created>2019-04-14 17:07:48</created>
		<closed>2019-09-16 10:25:45</closed>
	</bug>
	<bug>
		<id>2199</id>
		<title>If aes.key.value configured is integer, AesEncryptor can not run normally.</title>
		<body></body>
		<created>2019-04-12 07:42:36</created>
		<closed>2019-04-12 18:06:14</closed>
	</bug>
	<bug>
		<id>2196</id>
		<title>Handle null exception of encrypt()</title>
		<body>## Bug Report  **For English only**, other languages will not accept.  Before report a bug, make sure you have:  - Searched open and closed [GitHub issues](https://github.com/sharding-sphere/sharding-sphere/issues). - Read documentation: [ShardingSphere Doc](http://shardingsphere.io/document/current/en/overview/).  Please pay attention on issues you submitted, because we maybe need more details.  If no response **more than 7 days** and we cannot reproduce it on current information, we will **close it**.  Please answer these questions before submitting your issue. Thanks!  ### Which version of ShardingSphere did you use? 4.0.0-RC1-SNAPSHOT ### Which project did you use? Sharding-JDBC or Sharding-Proxy? shardinng-jdbc ### Expected behavior  ### Actual behavior When query the data that  is null or "" in datasource, sharding-jdbc will throw null excpetion. ### Reason analyze (If you can)  ### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.  ### Example codes for reproduce this issue (such as a github link). </body>
		<created>2019-04-12 05:09:27</created>
		<closed>2019-04-12 07:41:18</closed>
	</bug>
	<bug>
		<id>2193</id>
		<title>Table doesn't exist when sharding value in different datasource with in expression</title>
		<body>## Table doesn't exist when sharding value in different data source with in expression  ### Which version of ShardingSphere did you use? 4.0.0-RC1 ### Which project did you use? Sharding-JDBC or Sharding-Proxy? Sharding-JDBC ### Expected behavior 21:31:45.941 [main] INFO  ShardingSphere-SQL - Actual SQL: ds_0 ::: select * from ts_order_0001 where id = 1 or id = 3 21:31:45.941 [main] INFO  ShardingSphere-SQL - Actual SQL: ds_1 ::: select * from ts_order_0003 where id = 1 or id = 3 ### Actual behavior 21:08:30.000 [main] INFO  ShardingSphere-SQL - Actual SQL: ds_0 ::: select * from ts_order_0001 where id in (1, 3) 21:08:30.000 [main] INFO  ShardingSphere-SQL - Actual SQL: ds_0 ::: select * from ts_order_0003 where id in (1, 3) 21:08:30.000 [main] INFO  ShardingSphere-SQL - Actual SQL: ds_1 ::: select * from ts_order_0001 where id in (1, 3) 21:08:30.000 [main] INFO  ShardingSphere-SQL - Actual SQL: ds_1 ::: select * from ts_order_0003 where id in (1, 3) Exception in thread "main" com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'test_d_0.ts_order_0003' doesn't exist ### Reason analyze (If you can)  ### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.  dependency  ```xml   &lt;dependency&gt;   &lt;groupId&gt;com.alibaba&lt;/groupId&gt;   &lt;artifactId&gt;druid&lt;/artifactId&gt;   &lt;version&gt;1.0.9&lt;/version&gt;   &lt;/dependency&gt;    &lt;dependency&gt;   &lt;groupId&gt;org.apache.shardingsphere&lt;/groupId&gt;   &lt;artifactId&gt;sharding-jdbc-core&lt;/artifactId&gt;   &lt;version&gt;4.0.0-RC1&lt;/version&gt;   &lt;/dependency&gt; ```    sql  ```sql create database test_d_0; create database test_d_1; CREATE TABLE test_d_0.`ts_order_0000` (`id` BIGINT NOT NULL AUTO_INCREMENT,PRIMARY KEY (`id`)); CREATE TABLE test_d_0.`ts_order_0001` (`id` BIGINT NOT NULL AUTO_INCREMENT,PRIMARY KEY (`id`)); CREATE TABLE test_d_1.`ts_order_0002` (`id` BIGINT NOT NULL AUTO_INCREMENT,PRIMARY KEY (`id`)); CREATE TABLE test_d_1.`ts_order_0003` (`id` BIGINT NOT NULL AUTO_INCREMENT,PRIMARY KEY (`id`)); ```  Java Code  ```java         BufferedReader reader = new BufferedReader(new InputStreamReader(ShardingDataSourceTest.class                         .getResourceAsStream("/sharding-config-example-1.yaml"), "utf-8"));         StringBuffer sb = new StringBuffer();         CharBuffer charBuffer = CharBuffer.allocate(32);         for (int count = reader.read(charBuffer); count &gt; 0; count = reader.read(charBuffer)) {             sb.append(charBuffer.flip());         }              DataSource dataSource = YamlShardingDataSourceFactory.createDataSource(sb.toString().getBytes("utf-8"));         Connection connection = dataSource.getConnection();         Statement st = connection.createStatement();         ResultSet rs = st.executeQuery("select * from ts_order where id in (1, 3)"); ```    sharding rule sharding-config-example-1.yaml  ```yaml dataSources:    ds_0: !!com.alibaba.druid.pool.DruidDataSource     driverClassName: com.mysql.jdbc.Driver     url: jdbc:mysql://localhost:3306/test_d_0     username: root     password: root135   ds_1: !!com.alibaba.druid.pool.DruidDataSource     driverClassName: com.mysql.jdbc.Driver     url: jdbc:mysql://localhost:3306/test_d_1     username: root     password: root135  shardingRule:   tables:     ts_order:       actualDataNodes: ds_0.ts_order_0000,ds_0.ts_order_0001,ds_1.ts_order_0002,ds_1.ts_order_0003       databaseStrategy:         inline:           shardingColumn: id           algorithmExpression: ds_${new BigDecimal(id).abs().divideAndRemainder(4)[1].longValue().intdiv(2)}       tableStrategy:         inline:           shardingColumn: id           algorithmExpression: ts_order_${String.format("%04d",new BigDecimal(id).abs().divideAndRemainder(4)[1].longValue())}  props:   sql.show: true ```  ### Example codes for reproduce this issue (such as a github link). </body>
		<created>2019-04-11 13:33:18</created>
		<closed>2019-09-12 14:43:27</closed>
	</bug>
	<bug>
		<id>2159</id>
		<title>ShardingResultSet getTimestamp throw ClassCastException when using oracle database</title>
		<body>## Bug Report  ClassCastException is thrown when querying the timestamp type field of the Oracle database  ### Which version of ShardingSphere did you use?  4.0.0-RC1-SNAPSHOT  ### Which project did you use? Sharding-JDBC or Sharding-Proxy?  Sharding-JDBC  ### Expected behavior  query successfully  ### Actual behavior  ``` java.lang.ClassCastException: oracle.sql.TIMESTAMP cannot be cast to java.sql.Timestamp at org.apache.shardingsphere.shardingjdbc.jdbc.core.resultset.ShardingResultSet.getTimestamp(ShardingResultSet.java:223) at org.hibernate.type.descriptor.sql.TimestampTypeDescriptor$2.doExtract(TimestampTypeDescriptor.java:76) at org.hibernate.type.descriptor.sql.BasicExtractor.extract(BasicExtractor.java:47) at org.hibernate.type.AbstractStandardBasicType.nullSafeGet(AbstractStandardBasicType.java:238) at org.hibernate.type.AbstractStandardBasicType.nullSafeGet(AbstractStandardBasicType.java:234) at org.hibernate.type.AbstractStandardBasicType.nullSafeGet(AbstractStandardBasicType.java:224) at org.hibernate.type.AbstractStandardBasicType.hydrate(AbstractStandardBasicType.java:300) at org.hibernate.persister.entity.AbstractEntityPersister.hydrate(AbstractEntityPersister.java:2790) at org.hibernate.loader.Loader.loadFromResultSet(Loader.java:1729) at org.hibernate.loader.Loader.instanceNotYetLoaded(Loader.java:1655) at org.hibernate.loader.Loader.getRow(Loader.java:1544) at org.hibernate.loader.Loader.getRowFromResultSet(Loader.java:727) at org.hibernate.loader.Loader.processResultSet(Loader.java:972) at org.hibernate.loader.Loader.doQuery(Loader.java:930) at org.hibernate.loader.Loader.doQueryAndInitializeNonLazyCollections(Loader.java:336) at org.hibernate.loader.Loader.doList(Loader.java:2617) at org.hibernate.loader.Loader.doList(Loader.java:2600) at org.hibernate.loader.Loader.listIgnoreQueryCache(Loader.java:2429) at org.hibernate.loader.Loader.list(Loader.java:2424) at org.hibernate.loader.hql.QueryLoader.list(QueryLoader.java:501) at org.hibernate.hql.internal.ast.QueryTranslatorImpl.list(QueryTranslatorImpl.java:371) at org.hibernate.engine.query.spi.HQLQueryPlan.performList(HQLQueryPlan.java:216) at org.hibernate.internal.SessionImpl.list(SessionImpl.java:1326) at org.hibernate.internal.QueryImpl.list(QueryImpl.java:87) at org.hibernate.jpa.internal.QueryImpl.list(QueryImpl.java:606) at org.hibernate.jpa.internal.QueryImpl.getResultList(QueryImpl.java:483) at org.hibernate.jpa.criteria.compile.CriteriaQueryTypeQueryAdapter.getResultList(CriteriaQueryTypeQueryAdapter.java:50) at org.springframework.data.jpa.repository.support.SimpleJpaRepository.readPage(SimpleJpaRepository.java:589) at org.springframework.data.jpa.repository.support.SimpleJpaRepository.findAll(SimpleJpaRepository.java:409) at org.springframework.data.jpa.repository.support.SimpleJpaRepository.findAll(SimpleJpaRepository.java:377) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) ```  ### Reason analyze (If you can)  ShardingResultSet cached result as QueryRow which created by jdbc.getObject method. But ojdbc.getObject will return `oracle.sql.TIMESTAMP` instead of `java.sql.Timestamp`  ### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.  ojdbc version is 12.1.0.1 </body>
		<created>2019-04-04 05:44:23</created>
		<closed>2019-04-09 08:34:52</closed>
	</bug>
	<bug>
		<id>2153</id>
		<title>SQL `Show tables` are show when config huge mount of actual tables</title>
		<body>If user config huge mount of actual tables, sql `show tables` are very slow. The reason is program need loop all actual tables and find logic table. Just add a set to cache actual tables if program need to fetch them. </body>
		<created>2019-04-02 09:00:04</created>
		<closed>2019-04-02 09:00:45</closed>
	</bug>
	<bug>
		<id>2152</id>
		<title>MemoryQueryResult getColumnIndex throw exception when using Oracle database</title>
		<body>## Bug Report  when execute Oracle's DQL, getting the result throws an exception ``` java.lang.IndexOutOfBoundsException: Index: 0, Size: 0 at java.util.ArrayList.rangeCheck(ArrayList.java:657) at java.util.ArrayList.get(ArrayList.java:433) at org.apache.shardingsphere.core.execute.sql.execute.result.QueryResultMetaData.getColumnIndex(QueryResultMetaData.java:140) at org.apache.shardingsphere.core.execute.sql.execute.result.MemoryQueryResult.getValue(MemoryQueryResult.java:95) at org.apache.shardingsphere.core.merge.dql.common.StreamMergedResult.getValue(StreamMergedResult.java:56) at org.apache.shardingsphere.core.merge.dql.common.DecoratorMergedResult.getValue(DecoratorMergedResult.java:46) at org.apache.shardingsphere.shardingjdbc.jdbc.core.resultset.ShardingResultSet.getString(ShardingResultSet.java:141) at org.hibernate.type.descriptor.sql.VarcharTypeDescriptor$2.doExtract(VarcharTypeDescriptor.java:62) at org.hibernate.type.descriptor.sql.BasicExtractor.extract(BasicExtractor.java:47) at org.hibernate.type.AbstractStandardBasicType.nullSafeGet(AbstractStandardBasicType.java:261) at org.hibernate.type.AbstractStandardBasicType.nullSafeGet(AbstractStandardBasicType.java:257) at org.hibernate.type.AbstractStandardBasicType.nullSafeGet(AbstractStandardBasicType.java:247) at org.hibernate.type.AbstractStandardBasicType.hydrate(AbstractStandardBasicType.java:333) at org.hibernate.loader.Loader.extractKeysFromResultSet(Loader.java:794) at org.hibernate.loader.Loader.getRowFromResultSet(Loader.java:719) at org.hibernate.loader.Loader.processResultSet(Loader.java:991) at org.hibernate.loader.Loader.doQuery(Loader.java:949) at org.hibernate.loader.Loader.doQueryAndInitializeNonLazyCollections(Loader.java:341) at org.hibernate.loader.Loader.doList(Loader.java:2692) at org.hibernate.loader.Loader.doList(Loader.java:2675) at org.hibernate.loader.Loader.listIgnoreQueryCache(Loader.java:2507) at org.hibernate.loader.Loader.list(Loader.java:2502) at org.hibernate.loader.hql.QueryLoader.list(QueryLoader.java:502) at org.hibernate.hql.internal.ast.QueryTranslatorImpl.list(QueryTranslatorImpl.java:392) at org.hibernate.engine.query.spi.HQLQueryPlan.performList(HQLQueryPlan.java:216) at org.hibernate.internal.SessionImpl.list(SessionImpl.java:1490) at org.hibernate.query.internal.AbstractProducedQuery.doList(AbstractProducedQuery.java:1445) at org.hibernate.query.internal.AbstractProducedQuery.list(AbstractProducedQuery.java:1414) at org.hibernate.query.Query.getResultList(Query.java:146) at org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.getResultList(CriteriaQueryTypeQueryAdapter.java:72) at org.springframework.data.jpa.repository.support.SimpleJpaRepository.readPage(SimpleJpaRepository.java:570) at org.springframework.data.jpa.repository.support.SimpleJpaRepository.findAll(SimpleJpaRepository.java:389) at org.springframework.data.jpa.repository.support.SimpleJpaRepository.findAll(SimpleJpaRepository.java:357) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:377) at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:200) at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:641) at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185) at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.doInvoke(RepositoryFactorySupport.java:605) at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.invoke(RepositoryFactorySupport.java:590) at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185) at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:59) at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185) at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:294) at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98) at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185) at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139) at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185) at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:135) at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185) at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92) at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185) at org.springframework.data.repository.core.support.SurroundingTransactionDetectorMethodInterceptor.invoke(SurroundingTransactionDetectorMethodInterceptor.java:61) at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185) at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) at com.sun.proxy.$Proxy88.findAll(Unknown Source) at com.fudabd.oracletest.controller.TerminalController.listTerminal(TerminalController.java:83) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209) at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136) at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102) at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:891) at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797) at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991) at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925) at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:981) at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:873) at javax.servlet.http.HttpServlet.service(HttpServlet.java:635) at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:858) at javax.servlet.http.HttpServlet.service(HttpServlet.java:742) at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231) at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52) at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99) at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109) at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93) at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200) at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198) at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:493) at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140) at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81) at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87) at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342) at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:800) at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66) at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:806) at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1498) at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) at java.lang.Thread.run(Thread.java:748) ```  ### Which version of ShardingSphere did you use?  3.1.0 and 4.0.0-RC1-SNAPSHOT  ### Which project did you use? Sharding-JDBC or Sharding-Proxy?  Sharding-JDBC  ### Expected behavior  get results correctly  ### Actual behavior  throw exception `java.lang.IndexOutOfBoundsException: Index: 0, Size: 0`  ### Reason analyze (If you can)  MemoryQueryResult will get the table metadata when init, the columnLabel in oracle metadata is upper case.  But the input of `getColumnIndex` method is lower case so that can't find the index.  ### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.  1. clone example codes 2. change sharding-jdbc version to 3.1.0 or 4.0.0-RC1-SNAPSHOT 3. check configuration of jdbc at file `application-sharding-databases-oracle.properties` 4. run `OracleTestApplication` 5. visit http://localhost:8080/insertTest 6. visit http://localhost:8080/listTerminal  ### Example codes for reproduce this issue (such as a github link).  https://github.com/fdlzp/sharding-jdbc_jpa_oracle </body>
		<created>2019-04-02 08:44:48</created>
		<closed>2019-04-10 15:30:15</closed>
	</bug>
	<bug>
		<id>2142</id>
		<title>OpenTracingSQLExecutionHook.toStringList NullPointerException</title>
		<body>## Bug Report  **For English only**, other languages will not accept.  Before report a bug, make sure you have:  - Searched open and closed [GitHub issues](https://github.com/sharding-sphere/sharding-sphere/issues). - Read documentation: [ShardingSphere Doc](http://shardingsphere.io/document/current/en/overview/).  Please pay attention on issues you submitted, because we maybe need more details.  If no response **more than 7 days** and we cannot reproduce it on current information, we will **close it**.  Please answer these questions before submitting your issue. Thanks!  ### Which version of ShardingSphere did you use? 3.0.1 ### Which project did you use? Sharding-JDBC or Sharding-Proxy? Sharding-JDBC ### Expected behavior sharding-opentracing log trace without effect main execute ### Actual behavior log trace throw NullPointerException effect sql execute ### Reason analyze (If you can) OpenTracingSQLExecutionHook.toStringList method, when params has null, such as insert, call guava Joiner.toString throw NullPointerException  ### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc. As above ### Example codes for reproduce this issue (such as a github link). As above</body>
		<created>2019-04-01 04:19:06</created>
		<closed>2019-04-22 08:33:25</closed>
	</bug>
	<bug>
		<id>2136</id>
		<title>(mybatis + shardingjdbc ) multithreading paging query Incorrect result </title>
		<body>environment： spring boot + mybatis +  shatdingjdbc multithreading paging query,database exists enough data; thread1 logic SQL: select * from table_name limit 0,2; thread2 logic SQL: select * from table_name limit 2,2; .... sometimes thread1 or thread2 return result's size is 0 or less than 2, sometimes thread1 and thread2 return result exist repeated data. </body>
		<created>2019-03-29 10:49:37</created>
		<closed>2019-04-04 07:00:38</closed>
	</bug>
	<bug>
		<id>2130</id>
		<title>supported hibernate insert values ( )</title>
		<body>## Feature Request  **For English only**, other languages will not accept.  Please pay attention on issues you submitted, because we maybe need more details.  If no response **more than 7 days** and we cannot make decision by current information, we will **close it**.  Please answer these questions before submitting your issue. Thanks!  ### Is your feature request related to a problem? Yes,the hight version sharding-sphere  cannot support hibernate id generate greater than 1.4.2 like 3.1.0,will throw exception when insertparse sql like (insert table_name values ( )) values contains blank. ### Describe the feature you would like. I'll change ParsingSQLRouter's construtor or InsertValuesClauseParser's parseValues  for support this problem.</body>
		<created>2019-03-29 05:24:46</created>
		<closed>2019-04-12 14:45:06</closed>
	</bug>
	<bug>
		<id>2118</id>
		<title>Parse table name in select items</title>
		<body>Can parse table name or alias in select items, example:   ```sql SELECT tbl.* from tbl; ```  the table name `tbl` in select list should be parse and add to table token.  If sql is: ```sql SELECT b.* from tbl b; ```  the alias name `b` in select list should be parse but not add to table token.</body>
		<created>2019-03-27 17:24:49</created>
		<closed>2019-03-27 17:29:21</closed>
	</bug>
	<bug>
		<id>2103</id>
		<title>Using config center dynamic effectiveness has a bug with judging ShardingRule</title>
		<body>![image](https://user-images.githubusercontent.com/5526521/54986633-f8b58580-4fed-11e9-8b4e-f115090b3b5b.png)  I‘m using config center(zk). Then modify configurations on zk. Sharding-Jdbc will be pushed to the production environment and take effect immediately. But error. Because only judge contain with "tables:\n". But it's actually "tables:\r\n"</body>
		<created>2019-03-26 09:50:06</created>
		<closed>2019-03-27 15:54:58</closed>
	</bug>
	<bug>
		<id>2100</id>
		<title>Can't 'SHOW DATABASES' on Navicat 12 by Sharding-Proxy</title>
		<body>## Bug Report  **For English only**, other languages will not accept.  Before report a bug, make sure you have:  - Searched open and closed [GitHub issues](https://github.com/sharding-sphere/sharding-sphere/issues). - Read documentation: [ShardingSphere Doc](http://shardingsphere.io/document/current/en/overview/).  Please pay attention on issues you submitted, because we maybe need more details.  If no response **more than 7 days** and we cannot reproduce it on current information, we will **close it**.  Please answer these questions before submitting your issue. Thanks!  ### Which version of ShardingSphere did you use? 4.0.0-RC1-SNAPSHOT ### Which project did you use? Sharding-JDBC or Sharding-Proxy? Sharding-Proxy ### Expected behavior input:  SHOW DATABASES; output: Database sharding_db ### Actual behavior input:  SHOW DATABASES; output: (nothing output) ### Reason analyze (If you can) Miss parameter when return sql result packets. ### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc. Using Navicat12 to connect to Sharding-Proxy and execute SQL: SHOW DATABASES; ### Example codes for reproduce this issue (such as a github link). NA</body>
		<created>2019-03-26 09:08:31</created>
		<closed>2019-03-26 11:23:17</closed>
	</bug>
	<bug>
		<id>2081</id>
		<title>EncryptDatasource does not support sql which is not DML</title>
		<body>## Bug Report  **For English only**, other languages will not accept.  Before report a bug, make sure you have:  - Searched open and closed [GitHub issues](https://github.com/sharding-sphere/sharding-sphere/issues). - Read documentation: [ShardingSphere Doc](http://shardingsphere.io/document/current/en/overview/).  Please pay attention on issues you submitted, because we maybe need more details.  If no response **more than 7 days** and we cannot reproduce it on current information, we will **close it**.  Please answer these questions before submitting your issue. Thanks!  ### Which version of ShardingSphere did you use? 4.0.0-RC1-SNAPSHOT  ### Which project did you use? Sharding-JDBC or Sharding-Proxy? Sharding-JDBC  ### Expected behavior execute sql which is not DML ### Actual behavior throw Exception, Message is "Unsupported SQL of ${SQL}" ### Reason analyze (If you can) current just fill DML statement to  DMLStatement, the other sql does not fill，design a new class for the sql which is not DML. do not execute filler logic.  ### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc. use EncryptDatasource execute a DDL statement: "CREATE TABLE t_test (id int primary key auto_increment, pwd varchar(100), pwd_assist varchar(100));"  ### Example codes for reproduce this issue (such as a github link). </body>
		<created>2019-03-25 07:37:12</created>
		<closed>2019-03-29 08:20:15</closed>
	</bug>
	<bug>
		<id>2077</id>
		<title>Saga transaction revert SQL error when keyGenerator is a union primary key</title>
		<body>## Bug Report  When the ShardingSphere keyGenerator is part of table union primary key, Saga revert `INSERT` SQL will miss non-generated primary key parameters.  ### Which version of ShardingSphere did you use?  4.0.0-RC1-SNAPSHOT  ### Which project did you use? Sharding-JDBC or Sharding-Proxy?  Sharding-JDBC  ### Expected behavior  Revert SQL successfully.  ### Actual behavior  ``` [ERROR] 2019-03-25 10:47:11,620 --main-- [org.apache.servicecomb.saga.core.FallbackPolicy] Failed to send compensation to demo_ds_1  org.apache.servicecomb.saga.core.TransportFailedException: Execute SQL `SagaBranchTransaction(dataSourceName=demo_ds_1, sql=DELETE FROM t_order_1 WHERE order_id = ? AND user_id = ?, parameterSets=[[316889452515426305]])` occur exception. at io.shardingsphere.transaction.saga.servicecomb.transport.ShardingSQLTransport.executeSQL(ShardingSQLTransport.java:90) at io.shardingsphere.transaction.saga.servicecomb.transport.ShardingSQLTransport.with(ShardingSQLTransport.java:58) at org.apache.servicecomb.saga.format.JacksonSQLOperation.send(JacksonSQLOperation.java:47) at org.apache.servicecomb.saga.core.FallbackPolicy.apply(FallbackPolicy.java:36) at org.apache.servicecomb.saga.core.RequestProcessTask.compensate(RequestProcessTask.java:58) at org.apache.servicecomb.saga.core.CompensationTaskConsumer.consume(CompensationTaskConsumer.java:47) at org.apache.servicecomb.saga.core.TaskRunner.run(TaskRunner.java:57) at org.apache.servicecomb.saga.core.GraphBasedSaga.run(GraphBasedSaga.java:89) at org.apache.servicecomb.saga.core.application.SagaExecutionComponent.run(SagaExecutionComponent.java:63) at io.shardingsphere.transaction.saga.SagaShardingTransactionManager.submitToSagaEngine(SagaShardingTransactionManager.java:130) at io.shardingsphere.transaction.saga.SagaShardingTransactionManager.rollback(SagaShardingTransactionManager.java:115) at org.apache.shardingsphere.shardingjdbc.jdbc.adapter.AbstractConnectionAdapter.rollback(AbstractConnectionAdapter.java:237) at org.springframework.jdbc.datasource.DataSourceTransactionManager.doRollback(DataSourceTransactionManager.java:328) at org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:857) at org.springframework.transaction.support.AbstractPlatformTransactionManager.rollback(AbstractPlatformTransactionManager.java:834) at org.springframework.transaction.interceptor.TransactionAspectSupport.completeTransactionAfterThrowing(TransactionAspectSupport.java:536) at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:286) at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96) at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179) at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56) at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:168) at org.springframework.aop.aspectj.AspectJAfterAdvice.invoke(AspectJAfterAdvice.java:47) at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:168) at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92) at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179) at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:671) at io.shardingsphere.example.transaction.saga.spring.namespace.SagaTransactionalService$$EnhancerBySpringCGLIB$$a3ffce67.processFailure(&lt;generated&gt;) at io.shardingsphere.example.transaction.saga.spring.namespace.SpringNamespaceExample.processSagaTransaction(SpringNamespaceExample.java:39) at io.shardingsphere.example.transaction.saga.spring.namespace.SpringNamespaceExample.main(SpringNamespaceExample.java:30) Caused by: java.sql.SQLException: No value specified for parameter 2 at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:964) at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:897) at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:886) at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:860) at com.mysql.jdbc.PreparedStatement.checkAllParametersSet(PreparedStatement.java:2211) at com.mysql.jdbc.PreparedStatement.addBatch(PreparedStatement.java:898) at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.addBatch(HikariProxyPreparedStatement.java) at io.shardingsphere.transaction.saga.servicecomb.transport.ShardingSQLTransport.executeBatch(ShardingSQLTransport.java:112) at io.shardingsphere.transaction.saga.servicecomb.transport.ShardingSQLTransport.executeSQL(ShardingSQLTransport.java:87) ... 28 common frames omitted ```  ### Reason analyze (If you can)  RevertInsert operator use primary keys of `TableMetaData` to generate revert SQL, but only add parameter of keyGenerator so that the number of parameter is inconsistent. And the revertEngine has no information about the keyGenerator, including keyGenerator columnName and value, So it can't distinguish which key column is keyGenerator.  ### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.  sharding rule configuration: ``` &lt;?xml version="1.0" encoding="UTF-8"?&gt; &lt;beans xmlns="http://www.springframework.org/schema/beans"     xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"     xmlns:context="http://www.springframework.org/schema/context"      xmlns:tx="http://www.springframework.org/schema/tx"      xmlns:sharding="http://shardingsphere.apache.org/schema/shardingsphere/sharding"     xsi:schemaLocation="http://www.springframework.org/schema/beans                         http://www.springframework.org/schema/beans/spring-beans.xsd                          http://www.springframework.org/schema/tx                          http://www.springframework.org/schema/tx/spring-tx.xsd                         http://www.springframework.org/schema/context                          http://www.springframework.org/schema/context/spring-context.xsd                         http://shardingsphere.apache.org/schema/shardingsphere/sharding                         http://shardingsphere.apache.org/schema/shardingsphere/sharding/sharding.xsd"&gt;      &lt;import resource="classpath:META-INF/shardingTransaction.xml"/&gt;      &lt;context:component-scan base-package="io.shardingsphere.example" /&gt;          &lt;bean id="demo_ds_0" class="com.zaxxer.hikari.HikariDataSource" destroy-method="close"&gt;         &lt;property name="driverClassName" value="com.mysql.jdbc.Driver"/&gt;         &lt;property name="jdbcUrl" value="jdbc:mysql://localhost:3306/demo_ds_0?useSSL=false"/&gt;         &lt;property name="username" value="root"/&gt;         &lt;property name="password" value=""/&gt;     &lt;/bean&gt;          &lt;bean id="demo_ds_1" class="com.zaxxer.hikari.HikariDataSource" destroy-method="close"&gt;         &lt;property name="driverClassName" value="com.mysql.jdbc.Driver"/&gt;         &lt;property name="jdbcUrl" value="jdbc:mysql://localhost:3306/demo_ds_1?useSSL=false"/&gt;         &lt;property name="username" value="root"/&gt;         &lt;property name="password" value=""/&gt;     &lt;/bean&gt;          &lt;sharding:inline-strategy id="databaseStrategy" sharding-column="user_id" algorithm-expression="demo_ds_${user_id % 2}" /&gt;     &lt;sharding:inline-strategy id="orderTableStrategy" sharding-column="order_id" algorithm-expression="t_order_${order_id % 2}" /&gt;     &lt;sharding:inline-strategy id="orderItemTableStrategy" sharding-column="order_id" algorithm-expression="t_order_item_${order_id % 2}" /&gt;          &lt;sharding:key-generator id="orderKeyGenerator" type="SNOWFLAKE" column="order_id" /&gt;     &lt;sharding:key-generator id="itemKeyGenerator" type="SNOWFLAKE" column="order_item_id" /&gt;          &lt;sharding:data-source id="shardingDataSource"&gt;         &lt;sharding:sharding-rule data-source-names="demo_ds_0, demo_ds_1"&gt;             &lt;sharding:table-rules&gt;                 &lt;sharding:table-rule logic-table="t_order" actual-data-nodes="demo_ds_${0..1}.t_order_${0..1}" database-strategy-ref="databaseStrategy" table-strategy-ref="orderTableStrategy" key-generator-ref="orderKeyGenerator" /&gt;                 &lt;sharding:table-rule logic-table="t_order_item" actual-data-nodes="demo_ds_${0..1}.t_order_item_${0..1}" database-strategy-ref="databaseStrategy" table-strategy-ref="orderItemTableStrategy" key-generator-ref="itemKeyGenerator" /&gt;             &lt;/sharding:table-rules&gt;         &lt;/sharding:sharding-rule&gt;         &lt;sharding:props&gt;             &lt;prop key="sql.show"&gt;false&lt;/prop&gt;         &lt;/sharding:props&gt;     &lt;/sharding:data-source&gt;          &lt;bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager"&gt;         &lt;property name="dataSource" ref="shardingDataSource" /&gt;     &lt;/bean&gt;     &lt;tx:annotation-driven /&gt;          &lt;bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean"&gt;         &lt;property name="dataSource" ref="shardingDataSource"/&gt;         &lt;property name="mapperLocations" value="classpath*:META-INF/mappers/*.xml"/&gt;     &lt;/bean&gt;          &lt;bean class="org.mybatis.spring.mapper.MapperScannerConfigurer"&gt;         &lt;property name="basePackage" value="io.shardingsphere.example.common.mybatis.repository"/&gt;         &lt;property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/&gt;     &lt;/bean&gt; &lt;/beans&gt; ```  SQLs: ```     &lt;update id="createTableIfNotExists"&gt;         CREATE TABLE IF NOT EXISTS t_order (order_id BIGINT AUTO_INCREMENT, user_id INT NOT NULL, status VARCHAR(50), PRIMARY KEY (order_id, user_id));     &lt;/update&gt;      &lt;insert id="insert" useGeneratedKeys="true" keyProperty="orderId"&gt;         INSERT INTO t_order (user_id, status) VALUES (#{userId,jdbcType=INTEGER}, #{status,jdbcType=VARCHAR});     &lt;/insert&gt; ```  ### Example codes for reproduce this issue (such as a github link).  https://github.com/KomachiSion/sharding-sphere-example/tree/revert-insert-error  ``` sharding-sphere-example/sharding-jdbc-example/transaction-example/transaction-base-saga-example/transaction-saga-spring-namespace-example/src/main/java/io/shardingsphere/example/transaction/saga/spring/namespace/SpringNamespaceExample.java ``` </body>
		<created>2019-03-25 02:57:02</created>
		<closed>2019-06-04 03:17:11</closed>
	</bug>
	<bug>
		<id>2072</id>
		<title>the link in CONTRIBUTING.md can not access</title>
		<body>The link in CONTRIBUTING.md can not access. [Core developers list](https://github.com/apache/incubator-shardingsphere/blob/dev/en/organization)      and  [Development conventions](https://github.com/apache/incubator-shardingsphere/blob/dev/en/contribute/convention) can not access,please check!</body>
		<created>2019-03-22 12:26:50</created>
		<closed>2019-03-22 15:46:40</closed>
	</bug>
	<bug>
		<id>2062</id>
		<title>Wrong LIMIT rewrite while GROUP BY and ORDER BY on different items</title>
		<body>## Bug Report  **For English only**, other languages will not accept.  Before report a bug, make sure you have:  - Searched open and closed [GitHub issues](https://github.com/sharding-sphere/sharding-sphere/issues). - Read documentation: [ShardingSphere Doc](http://shardingsphere.io/document/current/en/overview/).  Please pay attention on issues you submitted, because we maybe need more details.  If no response **more than 7 days** and we cannot reproduce it on current information, we will **close it**.  Please answer these questions before submitting your issue. Thanks!  ### Which version of ShardingSphere did you use? 3.1.0 ### Which project did you use? Sharding-JDBC or Sharding-Proxy? Sharding-JDBC  ### Expected behavior limit 0, 10 ### Actual behavior ```  SQL: select max(sid) as sid, max(sendTime) as sendTime, objectId, sum(0) as unreadCount from TEST where memberId = ? and status != -1 group by objectId order by sendTime desc limit ?, ? SQL-BindValue: 52146792, 0, 2147483647 ``` ### Reason analyze (If you can) logic error：  io.shardingsphere.core.routing.router.sharding.ParsingSQLRouter#processLimit ![image](https://user-images.githubusercontent.com/1615053/54658329-dca27780-4b07-11e9-9b5d-922d43c78caf.png)  ### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc. Run it with PreparedStatement: ``` select max(sid) as sid, max(sendTime) as sendTime, objectId, sum(0) as unreadCount from TEST where memberId = ? and status != -1 group by objectId order by sendTime desc limit ?, ? ``` ### Example codes for reproduce this issue (such as a github link).</body>
		<created>2019-03-20 05:43:48</created>
		<closed>2019-03-26 10:13:59</closed>
	</bug>
	<bug>
		<id>2061</id>
		<title>proxy can't support multiple transaction</title>
		<body>## Bug Report  **For English only**, other languages will not accept.  Before report a bug, make sure you have:  - Searched open and closed [GitHub issues](https://github.com/sharding-sphere/sharding-sphere/issues). - Read documentation: [ShardingSphere Doc](http://shardingsphere.io/document/current/en/overview/).  Please pay attention on issues you submitted, because we maybe need more details.  If no response **more than 7 days** and we cannot reproduce it on current information, we will **close it**.  Please answer these questions before submitting your issue. Thanks!  ### Which version of ShardingSphere did you use? 3.1.0 ### Which project did you use? Sharding-JDBC or Sharding-Proxy? Sharding-Proxy ### Expected behavior ``` Connection con = getConnection1(); con.setAutoCommit(false); Statement statement = con.createStatement(); String orderNo = System.currentTimeMillis() + "A"; String sql = "insert into t_order(order_no,merc_no,merch_order_no,tx_dt,tx_tm,tx_amt) values('" + orderNo + "', 'B123456789012345', '" + orderNo + "', '20181117', '161411', '123.33')"; statement.executeUpdate(sql); con.rollback();  orderNo = System.currentTimeMillis() + "B"; sql = "insert into t_order(order_no,merc_no,merch_order_no,tx_dt,tx_tm,tx_amt) values('" + orderNo + "', 'B123456789012345', '" + orderNo + "', '20181117', '161411', '123.33')"; statement.executeUpdate(sql);   orderNo = System.currentTimeMillis() + "C"; sql = "insert into t_order(order_no,merc_no,merch_order_no,tx_dt,tx_tm,tx_amt) values('" + orderNo + "', 'B123456789012345', '" + orderNo + "', '20181117', '161411', '123.33')"; statement.executeUpdate(sql); con.commit();  ResultSet rs = statement.executeQuery("select * from t_order where order_no ='" + orderNo + "'"); while( rs.next() ) { System.out.println("order_no:" + rs.getString("order_no")); } //con.commit(); //sql = "insert into t_order(order_no,merc_no,merch_order_no,tx_dt,tx_tm,tx_amt) values('526431086763446276', 'B123456789012345', '526431083269591046', '20181117', '161411', '123.33')"; //statement.executeUpdate(sql); con.rollback();  con.close(); ``` ### Actual behavior ``` ACTIONS: You can try one of the following:  1. Make sure you started a transaction for the thread. 2. Make sure you didn't terminate it yet. 3. Increase the transaction timeout to avoid automatic rollback of long transactions;    check http://www.atomikos.com/Documentation/JtaProperties for how to do this. at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1078) at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4237) at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4169) at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2617) at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2778) at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2819) at com.mysql.jdbc.ConnectionImpl.commit(ConnectionImpl.java:1739) at com.alibaba.druid.pool.DruidPooledConnection.commit(DruidPooledConnection.java:752) at TestMySql.main(TestMySql.java:32) ``` ### Reason analyze (If you can)  ### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.  ### Example codes for reproduce this issue (such as a github link). </body>
		<created>2019-03-20 02:32:18</created>
		<closed>2019-03-27 03:41:24</closed>
	</bug>
	<bug>
		<id>2055</id>
		<title>Do not support sum(if()) expression</title>
		<body>## Bug Report  **For English only**, other languages will not accept.  Before report a bug, make sure you have:  - Searched open and closed [GitHub issues](https://github.com/sharding-sphere/sharding-sphere/issues). - Read documentation: [ShardingSphere Doc](http://shardingsphere.io/document/current/en/overview/).  Please pay attention on issues you submitted, because we maybe need more details.  If no response **more than 7 days** and we cannot reproduce it on current information, we will **close it**.  Please answer these questions before submitting your issue. Thanks!  ### Which version of ShardingSphere did you use? 3.1.0 ### Which project did you use? Sharding-JDBC or Sharding-Proxy? Sharding-JDBC ### Expected behavior support ### Actual behavior do not ### Reason analyze (If you can) sql parsing error ### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc. 1. ```select sum(if(status=0, 1, 0)) from xx group by xx;``` 2. Table 'xx.xx' doesn't exist ### Example codes for reproduce this issue (such as a github link).</body>
		<created>2019-03-19 06:19:07</created>
		<closed>2019-03-28 08:24:28</closed>
	</bug>
	<bug>
		<id>2052</id>
		<title>sharding-jdbc-spring-namespace 4.0.0-RC1 namespcae configuration</title>
		<body>**## because concurrent problem in on-line environment, so i downloaded 4.0.0-RC1 version and package it .But i'm getting in trouble when startup. This is my namespace configuration, but when startup,the error below occured, like this**  `&lt;beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"        xmlns:sharding="http://shardingsphere.apache.org/schema/shardingsphere/sharding" xsi:schemaLocation="         http://www.springframework.org/schema/beans         http://www.springframework.org/schema/beans/spring-beans.xsd         http://shardingsphere.apache.org/schema/shardingsphere/sharding         http://shardingsphere.apache.org/schema/shardingsphere/sharding/sharding.xsd"&gt;`   `Caused by: org.xml.sax.SAXParseException: TargetNamespace.1: 应为名称空间 'http://shardingsphere.apache.org/schema/shardingsphere/sharding', 但方案文档的目标名称空间为 'http://shardingsphere.io/schema/shardingsphere/sharding'。`  I guess the problem is  `http://shardingsphere.apache.org/schema/shardingsphere/sharding/sharding.xsd` but targetNameSpace in this xsd file is `&lt;xsd:schema xmlns="http://shardingsphere.io/schema/shardingsphere/sharding"             xmlns:xsd="http://www.w3.org/2001/XMLSchema"             xmlns:beans="http://www.springframework.org/schema/beans"             targetNamespace="http://shardingsphere.io/schema/shardingsphere/sharding"`   </body>
		<created>2019-03-18 12:33:35</created>
		<closed>2019-03-27 06:49:19</closed>
	</bug>
	<bug>
		<id>2047</id>
		<title>mysql parse can not parse cast function</title>
		<body>## Bug Report  **For English only**, other languages will not accept.  Before report a bug, make sure you have:  - Searched open and closed [GitHub issues](https://github.com/sharding-sphere/sharding-sphere/issues). - Read documentation: [ShardingSphere Doc](http://shardingsphere.io/document/current/en/overview/).  Please pay attention on issues you submitted, because we maybe need more details.  If no response **more than 7 days** and we cannot reproduce it on current information, we will **close it**.  Please answer these questions before submitting your issue. Thanks!  ### Which version of ShardingSphere did you use? 4.0.0-RC1-SNAPSHOT ### Which project did you use? Sharding-JDBC or Sharding-Proxy? Sharding-Proxy ### Expected behavior Execute this SQL routing correctly select cast(order_id as varchar) from t_order ### Actual behavior routing to random datasource ### Reason analyze (If you can) anltr mysql not support cast function ### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc. select cast(order_id as varchar) from t_order ### Example codes for reproduce this issue (such as a github link). </body>
		<created>2019-03-18 04:03:27</created>
		<closed>2019-03-28 08:26:02</closed>
	</bug>
	<bug>
		<id>2040</id>
		<title>'SHOW COLUMNS' in multiple-schema mode leads to a error response</title>
		<body>## Bug Report  **For English only**, other languages will not accept.  Before report a bug, make sure you have:  - Searched open and closed [GitHub issues](https://github.com/sharding-sphere/sharding-sphere/issues). - Read documentation: [ShardingSphere Doc](http://shardingsphere.io/document/current/en/overview/).  Please pay attention on issues you submitted, because we maybe need more details.  If no response **more than 7 days** and we cannot reproduce it on current information, we will **close it**.  Please answer these questions before submitting your issue. Thanks!  ### Which version of ShardingSphere did you use? 4.0.0-RC1-SNAPSHOT ### Which project did you use? Sharding-JDBC or Sharding-Proxy? Sharding-Proxy ### Expected behavior Execute this SQL correctly: SHOW COLUMNS FROM `master_slave_db`.`t_order_0` ### Actual behavior Got from sharding-proxy: Table 'demo_ds_0.demo_ds_0' doesn't exist ### Reason analyze (If you can) rewrite logic ### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc. 1. multiple-schema mode of sharding-proxy 2. master-slave rule ### Example codes for reproduce this issue (such as a github link). </body>
		<created>2019-03-15 08:40:24</created>
		<closed>2019-06-25 02:35:55</closed>
	</bug>
	<bug>
		<id>2036</id>
		<title>COUNT( 1 ) Spaces ERROR</title>
		<body>The mybatis plus generated statement has Spaces: IService.count()  Example: SELECT COUNT( 1 ) FROM table;  Execution error:  Caused by: java.lang.IllegalStateException: Can't find index: AggregationSelectItem(type=COUNT, innerExpression=( 1 ), alias=Optional.absent(), derivedAggregationSelectItems=[], index=-1), please add alias for aggregate selections at com.google.common.base.Preconditions.checkState(Preconditions.java:507) at io.shardingsphere.core.parsing.parser.sql.dql.select.SelectStatement.setIndexForAggregationItem(SelectStatement.java:186) at io.shardingsphere.core.parsing.parser.sql.dql.select.SelectStatement.setIndexForItems(SelectStatement.java:179) at io.shardingsphere.core.merger.dql.DQLMergeEngine.merge(DQLMergeEngine.java:69) at ### **io.shardingsphere.shardingjdbc.jdbc.core.statement.ShardingPreparedStatement.getResultSet(ShardingPreparedStatement.java:185)** at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:69) at com.sun.proxy.$Proxy108.getResultSet(Unknown Source) at org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getFirstResultSet(DefaultResultSetHandler.java:237) at org.apache.ibatis.executor.resultset.DefaultResultSetHandler.handleResultSets(DefaultResultSetHandler.java:187) at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:65) at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63) at com.sun.proxy.$Proxy106.query(Unknown Source) at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63) at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324) at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156) at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109) at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83) at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148) ... 45 more  I think the SQL was executed, but could not be parsed when the result set was fetched for a merge.  sharding-jdcb version: 3.0.0, 3.0.0.M3, 3.1.0 mybatis-plus version: 3.0.7.1 </body>
		<created>2019-03-15 03:50:45</created>
		<closed>2019-03-28 08:27:55</closed>
	</bug>
	<bug>
		<id>2034</id>
		<title>if has space in select field will not use sharding rule. </title>
		<body>like:   select a.  id  from table where payDate = 20190101;   it will not use rule. and get nothing notice.    </body>
		<created>2019-03-14 14:38:47</created>
		<closed>2019-03-28 08:28:17</closed>
	</bug>
	<bug>
		<id>2007</id>
		<title>The field contains single quotation marks. It is written by proxy and will report an error.</title>
		<body> ## Bug Report  ### Test  Topology (1) python driver ------&gt; proxy ------&gt; mysql (2) python driver ------&gt; mysql  ### row info: rows =  ((datetime.datetime(2019, 3, 11, 14, 6, 11), datetime.datetime(2019, 3, 11, 14, 6, 11), 1, u"abc'"),)   ### insert statement sql = """ insert into tbl_key_test (data_create_time,data_update_time,id,key_name_partial) values  (%s, %s, %s, %s ) """  ### Test1 python driver ------&gt; proxy ------&gt; mysql ##### connect to  proxy conn_d = get_mysql_connection('10.10.5.xxx:3306', 'test') cur_d = conn_d.cursor() cur_d.executemany(sql , rows) error info: Traceback (most recent call last):   File "&lt;stdin&gt;", line 1, in &lt;module&gt;   File "/usr/local/lib/python2.7/site-packages/pymysql/cursors.py", line 169, in executemany     self.rowcount = sum(self.execute(query, arg) for arg in args)   File "/usr/local/lib/python2.7/site-packages/pymysql/cursors.py", line 169, in &lt;genexpr&gt;     self.rowcount = sum(self.execute(query, arg) for arg in args)   File "/usr/local/lib/python2.7/site-packages/pymysql/cursors.py", line 146, in execute     result = self._query(query)   File "/usr/local/lib/python2.7/site-packages/pymysql/cursors.py", line 296, in _query     conn.query(q)   File "/usr/local/lib/python2.7/site-packages/pymysql/connections.py", line 781, in query     self._affected_rows = self._read_query_result(unbuffered=unbuffered)   File "/usr/local/lib/python2.7/site-packages/pymysql/connections.py", line 942, in _read_query_result     result.read()   File "/usr/local/lib/python2.7/site-packages/pymysql/connections.py", line 1138, in read     first_packet = self.connection._read_packet()   File "/usr/local/lib/python2.7/site-packages/pymysql/connections.py", line 906, in _read_packet     packet.check_error()   File "/usr/local/lib/python2.7/site-packages/pymysql/connections.py", line 367, in check_error     err.raise_mysql_exception(self._data)   File "/usr/local/lib/python2.7/site-packages/pymysql/err.py", line 120, in raise_mysql_exception     _check_mysql_exception(errinfo)   File "/usr/local/lib/python2.7/site-packages/pymysql/err.py", line 115, in _check_mysql_exception     raise InternalError(errno, errorvalue) pymysql.err.InternalError: (3054, u"Unknown exception: Illegal input, unterminated '''.")   ### Test2 python driver ------&gt; mysql ##### connect to mysql conn_d = get_mysql_connection('10.10.4.xxx:3307', 'test') cur_d = conn_d.cursor() cur_d.executemany(sql , rows) conn_d.commit()  insert sucessfully</body>
		<created>2019-03-11 07:00:37</created>
		<closed>2019-03-28 04:37:07</closed>
	</bug>
	<bug>
		<id>1990</id>
		<title>sharding-jdbc can't work in multi thread  concurrent </title>
		<body>## Bug Report  **For English only**, other languages will not accept.  Before report a bug, make sure you have:  - Searched open and closed [GitHub issues](https://github.com/sharding-sphere/sharding-sphere/issues). - Read documentation: [ShardingSphere Doc](http://shardingsphere.io/document/current/en/overview/).  Please pay attention on issues you submitted, because we maybe need more details.  If no response **more than 7 days** and we cannot reproduce it on current information, we will **close it**.  Please answer these questions before submitting your issue. Thanks!  ### Which version of ShardingSphere did you use? 4.0.0.M1 ### Which project did you use? Sharding-JDBC or Sharding-Proxy? Sharding-JDBC ### Expected behavior  ### Actual behavior multi thread  concurrent  can't work  ### Reason analyze (If you can) InsertStatement(other Statement no validation) is not thread safe, PreparedStatementRoutingEngine#route fetch Statement used cache  ![image](https://user-images.githubusercontent.com/42688346/53943341-d8359200-40f7-11e9-90d9-623ee854a68e.png)  ### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc. ![image](https://user-images.githubusercontent.com/42688346/53943248-aa504d80-40f7-11e9-9d4f-106d44987c0d.png)  ### Example codes for reproduce this issue (such as a github link). </body>
		<created>2019-03-07 08:42:12</created>
		<closed>2019-03-12 06:32:15</closed>
	</bug>
	<bug>
		<id>1985</id>
		<title>Exception fired during concurrently query</title>
		<body>## Bug Report  **For English only**, other languages will not accept.  Before report a bug, make sure you have:  - Searched open and closed [GitHub issues](https://github.com/sharding-sphere/sharding-sphere/issues). - Read documentation: [ShardingSphere Doc](http://shardingsphere.io/document/current/en/overview/).  Please pay attention on issues you submitted, because we maybe need more details.  If no response **more than 7 days** and we cannot reproduce it on current information, we will **close it**.  Please answer these questions before submitting your issue. Thanks!  ### Which version of ShardingSphere did you use? 4.0.0-M1 ### Which project did you use? Sharding-JDBC or Sharding-Proxy? Sharding-Proxy ### Expected behavior Execute query correctly. ### Actual behavior  Exception 1: java.lang.NullPointerException: null         at com.mysql.jdbc.ResultSetImpl.checkColumnBounds(ResultSetImpl.java:766)         at com.mysql.jdbc.ResultSetImpl.getObject(ResultSetImpl.java:4420)         at com.zaxxer.hikari.pool.HikariProxyResultSet.getObject(HikariProxyResultSet.java)         at org.apache.shardingsphere.core.executor.sql.execute.result.StreamQueryResult.getValue(StreamQueryResult.java:75)         at org.apache.shardingsphere.core.merger.dql.common.StreamMergedResult.getValue(StreamMergedResult.java:49)         at org.apache.shardingsphere.shardingproxy.backend.communication.jdbc.JDBCDatabaseCommunicationEngine.getQueryData(JDBCDatabaseCommunicationEngine.java:149)         at org.apache.shardingsphere.shardingproxy.transport.mysql.packet.command.query.binary.execute.MySQLQueryComStmtExecutePacketExecutor.getQueryData(MySQLQueryComStmtExecutePacketExecutor.java:1 13)         at org.apache.shardingsphere.shardingproxy.transport.mysql.packet.command.query.binary.execute.MySQLQueryComStmtExecutePacketExecutor.getQueryData(MySQLQueryComStmtExecutePacketExecutor.java:5 3)         at org.apache.shardingsphere.shardingproxy.frontend.mysql.MySQLFrontendEngine.writeMoreResults(MySQLFrontendEngine.java:152)         at org.apache.shardingsphere.shardingproxy.frontend.mysql.MySQLFrontendEngine.writePackets(MySQLFrontendEngine.java:133)         at org.apache.shardingsphere.shardingproxy.frontend.mysql.MySQLFrontendEngine.executeCommand(MySQLFrontendEngine.java:108)         at org.apache.shardingsphere.shardingproxy.frontend.common.netty.FrontendChannelInboundHandler$1.run(FrontendChannelInboundHandler.java:70)         at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)         at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)         at java.lang.Thread.run(Thread.java:748)           Exception 2: java.sql.SQLException: Operation not allowed after ResultSet closed         at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:965)         at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:898)         at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:887)         at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:861)         at com.mysql.jdbc.ResultSetImpl.checkClosed(ResultSetImpl.java:743)         at com.mysql.jdbc.ResultSetImpl.next(ResultSetImpl.java:6289)         at com.zaxxer.hikari.pool.HikariProxyResultSet.next(HikariProxyResultSet.java)         at org.apache.shardingsphere.core.executor.sql.execute.result.StreamQueryResult.next(StreamQueryResult.java:68)         at org.apache.shardingsphere.core.merger.dql.iterator.IteratorStreamMergedResult.next(IteratorStreamMergedResult.java:43)         at org.apache.shardingsphere.shardingproxy.backend.communication.jdbc.JDBCDatabaseCommunicationEngine.next(JDBCDatabaseCommunicationEngine.java:141)         at org.apache.shardingsphere.shardingproxy.transport.mysql.packet.command.query.binary.execute.MySQLQueryComStmtExecutePacketExecutor.next(MySQLQueryComStmtExecutePacketExecutor.java:108)         at org.apache.shardingsphere.shardingproxy.frontend.mysql.MySQLFrontendEngine.writeMoreResults(MySQLFrontendEngine.java:147)         at org.apache.shardingsphere.shardingproxy.frontend.mysql.MySQLFrontendEngine.writePackets(MySQLFrontendEngine.java:134)         at org.apache.shardingsphere.shardingproxy.frontend.mysql.MySQLFrontendEngine.executeCommand(MySQLFrontendEngine.java:108)         at org.apache.shardingsphere.shardingproxy.frontend.common.netty.FrontendChannelInboundHandler$1.run(FrontendChannelInboundHandler.java:70)         at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)         at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)         at java.lang.Thread.run(Thread.java:748)             Exception 3: [ERROR] 18:30:44.867 [ShardingSphere-Command-20] o.a.s.s.f.c.n.FrontendChannelInboundHandler - Exception occur: java.sql.SQLException: null         at org.apache.shardingsphere.shardingproxy.backend.communication.jdbc.connection.BackendConnection.throwSQLExceptionIfNecessary(BackendConnection.java:296)         at org.apache.shardingsphere.shardingproxy.backend.communication.jdbc.connection.BackendConnection.close(BackendConnection.java:246)         at org.apache.shardingsphere.shardingproxy.backend.communication.jdbc.connection.BackendConnection.close(BackendConnection.java:228)         at org.apache.shardingsphere.shardingproxy.frontend.common.netty.FrontendChannelInboundHandler$1.run(FrontendChannelInboundHandler.java:73)         at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)         at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)         at java.lang.Thread.run(Thread.java:748)  ### Reason analyze (If you can) MySQL connection closed during query. Defect of BackendConnection status management. ### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc. 200 connections concurrently execute SQLs. ### Example codes for reproduce this issue (such as a github link). </body>
		<created>2019-03-07 04:21:33</created>
		<closed>2019-03-07 07:15:39</closed>
	</bug>
	<bug>
		<id>1971</id>
		<title>DefaultDataSource config not useful </title>
		<body>## Bug Report  **For English only**, other languages will not accept.  Before report a bug, make sure you have:  - Searched open and closed [GitHub issues](https://github.com/sharding-sphere/sharding-sphere/issues). - Read documentation: [ShardingSphere Doc](http://shardingsphere.io/document/current/en/overview/).  Please pay attention on issues you submitted, because we maybe need more details.  If no response **more than 7 days** and we cannot reproduce it on current information, we will **close it**.  Please answer these questions before submitting your issue. Thanks!  ### Which version of ShardingSphere did you use? 3.1.0 ### Which project did you use? Sharding-JDBC or Sharding-Proxy? Sharding-JDBC  ### Expected behavior no config rule table use default datasource ### Actual behavior always first datasource used ### Reason analyze (If you can)  ### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc. ![image](https://user-images.githubusercontent.com/42688346/53799664-dcd23d00-3f75-11e9-9652-30b68e887891.png)  ### Example codes for reproduce this issue (such as a github link). </body>
		<created>2019-03-05 10:38:31</created>
		<closed>2019-03-14 04:36:53</closed>
	</bug>
	<bug>
		<id>1967</id>
		<title>Shard table name error when exec select sql in multi thread concurrent</title>
		<body>### Which version of ShardingSphere did you use? it happened in version3.1.0,  I tested 3.00 &amp;&amp; 3.1.0M1, it's ok  ### Which project did you use? Sharding-JDBC or Sharding-Proxy? Sharding-JDBC  ### Expected behavior for example my sql is: select a from test1 where ymd =? select b from test2 where ymd =?  expected select a from test1_20190305 where ymd =20190305 select b from test2_20190303 where ymd =20190303  ### Actual behavior select a from test2_20190305 where ymd =20190305 --table name error select b from test1_20190303 where ymd =20190303 --table name error select a from test1_20190305 where ymd =20190305 select b from test2_20190303 where ymd =20190303  ### Reason analyze (If you can) I trace it in SQLParserEngine.java,  i think it error in this line: ParseTree parseTree = SQLParserFactory.newInstance(databaseType, sql).execute().getChild(0);   ### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc. just test it in junit test case  ### Example codes for reproduce this issue (such as a github link).     @Test     public void test6() {         int i = 0;         while (i &lt; 100) {             new Thread(new Runnable() {                 @Override                 public void run() {                     List&lt;Map&lt;String, Object&gt;&gt; maps1 = appApOfflineEventMapper.getApOfflineReasonList("20190303");                     System.out.println(maps1);                 }             }).start();              new Thread(new Runnable() {                 @Override                 public void run() {                     List&lt;Map&gt; maps = appApOfflineEventHourStatsMapper.getApOfflineStats("20190228");                     System.out.println(maps);                 }              }).start();             ++i;         }     } </body>
		<created>2019-03-05 01:53:28</created>
		<closed>2019-03-15 02:00:34</closed>
	</bug>
	<bug>
		<id>1959</id>
		<title>Proxy will load all schema from registry when startup</title>
		<body>## Bug Report  **For English only**, other languages will not accept.  Before report a bug, make sure you have:  - Searched open and closed [GitHub issues](https://github.com/sharding-sphere/sharding-sphere/issues). - Read documentation: [ShardingSphere Doc](http://shardingsphere.io/document/current/en/overview/).  Please pay attention on issues you submitted, because we maybe need more details.  If no response **more than 7 days** and we cannot reproduce it on current information, we will **close it**.  Please answer these questions before submitting your issue. Thanks!  ### Which version of ShardingSphere did you use? 4.0.0.M1-SNAPSHOT ### Which project did you use? Sharding-JDBC or Sharding-Proxy? Sharding-Proxy ### Expected behavior Only load some configurations user want from regsitry when startup. ### Actual behavior Load all the configs from registry when startup. ### Reason analyze (If you can)  ### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.  ### Example codes for reproduce this issue (such as a github link). </body>
		<created>2019-03-02 05:47:17</created>
		<closed>2019-03-02 10:21:15</closed>
	</bug>
	<bug>
		<id>1957</id>
		<title>autogen key sharding-column can't be routed succeed while using default sharding strategy</title>
		<body>## Bug Report  ### Which version of ShardingSphere did you use? 4.0.0.M1-SNAPSHOT  ### Which project did you use? Sharding-JDBC or Sharding-Proxy? Sharding-JDBC  ### Expected behavior order_id use SNOWFLAKE algorithm, which is the table sharding-colum. `INSERT INTO t_order (user_id, status) VALUES (?, ?) ` should be routed to t_order_0 or t_order_1  ### Actual behavior route to t_order_0 and t_order_1  ### Reason analyze (If you can) OptimizeEngine haven't make autogen sharding-column as `ShardingCondition`  ### Example codes for reproduce this issue (such as a github link). following unit test case of sharding-example project. `io.shardingsphere.example.jdbc.nodep.JavaConfigurationExampleTest#assertShardingTables` </body>
		<created>2019-03-01 10:23:22</created>
		<closed>2019-03-04 17:03:55</closed>
	</bug>
	<bug>
		<id>1948</id>
		<title>CachedDatabaseMetaData throw exception when JDBC Driver is postgreSQL JDBC</title>
		<body>`CachedDatabaseMetaData` will cache all attributes of `DatabaseMetaData`, but postgreSQL JDBC not implement `getRowIdLifetime` method so that program throw exception like this   ``` Caused by: java.sql.SQLFeatureNotSupportedException: 这个 org.postgresql.jdbc.PgDatabaseMetaData.getRowIdLifetime() 方法尚未被实作。 at org.postgresql.Driver.notImplemented(Driver.java:688) ~[postgresql-42.2.5.jar:42.2.5] at org.postgresql.jdbc.PgDatabaseMetaData.getRowIdLifetime(PgDatabaseMetaData.java:2562) ~[postgresql-42.2.5.jar:42.2.5] at org.apache.commons.dbcp2.DelegatingDatabaseMetaData.getRowIdLifetime(DelegatingDatabaseMetaData.java:768) ~[commons-dbcp2-2.5.0.jar:2.5.0] at org.apache.commons.dbcp2.DelegatingDatabaseMetaData.getRowIdLifetime(DelegatingDatabaseMetaData.java:768) ~[commons-dbcp2-2.5.0.jar:2.5.0] at org.apache.shardingsphere.shardingjdbc.jdbc.core.datasource.metadata.CachedDatabaseMetaData.&lt;init&gt;(CachedDatabaseMetaData.java:431) ~[sharding-jdbc-core-4.0.0.M1-SNAPSHOT.jar:na] at org.apache.shardingsphere.shardingjdbc.jdbc.core.ShardingContext.createCachedDatabaseMetaData(ShardingContext.java:75) ~[sharding-jdbc-core-4.0.0.M1-SNAPSHOT.jar:na] at org.apache.shardingsphere.shardingjdbc.jdbc.core.ShardingContext.&lt;init&gt;(ShardingContext.java:62) ~[sharding-jdbc-core-4.0.0.M1-SNAPSHOT.jar:na] at org.apache.shardingsphere.shardingjdbc.jdbc.core.datasource.ShardingDataSource.&lt;init&gt;(ShardingDataSource.java:54) ~[sharding-jdbc-core-4.0.0.M1-SNAPSHOT.jar:na] at org.apache.shardingsphere.shardingjdbc.api.ShardingDataSourceFactory.createDataSource(ShardingDataSourceFactory.java:50) ~[sharding-jdbc-core-4.0.0.M1-SNAPSHOT.jar:na] at io.shardingsphere.issue.config.IssueConfiguration.dataSource(IssueConfiguration.java:79) ~[classes/:na] at io.shardingsphere.issue.config.IssueConfiguration$$EnhancerBySpringCGLIB$$10ed2c4e.CGLIB$dataSource$0(&lt;generated&gt;) ~[classes/:na] at io.shardingsphere.issue.config.IssueConfiguration$$EnhancerBySpringCGLIB$$10ed2c4e$$FastClassBySpringCGLIB$$b27c52fa.invoke(&lt;generated&gt;) ~[classes/:na] at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228) ~[spring-core-4.3.20.RELEASE.jar:4.3.20.RELEASE] at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:358) ~[spring-context-4.3.20.RELEASE.jar:4.3.20.RELEASE] at io.shardingsphere.issue.config.IssueConfiguration$$EnhancerBySpringCGLIB$$10ed2c4e.dataSource(&lt;generated&gt;) ~[classes/:na] at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_151] at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_151] at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_151] at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_151] at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:162) ~[spring-beans-4.3.20.RELEASE.jar:4.3.20.RELEASE] ... 41 common frames omitted ```</body>
		<created>2019-02-28 09:43:55</created>
		<closed>2019-03-01 07:54:52</closed>
	</bug>
	<bug>
		<id>1936</id>
		<title>executeBatch result does not match sql statement</title>
		<body>## Bug Report  **For English only**, other languages will not accept. obtainExecuteGroups() method order by routeunit by datasource. it cause routeunit in routeUnits different with routeunit  in getExecuteGroups. it cause the execute result dismatch with sql statement</body>
		<created>2019-02-27 08:48:22</created>
		<closed>2019-03-12 06:05:31</closed>
	</bug>
	<bug>
		<id>1933</id>
		<title>oracle getAllTableNames returns oracle build-in table</title>
		<body>xml config: &lt;?xml version="1.0" encoding="UTF-8"?&gt; &lt;beans xmlns="http://www.springframework.org/schema/beans"        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"        xmlns:p="http://www.springframework.org/schema/p"        xmlns:context="http://www.springframework.org/schema/context"        xmlns:tx="http://www.springframework.org/schema/tx"        xmlns:sharding="http://shardingsphere.io/schema/shardingsphere/sharding"        xsi:schemaLocation="http://www.springframework.org/schema/beans                          http://www.springframework.org/schema/beans/spring-beans.xsd                         http://shardingsphere.io/schema/shardingsphere/sharding                          http://shardingsphere.io/schema/shardingsphere/sharding/sharding.xsd                         http://www.springframework.org/schema/context                         http://www.springframework.org/schema/context/spring-context.xsd                         http://www.springframework.org/schema/tx                         http://www.springframework.org/schema/tx/spring-tx.xsd"&gt;     &lt;bean name="dataSource_0" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close"&gt;         &lt;property name="url" value="${jdbc.url_0}"/&gt;         &lt;property name="username" value="${jdbc.username_0}"/&gt;         &lt;property name="password" value="${jdbc.password_0}"/&gt;         &lt;property name="driverClassName" value="${jdbc.driverClassName}" /&gt;         &lt;!-- 配置初始化大小、最小、最大 --&gt;         &lt;property name="initialSize" value="${jdbc.initialSize}"/&gt;         &lt;property name="minIdle" value="${jdbc.minIdle}"/&gt;         &lt;property name="maxActive" value="${jdbc.maxActive}"/&gt;         &lt;!-- 配置获取连接等待超时的时间 --&gt;         &lt;property name="maxWait" value="${jdbc.maxWait}"/&gt;     &lt;/bean&gt;          &lt;bean name="dataSource_1" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close"&gt;         &lt;property name="url" value="${jdbc.url_1}"/&gt;         &lt;property name="username" value="${jdbc.username_1}"/&gt;         &lt;property name="password" value="${jdbc.password_1}"/&gt;         &lt;property name="driverClassName" value="${jdbc.driverClassName}" /&gt;         &lt;!-- 配置初始化大小、最小、最大 --&gt;         &lt;property name="initialSize" value="${jdbc.initialSize}"/&gt;         &lt;property name="minIdle" value="${jdbc.minIdle}"/&gt;         &lt;property name="maxActive" value="${jdbc.maxActive}"/&gt;         &lt;!-- 配置获取连接等待超时的时间 --&gt;         &lt;property name="maxWait" value="${jdbc.maxWait}"/&gt;     &lt;/bean&gt;          &lt;bean name="globalDataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close"&gt;         &lt;property name="url" value="${jdbc.url}"/&gt;         &lt;property name="username" value="${jdbc.username}"/&gt;         &lt;property name="password" value="${jdbc.password}"/&gt;         &lt;property name="driverClassName" value="${jdbc.driverClassName}" /&gt;         &lt;!-- 配置初始化大小、最小、最大 --&gt;         &lt;property name="initialSize" value="${jdbc.initialSize}"/&gt;         &lt;property name="minIdle" value="${jdbc.minIdle}"/&gt;         &lt;property name="maxActive" value="${jdbc.maxActive}"/&gt;         &lt;!-- 配置获取连接等待超时的时间 --&gt;         &lt;property name="maxWait" value="${jdbc.maxWait}"/&gt;     &lt;/bean&gt;          &lt;bean id="preciseModuloDatabaseShardingAlgorithm" class="com.hundsun.ta.aop.DemoTableShardingAlgorithm" /&gt;     &lt;bean id="preciseModuloTableShardingAlgorithm" class="com.hundsun.ta.aop.DemoDatabaseShardingAlgorithm" /&gt;          &lt;!-- 分库策略 --&gt;     &lt;sharding:standard-strategy id="databaseStrategy" sharding-column="user_id" precise-algorithm-ref="preciseModuloDatabaseShardingAlgorithm" /&gt;          &lt;!-- 分表策略 --&gt;     &lt;sharding:standard-strategy id="tableStrategy" sharding-column="user_id" precise-algorithm-ref="preciseModuloTableShardingAlgorithm" /&gt;      &lt;sharding:data-source id="shardingDataSource"&gt;         &lt;!-- configDataSource为不参数分库分表的全局表的默认数据源,比如系统参数 --&gt;         &lt;sharding:sharding-rule data-source-names="dataSource_0,dataSource_1,globalDataSource" default-data-source-name="globalDataSource"         default-database-strategy-ref="databaseStrategy" default-table-strategy-ref="tableStrategy"&gt;             &lt;sharding:table-rules&gt;             &lt;sharding:table-rule logic-table="t_order" actual-data-nodes="dataSource_$-&gt;{0..1}.t_order_$-&gt;{0..1}" /&gt;             &lt;sharding:table-rule logic-table="t_order_item" actual-data-nodes="dataSource_$-&gt;{0..1}.t_order_item_$-&gt;{0..1}" /&gt;             &lt;sharding:table-rule logic-table="t_user" actual-data-nodes="dataSource_$-&gt;{0..1}.t_user"/&gt;             &lt;/sharding:table-rules&gt;             &lt;!-- 绑定表规则列表,表示分库分表的规则相同,这样万一涉及到多个分片的查询,sharding-jdbc就可以确定分库之间不需要不必要的二次关联,所有涉及表都应该如此维护 --&gt;             &lt;sharding:binding-table-rules&gt;                 &lt;sharding:binding-table-rule logic-tables="t_order,t_order_item"/&gt;             &lt;/sharding:binding-table-rules&gt;             &lt;sharding:broadcast-table-rules&gt;                 &lt;sharding:broadcast-table-rule table="t_dict" /&gt;             &lt;/sharding:broadcast-table-rules&gt;         &lt;/sharding:sharding-rule&gt;     &lt;/sharding:data-source&gt; &lt;/beans&gt; method io.shardingsphere.core.metadata.table.executor.TableMetaDataInitializer#getAllTableNames returns more table then current schema's table. ex. it returns table like SYS_IOT_OVER_84700。 version:sharding-sphere 3.1.0. the reason is  getAllTableNames() method call getTables() pass null to schemaPattern in line 98. as follows:              ResultSet resultSet = connection.getMetaData().getTables(catalog, null, null, new String[]{"TABLE"})) the result is app suspend after datasource init. the jstack is as follows: "main" #1 prio=5 os_prio=0 tid=0x00000000055ad800 nid=0x154c runnable [0x000000000559c000]    java.lang.Thread.State: RUNNABLE         at java.net.SocketInputStream.socketRead0(Native Method)         at java.net.SocketInputStream.socketRead(SocketInputStream.java:116)         at java.net.SocketInputStream.read(SocketInputStream.java:171)         at java.net.SocketInputStream.read(SocketInputStream.java:141)         at oracle.net.ns.Packet.receive(Packet.java:300)         at oracle.net.ns.DataPacket.receive(DataPacket.java:106)         at oracle.net.ns.NetInputStream.getNextPacket(NetInputStream.java:315)         at oracle.net.ns.NetInputStream.read(NetInputStream.java:260)         at oracle.net.ns.NetInputStream.read(NetInputStream.java:185)         at oracle.net.ns.NetInputStream.read(NetInputStream.java:102)         at oracle.jdbc.driver.T4CSocketInputStreamWrapper.readNextPacket(T4CSocketInputStreamWrapper.java:124)         at oracle.jdbc.driver.T4CSocketInputStreamWrapper.read(T4CSocketInputStreamWrapper.java:80)         at oracle.jdbc.driver.T4CMAREngine.unmarshalUB1(T4CMAREngine.java:1137)         at oracle.jdbc.driver.T4CTTIfun.receive(T4CTTIfun.java:290)         at oracle.jdbc.driver.T4CTTIfun.doRPC(T4CTTIfun.java:192)         at oracle.jdbc.driver.T4C8Oall.doOALL(T4C8Oall.java:531)         at oracle.jdbc.driver.T4CPreparedStatement.doOall8(T4CPreparedStatement.java:207)         at oracle.jdbc.driver.T4CPreparedStatement.fetch(T4CPreparedStatement.java:1119)         at oracle.jdbc.driver.OracleResultSetImpl.close_or_fetch_from_next(OracleResultSetImpl.java:373)         - locked &lt;0x0000000780aac2a0&gt; (a oracle.jdbc.driver.T4CConnection)         at oracle.jdbc.driver.OracleResultSetImpl.next(OracleResultSetImpl.java:277)         - locked &lt;0x0000000780aac2a0&gt; (a oracle.jdbc.driver.T4CConnection)         at io.shardingsphere.core.metadata.table.executor.TableMetaDataLoader.getColumnMetaDataList(TableMetaDataLoader.java:137)         at io.shardingsphere.core.metadata.table.executor.TableMetaDataLoader.load(TableMetaDataLoader.java:96)         at io.shardingsphere.core.metadata.table.executor.TableMetaDataLoader.access$100(TableMetaDataLoader.java:52)         at io.shardingsphere.core.metadata.table.executor.TableMetaDataLoader$1.execute(TableMetaDataLoader.java:86)         at io.shardingsphere.core.executor.ShardingExecuteEngine.syncGroupExecute(ShardingExecuteEngine.java:175)         at io.shardingsphere.core.executor.ShardingExecuteEngine.groupExecute(ShardingExecuteEngine.java:152)         at io.shardingsphere.core.executor.ShardingExecuteEngine.groupExecute(ShardingExecuteEngine.java:130)  ### Expected behavior return only tables in current schema.  ### Actual behavior return tables in other schema. all table with access privilege.  ### how to resolve pass schemaName to getTables method in line 98, as follows:              ResultSet resultSet = connection.getMetaData().getTables(catalog, dataSourceMetaData.getSchemeName(), null, new String[]{"TABLE"})) { </body>
		<created>2019-02-27 06:54:11</created>
		<closed>2019-02-28 10:36:45</closed>
	</bug>
	<bug>
		<id>1932</id>
		<title>prepare statement for sharding-proxy have a wrong rout logic.</title>
		<body>when we use master-slave configuration for sharding-proxy, backendHandler  still use sharding-rule to parsing and route logic-sql, we should user master-slave-router directly.</body>
		<created>2019-02-27 01:59:20</created>
		<closed>2019-03-01 04:23:22</closed>
	</bug>
	<bug>
		<id>1910</id>
		<title>blob column insert exception: Unknown exception: INSERT INTO column size mismatch value size</title>
		<body>## Bug Report   ### Which version of ShardingSphere did you use? 4.0.0.M1 ### Which project did you use? Sharding-JDBC or Sharding-Proxy? sharding-proxy ### Expected behavior images table has no shards.  The images table structure is as follows：  CREATE TABLE `images` (   `id` int(11) DEFAULT NULL,   `image` blob ) ENGINE=InnoDB DEFAULT CHARSET=utf8;  java code is as follows：      @Test     public void blobInsertTest() throws Exception {          Class.forName("com.mysql.jdbc.Driver");          String sql = "INSERT INTO images(id,image) values(?,?)";         Connection conn = DriverManager.getConnection(url, username, password);         PreparedStatement ps = conn.prepareStatement(sql);          ps.setInt(1,2);         InputStream in = new FileInputStream("f:\\1122.jpg");         ps.setBlob(2, in);         int count = ps.executeUpdate();         System.out.println(count);      }  Run the code normally by connecting mysql.  Running code by connecting sharding-proxy  reports the error as follows:  java.sql.SQLException: Unknown exception: INSERT INTO column size mismatch value size. at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:998) at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3835) at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3771) at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2435) at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2582) at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2535) at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1911) at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2145) at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2081) at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2066) at com.zhongan.dmds.sharding_sphere.ShardingProxyTest.blobInsertTest(ShardingProxyTest.java:105) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:601) at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) at org.junit.runners.ParentRunner.run(ParentRunner.java:363) at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86) at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38) at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:538) at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:760) at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:460) at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:206)          </body>
		<created>2019-02-22 09:06:14</created>
		<closed>2019-05-13 13:04:06</closed>
	</bug>
	<bug>
		<id>1877</id>
		<title>SQLStatement cache for parser-engine should not be a singleton object</title>
		<body>we have used a singleton `ParsingResultCache` which key is prepared logic-sql to cache the SQLStatement. if the sharding-rule of the logic-sql have changed, or access the same logic-sql from multi-sharding-datasources, we will get an unexpected SQLStatement which sharding-condition is wrong. so we should cache the parsed SQLStatement within lifecycle of `ShardingContext`.  - [x] Make ParsingResultCache multi-instances available - [x] Using ParsingResultCache in ShardingContext - [x] resolve memory leak for hash map</body>
		<created>2019-02-19 01:06:26</created>
		<closed>2019-02-25 15:19:13</closed>
	</bug>
	<bug>
		<id>1873</id>
		<title>Can support associated query??</title>
		<body>Pom dependence： ```         &lt;dependency&gt;             &lt;groupId&gt;io.shardingsphere&lt;/groupId&gt;             &lt;artifactId&gt;sharding-jdbc-core&lt;/artifactId&gt;             &lt;version&gt;3.1.0&lt;/version&gt;         &lt;/dependency&gt;         &lt;!-- mybatis分页 --&gt;         &lt;dependency&gt;             &lt;groupId&gt;com.github.pagehelper&lt;/groupId&gt;             &lt;artifactId&gt;pagehelper&lt;/artifactId&gt;             &lt;version&gt;5.0.0&lt;/version&gt;         &lt;/dependency&gt;         &lt;!-- mysql --&gt;         &lt;dependency&gt;             &lt;groupId&gt;mysql&lt;/groupId&gt;             &lt;artifactId&gt;mysql-connector-java&lt;/artifactId&gt;             &lt;version&gt;5.1.40&lt;/version&gt;         &lt;/dependency&gt;         &lt;!-- jdbc --&gt;         &lt;dependency&gt;             &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;             &lt;artifactId&gt;spring-boot-starter-jdbc&lt;/artifactId&gt;             &lt;version&gt;1.5.14.RELEASE&lt;/version&gt;         &lt;/dependency&gt;         &lt;dependency&gt;             &lt;groupId&gt;org.mybatis&lt;/groupId&gt;             &lt;artifactId&gt;mybatis-spring&lt;/artifactId&gt;             &lt;version&gt;1.3.0&lt;/version&gt;         &lt;/dependency&gt;         &lt;dependency&gt;             &lt;groupId&gt;org.mybatis&lt;/groupId&gt;             &lt;artifactId&gt;mybatis&lt;/artifactId&gt;             &lt;version&gt;3.4.1&lt;/version&gt;         &lt;/dependency&gt;         &lt;!-- druid --&gt;         &lt;dependency&gt;             &lt;groupId&gt;com.alibaba&lt;/groupId&gt;             &lt;artifactId&gt;druid&lt;/artifactId&gt;             &lt;version&gt;1.0.29&lt;/version&gt;         &lt;/dependency&gt; ```  Mybatis SQL: ``` select * from pay_order where  payOrderId = ( select payOrderId from pay_suborder where paySubOrderId = #{paySubOrderId,jdbcType=VARCHAR} and dbPart BETWEEN #{lastDbPart,jdbcType=INTEGER} and #                                                                     {dbPart,jdbcType=INTEGER} ) and dbPart BETWEEN #{lastDbPart,jdbcType=INTEGER} and #{dbPart,jdbcType=INTEGER} limit 1; ``` spring boot database config ``` package com.yy.onepiece.pay.persist.base.config;  import com.yy.onepiece.pay.persist.DbConfigConstant; import com.yy.onepiece.pay.persist.base.config.sharding.ModuloShardingAlgorithm;  import com.alibaba.druid.pool.DruidDataSource; import com.google.common.collect.Maps;  import org.springframework.beans.factory.annotation.Qualifier; import org.springframework.boot.context.properties.ConfigurationProperties; import org.springframework.context.annotation.Bean; import org.springframework.context.annotation.Configuration; import org.springframework.context.annotation.DependsOn; import org.springframework.context.annotation.Primary; import org.springframework.jdbc.datasource.DataSourceTransactionManager; import org.springframework.transaction.annotation.EnableTransactionManagement;  import java.sql.SQLException; import java.util.HashMap; import java.util.Map; import java.util.Properties;  import javax.sql.DataSource;  import io.shardingsphere.api.config.rule.ShardingRuleConfiguration; import io.shardingsphere.api.config.rule.TableRuleConfiguration; import io.shardingsphere.api.config.strategy.StandardShardingStrategyConfiguration; import io.shardingsphere.shardingjdbc.api.ShardingDataSourceFactory;  /**  * Created by zhangzhe on 2018/7/17.  */ @Configuration @EnableTransactionManagement public class PrimaryDataSourceConfig {       @Bean(initMethod = "init", destroyMethod = "close", name = DbConfigConstant.PRIMARY_DATASOURCE)     @Primary     @ConfigurationProperties(prefix = DbConfigConstant.PRIMARY_DATASOURCE_CONFIG_PREFIX)     public DataSource primaryDataSource() {         DruidDataSource dataSource = new DruidDataSource();         return dataSource;     }      @Bean(name = "shardingDataSource")     @DependsOn(DbConfigConstant.PRIMARY_DATASOURCE)     public DataSource getShardingDataSource(@Qualifier(DbConfigConstant.PRIMARY_DATASOURCE) DataSource dataSource) throws SQLException {         Map&lt;String, DataSource&gt; dsMap = Maps.newHashMap();         dsMap.put("luffy_order", dataSource);         Properties properties=new Properties();         properties.setProperty("sql.show","true");         return ShardingDataSourceFactory.createDataSource(dsMap, getShardingRuleConfiguration(), new HashMap&lt;String, Object&gt;()                 , properties);     }       @Bean(name = DbConfigConstant.PRIMARY_TRANSACTIONMANAGER)     @DependsOn(DbConfigConstant.PRIMARY_DATASOURCE)     @Primary     public DataSourceTransactionManager transactionManager(@Qualifier("shardingDataSource") DataSource dataSource) {         return new DataSourceTransactionManager(dataSource);     }       private static ShardingRuleConfiguration getShardingRuleConfiguration() {         ShardingRuleConfiguration shardingRuleConfiguration = new ShardingRuleConfiguration();         TableRuleConfiguration orderTableRuleConfig = new TableRuleConfiguration();         orderTableRuleConfig.setLogicTable("pay_order");         orderTableRuleConfig.setActualDataNodes("luffy_order.pay_order_${201901..201912}");           TableRuleConfiguration subOrderTableRuleConfig = new TableRuleConfiguration();         subOrderTableRuleConfig.setLogicTable("pay_suborder");         subOrderTableRuleConfig.setActualDataNodes("luffy_order.pay_suborder_${201901..201912}");           TableRuleConfiguration refundTableRuleConfig = new TableRuleConfiguration();         refundTableRuleConfig.setLogicTable("pay_refund_order");         refundTableRuleConfig.setActualDataNodes("luffy_order.pay_refund_order_${201901..201912}");           TableRuleConfiguration transferTableRuleConfig = new TableRuleConfiguration();         transferTableRuleConfig.setLogicTable("pay_transfer_account_order");         transferTableRuleConfig.setActualDataNodes("luffy_order.pay_transfer_account_order_${201901..201912}");           TableRuleConfiguration transferSubTableRuleConfig = new TableRuleConfiguration();         transferSubTableRuleConfig.setLogicTable("pay_transfer_account_sub_order");         transferSubTableRuleConfig.setActualDataNodes("luffy_order.pay_transfer_account_sub_order_${201901..201912}");          shardingRuleConfiguration.getTableRuleConfigs().add(orderTableRuleConfig);         shardingRuleConfiguration.getTableRuleConfigs().add(subOrderTableRuleConfig);         //shardingRuleConfiguration.getTableRuleConfigs().add(refundTableRuleConfig);         shardingRuleConfiguration.getTableRuleConfigs().add(transferTableRuleConfig);         shardingRuleConfiguration.getTableRuleConfigs().add(transferSubTableRuleConfig);         shardingRuleConfiguration.getBindingTableGroups()                 .add("pay_order,pay_suborder,pay_transfer_account_order,pay_transfer_account_sub_order");         shardingRuleConfiguration.setDefaultTableShardingStrategyConfig(new StandardShardingStrategyConfiguration("dbPart"                 , new ModuloShardingAlgorithm()));         shardingRuleConfiguration.setDefaultDataSourceName("luffy_order");         return shardingRuleConfiguration;     }   } ```  ``` package com.yy.onepiece.pay.persist.base.config;  import com.yy.onepiece.pay.persist.DbConfigConstant; import com.yy.onepiece.pay.persist.MyBatisConfig;  import org.apache.ibatis.session.SqlSessionFactory; import org.mybatis.spring.SqlSessionFactoryBean; import org.mybatis.spring.annotation.MapperScan; import org.springframework.beans.factory.annotation.Qualifier; import org.springframework.boot.context.properties.ConfigurationProperties; import org.springframework.context.ApplicationContext; import org.springframework.context.annotation.Bean; import org.springframework.context.annotation.Configuration; import org.springframework.context.annotation.DependsOn; import org.springframework.core.io.Resource; import org.springframework.core.io.support.PathMatchingResourcePatternResolver; import org.springframework.core.io.support.ResourcePatternResolver;  import javax.sql.DataSource;  import io.shardingsphere.shardingjdbc.jdbc.core.datasource.ShardingDataSource;  /**  * Created by zhangzhe on 2018/7/17.  */ @Configuration @MapperScan(basePackages = "com.yy.onepiece.pay.persist.base.mapper", sqlSessionFactoryRef = DbConfigConstant.PRIMARY_SQLSESSIONFACTORY) public class PrimaryMyBatisMapperConfig {      @Bean(DbConfigConstant.PRIMARY_MYBATISCONFIG)     @ConfigurationProperties(prefix = DbConfigConstant.PRIMARY_MYBATIS_CONFIG_PREFIX)     public MyBatisConfig myBatisConfig() {         return new MyBatisConfig();     }      @Bean(name = DbConfigConstant.PRIMARY_SQLSESSIONFACTORY)     @DependsOn("shardingDataSource")     public SqlSessionFactory primarySqlSessionFactory(@Qualifier("shardingDataSource") DataSource dataSource             , @Qualifier(DbConfigConstant.PRIMARY_MYBATISCONFIG) MyBatisConfig primaryMyBatisConfig, ApplicationContext acx)             throws Exception {         System.out.println(dataSource);         SqlSessionFactoryBean factory = new SqlSessionFactoryBean();         factory.setDataSource(dataSource);         factory.setConfigLocation(acx.getResource(primaryMyBatisConfig.getConfigLocation()));         factory.setTypeAliasesPackage(primaryMyBatisConfig.getTypeAliasesPackage());         ResourcePatternResolver resolver = new PathMatchingResourcePatternResolver();         Resource[] resources;         resources = resolver.getResources(primaryMyBatisConfig.getMapperLocation());         factory.setMapperLocations(resources);         return factory.getObject();     } } ```  when I run my test case, debug log is below:  ``` 12:02:04.297 [main] INFO  c.alibaba.druid.pool.DruidDataSource 785 - {dataSource-1} inited io.shardingsphere.shardingjdbc.jdbc.core.datasource.ShardingDataSource@421a4ee1 Logging initialized using 'class org.apache.ibatis.logging.stdout.StdOutImpl' adapter. 12:02:20.863 [main] INFO  c.y.o.test.sharding.ShardingTest 57 - Started ShardingTest in 42.613 seconds (JVM running for 45.01) Creating a new SqlSession Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@49fe3142] JDBC Connection [io.shardingsphere.shardingjdbc.jdbc.core.connection.ShardingConnection@4487c0c2] will be managed by Spring ==&gt;  Preparing: select * from pay_order where payOrderId = ( select payOrderId from pay_suborder where paySubOrderId = ? and dbPart BETWEEN ? and ? ) and dbPart BETWEEN ? and ? limit 1;  ==&gt; Parameters: SA915778200512946176(String), 201812(Integer), 201901(Integer), 201812(Integer), 201901(Integer) Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@49fe3142] Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@49fe3142] Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@49fe3142]  org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.PersistenceException:  ### Error querying database.  Cause: java.lang.NullPointerException ### The error may exist in file [E:\workspace\gitproject\zoro\zoro-pay\zoro-pay-persist\target\classes\mappers\base\PayOrderExtMapper.xml] ### The error may involve defaultParameterMap ### The error occurred while setting parameters ### SQL: select * from pay_order    where  payOrderId = (     select payOrderId from pay_suborder     where paySubOrderId = ?     and dbPart BETWEEN ? and ?    )    and dbPart BETWEEN ? and ?    limit 1; ### Cause: java.lang.NullPointerException  at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:79) at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447) at com.sun.proxy.$Proxy41.selectOne(Unknown Source) at org.mybatis.spring.SqlSessionTemplate.selectOne(SqlSessionTemplate.java:167) at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:82) at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:53) at com.sun.proxy.$Proxy42.getPayOrderBySubOrderId(Unknown Source) at com.yy.onepiece.test.sharding.PaymentRepository.getPayOrderBySubOrderId(PaymentRepository.java:114) at com.yy.onepiece.test.sharding.PaymentRepository$$FastClassBySpringCGLIB$$2fb360fd.invoke(&lt;generated&gt;) at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204) at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:738) at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157) at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99) at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:282) at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96) at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179) at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673) at com.yy.onepiece.test.sharding.PaymentRepository$$EnhancerBySpringCGLIB$$edff288b.getPayOrderBySubOrderId(&lt;generated&gt;) at com.yy.onepiece.test.sharding.ShardingTest.testQuery(ShardingTest.java:55) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) at org.springframework.test.context.junit4.statements.RunBeforeTestMethodCallbacks.evaluate(RunBeforeTestMethodCallbacks.java:75) at org.springframework.test.context.junit4.statements.RunAfterTestMethodCallbacks.evaluate(RunAfterTestMethodCallbacks.java:86) at org.springframework.test.context.junit4.statements.SpringRepeat.evaluate(SpringRepeat.java:84) at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:252) at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:94) at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61) at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70) at org.junit.runners.ParentRunner.run(ParentRunner.java:363) at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:191) at org.junit.runner.JUnitCore.run(JUnitCore.java:137) at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:51) at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:237) at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at com.intellij.rt.execution.application.AppMain.main(AppMain.java:147) Caused by: org.apache.ibatis.exceptions.PersistenceException:  ### Error querying database.  Cause: java.lang.NullPointerException ### The error may exist in file [E:\workspace\gitproject\zoro\zoro-pay\zoro-pay-persist\target\classes\mappers\base\PayOrderExtMapper.xml] ### The error may involve defaultParameterMap ### The error occurred while setting parameters ### SQL: select * from pay_order    where  payOrderId = (     select payOrderId from pay_suborder     where paySubOrderId = ?     and dbPart BETWEEN ? and ?    )    and dbPart BETWEEN ? and ?    limit 1; ### Cause: java.lang.NullPointerException at org.apache.ibatis.exceptions.ExceptionFactory.wrapException(ExceptionFactory.java:30) at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:150) at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141) at org.apache.ibatis.session.defaults.DefaultSqlSession.selectOne(DefaultSqlSession.java:77) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434) ... 50 more Caused by: java.lang.NullPointerException at io.shardingsphere.shardingjdbc.jdbc.core.statement.ShardingPreparedStatement.execute(ShardingPreparedStatement.java:139) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59) at com.sun.proxy.$Proxy53.execute(Unknown Source) at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63) at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79) at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63) at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324) at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156) at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109) at com.github.pagehelper.PageInterceptor.intercept(PageInterceptor.java:141) at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:61) at com.sun.proxy.$Proxy51.query(Unknown Source) at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148) ... 57 more  12:02:22.377 [Thread-1] INFO  o.s.c.a.AnnotationConfigApplicationContext 984 - Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@748741cb: startup date [Sun Feb 17 12:01:39 CST 2019]; root of context hierarchy 12:02:22.404 [Thread-1] INFO  c.alibaba.druid.pool.DruidDataSource 1534 - {dataSource-1} closed  Process finished with exit code -1 ````  what's wrong?? sharding jdbc not support  associated query??   </body>
		<created>2019-02-17 04:06:19</created>
		<closed>2019-02-18 14:53:41</closed>
	</bug>
	<bug>
		<id>1865</id>
		<title>DQL table name is the same with alias rewrite wrong SQL</title>
		<body>## Bug Report table name is the same with alias, then use column with alias, rewrite the wrong sql.  logic  SQL : SELECT t_order.order_id FROM t_order t_order WHERE t_order.user_id = ? wrong actual SQL: SELECT t_order_1 .order_id FROM t_order_1 t_order WHERE t_order_1 .user_id = ? correct actual SQL:  SELECT t_order.order_id FROM t_order_1 t_order WHERE t_order.user_id = ? </body>
		<created>2019-02-15 04:59:25</created>
		<closed>2019-02-18 14:54:02</closed>
	</bug>
	<bug>
		<id>1830</id>
		<title>4.0.0.M1-SNAPSHOT report a error :  current logic schema is null</title>
		<body>The version using sharding-sphere is 4.0.0.M1-SNAPSHOT. I use sharding-Proxy. I configure a config-sharding file, there is no problem in querying data with java code, but I will get an error when connecting to the service with navicat.       Unknown exception: current logic schema is null      </body>
		<created>2019-01-28 07:21:59</created>
		<closed>2019-02-20 06:29:49</closed>
	</bug>
	<bug>
		<id>1829</id>
		<title>sharding-sphere is 4.0.0.M1-SNAPSHOT cann't configure  multiple config-sharding files.</title>
		<body>The version using sharding-sphere is 4.0.0.M1-SNAPSHOT。 I configure a config-sharding file and the query is ok，but I configure multiple config-sharding files, execute sql query with java code will report an error：  Exception in thread "main" java.sql.SQLException: Unknown exception: null at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:998) at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3835) at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3771) at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2435) at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2582) at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2531) at com.mysql.jdbc.ConnectionImpl.configureClientCharacterSet(ConnectionImpl.java:1765) at com.mysql.jdbc.ConnectionImpl.initializePropsFromServer(ConnectionImpl.java:3364) at com.mysql.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:2283) at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2069) at com.mysql.jdbc.ConnectionImpl.&lt;init&gt;(ConnectionImpl.java:794) at com.mysql.jdbc.JDBC4Connection.&lt;init&gt;(JDBC4Connection.java:44) at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57) at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) at java.lang.reflect.Constructor.newInstance(Constructor.java:525) at com.mysql.jdbc.Util.handleNewInstance(Util.java:389) at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:399) at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:325) at java.sql.DriverManager.getConnection(DriverManager.java:579) at java.sql.DriverManager.getConnection(DriverManager.java:221) at com.zhongan.dmds.sharding_sphere.QueryTest.main(QueryTest.java:32)</body>
		<created>2019-01-28 06:56:49</created>
		<closed>2019-02-20 08:58:31</closed>
	</bug>
	<bug>
		<id>1820</id>
		<title>the replaySetParameter cost much time on mysql batch insert.</title>
		<body>## Feature Request  Test follow: INSERT INTO tb_credit_info_1 (col1, col2, co3, ... col27),(col1, col2, co3, ... col27),(col1, col2, co3, ... col27) .....  1. There are 27 column in tb_credit_info_1; 2. batch 2000 insert .  the replaySetParameter() in AbstractShardingPreparedStatementAdapter cost 1.5 seconds，this is Unacceptable。  i think the reason is that it requires 52000 ( 27*2000 ) reflection invoke. </body>
		<created>2019-01-25 07:40:56</created>
		<closed>2019-01-28 15:15:41</closed>
	</bug>
	<bug>
		<id>1816</id>
		<title>without check for subquery  with hint</title>
		<body>Subquery in select may route more than one shards, it cause a wrong result for select,so shardingsphere just support '=' for shard column, in some case, user sure query result in one shard, user hope use hint for support any other logic operator('in' ,'between and'...) . </body>
		<created>2019-01-25 02:29:05</created>
		<closed>2019-03-28 08:36:12</closed>
	</bug>
	<bug>
		<id>1811</id>
		<title>typo in cn doc</title>
		<body>English doc : Architects can adjust the system architecture to the most applicable one to current business more freely Google translate : 使得架构师可以更自由地将系统架构调整为最适用于当前业务的架构 cn doc : http://shardingsphere.io/document/current/cn/overview/  _使得架构师_ 更加自由的调整 _适合与_ 当前业务的最佳系统架构  1、change "适用与" to "适用于" and "使得架构师" to "使得架构师可以" or "架构师可以" 2、Just use the google translate which is more unified </body>
		<created>2019-01-24 06:29:10</created>
		<closed>2019-01-25 05:12:09</closed>
	</bug>
	<bug>
		<id>1784</id>
		<title>sharding-proxy  got different shard result when we use : algorithmExpression: consumer_${id_card.substring(12)} </title>
		<body>**vsersion : 3.1.0** when we use the sharding-proxy,we specified algorithmExpression like this: `algorithmExpression: consumer_${id_card.substring(12)}`  , the test of `id_card -&gt; 1547717441768` . then we had the following tests:  ``` Logic SQL: insert into consumer(id_card) values('1547717441768') #Expected ShardingSphere-SQL - Actual SQL: ds_0 ::: insert into consumer_8(id_card) values('1547717441768') ```  ``` Logic SQL: select * from consumer WHERE id_card ='1547717441768' #Not what we expected Actual SQL: ds_0 ::: select * from consumer_68' WHERE id_card ='1547717441768' ``` Did you forget to handle  the quotes at the head and tail? </body>
		<created>2019-01-21 02:14:44</created>
		<closed>2019-01-25 05:06:29</closed>
	</bug>
	<bug>
		<id>1774</id>
		<title>CachedDatabaseMetaData.getTables failed with hibernate when hibernate.hbm2ddl.auto is update</title>
		<body>My project uses spring boot, mysql and jpa(hibernate).  Right now I want to include sharding table feature to the existing project for some big table. I just adjust the code for intializing the datasource, add sharding rule after the old code. And I'm using the version **3.1.0**.     @Bean(name = "dataSource")     @Primary     public DataSource dataSource() throws SQLException {         BasicDataSource dataSource = new BasicDataSource();         if (ExtraConfig.isDev()) {             dataSource.setMaxTotal(20);             dataSource.setInitialSize(8);             dataSource.setMinIdle(8);             dataSource.setMaxIdle(12);         } else {             dataSource.setMaxTotal(150);             dataSource.setInitialSize(40);             dataSource.setMinIdle(40);             dataSource.setMaxIdle(80);         }         dataSource.setMaxWaitMillis(10000);         dataSource.setRemoveAbandonedTimeout(10);         dataSource.setDriverClassName(connectionSetting.getDriver());         dataSource.setUrl(connectionSetting.getUrl() + "?useUnicode=true&amp;characterEncoding=utf8&amp;autoReconnect=true&amp;rewriteBatchedStatements=TRUE");         dataSource.setUsername(connectionSetting.getUsername());         dataSource.setPassword(connectionSetting.getPassword());         ArrayList&lt;String&gt; initSQLs = new ArrayList&lt;String&gt;();         initSQLs.add("SET NAMES 'utf8mb4'");         dataSource.setConnectionInitSqls(initSQLs);         dataSource.setCacheState(false);                  Map&lt;String, DataSource&gt; dataSourceMap = new HashMap&lt;&gt;();         dataSourceMap.put("ds0", dataSource);                         // Configure table rule          TableRuleConfiguration logTableRuleConfig = new TableRuleConfiguration();         logTableRuleConfig.setLogicTable("center_op_log");         logTableRuleConfig.setActualDataNodes("ds0.center_op_log${0..4}");                  // Configure strategies for database + table sharding          logTableRuleConfig.setTableShardingStrategyConfig(new InlineShardingStrategyConfiguration("mainCenterId", "center_op_log${mainCenterId % 4}"));                  // Configure sharding rule         ShardingRuleConfiguration shardingRuleConfig = new ShardingRuleConfiguration();         shardingRuleConfig.getTableRuleConfigs().add(logTableRuleConfig);         shardingRuleConfig.setDefaultDatabaseShardingStrategyConfig(new NoneShardingStrategyConfiguration());                  Properties properties = new Properties();                  return ShardingDataSourceFactory.createDataSource(dataSourceMap, shardingRuleConfig, new ConcurrentHashMap&lt;&gt;(), properties);     }  And db schema will be updated while the project is running, but the SQLFeatureNotSupportedException("getCatalog") was thrown, and below is the fragment of the stack trace. Could please help me figout it out? Thanks in advance!  [2019-01-18 10:53:34.545] boot - 17512  INFO [main] --- Version: HHH000412: Hibernate Core {4.3.10.Final} [2019-01-18 10:53:34.547] boot - 17512  INFO [main] --- Environment: HHH000206: hibernate.properties not found [2019-01-18 10:53:34.549] boot - 17512  INFO [main] --- Environment: HHH000021: Bytecode provider name : javassist [2019-01-18 10:53:34.946] boot - 17512  INFO [main] --- Version: HCANN000001: Hibernate Commons Annotations {4.0.5.Final} [2019-01-18 10:53:37.295] boot - 17512  WARN [main] --- TypeInfo: HHH000362: Unable to retrieve type info result set : java.sql.SQLException: Connection is null. [2019-01-18 10:53:37.304] boot - 17512  INFO [main] --- Dialect: HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect [2019-01-18 10:53:37.310] boot - 17512  WARN [main] --- JdbcServicesImpl: HHH000341: Could not obtain connection metadata : getCatalog [2019-01-18 10:53:37.314] boot - 17512  INFO [main] --- LobCreatorBuilder: HHH000422: Disabling contextual LOB creation as connection was null [2019-01-18 10:53:37.707] boot - 17512  INFO [main] --- ASTQueryTranslatorFactory: HHH000397: Using ASTQueryTranslatorFactory [2019-01-18 10:53:38.934] boot - 17512  INFO [main] --- SchemaUpdate: HHH000228: Running hbm2ddl schema update [2019-01-18 10:53:38.934] boot - 17512  INFO [main] --- SchemaUpdate: HHH000102: Fetching database metadata [2019-01-18 10:53:38.943] boot - 17512  INFO [main] --- SchemaUpdate: HHH000396: Updating schema [2019-01-18 10:53:41.640] boot - 17512  WARN [main] --- SqlExceptionHelper: SQL Error: 0, SQLState: null [2019-01-18 10:53:41.640] boot - 17512 ERROR [main] --- SqlExceptionHelper: Connection is null. [2019-01-18 10:53:41.641] boot - 17512 ERROR [main] --- SchemaUpdate: HHH000299: Could not complete schema update java.lang.NullPointerException at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:126) at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:112) at org.hibernate.tool.hbm2ddl.DatabaseMetadata.getTableMetadata(DatabaseMetadata.java:158) at org.hibernate.cfg.Configuration.generateSchemaUpdateScriptList(Configuration.java:1204) at org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:237) at org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:203) at org.hibernate.internal.SessionFactoryImpl.&lt;init&gt;(SessionFactoryImpl.java:522) at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:1859) at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl$4.perform(EntityManagerFactoryBuilderImpl.java:857) at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl$4.perform(EntityManagerFactoryBuilderImpl.java:850) at org.hibernate.boot.registry.classloading.internal.ClassLoaderServiceImpl.withTccl(ClassLoaderServiceImpl.java:425) at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:849) at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:60) at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:343) at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:318) at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1633) at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1570) at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:539) at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:476) at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:303) at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230) at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:299) at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:194) at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:351) at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:108) at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:634) at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:444) at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1119) at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1014) at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:476) at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:303) at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230) at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:299) at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:194) at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1120) at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1044) at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:942) at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:533) at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:88) at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:331) at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1210) at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:537) at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:476) at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:303) at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230) at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:299) at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:194) at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1120) at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1044) at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:942) at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:533) at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:88) at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:331) at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1210) at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:537) at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:476) at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:303) at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230) at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:299) at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:194) at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1120) at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1044) at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:942) at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:533) at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:88) at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:331) at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1210) at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:537) at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:476) at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:303) at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230) at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:299) at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199) at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeansOfType(DefaultListableBeanFactory.java:523) at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeansOfType(DefaultListableBeanFactory.java:512) at org.springframework.security.config.annotation.web.configuration.AutowiredWebSecurityConfigurersIgnoreParents.getWebSecurityConfigurers(AutowiredWebSecurityConfigurersIgnoreParents.java:52) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source) at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) at java.lang.reflect.Method.invoke(Unknown Source) at org.springframework.expression.spel.support.ReflectiveMethodExecutor.execute(ReflectiveMethodExecutor.java:112) at org.springframework.expression.spel.ast.MethodReference.getValueInternal(MethodReference.java:129) at org.springframework.expression.spel.ast.MethodReference.access$000(MethodReference.java:49) at org.springframework.expression.spel.ast.MethodReference$MethodValueRef.getValue(MethodReference.java:342) at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:88) at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:120) at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:242) at org.springframework.context.expression.StandardBeanExpressionResolver.evaluate(StandardBeanExpressionResolver.java:161) at org.springframework.beans.factory.support.AbstractBeanFactory.evaluateBeanDefinitionString(AbstractBeanFactory.java:1365) at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:957) at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:942) at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredMethodElement.inject(AutowiredAnnotationBeanPostProcessor.java:606) at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:88) at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:331) at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1210) at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:537) at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:476) at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:303) at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230) at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:299) at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:194) at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:368) at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1119) at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1014) at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:476) at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:303) at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230) at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:299) at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199) at org.springframework.boot.context.embedded.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:209) at org.springframework.boot.context.embedded.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:165) at org.springframework.boot.context.embedded.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:160) at org.springframework.boot.context.embedded.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:143) at org.springframework.boot.context.embedded.ServletContextInitializerBeans.&lt;init&gt;(ServletContextInitializerBeans.java:74) at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.getServletContextInitializerBeans(EmbeddedWebApplicationContext.java:234) at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.selfInitialize(EmbeddedWebApplicationContext.java:221) at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.access$000(EmbeddedWebApplicationContext.java:84) at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext$1.onStartup(EmbeddedWebApplicationContext.java:206) at org.springframework.boot.context.embedded.jetty.ServletContextInitializerConfiguration$Initializer.callInitializers(ServletContextInitializerConfiguration.java:96) at org.springframework.boot.context.embedded.jetty.ServletContextInitializerConfiguration$Initializer.doStart(ServletContextInitializerConfiguration.java:85) at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68) at org.eclipse.jetty.util.component.ContainerLifeCycle.start(ContainerLifeCycle.java:132) at org.eclipse.jetty.util.component.ContainerLifeCycle.doStart(ContainerLifeCycle.java:106) at org.eclipse.jetty.server.handler.AbstractHandler.doStart(AbstractHandler.java:61) at org.eclipse.jetty.server.handler.ScopedHandler.doStart(ScopedHandler.java:120) at org.eclipse.jetty.server.handler.ContextHandler.startContext(ContextHandler.java:784) at org.eclipse.jetty.servlet.ServletContextHandler.startContext(ServletContextHandler.java:294) at org.eclipse.jetty.webapp.WebAppContext.startWebapp(WebAppContext.java:1349) at org.eclipse.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1342) at org.eclipse.jetty.server.handler.ContextHandler.doStart(ContextHandler.java:741) at org.eclipse.jetty.webapp.WebAppContext.doStart(WebAppContext.java:505) at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68) at org.eclipse.jetty.util.component.ContainerLifeCycle.start(ContainerLifeCycle.java:132) at org.eclipse.jetty.server.Server.start(Server.java:387) at org.eclipse.jetty.util.component.ContainerLifeCycle.doStart(ContainerLifeCycle.java:114) at org.eclipse.jetty.server.handler.AbstractHandler.doStart(AbstractHandler.java:61) at org.eclipse.jetty.server.Server.doStart(Server.java:354) at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68) at org.springframework.boot.context.embedded.jetty.JettyEmbeddedServletContainer.initialize(JettyEmbeddedServletContainer.java:83) at org.springframework.boot.context.embedded.jetty.JettyEmbeddedServletContainer.&lt;init&gt;(JettyEmbeddedServletContainer.java:72) at org.springframework.boot.context.embedded.jetty.JettyEmbeddedServletContainerFactory.getJettyEmbeddedServletContainer(JettyEmbeddedServletContainerFactory.java:389) at org.springframework.boot.context.embedded.jetty.JettyEmbeddedServletContainerFactory.getEmbeddedServletContainer(JettyEmbeddedServletContainerFactory.java:135) at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.createEmbeddedServletContainer(EmbeddedWebApplicationContext.java:157) at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.onRefresh(EmbeddedWebApplicationContext.java:130) at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:474) at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:118) at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:686) at org.springframework.boot.SpringApplication.run(SpringApplication.java:320) at org.springframework.boot.SpringApplication.run(SpringApplication.java:957) at org.springframework.boot.SpringApplication.run(SpringApplication.java:946) at com.bodytrack.restapi.Application.main(Application.java:27)</body>
		<created>2019-01-18 02:57:53</created>
		<closed>2019-02-26 12:28:18</closed>
	</bug>
	<bug>
		<id>1773</id>
		<title>Get exceptions while config refreshed  through Orchestration</title>
		<body>## Bug Report  **For English only**, other languages will not accept.  Before report a bug, make sure you have:  - Searched open and closed [GitHub issues](https://github.com/sharding-sphere/sharding-sphere/issues). - Read documentation: [ShardingSphere Doc](http://shardingsphere.io/document/current/en/overview/).  Please pay attention on issues you submitted, because we maybe need more details.  If no response **more than 7 days** and we cannot reproduce it on current information, we will **close it**.  Please answer these questions before submitting your issue. Thanks!  ### Which version of ShardingSphere did you use? 3.1.0 ### Which project did you use? Sharding-JDBC or Sharding-Proxy? Sharding-JDBC ### Expected behavior no exception ### Actual behavior 2 kinds of exceptions occur: ``` [2019-01-17 16:18:39.173 - INFO] com.alibaba.druid.pool.DruidDataSource   :  - {dataSource-7} closed [2019-01-17 16:18:39.173 - INFO] com.alibaba.druid.pool.DruidDataSource   :  - {dataSource-8} closed [2019-01-17 16:18:39.194 - INFO] com.alibaba.druid.pool.DruidDataSource   :  - {dataSource-9,DataSource-1508432502} inited [2019-01-17 16:18:39.199 - INFO] com.alibaba.druid.pool.DruidDataSource   :  - {dataSource-10,DataSource-888722104} inited [2019-01-17 16:18:39.253 -ERROR] c.a.dubbo.rpc.filter.ExceptionFilter     :  -  [DUBBO] Got unchecked and undeclared exception which called by 10.1.0.1. service: com.za.blacklist.modules.blackmember.facade.BlacklistFacade, method: inBlacklist, exception: org.springframework.jdbc.UncategorizedSQLException: ### Error querying database.  Cause: com.alibaba.druid.pool.DataSourceClosedException: dataSource already closed at Thu Jan 17 16:18:39 CST 2019 ### The error may exist in class path resource [mapper/BlackMemberMapper.xml] ### The error may involve defaultParameterMap ### The error occurred while setting parameters ### SQL: SELECT DISTINCT passiveId FROM BlackMember WHERE memberId = ? AND activeId = ? AND shieldStatus=1 AND project = ? ### Cause: com.alibaba.druid.pool.DataSourceClosedException: dataSource already closed at Thu Jan 17 16:18:39 CST 2019 ; uncategorized SQLException for SQL []; SQL state [null]; error code [0]; dataSource already closed at Thu Jan 17 16:18:39 CST 2019; nested exception is com.alibaba.druid.pool.DataSourceClosedException: dataSource already closed at Thu Jan 17 16:18:39 CST 2019 at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:84) at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81) at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81) at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73) at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446) at com.sun.proxy.$Proxy141.selectList(Unknown Source) at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:230) at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:137) at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:75) at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59) at com.sun.proxy.$Proxy144.listActiveBlackMember(Unknown Source) at com.za.blacklist.provider.service.blackmember.impl.BlacklistServiceImpl.listActiveBlackMember(BlacklistServiceImpl.java:118) at com.cz.blacklist.provider.facade.blackmember.BlacklistFacadeImpl.listActiveBlackNotEmpty(BlacklistFacadeImpl.java:148) at com.cz.blacklist.provider.facade.blackmember.BlacklistFacadeImpl.inBlacklist(BlacklistFacadeImpl.java:144) at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java) at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45) at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71) at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48) at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52) at com.za.framework.base.dubbo.filter.ProviderContextFilter.invoke(ProviderContextFilter.java:47) at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68) at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61) at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68) at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74) at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68) at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41) at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68) at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77) at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68) at com.alibaba.dubbo.rpc.filter.ExecuteLimitFilter.invoke(ExecuteLimitFilter.java:59) at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68) at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:71) at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68) at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131) at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68) at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37) at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68) at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37) at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68) at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:102) at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96) at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168) at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50) at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79) at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) at java.lang.Thread.run(Thread.java:748) Caused by: com.alibaba.druid.pool.DataSourceClosedException: dataSource already closed at Thu Jan 17 16:18:39 CST 2019 at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1340) at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1241) at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1221) at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1211) at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:105) at io.shardingsphere.shardingjdbc.jdbc.adapter.AbstractConnectionAdapter.createConnection(AbstractConnectionAdapter.java:169) at io.shardingsphere.shardingjdbc.jdbc.adapter.AbstractConnectionAdapter.createConnections(AbstractConnectionAdapter.java:143) at io.shardingsphere.shardingjdbc.jdbc.adapter.AbstractConnectionAdapter.getConnections(AbstractConnectionAdapter.java:132) at io.shardingsphere.shardingjdbc.executor.PreparedStatementExecutor$1.getConnections(PreparedStatementExecutor.java:77) at io.shardingsphere.core.executor.sql.prepare.SQLExecutePrepareTemplate.getSQLExecuteGroups(SQLExecutePrepareTemplate.java:89) at io.shardingsphere.core.executor.sql.prepare.SQLExecutePrepareTemplate.getSynchronizedExecuteUnitGroups(SQLExecutePrepareTemplate.java:67) at io.shardingsphere.core.executor.sql.prepare.SQLExecutePrepareTemplate.getExecuteUnitGroups(SQLExecutePrepareTemplate.java:59) at io.shardingsphere.shardingjdbc.executor.PreparedStatementExecutor.obtainExecuteGroups(PreparedStatementExecutor.java:73) at io.shardingsphere.shardingjdbc.executor.PreparedStatementExecutor.init(PreparedStatementExecutor.java:68) at io.shardingsphere.shardingjdbc.jdbc.core.statement.ShardingPreparedStatement.initPreparedStatementExecutor(ShardingPreparedStatement.java:188) at io.shardingsphere.shardingjdbc.jdbc.core.statement.ShardingPreparedStatement.execute(ShardingPreparedStatement.java:136) at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63) ``` ``` [2019-01-17 16:18:39.460 -ERROR] c.g.common.eventbus.EventBus.default     :  - Exception thrown by subscriber method renew(io.shardingsphere.orchestration.internal.registry.state.event.DisabledStateChangedEvent) on subscriber io.shardingsphere.shardingjdbc.orchestration.internal.datasource.OrchestrationShardingDataSource@75507e68 when dispatching event: io.shardingsphere.orchestration.internal.registry.state.event.DisabledStateChangedEvent@7b7420ec java.lang.ClassCastException: io.shardingsphere.core.rule.MasterSlaveRule cannot be cast to io.shardingsphere.orchestration.internal.rule.OrchestrationMasterSlaveRule at io.shardingsphere.shardingjdbc.orchestration.internal.datasource.OrchestrationShardingDataSource.renew(OrchestrationShardingDataSource.java:153) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at com.google.common.eventbus.Subscriber.invokeSubscriberMethod(Subscriber.java:95) at com.google.common.eventbus.Subscriber$SynchronizedSubscriber.invokeSubscriberMethod(Subscriber.java:154) at com.google.common.eventbus.Subscriber$1.run(Subscriber.java:80) at com.google.common.util.concurrent.MoreExecutors$DirectExecutor.execute(MoreExecutors.java:456) at com.google.common.eventbus.Subscriber.dispatchEvent(Subscriber.java:76) at com.google.common.eventbus.Dispatcher$PerThreadQueuedDispatcher.dispatch(Dispatcher.java:119) at com.google.common.eventbus.EventBus.post(EventBus.java:215) at io.shardingsphere.orchestration.internal.registry.listener.PostShardingOrchestrationEventListener$1.onChange(PostShardingOrchestrationEventListener.java:54) at io.shardingsphere.orchestration.reg.zookeeper.curator.CuratorZookeeperRegistryCenter$3.childEvent(CuratorZookeeperRegistryCenter.java:231) at org.apache.curator.framework.recipes.cache.TreeCache$2.apply(TreeCache.java:730) at org.apache.curator.framework.recipes.cache.TreeCache$2.apply(TreeCache.java:724) at org.apache.curator.framework.listen.ListenerContainer$1.run(ListenerContainer.java:93) at com.google.common.util.concurrent.MoreExecutors$DirectExecutorService.execute(MoreExecutors.java:310) at org.apache.curator.framework.listen.ListenerContainer.forEach(ListenerContainer.java:85) at org.apache.curator.framework.recipes.cache.TreeCache.callListeners(TreeCache.java:723) at org.apache.curator.framework.recipes.cache.TreeCache.access$1400(TreeCache.java:70) at org.apache.curator.framework.recipes.cache.TreeCache$4.run(TreeCache.java:841) at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) at java.util.concurrent.FutureTask.run(FutureTask.java:266) at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) at java.lang.Thread.run(Thread.java:748) ``` ### Reason analyze (If you can)  ### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc. 1. modify and upload config of one instance (overwrite: true). 2. the first SQL call of another instances(overwrite: false) will fail and get these exceptions after config being refreshed.  Here is the config uploaded： ``` orchestration:   name: za_blacklist   overwrite: true   registry:     serverLists: xx     namespace: sharding-jdbc-business  dataSources:   za_blacklist_m: !!com.alibaba.druid.pool.DruidDataSource     driverClassName: com.mysql.jdbc.Driver     url: jdbc:mysql://xx:3306/za_blacklist?serverTimezone=UTC&amp;useSSL=false     username: xx     password: xx     initialSize: 1     minIdle: 1     maxActive: 50     maxWait: 1000     timeBetweenEvictionRunsMillis: 10000     minEvictableIdleTimeMillis: 300000     queryTimeout: 3     validationQuery: SELECT 1     testWhileIdle: true     testOnBorrow: false     testOnReturn: false     connectionInitSqls: ["set names utf8mb4;"]   za_blacklist_s: !!com.alibaba.druid.pool.DruidDataSource     driverClassName: com.mysql.jdbc.Driver     url: jdbc:mysql://xx:3306/za_blacklist?serverTimezone=UTC&amp;useSSL=false     username: xx     password: xx     initialSize: 1     minIdle: 1     maxActive: 50     maxWait: 1000     timeBetweenEvictionRunsMillis: 10000     minEvictableIdleTimeMillis: 300000     queryTimeout: 3     validationQuery: SELECT 1     testWhileIdle: true     testOnBorrow: false     testOnReturn: false     connectionInitSqls: ["set names utf8mb4;"]  shardingRule:   masterSlaveRules:     za_blacklist:       masterDataSourceName: za_blacklist_m       slaveDataSourceNames: [za_blacklist_s]    defaultDataSourceName: za_blacklist    tables:     BlackMember:       actualDataNodes: za_blacklist.BlackMember_${(0..99).collect(){it.toString().padLeft(2,'0')}}       tableStrategy:         inline:           shardingColumn: memberId           algorithmExpression: BlackMember_${(memberId % 100).toString().padLeft(2,'0')} ```  ### Example codes for reproduce this issue (such as a github link).</body>
		<created>2019-01-17 09:16:08</created>
		<closed>2019-01-23 06:41:52</closed>
	</bug>
	<bug>
		<id>1764</id>
		<title>GROUP_CONCAT print error log "no viable alternative at input"</title>
		<body>## Question  **For English only**, other languages will not accept.  Before asking a question, make sure you have:  - Googled your question. - Searched open and closed [GitHub issues](https://github.com/sharding-sphere/sharding-sphere/issues). - Read documentation: [ShardingSphere Doc](http://shardingsphere.io/document/current/en/overview/).  Please pay attention on issues you submitted, because we maybe need more details.  If no response **more than 7 days** and we cannot reproduce it on current information, we will **close it**.  **### Which version of ShardingSphere did you use?** 3.1.0  **### Which project did you use? Sharding-JDBC or Sharding-Proxy?** Sharding-JDBC  SQL  &gt; SELECT GROUP_CONCAT(column) FROM table  there will a error log, but the result is right. Not happen when use spring-jdbc  error log:  &gt; line 1:34 no viable alternative at input 'GROUP_CONCAT(authority.name)'  Would you tell me the reason, please?</body>
		<created>2019-01-16 09:14:42</created>
		<closed>2019-01-17 07:01:18</closed>
	</bug>
	<bug>
		<id>1754</id>
		<title>can't get partition key value </title>
		<body>## Bug Report  **For English only**, other languages will not accept.  Before report a bug, make sure you have:  - Searched open and closed [GitHub issues](https://github.com/sharding-sphere/sharding-sphere/issues). - Read documentation: [ShardingSphere Doc](http://shardingsphere.io/document/current/en/overview/).  Please pay attention on issues you submitted, because we maybe need more details.  If no response **more than 7 days** and we cannot reproduce it on current information, we will **close it**.  Please answer these questions before submitting your issue. Thanks!  ### Which version of ShardingSphere did you use? 3.1.0 ### Which project did you use? Sharding-JDBC or Sharding-Proxy? Sharding-Proxy ### Expected behavior     ps = connection.prepareStatement("select * from t_order where merc_no='1234567891' and tx_dt in ('20190102', '20190103') limit 0,10 ");    08:38:35.467 [main] INFO MyComplexKeysShardingAlgorithm - collection:["ds_0","ds_1","ds_2","ds_3"],shardingValues:[{"columnName":"merc_no","logicTableName":"t_order","values"**:[-1]**},{"columnName":"tx_dt","logicTableName":"t_order",**"values":[-1,-1]}**] t_order:   databaseStrategy:     complex:       shardingColumns: merc_no, tx_dt       algorithmClassName: MyComplexKeysShardingAlgorithm   tableStrategy:     inline:       shardingColumn: tx_dt       algorithmExpression: t_order_${tx_dt}  ### Actual behavior  ### Reason analyze (If you can)  ### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.  ### Example codes for reproduce this issue (such as a github link). </body>
		<created>2019-01-15 04:59:36</created>
		<closed>2019-01-16 10:19:26</closed>
	</bug>
	<bug>
		<id>1753</id>
		<title>hope to support with count sub query sql</title>
		<body>## Bug Report  **For English only**, other languages will not accept. SQL:  ``` SELECT COUNT(1) FROM (       SELECT         r.`channel` as `channel_code`,         r.`channel_name` as `channel_name`,         COUNT(r.id) `total_cnt`,         COUNT(r.connect_flag = "Y") `connected_cnt`         FROM record_callin r         LEFT JOIN sys_org_tree_rel tree ON tree.teamid = r.teamid         LEFT JOIN sys_user u ON u.brokerid = r.brokerid         where         r.create_time between '2018-01-01 00:00:00' and   '2019-01-01 00:00:00'         GROUP BY          r.`channel`  ) TOTAL ``` hope to support it </body>
		<created>2019-01-15 03:38:36</created>
		<closed>2019-05-11 13:58:10</closed>
	</bug>
	<bug>
		<id>1722</id>
		<title>default datasource page limit problem</title>
		<body>version：4.0.0.M1-SNAPSHOT branch：dev  orm: spring jpa  not sharding table use default datasource，but  page data is the same，for the following limit: ``` limit 1,10 limit 2,10 limt 3,10 ```  java code ``` //junit test java code          Pageable pageable1 = new PageRequest(1,10);         List&lt;UserPo&gt; pos1 = userRepository.getWithoutUserIdListBy("appcode_idxyer_android", new Date(),pageable1);         log.info("pos1:{}",pos1.toString());          Pageable pageable2 = new PageRequest(2,10);         List&lt;UserPo&gt; pos2 = userRepository.getWithoutUserIdListBy("appcode_idxyer_android", new Date(),pageable2);         log.info("pos2:{}",pos2.toString());          Pageable pageable3 = new PageRequest(3,10);         List&lt;UserPo&gt; pos3 = userRepository.getWithoutUserIdListBy("appcode_idxyer_android", new Date(),pageable3);         log.info("pos3:{}",pos3.toString());  //orm code   @Query("SELECT u FROM UserPo u WHERE u.userId is NULL and u.appName = ?1 and u.modifyTime &lt; ?2")   List&lt;UserPo&gt; getWithoutUserIdListBy(String appName, Date date, Pageable pageable);  ```  output log ```  2019-01-10 17:04:51.158  INFO 95981 --- [           main] ShardingSphere-SQL                       : Rule Type: sharding 2019-01-10 17:04:51.158  INFO 95981 --- [           main] ShardingSphere-SQL                       : Logic SQL: select userpo0_.id as id1_5_, userpo0_.createTime as createTi2_5_, userpo0_.appCode as appCode3_5_, userpo0_.appName as appName4_5_, userpo0_.appVersion as appVersi5_5_, userpo0_.deviceMc as deviceMc6_5_, userpo0_.deviceToken as deviceTo7_5_, userpo0_.deviceTokenType as deviceTo8_5_, userpo0_.deviceType as deviceTy9_5_, userpo0_.modifyTime as modifyT10_5_, userpo0_.osVersion as osVersi11_5_, userpo0_.userId as userId12_5_, userpo0_.version as version13_5_ from push_user userpo0_ where (userpo0_.userId is null) and userpo0_.appName=? and userpo0_.modifyTime&lt;? limit ?, ? 2019-01-10 17:04:51.158  INFO 95981 --- [           main] ShardingSphere-SQL                       : SQLStatement: SelectStatement(super=DQLStatement(super=io.shardingsphere.core.parsing.parser.sql.dql.select.SelectStatement@7da70124), containStar=false, firstSelectItemStartPosition=7, selectListLastPosition=460, groupByLastPosition=0, items=[CommonSelectItem(expression=userpo0_.id, alias=Optional.of(id1_5_)), CommonSelectItem(expression=userpo0_.createTime, alias=Optional.of(createTi2_5_)), CommonSelectItem(expression=userpo0_.appCode, alias=Optional.of(appCode3_5_)), CommonSelectItem(expression=userpo0_.appName, alias=Optional.of(appName4_5_)), CommonSelectItem(expression=userpo0_.appVersion, alias=Optional.of(appVersi5_5_)), CommonSelectItem(expression=userpo0_.deviceMc, alias=Optional.of(deviceMc6_5_)), CommonSelectItem(expression=userpo0_.deviceToken, alias=Optional.of(deviceTo7_5_)), CommonSelectItem(expression=userpo0_.deviceTokenType, alias=Optional.of(deviceTo8_5_)), CommonSelectItem(expression=userpo0_.deviceType, alias=Optional.of(deviceTy9_5_)), CommonSelectItem(expression=userpo0_.modifyTime, alias=Optional.of(modifyT10_5_)), CommonSelectItem(expression=userpo0_.osVersion, alias=Optional.of(osVersi11_5_)), CommonSelectItem(expression=userpo0_.userId, alias=Optional.of(userId12_5_)), CommonSelectItem(expression=userpo0_.version, alias=Optional.of(version13_5_))], groupByItems=[], orderByItems=[], limit=Limit(offset=LimitValue(value=10, index=2, boundOpened=false), rowCount=LimitValue(value=10, index=3, boundOpened=false)), subQueryStatement=null, subQueryStatements=[], subQueryConditions=[]) 2019-01-10 17:04:51.159  INFO 95981 --- [           main] ShardingSphere-SQL                       : Actual SQL: main ::: select userpo0_.id as id1_5_, userpo0_.createTime as createTi2_5_, userpo0_.appCode as appCode3_5_, userpo0_.appName as appName4_5_, userpo0_.appVersion as appVersi5_5_, userpo0_.deviceMc as deviceMc6_5_, userpo0_.deviceToken as deviceTo7_5_, userpo0_.deviceTokenType as deviceTo8_5_, userpo0_.deviceType as deviceTy9_5_, userpo0_.modifyTime as modifyT10_5_, userpo0_.osVersion as osVersi11_5_, userpo0_.userId as userId12_5_, userpo0_.version as version13_5_ from push_user userpo0_ where (userpo0_.userId is null) and userpo0_.appName=? and userpo0_.modifyTime&lt;? limit ?, ? ::: [[appcode_idxyer_android, 2019-01-10 17:04:49.417, 0, 20]] 2019-01-10 17:04:51.324  INFO 95981 --- [           main] c.d.p.push.service.UserServiceTest       : pos1:[UserPo{userId='13870325', appName='appcode_idxyer_android', appCode='4124c5f1-2029-4fda-b06f-a87ac5ad8d11', appVersion='7.4', osVersion='8.0.0', deviceType='Android', deviceMc='87c894be5f7b4c42a3927985a72018bf', deviceTokenType='ANDROID', deviceToken='Gj3Gfge3dCygO1uUq0V8qVMuqIdu+N758R+dd4M46Jg=', modifyTime=2018-02-06 16:29:42.0, version=0}, UserPo{userId='13873758', appName='appcode_idxyer_android', appCode='4124c5f1-2029-4fda-b06f-a87ac5ad8d11', appVersion='8.0', osVersion='9', deviceType='Google Pixel 2', deviceMc='379326c5a69a42cd80989c2472a28ac5', deviceTokenType='GETUI', deviceToken='9c53678a8234a30e2fc625f9f13e3b3f', modifyTime=2018-11-27 13:17:14.0, version=2}, UserPo{userId='13874733', appName='appcode_idxyer_android', appCode='4124c5f1-2029-4fda-b06f-a87ac5ad8d11', appVersion='8.0', osVersion='9', deviceType='Google Pixel 2', deviceMc='d5f32b5998cd4b208c69f117f6955470', deviceTokenType='GETUI', deviceToken='e277f89da8d2e622f6260cf328072625', modifyTime=2019-01-08 20:07:36.0, version=8}, UserPo{userId='13874828', appName='appcode_idxyer_android', appCode='4124c5f1-2029-4fda-b06f-a87ac5ad8d11', appVersion='8.0', osVersion='9', deviceType='Google Pixel 2', deviceMc='37ba63ce0ba94b5ea7daa76a64a0affb', deviceTokenType='GETUI', deviceToken='20bb8e121d44843f74dc47046076b804', modifyTime=2019-01-09 13:35:34.0, version=3}, UserPo{userId='13874848', appName='appcode_idxyer_android', appCode='4124c5f1-2029-4fda-b06f-a87ac5ad8d11', appVersion='8.0', osVersion='9', deviceType='Google Pixel 2', deviceMc='40e16380c87f44518bf3a53493969d41', deviceTokenType='GETUI', deviceToken='480e564536a70b5842d9d041d45909ab', modifyTime=2019-01-09 19:15:17.0, version=2}, UserPo{userId='13871480', appName='appcode_idxyer_android', appCode='4124c5f1-2029-4fda-b06f-a87ac5ad8d11', appVersion='8.0.3', osVersion='6.0.1', deviceType='HUAWEI ATH-AL00', deviceMc='0000000040bb4e89dc87704f1e8dc50b', deviceTokenType='ANDROID', deviceToken='7mrI8oEJONd1rrTszdw50VdZYFfDNEN3L/gIWul+GtcMqaCFSl5+aGDZDTwf/B1S', modifyTime=2018-06-28 15:08:55.0, version=0}, UserPo{userId='13871210', appName='appcode_idxyer_android', appCode='4124c5f1-2029-4fda-b06f-a87ac5ad8d11', appVersion='8.0.0', osVersion='8.0.0', deviceType='HUAWEI DUK-AL20', deviceMc='84f05e03749b4b54872fda60d3ff8c29', deviceTokenType='ANDROID', deviceToken='7RP7dly55jRaVZqKcJpsv4hUZtZUF9J3bIBQn3VkGUk=', modifyTime=2018-06-01 17:54:19.0, version=0}, UserPo{userId='13869945', appName='appcode_idxyer_android', appCode='4124c5f1-2029-4fda-b06f-a87ac5ad8d11', appVersion='7.4.2', osVersion='4.4.2', deviceType='HUAWEI G750-T01', deviceMc='ffffffffb971f1cccf7a5bf70033c587', deviceTokenType='ANDROID', deviceToken='y5Etn5TKVUksjFg8urjiBHb11gy+kiVWbDCCgB3fSuA=~', modifyTime=2018-01-19 18:34:57.0, version=0}, UserPo{userId='13870431', appName='appcode_idxyer_android', appCode='4124c5f1-2029-4fda-b06f-a87ac5ad8d11', appVersion='7.7.3', osVersion='4.4.2', deviceType='HUAWEI G750-T01', deviceMc='ffffffffb971f1cccf7a5bf70033c587', deviceTokenType='ANDROID', deviceToken='kfCT4MbWnJWZL4XUNLcV6OD/u9TbNoTIRaStPXEzTjQ=', modifyTime=2018-03-13 18:20:28.0, version=0}, UserPo{userId='13871082', appName='appcode_idxyer_android', appCode='4124c5f1-2029-4fda-b06f-a87ac5ad8d11', appVersion='7.7.6', osVersion='6.0', deviceType='HUAWEI GRA-CL00', deviceMc='00000000337246391a93c1ae0033c587', deviceTokenType='ANDROID', deviceToken='H1/h8RhkYATVtPuqwduPzMfCAJwRP47h4YFxPhFmyRw=', modifyTime=2018-05-25 14:18:03.0, version=0}] Hibernate: select userpo0_.id as id1_5_, userpo0_.createTime as createTi2_5_, userpo0_.appCode as appCode3_5_, userpo0_.appName as appName4_5_, userpo0_.appVersion as appVersi5_5_, userpo0_.deviceMc as deviceMc6_5_, userpo0_.deviceToken as deviceTo7_5_, userpo0_.deviceTokenType as deviceTo8_5_, userpo0_.deviceType as deviceTy9_5_, userpo0_.modifyTime as modifyT10_5_, userpo0_.osVersion as osVersi11_5_, userpo0_.userId as userId12_5_, userpo0_.version as version13_5_ from push_user userpo0_ where (userpo0_.userId is null) and userpo0_.appName=? and userpo0_.modifyTime&lt;? limit ?, ? 2019-01-10 17:04:51.327  INFO 95981 --- [           main] ShardingSphere-SQL                       : Rule Type: sharding 2019-01-10 17:04:51.327  INFO 95981 --- [           main] ShardingSphere-SQL                       : Logic SQL: select userpo0_.id as id1_5_, userpo0_.createTime as createTi2_5_, userpo0_.appCode as appCode3_5_, userpo0_.appName as appName4_5_, userpo0_.appVersion as appVersi5_5_, userpo0_.deviceMc as deviceMc6_5_, userpo0_.deviceToken as deviceTo7_5_, userpo0_.deviceTokenType as deviceTo8_5_, userpo0_.deviceType as deviceTy9_5_, userpo0_.modifyTime as modifyT10_5_, userpo0_.osVersion as osVersi11_5_, userpo0_.userId as userId12_5_, userpo0_.version as version13_5_ from push_user userpo0_ where (userpo0_.userId is null) and userpo0_.appName=? and userpo0_.modifyTime&lt;? limit ?, ? 2019-01-10 17:04:51.327  INFO 95981 --- [           main] ShardingSphere-SQL                       : SQLStatement: SelectStatement(super=DQLStatement(super=io.shardingsphere.core.parsing.parser.sql.dql.select.SelectStatement@7da70124), containStar=false, firstSelectItemStartPosition=7, selectListLastPosition=460, groupByLastPosition=0, items=[CommonSelectItem(expression=userpo0_.id, alias=Optional.of(id1_5_)), CommonSelectItem(expression=userpo0_.createTime, alias=Optional.of(createTi2_5_)), CommonSelectItem(expression=userpo0_.appCode, alias=Optional.of(appCode3_5_)), CommonSelectItem(expression=userpo0_.appName, alias=Optional.of(appName4_5_)), CommonSelectItem(expression=userpo0_.appVersion, alias=Optional.of(appVersi5_5_)), CommonSelectItem(expression=userpo0_.deviceMc, alias=Optional.of(deviceMc6_5_)), CommonSelectItem(expression=userpo0_.deviceToken, alias=Optional.of(deviceTo7_5_)), CommonSelectItem(expression=userpo0_.deviceTokenType, alias=Optional.of(deviceTo8_5_)), CommonSelectItem(expression=userpo0_.deviceType, alias=Optional.of(deviceTy9_5_)), CommonSelectItem(expression=userpo0_.modifyTime, alias=Optional.of(modifyT10_5_)), CommonSelectItem(expression=userpo0_.osVersion, alias=Optional.of(osVersi11_5_)), CommonSelectItem(expression=userpo0_.userId, alias=Optional.of(userId12_5_)), CommonSelectItem(expression=userpo0_.version, alias=Optional.of(version13_5_))], groupByItems=[], orderByItems=[], limit=Limit(offset=LimitValue(value=20, index=2, boundOpened=false), rowCount=LimitValue(value=10, index=3, boundOpened=false)), subQueryStatement=null, subQueryStatements=[], subQueryConditions=[]) 2019-01-10 17:04:51.327  INFO 95981 --- [           main] ShardingSphere-SQL                       : Actual SQL: main ::: select userpo0_.id as id1_5_, userpo0_.createTime as createTi2_5_, userpo0_.appCode as appCode3_5_, userpo0_.appName as appName4_5_, userpo0_.appVersion as appVersi5_5_, userpo0_.deviceMc as deviceMc6_5_, userpo0_.deviceToken as deviceTo7_5_, userpo0_.deviceTokenType as deviceTo8_5_, userpo0_.deviceType as deviceTy9_5_, userpo0_.modifyTime as modifyT10_5_, userpo0_.osVersion as osVersi11_5_, userpo0_.userId as userId12_5_, userpo0_.version as version13_5_ from push_user userpo0_ where (userpo0_.userId is null) and userpo0_.appName=? and userpo0_.modifyTime&lt;? limit ?, ? ::: [[appcode_idxyer_android, 2019-01-10 17:04:51.325, 0, 30]] 2019-01-10 17:04:51.343  INFO 95981 --- [           main] c.d.p.push.service.UserServiceTest       : pos2:[UserPo{userId='13870325', appName='appcode_idxyer_android', appCode='4124c5f1-2029-4fda-b06f-a87ac5ad8d11', appVersion='7.4', osVersion='8.0.0', deviceType='Android', deviceMc='87c894be5f7b4c42a3927985a72018bf', deviceTokenType='ANDROID', deviceToken='Gj3Gfge3dCygO1uUq0V8qVMuqIdu+N758R+dd4M46Jg=', modifyTime=2018-02-06 16:29:42.0, version=0}, UserPo{userId='13873758', appName='appcode_idxyer_android', appCode='4124c5f1-2029-4fda-b06f-a87ac5ad8d11', appVersion='8.0', osVersion='9', deviceType='Google Pixel 2', deviceMc='379326c5a69a42cd80989c2472a28ac5', deviceTokenType='GETUI', deviceToken='9c53678a8234a30e2fc625f9f13e3b3f', modifyTime=2018-11-27 13:17:14.0, version=2}, UserPo{userId='13874733', appName='appcode_idxyer_android', appCode='4124c5f1-2029-4fda-b06f-a87ac5ad8d11', appVersion='8.0', osVersion='9', deviceType='Google Pixel 2', deviceMc='d5f32b5998cd4b208c69f117f6955470', deviceTokenType='GETUI', deviceToken='e277f89da8d2e622f6260cf328072625', modifyTime=2019-01-08 20:07:36.0, version=8}, UserPo{userId='13874828', appName='appcode_idxyer_android', appCode='4124c5f1-2029-4fda-b06f-a87ac5ad8d11', appVersion='8.0', osVersion='9', deviceType='Google Pixel 2', deviceMc='37ba63ce0ba94b5ea7daa76a64a0affb', deviceTokenType='GETUI', deviceToken='20bb8e121d44843f74dc47046076b804', modifyTime=2019-01-09 13:35:34.0, version=3}, UserPo{userId='13874848', appName='appcode_idxyer_android', appCode='4124c5f1-2029-4fda-b06f-a87ac5ad8d11', appVersion='8.0', osVersion='9', deviceType='Google Pixel 2', deviceMc='40e16380c87f44518bf3a53493969d41', deviceTokenType='GETUI', deviceToken='480e564536a70b5842d9d041d45909ab', modifyTime=2019-01-09 19:15:17.0, version=2}, UserPo{userId='13871480', appName='appcode_idxyer_android', appCode='4124c5f1-2029-4fda-b06f-a87ac5ad8d11', appVersion='8.0.3', osVersion='6.0.1', deviceType='HUAWEI ATH-AL00', deviceMc='0000000040bb4e89dc87704f1e8dc50b', deviceTokenType='ANDROID', deviceToken='7mrI8oEJONd1rrTszdw50VdZYFfDNEN3L/gIWul+GtcMqaCFSl5+aGDZDTwf/B1S', modifyTime=2018-06-28 15:08:55.0, version=0}, UserPo{userId='13871210', appName='appcode_idxyer_android', appCode='4124c5f1-2029-4fda-b06f-a87ac5ad8d11', appVersion='8.0.0', osVersion='8.0.0', deviceType='HUAWEI DUK-AL20', deviceMc='84f05e03749b4b54872fda60d3ff8c29', deviceTokenType='ANDROID', deviceToken='7RP7dly55jRaVZqKcJpsv4hUZtZUF9J3bIBQn3VkGUk=', modifyTime=2018-06-01 17:54:19.0, version=0}, UserPo{userId='13869945', appName='appcode_idxyer_android', appCode='4124c5f1-2029-4fda-b06f-a87ac5ad8d11', appVersion='7.4.2', osVersion='4.4.2', deviceType='HUAWEI G750-T01', deviceMc='ffffffffb971f1cccf7a5bf70033c587', deviceTokenType='ANDROID', deviceToken='y5Etn5TKVUksjFg8urjiBHb11gy+kiVWbDCCgB3fSuA=~', modifyTime=2018-01-19 18:34:57.0, version=0}, UserPo{userId='13870431', appName='appcode_idxyer_android', appCode='4124c5f1-2029-4fda-b06f-a87ac5ad8d11', appVersion='7.7.3', osVersion='4.4.2', deviceType='HUAWEI G750-T01', deviceMc='ffffffffb971f1cccf7a5bf70033c587', deviceTokenType='ANDROID', deviceToken='kfCT4MbWnJWZL4XUNLcV6OD/u9TbNoTIRaStPXEzTjQ=', modifyTime=2018-03-13 18:20:28.0, version=0}, UserPo{userId='13871082', appName='appcode_idxyer_android', appCode='4124c5f1-2029-4fda-b06f-a87ac5ad8d11', appVersion='7.7.6', osVersion='6.0', deviceType='HUAWEI GRA-CL00', deviceMc='00000000337246391a93c1ae0033c587', deviceTokenType='ANDROID', deviceToken='H1/h8RhkYATVtPuqwduPzMfCAJwRP47h4YFxPhFmyRw=', modifyTime=2018-05-25 14:18:03.0, version=0}] Hibernate: select userpo0_.id as id1_5_, userpo0_.createTime as createTi2_5_, userpo0_.appCode as appCode3_5_, userpo0_.appName as appName4_5_, userpo0_.appVersion as appVersi5_5_, userpo0_.deviceMc as deviceMc6_5_, userpo0_.deviceToken as deviceTo7_5_, userpo0_.deviceTokenType as deviceTo8_5_, userpo0_.deviceType as deviceTy9_5_, userpo0_.modifyTime as modifyT10_5_, userpo0_.osVersion as osVersi11_5_, userpo0_.userId as userId12_5_, userpo0_.version as version13_5_ from push_user userpo0_ where (userpo0_.userId is null) and userpo0_.appName=? and userpo0_.modifyTime&lt;? limit ?, ? 2019-01-10 17:04:51.346  INFO 95981 --- [           main] ShardingSphere-SQL                       : Rule Type: sharding 2019-01-10 17:04:51.346  INFO 95981 --- [           main] ShardingSphere-SQL                       : Logic SQL: select userpo0_.id as id1_5_, userpo0_.createTime as createTi2_5_, userpo0_.appCode as appCode3_5_, userpo0_.appName as appName4_5_, userpo0_.appVersion as appVersi5_5_, userpo0_.deviceMc as deviceMc6_5_, userpo0_.deviceToken as deviceTo7_5_, userpo0_.deviceTokenType as deviceTo8_5_, userpo0_.deviceType as deviceTy9_5_, userpo0_.modifyTime as modifyT10_5_, userpo0_.osVersion as osVersi11_5_, userpo0_.userId as userId12_5_, userpo0_.version as version13_5_ from push_user userpo0_ where (userpo0_.userId is null) and userpo0_.appName=? and userpo0_.modifyTime&lt;? limit ?, ? 2019-01-10 17:04:51.346  INFO 95981 --- [           main] ShardingSphere-SQL                       : SQLStatement: SelectStatement(super=DQLStatement(super=io.shardingsphere.core.parsing.parser.sql.dql.select.SelectStatement@7da70124), containStar=false, firstSelectItemStartPosition=7, selectListLastPosition=460, groupByLastPosition=0, items=[CommonSelectItem(expression=userpo0_.id, alias=Optional.of(id1_5_)), CommonSelectItem(expression=userpo0_.createTime, alias=Optional.of(createTi2_5_)), CommonSelectItem(expression=userpo0_.appCode, alias=Optional.of(appCode3_5_)), CommonSelectItem(expression=userpo0_.appName, alias=Optional.of(appName4_5_)), CommonSelectItem(expression=userpo0_.appVersion, alias=Optional.of(appVersi5_5_)), CommonSelectItem(expression=userpo0_.deviceMc, alias=Optional.of(deviceMc6_5_)), CommonSelectItem(expression=userpo0_.deviceToken, alias=Optional.of(deviceTo7_5_)), CommonSelectItem(expression=userpo0_.deviceTokenType, alias=Optional.of(deviceTo8_5_)), CommonSelectItem(expression=userpo0_.deviceType, alias=Optional.of(deviceTy9_5_)), CommonSelectItem(expression=userpo0_.modifyTime, alias=Optional.of(modifyT10_5_)), CommonSelectItem(expression=userpo0_.osVersion, alias=Optional.of(osVersi11_5_)), CommonSelectItem(expression=userpo0_.userId, alias=Optional.of(userId12_5_)), CommonSelectItem(expression=userpo0_.version, alias=Optional.of(version13_5_))], groupByItems=[], orderByItems=[], limit=Limit(offset=LimitValue(value=30, index=2, boundOpened=false), rowCount=LimitValue(value=10, index=3, boundOpened=false)), subQueryStatement=null, subQueryStatements=[], subQueryConditions=[]) 2019-01-10 17:04:51.346  INFO 95981 --- [           main] ShardingSphere-SQL                       : Actual SQL: main ::: select userpo0_.id as id1_5_, userpo0_.createTime as createTi2_5_, userpo0_.appCode as appCode3_5_, userpo0_.appName as appName4_5_, userpo0_.appVersion as appVersi5_5_, userpo0_.deviceMc as deviceMc6_5_, userpo0_.deviceToken as deviceTo7_5_, userpo0_.deviceTokenType as deviceTo8_5_, userpo0_.deviceType as deviceTy9_5_, userpo0_.modifyTime as modifyT10_5_, userpo0_.osVersion as osVersi11_5_, userpo0_.userId as userId12_5_, userpo0_.version as version13_5_ from push_user userpo0_ where (userpo0_.userId is null) and userpo0_.appName=? and userpo0_.modifyTime&lt;? limit ?, ? ::: [[appcode_idxyer_android, 2019-01-10 17:04:51.344, 0, 40]] 2019-01-10 17:04:51.358  INFO 95981 --- [           main] c.d.p.push.service.UserServiceTest       : pos3:[UserPo{userId='13870325', appName='appcode_idxyer_android', appCode='4124c5f1-2029-4fda-b06f-a87ac5ad8d11', appVersion='7.4', osVersion='8.0.0', deviceType='Android', deviceMc='87c894be5f7b4c42a3927985a72018bf', deviceTokenType='ANDROID', deviceToken='Gj3Gfge3dCygO1uUq0V8qVMuqIdu+N758R+dd4M46Jg=', modifyTime=2018-02-06 16:29:42.0, version=0}, UserPo{userId='13873758', appName='appcode_idxyer_android', appCode='4124c5f1-2029-4fda-b06f-a87ac5ad8d11', appVersion='8.0', osVersion='9', deviceType='Google Pixel 2', deviceMc='379326c5a69a42cd80989c2472a28ac5', deviceTokenType='GETUI', deviceToken='9c53678a8234a30e2fc625f9f13e3b3f', modifyTime=2018-11-27 13:17:14.0, version=2}, UserPo{userId='13874733', appName='appcode_idxyer_android', appCode='4124c5f1-2029-4fda-b06f-a87ac5ad8d11', appVersion='8.0', osVersion='9', deviceType='Google Pixel 2', deviceMc='d5f32b5998cd4b208c69f117f6955470', deviceTokenType='GETUI', deviceToken='e277f89da8d2e622f6260cf328072625', modifyTime=2019-01-08 20:07:36.0, version=8}, UserPo{userId='13874828', appName='appcode_idxyer_android', appCode='4124c5f1-2029-4fda-b06f-a87ac5ad8d11', appVersion='8.0', osVersion='9', deviceType='Google Pixel 2', deviceMc='37ba63ce0ba94b5ea7daa76a64a0affb', deviceTokenType='GETUI', deviceToken='20bb8e121d44843f74dc47046076b804', modifyTime=2019-01-09 13:35:34.0, version=3}, UserPo{userId='13874848', appName='appcode_idxyer_android', appCode='4124c5f1-2029-4fda-b06f-a87ac5ad8d11', appVersion='8.0', osVersion='9', deviceType='Google Pixel 2', deviceMc='40e16380c87f44518bf3a53493969d41', deviceTokenType='GETUI', deviceToken='480e564536a70b5842d9d041d45909ab', modifyTime=2019-01-09 19:15:17.0, version=2}, UserPo{userId='13871480', appName='appcode_idxyer_android', appCode='4124c5f1-2029-4fda-b06f-a87ac5ad8d11', appVersion='8.0.3', osVersion='6.0.1', deviceType='HUAWEI ATH-AL00', deviceMc='0000000040bb4e89dc87704f1e8dc50b', deviceTokenType='ANDROID', deviceToken='7mrI8oEJONd1rrTszdw50VdZYFfDNEN3L/gIWul+GtcMqaCFSl5+aGDZDTwf/B1S', modifyTime=2018-06-28 15:08:55.0, version=0}, UserPo{userId='13871210', appName='appcode_idxyer_android', appCode='4124c5f1-2029-4fda-b06f-a87ac5ad8d11', appVersion='8.0.0', osVersion='8.0.0', deviceType='HUAWEI DUK-AL20', deviceMc='84f05e03749b4b54872fda60d3ff8c29', deviceTokenType='ANDROID', deviceToken='7RP7dly55jRaVZqKcJpsv4hUZtZUF9J3bIBQn3VkGUk=', modifyTime=2018-06-01 17:54:19.0, version=0}, UserPo{userId='13869945', appName='appcode_idxyer_android', appCode='4124c5f1-2029-4fda-b06f-a87ac5ad8d11', appVersion='7.4.2', osVersion='4.4.2', deviceType='HUAWEI G750-T01', deviceMc='ffffffffb971f1cccf7a5bf70033c587', deviceTokenType='ANDROID', deviceToken='y5Etn5TKVUksjFg8urjiBHb11gy+kiVWbDCCgB3fSuA=~', modifyTime=2018-01-19 18:34:57.0, version=0}, UserPo{userId='13870431', appName='appcode_idxyer_android', appCode='4124c5f1-2029-4fda-b06f-a87ac5ad8d11', appVersion='7.7.3', osVersion='4.4.2', deviceType='HUAWEI G750-T01', deviceMc='ffffffffb971f1cccf7a5bf70033c587', deviceTokenType='ANDROID', deviceToken='kfCT4MbWnJWZL4XUNLcV6OD/u9TbNoTIRaStPXEzTjQ=', modifyTime=2018-03-13 18:20:28.0, version=0}, UserPo{userId='13871082', appName='appcode_idxyer_android', appCode='4124c5f1-2029-4fda-b06f-a87ac5ad8d11', appVersion='7.7.6', osVersion='6.0', deviceType='HUAWEI GRA-CL00', deviceMc='00000000337246391a93c1ae0033c587', deviceTokenType='ANDROID', deviceToken='H1/h8RhkYATVtPuqwduPzMfCAJwRP47h4YFxPhFmyRw=', modifyTime=2018-05-25 14:18:03.0, version=0}] ```  now look this log,limit is not same ,but data is same. expect：output of other page data. </body>
		<created>2019-01-07 09:56:25</created>
		<closed>2019-01-11 09:16:37</closed>
	</bug>
	<bug>
		<id>1718</id>
		<title>sharding-proxy no record “Error Code: 3054. Unknown exception: Index: 0, Size: 0”</title>
		<body>## Bug Report  **For English only**, other languages will not accept.  Before report a bug, make sure you have:  - Searched open and closed [GitHub issues](https://github.com/sharding-sphere/sharding-sphere/issues). - Read documentation: [ShardingSphere Doc](http://shardingsphere.io/document/current/en/overview/).  Please pay attention on issues you submitted, because we maybe need more details.  If no response **more than 7 days** and we cannot reproduce it on current information, we will **close it**.  Please answer these questions before submitting your issue. Thanks!  ### Which version of ShardingSphere did you use?  ### Which project did you use? Sharding-JDBC or Sharding-Proxy? Sharding-Proxy 3.1.0 ### Expected behavior  ### Actual behavior 09:47:14select distinct merc_no from t_order where tx_dt in ('20180103', '20190106') LIMIT 0, 100Error Code: 3054. Unknown exception: Index: 0, Size: 00.066 sec  ### Reason analyze (If you can)  ### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.  ### Example codes for reproduce this issue (such as a github link). </body>
		<created>2019-01-06 01:51:52</created>
		<closed>2019-01-10 13:34:07</closed>
	</bug>
	<bug>
		<id>1716</id>
		<title>hint strategy sometimes cannot hit expected table</title>
		<body> [hint code.zip](https://github.com/sharding-sphere/sharding-sphere/files/2729287/hint.code.zip) ## Bug Report  **For English only**, other languages will not accept.  Before report a bug, make sure you have:  - Searched open and closed [GitHub issues](https://github.com/sharding-sphere/sharding-sphere/issues). - Read documentation: [ShardingSphere Doc](http://shardingsphere.io/document/current/en/overview/).  Please pay attention on issues you submitted, because we maybe need more details.  If no response **more than 7 days** and we cannot reproduce it on current information, we will **close it**.  Please answer these questions before submitting your issue. Thanks!  ### Which version of ShardingSphere did you use?  3.1.0.M1  and 3.1.0  ### Which project did you use? Sharding-JDBC or Sharding-Proxy? Sharding-JDBC ### Expected behavior hint strategy will work ok  for every table in my project. table:order_item  selcect、update operate  can hit expect table   ### Actual behavior table:order_item_goods_out  insert\update can hit expect table but .select operate cannot hit expect table.  ### Reason analyze (If you can) I don't understand this, the hint strategy is used in the same way in different tables but in fact the execution is different in different tables ### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.     ### Example codes for reproduce this issue (such as a github link). </body>
		<created>2019-01-05 07:25:46</created>
		<closed>2019-01-07 09:21:34</closed>
	</bug>
	<bug>
		<id>1715</id>
		<title>error when Logic table have the same name as Actual table .</title>
		<body>### update it looks like a driver compatibility problem with `mysql-connector-java` of 6.0.6 or above the issue title should updated in some days --- i just use database sharding not table sharding, but when Logic table have the same name as Actual table, some error occurs ```  Caused by: java.sql.SQLException: Column name pattern can not be NULL or empty. ``` here is my config of yaml ```yaml shardingRule:   tables:    # same name as Actual table， but when i use ms_ds${1..2}.t_user1, it will be ok    # but when i change table name in mysql to t_user1，then ms_ds${1..2}.t_user1 does not work either     t_user:       actualDataNodes: ms_ds${1..2}.t_user       databaseStrategy:         inline:           shardingColumn: id           algorithmExpression: ms_ds${id % 2 + 1}        keyGeneratorColumnName: id ```  i think it may be a bug  </body>
		<created>2019-01-04 16:48:19</created>
		<closed>2019-01-09 15:12:28</closed>
	</bug>
	<bug>
		<id>1714</id>
		<title>How to fix "Initialized data sources can not be master-slave data sources"</title>
		<body>## Question  **For English only**, other languages will not accept.  Before asking a question, make sure you have:  - Googled your question. - Searched open and closed [GitHub issues](https://github.com/sharding-sphere/sharding-sphere/issues). - Read documentation: [ShardingSphere Doc](http://shardingsphere.io/document/current/en/overview/).  Please pay attention on issues you submitted, because we maybe need more details.  If no response **more than 7 days** and we cannot reproduce it on current information, we will **close it**.  VERSION: 3.0.0  I learn to use "Sharding + Read-write splitting"(http://shardingsphere.io/document/current/en/manual/sharding-jdbc/configuration/config-spring-namespace/)  recently  when using official demo config, get an error on init,  ` &lt;pre&gt; Caused by: java.lang.IllegalArgumentException: Initialized data sources can not be master-slave data sources.     at com.google.common.base.Preconditions.checkArgument(Preconditions.java:122)     at io.shardingsphere.shardingjdbc.jdbc.core.datasource.ShardingDataSource.checkDataSourceType(ShardingDataSource.java:77)     at io.shardingsphere.shardingjdbc.jdbc.core.datasource.ShardingDataSource.&lt;init&gt;(ShardingDataSource.java:59)     at io.shardingsphere.shardingjdbc.spring.datasource.SpringShardingDataSource.&lt;init&gt;(SpringShardingDataSource.java:39)     at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)     at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)     at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)     at java.lang.reflect.Constructor.newInstance(Constructor.java:423)     at org.springframework.beans.BeanUtils.instantiateClass(BeanUtils.java:142)     ... 66 more &lt;/pre&gt; `  **### my config xml like this** ` &lt;?xml version="1.0" encoding="UTF-8"?&gt; &lt;beans xmlns="http://www.springframework.org/schema/beans"        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"        xmlns:context="http://www.springframework.org/schema/context"        xmlns:tx="http://www.springframework.org/schema/tx"        xmlns:sharding="http://shardingsphere.io/schema/shardingsphere/sharding"        xmlns:master-slave="http://shardingsphere.io/schema/shardingsphere/masterslave"        xsi:schemaLocation="http://www.springframework.org/schema/beans                         http://www.springframework.org/schema/beans/spring-beans.xsd                          http://www.springframework.org/schema/tx                          http://www.springframework.org/schema/tx/spring-tx.xsd                         http://www.springframework.org/schema/context                          http://www.springframework.org/schema/context/spring-context.xsd                         http://shardingsphere.io/schema/shardingsphere/sharding                          http://shardingsphere.io/schema/shardingsphere/sharding/sharding.xsd                         http://shardingsphere.io/schema/shardingsphere/masterslave                         http://shardingsphere.io/schema/shardingsphere/masterslave/master-slave.xsd"&gt;      &lt;context:component-scan base-package="io.shardingsphere.example" /&gt;      &lt;!-- datasource --&gt;     &lt;!--demo_master_ds--&gt;     &lt;bean id="demo_master_ds" class="com.alibaba.druid.pool.DruidDataSource" destroy-method="close"&gt;         &lt;property name="url" value="jdbc:mysql://127.0.0.1:3306/demo_master?useUnicode=true&amp;amp;characterEncoding=utf-8"/&gt;         &lt;property name="username" value="root"/&gt;         &lt;property name="password" value="123456"/&gt;         &lt;property name="initialSize" value="10" /&gt;         &lt;property name="maxActive" value="20" /&gt;         &lt;property name="minIdle" value="0" /&gt;         &lt;property name="maxWait" value="60000"/&gt;          &lt;property name="testOnBorrow" value="false"/&gt;         &lt;property name="testOnReturn" value="false"/&gt;         &lt;property name="testWhileIdle" value="true"/&gt;          &lt;property name="timeBetweenEvictionRunsMillis" value="60000"/&gt;         &lt;property name="minEvictableIdleTimeMillis" value="30000"/&gt;         &lt;property name="validationQuery" value="select 1"/&gt;     &lt;/bean&gt;       &lt;bean id="demo_ds_0" class="com.alibaba.druid.pool.DruidDataSource" destroy-method="close"&gt;         &lt;property name="url" value="jdbc:mysql://127.0.0.1:3306/demo_slave0?useUnicode=true&amp;amp;characterEncoding=utf-8"/&gt;         &lt;property name="username" value="root"/&gt;         &lt;property name="password" value="123456"/&gt;         &lt;property name="initialSize" value="10" /&gt;         &lt;property name="maxActive" value="20" /&gt;         &lt;property name="minIdle" value="0" /&gt;         &lt;property name="maxWait" value="60000"/&gt;          &lt;property name="testOnBorrow" value="false"/&gt;         &lt;property name="testOnReturn" value="false"/&gt;         &lt;property name="testWhileIdle" value="true"/&gt;          &lt;property name="timeBetweenEvictionRunsMillis" value="60000"/&gt;         &lt;property name="minEvictableIdleTimeMillis" value="30000"/&gt;         &lt;property name="validationQuery" value="select 1"/&gt;     &lt;/bean&gt;       &lt;bean id="demo_ds_1" class="com.alibaba.druid.pool.DruidDataSource" destroy-method="close"&gt;         &lt;property name="url" value="jdbc:mysql://127.0.0.1:3306/demo_slave1?useUnicode=true&amp;amp;characterEncoding=utf-8"/&gt;         &lt;property name="username" value="root"/&gt;         &lt;property name="password" value="123456"/&gt;         &lt;property name="initialSize" value="10" /&gt;         &lt;property name="maxActive" value="20" /&gt;         &lt;property name="minIdle" value="0" /&gt;         &lt;property name="maxWait" value="60000"/&gt;          &lt;property name="testOnBorrow" value="false"/&gt;         &lt;property name="testOnReturn" value="false"/&gt;         &lt;property name="testWhileIdle" value="true"/&gt;          &lt;property name="timeBetweenEvictionRunsMillis" value="60000"/&gt;         &lt;property name="minEvictableIdleTimeMillis" value="30000"/&gt;         &lt;property name="validationQuery" value="select 1"/&gt;     &lt;/bean&gt;       &lt;sharding:none-strategy id="noSharding" /&gt;      &lt;bean id="randomStrategy" class="io.shardingsphere.api.algorithm.masterslave.RandomMasterSlaveLoadBalanceAlgorithm" /&gt;      &lt;master-slave:data-source id="ds_master" master-data-source-name="demo_master_ds"                               slave-data-source-names="demo_ds_0,demo_ds_1" strategy-ref="randomStrategy"/&gt;       &lt;sharding:data-source id="shardingDataSource"&gt;         &lt;sharding:sharding-rule data-source-names="ds_master"&gt;             &lt;sharding:table-rules&gt;                 &lt;sharding:table-rule logic-table="order"                                      actual-data-nodes="ds_master.order"                                      table-strategy-ref="noSharding"                                      database-strategy-ref="noSharding"/&gt;             &lt;/sharding:table-rules&gt;         &lt;/sharding:sharding-rule&gt;         &lt;sharding:props&gt;             &lt;prop key="sql.show"&gt;false&lt;/prop&gt;         &lt;/sharding:props&gt;     &lt;/sharding:data-source&gt;           &lt;bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager"&gt;         &lt;property name="dataSource" ref="shardingDataSource" /&gt;     &lt;/bean&gt;     &lt;tx:annotation-driven /&gt;          &lt;bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean"&gt;         &lt;property name="dataSource" ref="shardingDataSource"/&gt;         &lt;property name="mapperLocations" value="classpath*:META-INF/sqlmap.xml"/&gt;     &lt;/bean&gt;          &lt;bean class="org.mybatis.spring.mapper.MapperScannerConfigurer"&gt;         &lt;property name="basePackage" value="io.shardingsphere.example"/&gt;         &lt;property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/&gt;     &lt;/bean&gt; &lt;/beans&gt;  `   I hope can get someone reply, thanks </body>
		<created>2019-01-04 11:26:09</created>
		<closed>2019-01-08 05:59:27</closed>
	</bug>
	<bug>
		<id>1712</id>
		<title>Fix bug: get an exception of No operations allowed after connection closed</title>
		<body>When use iBATIS+HikariCP, you will get an exception:No operations allowed after connection closed.</body>
		<created>2019-01-04 10:06:15</created>
		<closed>2019-01-04 11:29:35</closed>
	</bug>
	<bug>
		<id>1704</id>
		<title>CommandExecutor.writeMoreResults deadlock</title>
		<body>## Bug Report  **For English only**, other languages will not accept.  Before report a bug, make sure you have:  - Searched open and closed [GitHub issues](https://github.com/sharding-sphere/sharding-sphere/issues). - Read documentation: [ShardingSphere Doc](http://shardingsphere.io/document/current/en/overview/).  Please pay attention on issues you submitted, because we maybe need more details.  If no response **more than 7 days** and we cannot reproduce it on current information, we will **close it**.  Please answer these questions before submitting your issue. Thanks!  ### Which version of ShardingSphere did you use? 3.1.0-SNAPSHOT  ### Which project did you use? Sharding-JDBC or Sharding-Proxy? Sharding-Proxy  ### Expected behavior When flag isWritable turn to false, it can turn back to ture in future.  ### Actual behavior When flag isWritable turn to false, it can't turn back to ture in future.  ### Reason analyze (If you can) When flag isWritable turn to false, the data that has been written didn't flush. So the client can't read any data, this cause the water level high.  ### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc. set proxy.frontend.flush.threshold: 1000000  ### Example codes for reproduce this issue (such as a github link). N.A.</body>
		<created>2019-01-02 08:48:17</created>
		<closed>2019-01-02 09:50:45</closed>
	</bug>
	<bug>
		<id>1696</id>
		<title>DML of broadcast tables return wrong row count</title>
		<body>## Bug Report  ### Which version of ShardingSphere did you use?  3.1.0.M1  ### Which project did you use? Sharding-JDBC or Sharding-Proxy?  Sharding-JDBC  ### Expected behavior  Configure three sharding datasources and one broadcast table. Then insert one row data into the broadcast table, the row count should return 1.  ### Actual behavior  The row count return 3 actually.  ### Reason analyze (If you can)  DML of broadcast table have multiple execute results, and will be accumulated in `StatementExeuctor`  ### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.  ### Example codes for reproduce this issue (such as a github link). </body>
		<created>2018-12-28 07:23:13</created>
		<closed>2019-01-18 08:53:17</closed>
	</bug>
	<bug>
		<id>1689</id>
		<title>java.sql.SQLSyntaxErrorException: Table 'ds1.t_order_order_items' doesn't exist </title>
		<body>## Bug Report # this ‘s my sharding config ``` sharding.jdbc.datasource.names=ds0,ds1,ds2 sharding.jdbc.datasource.ds0.type=org.apache.commons.dbcp.BasicDataSource sharding.jdbc.datasource.ds0.driver-class-name=com.mysql.jdbc.Driver sharding.jdbc.datasource.ds0.url=jdbc:mysql://localhost:3306/ds0?serverTimezone=GMT%2B8` sharding.jdbc.datasource.ds0.username=root sharding.jdbc.datasource.ds0.password=root  sharding.jdbc.datasource.ds1.type=org.apache.commons.dbcp.BasicDataSource sharding.jdbc.datasource.ds1.driver-class-name=com.mysql.jdbc.Driver sharding.jdbc.datasource.ds1.url=jdbc:mysql://localhost:3306/ds1?serverTimezone=GMT%2B8 sharding.jdbc.datasource.ds1.username=root sharding.jdbc.datasource.ds1.password=root  sharding.jdbc.datasource.ds2.type=org.apache.commons.dbcp.BasicDataSource sharding.jdbc.datasource.ds2.driver-class-name=com.mysql.jdbc.Driver sharding.jdbc.datasource.ds2.url=jdbc:mysql://localhost:3306/ds2?serverTimezone=GMT%2B8 sharding.jdbc.datasource.ds2.username=root sharding.jdbc.datasource.ds2.password=root  sharding.jdbc.config.sharding.default-data-source-name=ds2 sharding.jdbc.config.sharding.default-database-strategy.inline.sharding-column=user_id sharding.jdbc.config.sharding.default-database-strategy.inline.algorithm-expression=ds$-&gt;{user_id % 3} sharding.jdbc.config.sharding.default-key-generator-class-name=liuxun.jpa.shard.config.SnowFlakeGenerator  sharding.jdbc.config.sharding.tables.t_order.actual-data-nodes=ds$-&gt;{0..2}.t_order$-&gt;{0..1} sharding.jdbc.config.sharding.tables.t_order.table-strategy.inline.sharding-column=order_id sharding.jdbc.config.sharding.tables.t_order.table-strategy.inline.algorithm-expression=t_order$-&gt;{order_id % 2} sharding.jdbc.config.sharding.tables.t_order.key-generator-column-name=order_id sharding.jdbc.config.sharding.tables.t_order_item.actual-data-nodes=ds$-&gt;{0..2}.t_order_item$-&gt;{0..1} sharding.jdbc.config.sharding.tables.t_order_item.table-strategy.inline.sharding-column=order_id sharding.jdbc.config.sharding.tables.t_order_item.table-strategy.inline.algorithm-expression=t_order_item$-&gt;{order_id % 2} sharding.jdbc.config.sharding.tables.t_order_item.key-generator-column-name=order_item_id sharding.jdbc.config.sharding.binding-tables=t_order,t_order_item  sharding.jdbc.config.sharding.tables.t_user.actual-data-nodes=ds$-&gt;{0..2}.t_user$-&gt;{0..1} sharding.jdbc.config.sharding.tables.t_user.table-strategy.inline.sharding-column=user_id sharding.jdbc.config.sharding.tables.t_user.table-strategy.inline.algorithm-expression=t_user$-&gt;{user_id % 2} sharding.jdbc.config.sharding.tables.t_user.key-generator-column-name=user_id  sharding.jdbc.config.sharding.tables.t_product.actual-data-nodes=ds$-&gt;{0..2}.t_product$-&gt;{0..1} sharding.jdbc.config.sharding.tables.t_product.database-strategy.inline.sharding-column=product_id sharding.jdbc.config.sharding.tables.t_product.database-strategy.inline.algorithm-expression=ds$-&gt;{product_id % 2} sharding.jdbc.config.sharding.tables.t_product.table-strategy.inline.sharding-column=product_id sharding.jdbc.config.sharding.tables.t_product.table-strategy.inline.algorithm-expression=t_product$-&gt;{product_id % 2} sharding.jdbc.config.sharding.tables.t_product.key-generator-column-name=product_id  sharding.jdbc.config.sharding.props.sql.show=true  ``` I have configured three database, each with two tables in each database including t_order , t_order_item, t_user and t_product. The default data source is ds0 but I have an error when querying orders based on the amount range.  ``` java.sql.SQLSyntaxErrorException: Table 'ds1.t_order_order_items' doesn't exist at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120) ~[mysql-connector-java-8.0.13.jar:8.0.13] at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97) ~[mysql-connector-java-8.0.13.jar:8.0.13] at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-java-8.0.13.jar:8.0.13]  ```  How to solve it? This table is automatically generated by shading, and in the default data source ds2, .t_order_order_items   </body>
		<created>2018-12-27 06:47:06</created>
		<closed>2019-01-18 08:53:07</closed>
	</bug>
	<bug>
		<id>1676</id>
		<title>not sharding table do not route the default datasource.</title>
		<body>version: 3.1.0.M1 database type: mysql orm: spring data jpa  not sharding table do not route the default datasource. default datasource name is "main",but the table push_user route  "ds0".  sharding config code: ```    // 配置真实数据源     Map&lt;String, DataSource&gt; dataSourceMap = new HashMap&lt;&gt;();     dataSourceMap.put("ds0",sharding01DataSource());     dataSourceMap.put("ds1",sharding02DataSource());     dataSourceMap.put("ds2",sharding03DataSource());     dataSourceMap.put("ds3",sharding04DataSource());     dataSourceMap.put("main",moduleDataSource());      // 配置Order表规则     TableRuleConfiguration orderTableRuleConfig = new TableRuleConfiguration();     orderTableRuleConfig.setLogicTable("push_message");     orderTableRuleConfig.setActualDataNodes("ds${0..3}.push_message");      //分布式主键     orderTableRuleConfig.setKeyGeneratorColumnName("id");     ShardingDefaultKeyGenerator shardingDefaultKeyGenerator = new ShardingDefaultKeyGenerator();     orderTableRuleConfig.setKeyGenerator(shardingDefaultKeyGenerator);      // 配置分库策略     orderTableRuleConfig.setDatabaseShardingStrategyConfig(             new InlineShardingStrategyConfiguration("traceid", "ds${traceid%4}"));      // 配置分片规则     ShardingRuleConfiguration shardingRuleConfig = new ShardingRuleConfiguration();     shardingRuleConfig.getTableRuleConfigs().add(orderTableRuleConfig);     shardingRuleConfig.setDefaultDataSourceName("main");//默认主数据源配置 ``` test case ``` @Test     public void testSelece(){         PageRequest pageRequest = new PageRequest(1, 1000);         List&lt;UserPo&gt; userPos = userRepository.getWithoutUserIdListBy("appcode_idxyer_iphone",new Date(),pageRequest);         log.info("size:"+userPos.size());     }  // userRepository   @Query("SELECT u FROM UserPo u WHERE u.userId is NULL and u.appName = ?1 and u.modifyTime &lt; ?2")   List&lt;UserPo&gt; getWithoutUserIdListBy(String appName, Date date, Pageable pageable); ```  log: ``` 2018-12-26 12:32:00.060  INFO 46235 --- [           main] ShardingSphere-SQL                       : Rule Type: sharding 2018-12-26 12:32:00.061  INFO 46235 --- [           main] ShardingSphere-SQL                       : Logic SQL: select userpo0_.id as id1_5_, userpo0_.createTime as createTi2_5_, userpo0_.appCode as appCode3_5_, userpo0_.appName as appName4_5_, userpo0_.appVersion as appVersi5_5_, userpo0_.deviceMc as deviceMc6_5_, userpo0_.deviceToken as deviceTo7_5_, userpo0_.deviceTokenType as deviceTo8_5_, userpo0_.deviceType as deviceTy9_5_, userpo0_.modifyTime as modifyT10_5_, userpo0_.osVersion as osVersi11_5_, userpo0_.userId as userId12_5_, userpo0_.version as version13_5_ from push_user userpo0_ where (userpo0_.userId is null) and userpo0_.appName=? and userpo0_.modifyTime&lt;? limit ?, ? 2018-12-26 12:32:00.061  INFO 46235 --- [           main] ShardingSphere-SQL                       : SQLStatement: SelectStatement(super=DQLStatement(super=io.shardingsphere.core.parsing.parser.sql.dql.select.SelectStatement@13a590f3), containStar=false, selectListLastPosition=460, groupByLastPosition=0, items=[CommonSelectItem(expression=userpo0_.id, alias=Optional.of(id1_5_)), CommonSelectItem(expression=userpo0_.createTime, alias=Optional.of(createTi2_5_)), CommonSelectItem(expression=userpo0_.appCode, alias=Optional.of(appCode3_5_)), CommonSelectItem(expression=userpo0_.appName, alias=Optional.of(appName4_5_)), CommonSelectItem(expression=userpo0_.appVersion, alias=Optional.of(appVersi5_5_)), CommonSelectItem(expression=userpo0_.deviceMc, alias=Optional.of(deviceMc6_5_)), CommonSelectItem(expression=userpo0_.deviceToken, alias=Optional.of(deviceTo7_5_)), CommonSelectItem(expression=userpo0_.deviceTokenType, alias=Optional.of(deviceTo8_5_)), CommonSelectItem(expression=userpo0_.deviceType, alias=Optional.of(deviceTy9_5_)), CommonSelectItem(expression=userpo0_.modifyTime, alias=Optional.of(modifyT10_5_)), CommonSelectItem(expression=userpo0_.osVersion, alias=Optional.of(osVersi11_5_)), CommonSelectItem(expression=userpo0_.userId, alias=Optional.of(userId12_5_)), CommonSelectItem(expression=userpo0_.version, alias=Optional.of(version13_5_))], groupByItems=[], orderByItems=[], limit=Limit(databaseType=MySQL, offset=LimitValue(value=1000, index=2, boundOpened=false), rowCount=LimitValue(value=1000, index=3, boundOpened=false)), subQueryStatement=null, subQueryStatements=[]) 2018-12-26 12:32:00.061  INFO 46235 --- [           main] ShardingSphere-SQL                       : Actual SQL: ds0 ::: select userpo0_.id as id1_5_, userpo0_.createTime as createTi2_5_, userpo0_.appCode as appCode3_5_, userpo0_.appName as appName4_5_, userpo0_.appVersion as appVersi5_5_, userpo0_.deviceMc as deviceMc6_5_, userpo0_.deviceToken as deviceTo7_5_, userpo0_.deviceTokenType as deviceTo8_5_, userpo0_.deviceType as deviceTy9_5_, userpo0_.modifyTime as modifyT10_5_, userpo0_.osVersion as osVersi11_5_, userpo0_.userId as userId12_5_, userpo0_.version as version13_5_ from push_user userpo0_ where (userpo0_.userId is null) and userpo0_.appName=? and userpo0_.modifyTime&lt;? limit ?, ? ::: [[appcode_idxyer_iphone, 2018-12-26 12:24:22.936, 0, 2000]] 2 ```</body>
		<created>2018-12-26 04:40:40</created>
		<closed>2019-01-21 10:41:42</closed>
	</bug>
	<bug>
		<id>1674</id>
		<title>INSERT &amp; UPDATE do not support escape character \</title>
		<body>## Bug Report  **For English only**, other languages will not accept.  Before report a bug, make sure you have:  - Searched open and closed [GitHub issues](https://github.com/sharding-sphere/sharding-sphere/issues). - Read documentation: [Sharding-Sphere Doc](http://shardingsphere.io/document/current/en/overview/).  Please pay attention on issues you submitted, because we maybe need more details.  If no response **more than 7 days** and we cannot reproduce it on current information, we will **close it**.  Please answer these questions before submitting your issue. Thanks!  ### Which version of Sharding-Sphere did you use? 3.1.0.M1 ### Which project did you use? Sharding-JDBC or Sharding-Proxy? Sharding-Proxy ### Expected behavior INSERT &amp; UPDATE support escape character \ ### Actual behavior INSERT &amp; UPDATE do not support escape character \ while SELECT works well. ### Reason analyze (If you can)  ### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc. ``` mysql&gt; insert into test(name) values ('\''); ERROR 3054 (HY000): Unknown exception: Illegal input, unterminated '''. mysql&gt; update test set name='\'' where id=1; ERROR 3054 (HY000): Unknown exception: Illegal input, unterminated '''. ```  ### Example codes for reproduce this issue (such as a github link). </body>
		<created>2018-12-25 11:13:41</created>
		<closed>2019-03-28 08:28:31</closed>
	</bug>
	<bug>
		<id>1672</id>
		<title>spring data jpa auto limit page some grammar  not support</title>
		<body>junit test: &gt; page is 1 and  pagesize is 1000 ``` @Test     public void testSelece(){         PageRequest pageRequest = new PageRequest(1, 1000);         userRepository.getWithoutUserIdListBy("appcode_idxyer_iphone",new Date(),pageRequest);     } ``` UserRepository interface: ```   @Query("SELECT u FROM UserPo u WHERE u.userId is NULL and u.appName = ?1 and u.modifyTime &lt; ?2")   List&lt;UserPo&gt; getWithoutUserIdListBy(String appName, Date date, Pageable pageable); ```   see sql log limit 0, 2000 ``` 2018-12-25 16:14:20.480  INFO 34103 --- [           main] ShardingSphere-SQL                       : Rule Type: sharding 2018-12-25 16:14:20.480  INFO 34103 --- [           main] ShardingSphere-SQL                       : Logic SQL: select userpo0_.id as id1_5_, userpo0_.createTime as createTi2_5_, userpo0_.appCode as appCode3_5_, userpo0_.appName as appName4_5_, userpo0_.appVersion as appVersi5_5_, userpo0_.deviceMc as deviceMc6_5_, userpo0_.deviceToken as deviceTo7_5_, userpo0_.deviceTokenType as deviceTo8_5_, userpo0_.deviceType as deviceTy9_5_, userpo0_.modifyTime as modifyT10_5_, userpo0_.osVersion as osVersi11_5_, userpo0_.userId as userId12_5_, userpo0_.version as version13_5_ from push_user userpo0_ where (userpo0_.userId is null) and userpo0_.appName=? and userpo0_.modifyTime&lt;? limit ?, ? 2018-12-25 16:14:20.480  INFO 34103 --- [           main] ShardingSphere-SQL                       : SQLStatement: SelectStatement(super=DQLStatement(super=io.shardingsphere.core.parsing.parser.sql.dql.select.SelectStatement@410c1f44), containStar=false, selectListLastPosition=460, groupByLastPosition=0, items=[CommonSelectItem(expression=userpo0_.deviceType, alias=Optional.of(deviceTy9_5_)), CommonSelectItem(expression=userpo0_.id, alias=Optional.of(id1_5_)), CommonSelectItem(expression=userpo0_.version, alias=Optional.of(version13_5_)), CommonSelectItem(expression=userpo0_.deviceToken, alias=Optional.of(deviceTo7_5_)), CommonSelectItem(expression=userpo0_.osVersion, alias=Optional.of(osVersi11_5_)), CommonSelectItem(expression=userpo0_.modifyTime, alias=Optional.of(modifyT10_5_)), CommonSelectItem(expression=userpo0_.appName, alias=Optional.of(appName4_5_)), CommonSelectItem(expression=userpo0_.appCode, alias=Optional.of(appCode3_5_)), CommonSelectItem(expression=userpo0_.deviceMc, alias=Optional.of(deviceMc6_5_)), CommonSelectItem(expression=userpo0_.createTime, alias=Optional.of(createTi2_5_)), CommonSelectItem(expression=userpo0_.appVersion, alias=Optional.of(appVersi5_5_)), CommonSelectItem(expression=userpo0_.deviceTokenType, alias=Optional.of(deviceTo8_5_)), CommonSelectItem(expression=userpo0_.userId, alias=Optional.of(userId12_5_))], groupByItems=[], orderByItems=[], limit=Limit(databaseType=MySQL, offset=LimitValue(value=1000, index=2, boundOpened=false), rowCount=LimitValue(value=1000, index=3, boundOpened=false)), subQueryStatement=null, subQueryStatements=[]) 2018-12-25 16:14:20.481  INFO 34103 --- [           main] ShardingSphere-SQL                       : Actual SQL: main ::: select userpo0_.id as id1_5_, userpo0_.createTime as createTi2_5_, userpo0_.appCode as appCode3_5_, userpo0_.appName as appName4_5_, userpo0_.appVersion as appVersi5_5_, userpo0_.deviceMc as deviceMc6_5_, userpo0_.deviceToken as deviceTo7_5_, userpo0_.deviceTokenType as deviceTo8_5_, userpo0_.deviceType as deviceTy9_5_, userpo0_.modifyTime as modifyT10_5_, userpo0_.osVersion as osVersi11_5_, userpo0_.userId as userId12_5_, userpo0_.version as version13_5_ from push_user userpo0_ where (userpo0_.userId is null) and userpo0_.appName=? and userpo0_.modifyTime&lt;? limit ?, ? ::: [[appcode_idxyer_iphone, 2018-12-25 16:14:18.693, 0, 2000]] ```</body>
		<created>2018-12-25 08:19:50</created>
		<closed>2019-01-07 09:21:59</closed>
	</bug>
	<bug>
		<id>1671</id>
		<title>Upgrade from 3.0.0 to 3.1.0.M1 error reporting，java.lang.NullPointerException: Cannot invoke method mod() on null object</title>
		<body>sharding code: &gt; sharding database column name : traceId   sharding strategy :ds${traceId%4} ```       // 配置真实数据源         Map&lt;String, DataSource&gt; dataSourceMap = new HashMap&lt;&gt;();         dataSourceMap.put("ds0",ds0DataSource());         dataSourceMap.put("ds1",ds1DataSource());         dataSourceMap.put("ds2",ds2DataSource());         dataSourceMap.put("ds3",ds3DataSource());         dataSourceMap.put("mainDataSource",mainDataSource());          // 配置Order表规则         TableRuleConfiguration orderTableRuleConfig = new TableRuleConfiguration();         orderTableRuleConfig.setLogicTable("push_message");         orderTableRuleConfig.setActualDataNodes("ds${0..3}.push_message");          //分布式主键         orderTableRuleConfig.setKeyGeneratorColumnName("id");         ShardingDefaultKeyGenerator shardingDefaultKeyGenerator = new ShardingDefaultKeyGenerator();         orderTableRuleConfig.setKeyGenerator(shardingDefaultKeyGenerator);          // 配置分库策略         orderTableRuleConfig.setDatabaseShardingStrategyConfig(                 new InlineShardingStrategyConfiguration("traceId", "ds${traceId%4}"));          // 配置分片规则         ShardingRuleConfiguration shardingRuleConfig = new ShardingRuleConfiguration();         shardingRuleConfig.getTableRuleConfigs().add(orderTableRuleConfig);         shardingRuleConfig.setDefaultDataSourceName("mainDataSource");          Properties properties = new Properties();         properties.setProperty("sql.show","true");         properties.setProperty("max.connections.size.per.query","200");         properties.setProperty("executor.size",String.valueOf(Runtime.getRuntime().availableProcessors() * 2));          DataSource dataSource = ShardingDataSourceFactory.createDataSource(                 dataSourceMap, shardingRuleConfig, new ConcurrentHashMap(), properties);         return dataSource ```  error info: ``` java.lang.NullPointerException: Cannot invoke method mod() on null object  at org.codehaus.groovy.runtime.NullObject.invokeMethod(NullObject.java:91) at org.codehaus.groovy.runtime.callsite.PogoMetaClassSite.call(PogoMetaClassSite.java:48) at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:48) at org.codehaus.groovy.runtime.callsite.NullCallSite.call(NullCallSite.java:35) at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:48) at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:113) at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:125) at Script2$_run_closure1.doCall(Script2.groovy:1) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93) at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:325) at org.codehaus.groovy.runtime.metaclass.ClosureMetaClass.invokeMethod(ClosureMetaClass.java:294) at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1019) at groovy.lang.Closure.call(Closure.java:426) at groovy.lang.Closure.call(Closure.java:420) at com.fly.ApplicationTests.testInline(ApplicationTests.java:98) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) at org.springframework.test.context.junit4.statements.RunBeforeTestMethodCallbacks.evaluate(RunBeforeTestMethodCallbacks.java:75) at org.springframework.test.context.junit4.statements.RunAfterTestMethodCallbacks.evaluate(RunAfterTestMethodCallbacks.java:86) at org.springframework.test.context.junit4.statements.SpringRepeat.evaluate(SpringRepeat.java:84) at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:252) at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:94) at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61) at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70) at org.junit.runners.ParentRunner.run(ParentRunner.java:363) at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:191) at org.junit.runner.JUnitCore.run(JUnitCore.java:137) at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ```  sharding key is hump naming，calculating rote Error, ```java     //InlineShardingStrategy.java      private String execute(final PreciseShardingValue shardingValue) {         Closure&lt;?&gt; result = closure.rehydrate(new Expando(), null, null);         result.setResolveStrategy(Closure.DELEGATE_ONLY);         //method toLowerCase()         result.setProperty(shardingValue.getColumnName().toLowerCase(), shardingValue.getValue());         return result.call().toString();     } ``` unit test :   1. test fail ``` @Test     public void testInline(){         Closure&lt;?&gt; closure = new InlineExpressionParser("ds${traceId%4}").evaluateClosure();         Closure&lt;?&gt; result = closure.rehydrate(new Expando(), null, null);         result.setResolveStrategy(Closure.DELEGATE_ONLY);         PreciseShardingValue shardingValue = new PreciseShardingValue("push_message","traceId",342342);         result.setProperty(shardingValue.getColumnName().toLowerCase(), shardingValue.getValue());         System.out.println("--------:"+result.call().toString());     } ``` 2. test pass ``` @Test     public void testInline(){         Closure&lt;?&gt; closure = new InlineExpressionParser("ds${traceid%4}").evaluateClosure();         Closure&lt;?&gt; result = closure.rehydrate(new Expando(), null, null);         result.setResolveStrategy(Closure.DELEGATE_ONLY);         PreciseShardingValue shardingValue = new PreciseShardingValue("push_message","traceId",342342);         result.setProperty(shardingValue.getColumnName().toLowerCase(), shardingValue.getValue());         System.out.println("--------:"+result.call().toString());     } ```</body>
		<created>2018-12-25 08:09:46</created>
		<closed>2019-01-02 13:11:14</closed>
	</bug>
	<bug>
		<id>1664</id>
		<title>Support to add new schemas and delete existed schema for orchestration</title>
		<body>Considering the suggestions from ShardingSphere community, I plan to add a new feather for Sharding-orchestration, which basically includes 1. User can add or delete scheme configurations in registry, e.g. zookeeper or etcd. 2. Registry pushes those changed events to all of applications online. 3. Applications online refresh their schema configurations to make those changes effective</body>
		<created>2018-12-23 05:56:25</created>
		<closed>2018-12-24 09:36:18</closed>
	</bug>
	<bug>
		<id>1658</id>
		<title>SS 3.1.0.M1 count sql throw an error,3.1.0 works well</title>
		<body>## Bug Report  **For English only**, other languages will not accept. With the Configration #1653   The sql throw an exception with 3.1.0.M1 and works well with 3.0.0 ```sql SELECT COUNT(1) FROM (       SELECT         r.`channel` as `channel_code`,         r.`channel_name` as `channel_name`,         COUNT(r.id) `total_cnt`,         COUNT(r.connect_flag = "Y") `connected_cnt`         FROM record_callin r         LEFT JOIN sys_org_tree_rel tree ON tree.teamid = r.teamid         LEFT JOIN sys_user u ON u.brokerid = r.brokerid         where         r.create_time &gt;= '2018-01-01 00:00:00' and r.create_time &lt;=  '2019-01-01 00:00:00'         GROUP BY          r.`channel`  ) TOTAL ```  this throws an error: ``` Caused by: java.lang.IllegalStateException: DQL must have sharding column with subquery. at com.google.common.base.Preconditions.checkState(Preconditions.java:444) ~[guava-20.0.jar:na] at io.shardingsphere.core.routing.router.sharding.ParsingSQLRouter.checkAndMergeShardingValue(ParsingSQLRouter.java:157) ~[sharding-core-3.1.0.M1.jar:na] at io.shardingsphere.core.routing.router.sharding.ParsingSQLRouter.route(ParsingSQLRouter.java:127) ~[sharding-core-3.1.0.M1.jar:na] at io.shardingsphere.core.routing.PreparedStatementRoutingEngine.route(PreparedStatementRoutingEngine.java:66) ~[sharding-core-3.1.0.M1.jar:na] at io.shardingsphere.shardingjdbc.jdbc.core.statement.ShardingPreparedStatement.sqlRoute(ShardingPreparedStatement.java:241) ~[sharding-jdbc-core-3.1.0.M1.jar:na] at io.shardingsphere.shardingjdbc.jdbc.core.statement.ShardingPreparedStatement.executeQuery(ShardingPreparedStatement.java:111) ~[sharding-jdbc-core-3.1.0.M1.jar:na] at com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor.queryTotal(PaginationInterceptor.java:207) ~[mybatis-plus-extension-3.0.6.jar:3.0.6] ... 116 common frames omitted  ```  #1653 reason is I used single quote mark with column alias but this issue reason is different </body>
		<created>2018-12-21 08:45:25</created>
		<closed>2018-12-29 03:42:41</closed>
	</bug>
	<bug>
		<id>1654</id>
		<title>3.1.0.M1  DISTINCT. COUNT and SUM report an error</title>
		<body>![default](https://user-images.githubusercontent.com/45658355/50272428-bae71500-0472-11e9-99f8-be155d8a0d5d.png)  **I did a simple test on the documentation AND found that COUNT AND SUM were wrong.**  ![default](https://user-images.githubusercontent.com/45658355/50272540-13b6ad80-0473-11e9-8066-da45ef3b7778.png)  I didn't test it all, and other statements might have problems.You rearrange it DISTINCT's list</body>
		<created>2018-12-20 08:28:14</created>
		<closed>2018-12-25 14:43:17</closed>
	</bug>
	<bug>
		<id>1653</id>
		<title>SS 3.1.0.M1 can not route sql</title>
		<body>## Bug Report  **For English only**, other languages will not accept.  **DataBase:** MySql 5.7.24-log   ``` CREATE TABLE `sys_org_tree_rel` ( `comp_id` INT(11) NULL DEFAULT NULL COMMENT 'id', `areaid` INT(11) NULL DEFAULT NULL COMMENT 'id', `groupid` INT(11) NULL DEFAULT NULL COMMENT 'id', `teamid` INT(11) NULL DEFAULT NULL COMMENT 'id', `last_modify` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP, UNIQUE INDEX `teamid` (`teamid`), INDEX `comp_id` (`comp_id`), INDEX `areaid` (`areaid`), INDEX `groupid` (`groupid`) ) COMMENT='关系表' COLLATE='utf8mb4_bin' ENGINE=InnoDB ;  ```   **Sharding Table Configration:** ```yaml sharding:   jdbc:     datasource:       names: druid0       druid0:         type: com.alibaba.druid.pool.DruidDataSource         url: jdbc:mysql://*******************?autoReconnect=true&amp;useUnicode=true&amp;characterEncoding=UTF-8&amp;zeroDateTimeBehavior=convertToNull&amp;allowMultiQueries=true&amp;serverTimezone=GMT%2B8         driver-class-name: com.mysql.cj.jdbc.Driver         username: ************         password: **********         initial-size: 10         min-idle: 1         max-active: 100         max-wait: 6000         min-evictable-idle-time-millis: 60000         time-between-eviction-runs-millis: 6000         validation-query: "SELECT 'x' from dual"         validation-query-timeout: 6000         pool-prepared-statements: true         max-pool-prepared-statement-per-connection-size: 20         test-while-idle: true         test-on-borrow: true         test-on-return: true         filter:           stat:             log-slow-sql: true     config:       sharding:         tables:           record_callin:             actual-data-nodes:  druid0.record_callin_${2018..Calendar.getInstance().get(Calendar.YEAR)}${(1..12).collect{if(it&lt;10) "0"+it else it}}             table-strategy:               inline:                 sharding-column: create_time                 algorithm-expression: record_callin_${create_time.format('yyyyMM')}             key-generator-column-name: id         default-key-generator-class-name: io.shardingsphere.core.keygen.DefaultKeyGenerator         props:           show.sql: true           sql.show: true           max.connections.size.per.query: 15           executor.size: 15  ``` **SQL:** ```sql  SELECT COUNT(1) AS 'cnt' FROM record_callin r, sys_org_tree_rel tree WHERE tree.teamid = r.teamid AND r.create_time &gt;=? AND r.create_time &lt;=?   or    SELECT COUNT(1) AS 'cnt' FROM record_callin r INNER  JOIN  sys_org_tree_rel tree ON tree.teamid = r.teamid   WHERE  r.create_time &gt;=? AND r.create_time &lt;=?  ``` **issue:** **it works well with sharding jdbc 3.0.0 but can not work with sharding jdbc 3.1.0.M1** </body>
		<created>2018-12-20 06:43:40</created>
		<closed>2018-12-21 14:56:00</closed>
	</bug>
	<bug>
		<id>1643</id>
		<title>Result data incomplete when there's Limit sub clause</title>
		<body>## Bug Report  ### Which version of ShardingSphere did you use?  3.0.1-SNAPSHOT  ### Which project did you use? Sharding-JDBC or Sharding-Proxy?  Sharding-JDBC and Sharding-Proxy  ### Expected behavior  Take ShardingType.SHARDING_DATABASES for example:  The SQL is single routed to demo_ds_0.t_order.  SELECT * FROM t_order WHERE user_id = 0 LIMIT 5, 10; 10 rows are expected: order_id: 0, user_id: 0, status: 6 order_id: 0, user_id: 0, status: 7 order_id: 0, user_id: 0, status: 8 order_id: 0, user_id: 0, status: 9 order_id: 0, user_id: 0, status: 10 order_id: 0, user_id: 0, status: 11 order_id: 0, user_id: 0, status: 12 order_id: 0, user_id: 0, status: 13 order_id: 0, user_id: 0, status: 14 order_id: 0, user_id: 0, status: 15  ### Actual behavior  Get 5 rows result: order_id: 0, user_id: 0, status: 11 order_id: 0, user_id: 0, status: 12 order_id: 0, user_id: 0, status: 13 order_id: 0, user_id: 0, status: 14 order_id: 0, user_id: 0, status: 15  ### Reason analyze (If you can)  This will be happen only on single routing which do not rewrite the logical SQL's Limit sub clause. 5 rows is skipped. 5 is the offset of Limit sub clause. This is duo to offset skipping procedure in merge step. When single routing, offset should not be skipped.  ### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.  Take ShardingType.SHARDING_DATABASES for example:  The SQL is single routed to demo_ds_0.t_order.  SELECT * FROM t_order WHERE user_id = 0 LIMIT 5, 10;  ### Example codes for reproduce this issue (such as a github link).  Offical example.</body>
		<created>2018-12-19 01:38:36</created>
		<closed>2018-12-19 04:43:00</closed>
	</bug>
	<bug>
		<id>1603</id>
		<title>After the integration of mybatis, mybatis Mapper is loop dead</title>
		<body>## Bug Report **As a result, after integration with mybatis, some special operations lead to an endless cycle of mybatis**  ### Which version of Sharding-Sphere did you use? ```xml &lt;dependency&gt;     &lt;groupId&gt;io.shardingsphere&lt;/groupId&gt;     &lt;artifactId&gt;sharding-jdbc-spring-boot-starter&lt;/artifactId&gt;     &lt;version&gt;3.0.0&lt;/version&gt; &lt;/dependency&gt; ```  ### Which project did you use? Sharding-JDBC or Sharding-Proxy? Sharding-JDBC  ### Expected behavior **It doesn't create an infinite loop** ```  DEBUG org.mapper.UserRoleMapper.insertBySelect2 - ==&gt;  Preparing: INSERT INTO `user_role`(`username`, `role_name`) VALUES (?, ?)   INFO  Sharding-Sphere-SQL - Rule Type: master-slave  INFO  Sharding-Sphere-SQL - SQL: INSERT INTO `user_role`(`username`, `role_name`) VALUES (?, ?) ::: DataSources: write  DEBUG org.mapper.UserRoleMapper.insertBySelect2 - ==&gt; Parameters: write(String), write(String)  DEBUG org.mapper.UserRoleMapper.insertBySelect2 - &lt;==    Updates: 1  ...... The database operation completes printing other business logs ```  ### Actual behavior ```  DEBUG org.mapper.UserRoleMapper.insertBySelect2 - ==&gt;  Preparing: INSERT INTO `user_role`(`username`, `role_name`) VALUES (?, ?)   INFO  Sharding-Sphere-SQL - Rule Type: master-slave  INFO  Sharding-Sphere-SQL - SQL: INSERT INTO `user_role`(`username`, `role_name`) VALUES (?, ?) ::: DataSources: write  DEBUG org.mapper.UserRoleMapper.insertBySelect2 - ==&gt; Parameters: write(String), write(String)  DEBUG org.mapper.UserRoleMapper.insertBySelect2 - &lt;==    Updates: 1  DEBUG org.mapper.UserRoleMapper.insertBySelect2 - &lt;==    Updates: 1  DEBUG org.mapper.UserRoleMapper.insertBySelect2 - &lt;==    Updates: 1  DEBUG org.mapper.UserRoleMapper.insertBySelect2 - &lt;==    Updates: 1  DEBUG org.mapper.UserRoleMapper.insertBySelect2 - &lt;==    Updates: 1  DEBUG org.mapper.UserRoleMapper.insertBySelect2 - &lt;==    Updates: 1  DEBUG org.mapper.UserRoleMapper.insertBySelect2 - &lt;==    Updates: 1  DEBUG org.mapper.UserRoleMapper.insertBySelect2 - &lt;==    Updates: 1  DEBUG org.mapper.UserRoleMapper.insertBySelect2 - &lt;==    Updates: 1  DEBUG org.mapper.UserRoleMapper.insertBySelect2 - &lt;==    Updates: 1  DEBUG org.mapper.UserRoleMapper.insertBySelect2 - &lt;==    Updates: 1  DEBUG org.mapper.UserRoleMapper.insertBySelect2 - &lt;==    Updates: 1  ......Loop printing ```  ### Reason analyze (If you can)  `java.sql.Statement#getMoreResults()`The interface returns false as specified below： ```java     // io.shardingsphere.shardingjdbc.jdbc.adapter.AbstractStatementAdapter      @Override     public final boolean getMoreResults() {         return false;     }          @Override     public final boolean getMoreResults(final int current) {         return false;     } ``` **As a result, after integration with mybatis, some special operations cause mybatis to generate a dead loop. The position of the dead loop of mybatis code is as follows through debugging:** ```java   // org.apache.ibatis.executor.resultset.DefaultResultSetHandler.java    private ResultSetWrapper getFirstResultSet(Statement stmt) throws SQLException {     ResultSet rs = stmt.getResultSet();     while (rs == null) {       // move forward to get the first resultset in case the driver       // doesn't return the resultset as the first result (HSQLDB 2.1)       if (stmt.getMoreResults()) {         rs = stmt.getResultSet();       } else {         // Note: using sharding- JDBC, stmt.getupdatecount () is always greater than 1 (resulting in an infinite loop),         // But using mysql's native driver returns -1         if (stmt.getUpdateCount() == -1) {           // no more results. Must be no resultset           break;         }       }     }     return rs != null ? new ResultSetWrapper(rs, configuration) : null;   } ``` Use mybatis to reproduce the code： ```java @Repository @Mapper public interface UserRoleMapper extends BaseMapper&lt;UserRole&gt; {     // Define update database statements in @select     @Select("INSERT INTO `user_role`(`username`, `role_name`) VALUES (#{userRole.username}, #{userRole.roleName})")     Integer insertBySelect(@Param("userRole") UserRole userRole); } ```  **My current solution** ``` java     // Modify the io.shardingsphere.shardingjdbc.jdbc.core.statement.MasterSlavePreparedStatement       @Override     public final boolean getMoreResults() {         return routedStatements.iterator().next().getMoreResults();     } ```  **After the test is modified in this way, online problems can be solved, but I do not know whether it will bring about other problems. I hope the official support (online is in use urgently).** </body>
		<created>2018-12-12 09:01:11</created>
		<closed>2018-12-13 14:52:35</closed>
	</bug>
	<bug>
		<id>1581</id>
		<title>sql has been routed to the target db, but also pagination revision</title>
		<body>## Bug Report  for example db1  db2，table order  sql has been routed to the target db2,  limit 15,15.but also pagination revision,sql rewrite as limit 0,30  ### Which version of Sharding-Sphere did you use? 3.0.0 / 3.0.0.M4  ### Which project did you use? Sharding-JDBC or Sharding-Proxy? use sharding-jdbc  ### Expected behavior select * from order where storeId=5 and (barcode is not null or barcode !='') limit 15,15 ### Actual behavior select * from order where storeId=5 and (barcode is not null or barcode !='') limit 0,30 ### Reason analyze (If you can) ParsingSQLRouter-&gt;method route-&gt;isSingleRouting=false-&gt;this.processLimit-&gt;limit-&gt;rewrite  ### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc. sql: select * from order where storeId=5 and (barcode is not null or barcode !='') limit 15,15 select * from order where storeId=5 and (firstcode in (1,2,3) or secondcode in (1,2,3) or thirdcode in(1,2,3)) limit 15,15  config: sharding.jdbc.config.sharding.tables.order.database-strategy.standard.sharding-column: storeId  ### Example codes for reproduce this issue (such as a github link). </body>
		<created>2018-12-07 06:21:10</created>
		<closed>2018-12-19 03:09:17</closed>
	</bug>
	<bug>
		<id>1567</id>
		<title>got  java.io.NotSerializableException when insert record to table which has `text` column</title>
		<body>Actual SQL: ds_0 ::: insert into limit_request_0      ( cust_id,  channel_cd, product_cd, biz_request_no, biz_type, change_amt,  request_date,request_json , id)       values ( ?,?, ?, ?, ?, ?,  ?, ? , ?) ::: [[274202745208848384, QD, CP, FREEZE_20181208170641790778307, TRYFREEZE, 600.00, 2018-12-05 17:06:41.836, **java.io.StringReader@686364de**, 277122706310971392]]   </body>
		<created>2018-12-05 09:17:48</created>
		<closed>2019-05-15 12:24:41</closed>
	</bug>
	<bug>
		<id>1536</id>
		<title>Unknown exception: Illegal input, unterminated ''' (value string do not support escape character \ )</title>
		<body>## Bug Report  **For English only**, other languages will not accept.  Before report a bug, make sure you have:  - Searched open and closed [GitHub issues](https://github.com/sharding-sphere/sharding-sphere/issues). - Read documentation: [Sharding-Sphere Doc](http://shardingsphere.io/document/current/en/overview/).  Please pay attention on issues you submitted, because we maybe need more details.  If no response **more than 7 days** and we cannot reproduce it on current information, we will **close it**.  Please answer these questions before submitting your issue. Thanks!  ### Which version of Sharding-Sphere did you use? 3.0.0 ### Which project did you use? Sharding-JDBC or Sharding-Proxy? Sharding-Proxy ### Expected behavior value string supports escape character \ ### Actual behavior value string do not support escape character \ ### Reason analyze (If you can)  ### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc. ``` mysql&gt; select * from test where name='\''; ERROR 3054 (HY000): Unknown exception: Illegal input, unterminated '''. ``` ``` mysql&gt; insert into test(name) values ('\''); ERROR 3054 (HY000): Unknown exception: Illegal input, unterminated '''. ```  ### Example codes for reproduce this issue (such as a github link). </body>
		<created>2018-11-30 07:09:21</created>
		<closed>2018-12-13 02:56:08</closed>
	</bug>
	<bug>
		<id>1533</id>
		<title>The result of `getBytes` is wrong.</title>
		<body>## Bug Report  ### Which version of Sharding-Sphere did you use?  3.0.0  ### Which project did you use? Sharding-JDBC or Sharding-Proxy?  Sharding-Proxy  ### Expected behavior  The result of bytes should be: [88, -99, -9, 80, 65, -64, 65, -70, -83, -98, 49, 15, -115, -103, 13, 116]  ### Actual behavior  The result change every time: [91, 66, 64, 49, 50, 57, 52, 99, 50, 51, 52] [91, 66, 64, 55, 50, 101, 49, 56, 57, 100, 54] [91, 66, 64, 52, 54, 55, 54, 98, 48, 53, 56] [91, 66, 64, 51, 48, 52, 51, 98, 49, 99, 99] [91, 66, 64, 49, 97, 99, 102, 97, 99, 53, 56]  ### Reason analyze (If you can)  ### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.  ```sql CREATE TABLE `binary_test` (   `id` binary(16) NOT NULL ) ENGINE=InnoDB;  insert into binary_test (id) value (0x589df75041c041baad9e310f8d990d74); ```  ### Example codes for reproduce this issue (such as a github link).  ```java         Connection connection = ds.getConnection();         PreparedStatement ps = connection.prepareStatement("SELECT * FROM binary_test");         ps.execute();         ResultSet rs = ps.getResultSet();         rs.next();         byte[] result = rs.getBytes("id");         System.out.println(Arrays.toString(result)); ```</body>
		<created>2018-11-30 02:55:14</created>
		<closed>2018-12-10 12:42:21</closed>
	</bug>
	<bug>
		<id>1475</id>
		<title>SHOW [FULL] TABLES FROM `x` LIKE 'y'; failed to return the sharding table</title>
		<body>## Bug Report  **For English only**, other languages will not accept.  Before report a bug, make sure you have:  - Searched open and closed [GitHub issues](https://github.com/sharding-sphere/sharding-sphere/issues). - Read documentation: [Sharding-Sphere Doc](http://shardingsphere.io/document/current/en/overview/).  Please pay attention on issues you submitted, because we maybe need more details.  If no response **more than 7 days** and we cannot reproduce it on current information, we will **close it**.  Please answer these questions before submitting your issue. Thanks!  ### Which version of Sharding-Sphere did you use? sharding-proxy-3.0.0 ### Which project did you use? Sharding-JDBC or Sharding-Proxy? Sharding-Proxy ### Expected behavior return ```y``` ### Actual behavior return ```Empty set``` ### Reason analyze (If you can) If parser finds queries like 'show tables from x like y', proxy should firstly match tables in sharding configs before sending these queries to real db.  ### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc. execute: ```SHOW [FULL] TABLES FROM `x` LIKE 'y'; ``` while y is a sharing table consisting of y0,y1,y2..  ### Example codes for reproduce this issue (such as a github link). </body>
		<created>2018-11-14 09:33:36</created>
		<closed>2018-11-21 14:03:09</closed>
	</bug>
	<bug>
		<id>1467</id>
		<title>read-write splitting  many thread</title>
		<body>Read and write separation, no proper routing when multithreading  version:3.0.0  Our requirement is to force the main library to be routed at the beginning of the "add", "create", "save", "insert", "update", "del" methods. In the process of using high-concurrency, the route is not correct。  Found in the middleware, found that the judgment route is a static variable， `private static boolean isMasterRouteOnly` 。  This static variable is shared by all threads. The a thread is not executed. The b thread modifies this value. Then, when routing, it uses this variable to judge the route, resulting in no correct route.  sharding code ``` java @NoArgsConstructor(access = AccessLevel.PRIVATE) public final class HintManagerHolder {          public static final String DB_TABLE_NAME = "DB_TABLE_NAME";          public static final String DB_COLUMN_NAME = "DB_COLUMN_NAME";          private static final ThreadLocal&lt;HintManager&gt; HINT_MANAGER_HOLDER = new ThreadLocal&lt;&gt;();          private static final Multimap&lt;String, Comparable&lt;?&gt;&gt; DATABASE_SHARDING_VALUES = HashMultimap.create();          private static final Multimap&lt;String, Comparable&lt;?&gt;&gt; TABLE_SHARDING_VALUES = HashMultimap.create();          @Setter     private static boolean databaseShardingOnly;          @Setter     private static boolean isMasterRouteOnly; ```  our code ``` java private static final ThreadLocal&lt;Boolean&gt; CUS_HINT_MANAGER_HOLDER = new ThreadLocal&lt;&gt;();      @Order(Ordered.HIGHEST_PRECEDENCE)     @Around("execution(public * com.xhg..dao..*.*(..)) || execution(public * com.xhg..service.impl..*.*(..))")     public Object hintMasterCalls(ProceedingJoinPoint jp) throws Throwable {         String methodName = jp.getSignature().getName();          if (HintManagerHolder.isMasterRouteOnly() || HintManagerHolder.get() != null) {             if (CUS_HINT_MANAGER_HOLDER.get() == null || !CUS_HINT_MANAGER_HOLDER.get()) {                 CUS_HINT_MANAGER_HOLDER.set(true);             }             return jp.proceed();         }          if (CUS_HINT_MANAGER_HOLDER.get() == null || !CUS_HINT_MANAGER_HOLDER.get()) {             String[] methodPreArr = {"add", "create", "save", "insert", "update", "del"};             for (String methodPre : methodPreArr) {                 if (methodName.startsWith(methodPre)) {                     CUS_HINT_MANAGER_HOLDER.set(true);                     break;                 }             }         }          if (CUS_HINT_MANAGER_HOLDER.get() != null &amp;&amp; CUS_HINT_MANAGER_HOLDER.get()) {             HintManager hintManager = HintManager.getInstance();             hintManager.setMasterRouteOnly();          }         return jp.proceed();     } ```  </body>
		<created>2018-11-12 10:47:56</created>
		<closed>2018-11-19 04:11:11</closed>
	</bug>
	<bug>
		<id>1422</id>
		<title> I get an exception when using defaultDataSourceName and defaultDatabaseStrategy at the same time</title>
		<body>config: ``` defaultDataSourceName: ds_0 defaultDatabaseStrategy:   inline:     shardingColumn: id     algorithmExpression: ds_${id % 8} ```  reproduce step: Table test can not config sharding rule I use sql to query table test(select * from test where id = 10) I expected route to ds_0, but actual route to ds_2 and throw an exception(no table route info)  analyze: In parsing phase, WhereClauseParser join id = 10 to sharding conditions In routing phase, StandardRoutingEngine use sharding conditions route to ds_2 and throw an exception(no table route info)  improve: In parsing phase, Only join sharding rule table's condition to sharding conditions Create a new DefaultDatabaseRoutingEngin to route table that can not config sharding rule </body>
		<created>2018-11-04 12:11:28</created>
		<closed>2018-11-05 14:41:12</closed>
	</bug>
	<bug>
		<id>1415</id>
		<title>mysql workbench cannot connect in 3.0.0</title>
		<body>I config username and password and can connect in mysql wordbench in **3.0.0.M2**.  But i cannot connect in **3.0.0**, return is _"Failed to Connect to MySQL at 127.0.0.1:3307 with user root Unknown database '`sharding_db`'"_ </body>
		<created>2018-11-02 10:53:12</created>
		<closed>2018-11-14 09:16:17</closed>
	</bug>
	<bug>
		<id>1414</id>
		<title>Sharding-Proxy execute `SHOW CREATE TABLE` occur ERROR</title>
		<body>## Bug Report  **For English only**, other languages will not accept.  Before report a bug, make sure you have:  - Searched open and closed [GitHub issues](https://github.com/sharding-sphere/sharding-sphere/issues). - Read documentation: [Sharding-Sphere Doc](http://shardingsphere.io/document/current/en/overview/).  Please pay attention on issues you submitted, because we maybe need more details.  If no response **more than 7 days** and we cannot reproduce it on current information, we will **close it**.  Please answer these questions before submitting your issue. Thanks!  ### Which version of Sharding-Sphere did you use? 3.0.0 ### Which project did you use? Sharding-JDBC or Sharding-Proxy? Sharding-Proxy ### Expected behavior Sharding-Proxy execute "SHOW CREATE TABLE ...," return correct result ### Actual behavior return “table doesn't exist” ### Reason analyze (If you can) The SQL of "SHOW CREATE TABLE " judge result is "ShowOtherStatement", so  it execute with error schema by schema unicast  handler. ### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.  ### Example codes for reproduce this issue (such as a github link). </body>
		<created>2018-11-02 10:40:31</created>
		<closed>2018-11-06 09:42:49</closed>
	</bug>
	<bug>
		<id>1403</id>
		<title>Sharding-Proxy master-slave mode  Exception（Springboot+mybatis）</title>
		<body>## Bug Report ### I‘m  using Sharding-Sphere which version is 3.0.0. My project is using Sharding-Proxy.   ### The git link of example codes is "https://github.com/amanxu/elegant-essay.git"  ###   Example codes architecture：springboot + mybatis + mysql ### PS: The example codes is normal when use sharding-jdbc or no use Sharding-Sphere, But it throw exception when I use Sharding-Proxy. My Sharding-Proxy service is normal and can be connected by navicat.  SQL: select u.id,u.user_name,u.real_name,u.phone,u.email,u.user_type,u.deleted from elegant_user u WHERE   u.user_name =  #{userName,jdbcType=VARCHAR} ### The Exception  is described below: #Error querying database. Cause: java.sql.SQLException: Statement parameter 1 not set. #The error may exist in file [D:\githubwork\elegant-essay\target\classes\mapper\UserSelfMapper.xml] #The error may involve com.elegant.essay.mapper.UserSelfMapper.findUserByAccount-Inline #The error occurred while setting parameters #SQL: select u.id, u.user_name, u.password, u.real_name, u.phone, u.email, u.user_type, u.deleted from elegant_user u WHERE u.user_name = ? #Cause: java.sql.SQLException: Statement parameter 1 not set. ; SQL []; Statement parameter 1 not set.; nested exception is java.sql.SQLException: Statement parameter 1 not set.] with root cause java.sql.SQLException: Statement parameter 1 not set. at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:964) at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3973) at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3909) at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2527) at com.mysql.jdbc.ServerPreparedStatement.serverExecute(ServerPreparedStatement.java:1283) at com.mysql.jdbc.ServerPreparedStatement.executeInternal(ServerPreparedStatement.java:783) at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197) at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3409) at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440) at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3407) at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:167) at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:498) at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63) at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79) at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63) at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:326) at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156) at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109) at com.github.pagehelper.PageInterceptor.intercept(PageInterceptor.java:142) at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:61) at com.sun.proxy.$Proxy116.query(Unknown Source) at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148) at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141) at org.apache.ibatis.session.defaults.DefaultSqlSession.selectOne(DefaultSqlSession.java:77) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433) at com.sun.proxy.$Proxy74.selectOne(Unknown Source) at org.mybatis.spring.SqlSessionTemplate.selectOne(SqlSessionTemplate.java:166) at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:83) at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59) at com.sun.proxy.$Proxy78.findUserByAccount(Unknown Source) at com.elegant.essay.service.impl.UserServiceImpl.findUserByAccount(UserServiceImpl.java:136)  </body>
		<created>2018-10-31 05:14:31</created>
		<closed>2018-11-01 10:43:33</closed>
	</bug>
	<bug>
		<id>1373</id>
		<title>Mysql aurora version not supported</title>
		<body>## Bug Report jdbcUrl = jdbc:mysql:aurora://host:3306/.. Then throws exception: "The URL of JDBC is not supported. Please refer to this pattern: jdbc:mysql://([\w\-\.]+):?([0-9]*)/([\w\-]+);?\S* "  See: https://github.com/sharding-sphere/sharding-sphere/blob/dev/sharding-core/src/main/java/io/shardingsphere/core/metadata/datasource/dialect/MySQLDataSourceMetaData.java#L44  </body>
		<created>2018-10-24 09:14:41</created>
		<closed>2018-10-25 03:42:31</closed>
	</bug>
	<bug>
		<id>1351</id>
		<title>Parsing error from sql "SHOW FULL TABLES FROM `sharding_db` WHERE Table_type != 'VIEW'"</title>
		<body>## Bug Report  **For English only**, other languages will not accept.  Before report a bug, make sure you have:  - Searched open and closed [GitHub issues](https://github.com/sharding-sphere/sharding-sphere/issues). - Read documentation: [Sharding-Sphere Doc](http://shardingsphere.io/document/current/en/overview/).  Please pay attention on issues you submitted, because we maybe need more details.  If no response **more than 7 days** and we cannot reproduce it on current information, we will **close it**.  Please answer these questions before submitting your issue. Thanks!  ### Which version of Sharding-Sphere did you use? 3.0.0.M5-SNAPSHOT ### Which project did you use? Sharding-JDBC or Sharding-Proxy? Sharding-Proxy ### Expected behavior "SHOW FULL TABLES FROM `sharding_db` WHERE Table_type != 'VIEW'" execute success ### Actual behavior execute  failure： You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'Table_type != 'VIEW'' at line 1 ### Reason analyze (If you can) parsing error: Logic SQL: SHOW FULL TABLES FROM `sharding_db` WHERE Table_type != 'VIEW' Actual SQL: ds_0 ::: SHOW FULL TABLES  Table_type != 'VIEW'  ### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.  ### Example codes for reproduce this issue (such as a github link). </body>
		<created>2018-10-17 11:27:32</created>
		<closed>2018-10-18 09:37:27</closed>
	</bug>
	<bug>
		<id>1349</id>
		<title>Registry can not watch changes from sharding proxy clients.</title>
		<body>## Bug Report  **For English only**, other languages will not accept.  Before report a bug, make sure you have:  - Searched open and closed [GitHub issues](https://github.com/sharding-sphere/sharding-sphere/issues). - Read documentation: [Sharding-Sphere Doc](http://shardingsphere.io/document/current/en/overview/).  Please pay attention on issues you submitted, because we maybe need more details.  If no response **more than 7 days** and we cannot reproduce it on current information, we will **close it**.  Please answer these questions before submitting your issue. Thanks!  ### Which version of Sharding-Sphere did you use?  ### Which project did you use? Sharding-JDBC or Sharding-Proxy?  Sharding-Proxy  ### Reason analyze (If you can)  The registry can not watch changes from clients, if sharding proxy loads configurations from local. So it is necessary to modify some APIs of orchestration. </body>
		<created>2018-10-17 07:49:26</created>
		<closed>2018-10-23 08:42:31</closed>
	</bug>
	<bug>
		<id>1348</id>
		<title>ParsingSQLRouter has a problem when select like this select * from table where xxx in () limit 0,20</title>
		<body>version: shardingsphere 3.0.0.M2 select * from table where xxx in () limit 0,20 xxx is shardingColumn, when one select is isSingleRouting select,the next select which is not SingleRouting select will have a NullPointerException.bacause you set the selectStatement's feild limit to null in ParsingSQLRouter.</body>
		<created>2018-10-17 05:57:55</created>
		<closed>2018-11-20 15:25:47</closed>
	</bug>
	<bug>
		<id>1340</id>
		<title>Proxy gets NULL Pointer exception when disable datasource from registry.</title>
		<body>## Bug Report  **For English only**, other languages will not accept.  Before report a bug, make sure you have:  - Searched open and closed [GitHub issues](https://github.com/sharding-sphere/sharding-sphere/issues). - Read documentation: [Sharding-Sphere Doc](http://shardingsphere.io/document/current/en/overview/).  Please pay attention on issues you submitted, because we maybe need more details.  If no response **more than 7 days** and we cannot reproduce it on current information, we will **close it**.  Please answer these questions before submitting your issue. Thanks!  ### Which version of Sharding-Sphere did you use? 3.0.0.M5 ### Which project did you use? Sharding-JDBC or Sharding-Proxy? Sharding-Proxy  ### The problem is: If  we have no disabled datasource in registry, the proxy will renew the datasource map, but will get null exception.</body>
		<created>2018-10-14 10:30:16</created>
		<closed>2018-10-15 15:09:38</closed>
	</bug>
	<bug>
		<id>1315</id>
		<title>Use PreciseShardingAlgorithm and spring-data-jpa update error</title>
		<body>## Modifying an existing data but added a new one spring-boot 1.5.6.RELEASE sharding-3.0.0.M4 sqlServer 2012 sqljdbc4 4.0  I customized the algorithm implementation from PreciseShardingAlgorithm. then, when I am ready to modify an existing data, I found that it added a new piece of data. everything is fine before I customized the algorithm.  ## About a bug that was previously closed Now I use mysql test, because [#1307](https://github.com/sharding-sphere/sharding-sphere/issues/1307) does not solve the sqlServer connection problem because the url that method SQLServerDataSourceMetaData gets like this jdbc:sqlserver://dev.database.chinacloudapi.cn:1433;authenticationScheme=nativeAuthentication;xopenStates=false;sendTimeAsDatetime=true;trustServerCertificate=false;sendStringParametersAsUnicode=false;selectMethod=direct;responseBuffering=adaptive;packetSize=8000;multiSubnetFailover=false;loginTimeout=30;lockTimeout=-1;lastUpdateCount=true;encrypt=false;disableStatementPooling=true;databaseName=sharding;applicationName=Microsoft JDBC Driver for SQL Server;applicationIntent=readwrite; it doesn't match  This is my github address [question](https://github.com/mzmzo/sharding-example)  </body>
		<created>2018-09-29 09:12:08</created>
		<closed>2018-10-25 10:30:50</closed>
	</bug>
	<bug>
		<id>1310</id>
		<title>Can not load sharding rule from registry.</title>
		<body>## Bug Report  Please answer these questions before submitting your issue. Thanks!  ### Which version of Sharding-Sphere did you use? 3.0.0.M3 ### Which project did you use? Sharding-JDBC or Sharding-Proxy? Sharding-JDBC ### Expected behavior When use orchestration to load sharding configuration from registry, there will be an exception:  Error creating bean with name 'dataSource'.</body>
		<created>2018-09-28 02:50:16</created>
		<closed>2018-09-28 09:45:03</closed>
	</bug>
	<bug>
		<id>1307</id>
		<title>Sql-Server exception : The URL of JDBC is not supported. </title>
		<body>spring-boot 1.5.6.RELEASE sharding-3.0.0.M3 sqlServer 2012 sqljdbc4 4.0  when I use sharding-3.0.0.M1，everything works fine my configuration is like this sharding.jdbc.datasource.ds_0.url=jdbc:sqlserver://dev.database.chinacloudapi.cn;database=sharding;loginTimeout=30;sendStringParametersAsUnicode=false  but when I upgrade to M3, the connection fails. report this error : The URL of JDBC is not supported. </body>
		<created>2018-09-27 09:54:48</created>
		<closed>2018-09-27 12:33:55</closed>
	</bug>
	<bug>
		<id>1265</id>
		<title>RoundRobinMasterSlaveLoadBalanceAlgorithm throw an ArrayIndexOutOfBoundsException</title>
		<body>For English only, other languages we will close it directly.  Please answer these questions before submitting your issue. Thanks!  Before submit a new issue, please check existed issue first, to make sure your issue is not a duplicated one.  ### Which version of Sharding-Sphere do you using? 3.0.0.M3  ### Which project do you using? Sharding-JDBC or Sharding-Proxy? Sharding-JDBC  ### Expected behavior RoundRobinMasterSlaveLoadBalance always be OK  ### Actual behavior after roundrobin Integer.MAX_VALUE times,  will  throw an ArrayIndexOutOfBoundsException.  ### Reason analyze the AtomicInteger's getAndIncrement() may produce an negative numbers.  ### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc  ### For bug report, please *MUST* provide the reproduce example codes (such as a github link). </body>
		<created>2018-09-17 02:48:13</created>
		<closed>2018-09-19 09:00:18</closed>
	</bug>
	<bug>
		<id>1241</id>
		<title>regular expression of MySQLDataSourceMetaData   not match hyphen （-）</title>
		<body>io.shardingsphere.core.metadata.datasource.dialect.MySQLDataSourceMetaData   line: 51  ### Which version of Sharding-Sphere do you using? version: m3 ### Which project do you using? Sharding-JDBC or Sharding-Proxy? Sharding-JDBC ### Expected behavior url:jdbc:mysql://xxxxxxx:3307/a-b?useUnicode=true Expected  match ：a-b ### Actual behavior only match : a  m2 is ok</body>
		<created>2018-09-06 08:47:58</created>
		<closed>2018-09-06 09:45:36</closed>
	</bug>
	<bug>
		<id>1227</id>
		<title>Skip system tables when loading sharding metadata by default data source</title>
		<body>### Which version of Sharding-Sphere do you using?  3.0.0.M2  ### Which project do you using? Sharding-JDBC or Sharding-Proxy?  Both  ### Expected behavior  Can start up when using oracle  ### Actual behavior  Got exception:  ``` Caused by: groovy.lang.MissingPropertyException: No such property: INTERNET_USERS for class: Script776 ```  ### Reason analyze  Oracle has lots of system tables, and some tables contains "$" as table name. When Sharding-Sphere to evaluate inline expression, cannot parse table name with "$". </body>
		<created>2018-09-04 07:53:35</created>
		<closed>2018-09-04 07:54:47</closed>
	</bug>
	<bug>
		<id>1199</id>
		<title>Lost the BinaryResultSetRowPacket when there's null value</title>
		<body>For English only, other languages we will close it directly.  Please answer these questions before submitting your issue. Thanks!  ### Which version of Sharding-Sphere do you using? 3.0.0.M3  ### Which project do you using? Sharding-JDBC or Sharding-Proxy? Sharding-Proxy  ### Expected behavior Return the BinaryResultSetRowPacket when there's null value.  ### Actual behavior Lost the BinaryResultSetRowPacket when there's null value.  ### Reason analyze Sharding-Proxy burst Exception when write binary protocol null value, althouth have already filled the nullBitmap correctly.  ### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc Use preparedStatement select a row which contains null value column.  ### For bug report, please *MUST* provide the reproduce example codes (such as a github link). Official example.</body>
		<created>2018-08-29 06:26:53</created>
		<closed>2018-08-29 08:14:23</closed>
	</bug>
	<bug>
		<id>1191</id>
		<title>Proxy blocked when client connect and close repeatly</title>
		<body>For English only, other languages we will close it directly.  Please answer these questions before submitting your issue. Thanks!  ### Which version of Sharding-Sphere do you using? 3.0.0.M3  ### Which project do you using? Sharding-JDBC or Sharding-Proxy? Sharding-Proxy  ### Expected behavior High Availability.  ### Actual behavior Proxy blocked when client connect and close repeatly.  ### Reason analyze Only when a client close the connection meanwhile a query is not finish in this connection will triger this bug. When a frontend connection is closed the connection will become not writable, this cause MySQLFrontendHandler wait and never jump out the loop.   ### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc Execute a slow SQL then close the connection until the connections is used up.  ### For bug report, please *MUST* provide the reproduce example codes (such as a github link). Official example. </body>
		<created>2018-08-27 08:12:43</created>
		<closed>2018-08-28 06:19:09</closed>
	</bug>
	<bug>
		<id>1151</id>
		<title>Modify the usage for CircuitBreakerDataSource in registry.</title>
		<body>For English only, other languages we will close it directly.  Please answer these questions before submitting your issue. Thanks!  ### Which version of Sharding-Sphere do you using? 3.0.0.M2 ### Which project do you using? Sharding-JDBC or Sharding-Proxy? Sharding-JDBC ### Expected behavior When new instances of Sharding-JDBC or Sharding-Proxy are online, the datasources in state node of registry should not be updated.  The list of CircuitBreakerDataSources should be cached in registry, and not be created and put into datasource map. ### Actual behavior When new instances of Sharding-JDBC or Sharding-Proxy are online, the datasources in state node of registry will be updated to make datasources are created. ### Solution To modify the usage for CircuitBreakerDataSource in registry. </body>
		<created>2018-08-15 08:14:45</created>
		<closed>2018-08-24 00:58:51</closed>
	</bug>
	<bug>
		<id>1150</id>
		<title>Close old dataSources for registry when refresh.</title>
		<body>For English only, other languages we will close it directly.  Please answer these questions before submitting your issue. Thanks!  ### Which version of Sharding-Sphere do you using? 3.0.0.M2 ### Which project do you using? Sharding-JDBC or Sharding-Proxy? Sharding-JDBC ### Expected behavior When the configuration in registry is updated, it is necessary to close the old datasources and create new datasource. ### Actual behavior The old datasources are not closed.  ### Solution When the configuration in registry is updated, close the old datasources and its connections. </body>
		<created>2018-08-15 08:06:44</created>
		<closed>2018-08-20 12:45:59</closed>
	</bug>
	<bug>
		<id>1143</id>
		<title>No result from SQL "SELECT COUNT(*) FROM t_order" in prepared statement</title>
		<body>For English only, other languages we will close it directly.  Please answer these questions before submitting your issue. Thanks!  ### Which version of Sharding-Sphere do you using? 3.0.0.M3-SNAPSHOT  ### Which project do you using? Sharding-JDBC or Sharding-Proxy? Sharding-Proxy  ### Expected behavior Return the row count of table `t_order`.  ### Actual behavior No return result.  ### Reason analyze Lost "Packet Number: 4".  Packets in wireshark:  Frame 2568: 94 bytes on wire (752 bits), 49 bytes captured (392 bits) on interface 0 Null/Loopback Internet Protocol Version 4, Src: 127.0.0.1, Dst: 127.0.0.1 Transmission Control Protocol, Src Port: 3307, Dst Port: 54133, Seq: 1053, Ack: 1220, Len: 5 MySQL Protocol     Packet Length: 1     Packet Number: 1     Number of fields: 1  Frame 2570: 168 bytes on wire (1344 bits), 86 bytes captured (688 bits) on interface 0 Null/Loopback Internet Protocol Version 4, Src: 127.0.0.1, Dst: 127.0.0.1 Transmission Control Protocol, Src Port: 3307, Dst Port: 54133, Seq: 1058, Ack: 1220, Len: 42 MySQL Protocol     Packet Length: 38     Packet Number: 2     Catalog: def     Database:      Table:      Original table:      Name: COUNT(*)     Original name: COUNT(*)     Charset number: utf8 COLLATE utf8_general_ci (33)     Length: 21     Type: FIELD_TYPE_LONGLONG (8)     Flags: 0x0000     Decimals: 0  Frame 2572: 102 bytes on wire (816 bits), 53 bytes captured (424 bits) on interface 0 Null/Loopback Internet Protocol Version 4, Src: 127.0.0.1, Dst: 127.0.0.1 Transmission Control Protocol, Src Port: 3307, Dst Port: 54133, Seq: 1100, Ack: 1220, Len: 9 MySQL Protocol     Packet Length: 5     Packet Number: 3     EOF marker: 254     Warnings: 0     Server Status: 0x0002  Frame 2574: 102 bytes on wire (816 bits), 53 bytes captured (424 bits) on interface 0 Null/Loopback Internet Protocol Version 4, Src: 127.0.0.1, Dst: 127.0.0.1 Transmission Control Protocol, Src Port: 3307, Dst Port: 54133, Seq: 1109, Ack: 1220, Len: 9 MySQL Protocol     Packet Length: 5     Packet Number: 5     EOF marker: 254     Warnings: 0     Server Status: 0x0002   ### Steps to reproduce the behavior Execute SQL "SELECT COUNT(*) FROM t_order"  in prepared statement.  ### For bug report, please *MUST* provide the reproduce example codes (such as a github link). Since it's straightforward to reproduce, you can add this SQL in the raw example.</body>
		<created>2018-08-14 10:41:05</created>
		<closed>2018-08-15 09:24:16</closed>
	</bug>
	<bug>
		<id>1123</id>
		<title>The getPrimaryKeys method of the TableMetaDataLoader class is incorrect.</title>
		<body>### Which version of Sharding-Sphere do you using?  3.0.0.M2  ### Which project do you using? Sharding-JDBC or Sharding-Proxy?  Sharding-JDBC  ### Expected behavior  The program should only look for the "test_0" table in the "test" database.  ### Actual behavior  The table "test_0" is present in the "test" database, but the program finds this table in the "test" database, but also goes to other databases (such as: "information_schema" database).  ### Reason analyze  ``` java.sql.SQLSyntaxErrorException: Unknown table 'test_0' in information_schema at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120) at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97) at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) at com.mysql.cj.jdbc.StatementImpl.executeQuery(StatementImpl.java:1218) at com.mysql.cj.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:2965) at com.mysql.cj.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:2953) at com.mysql.cj.jdbc.IterateBlock.doForAll(IterateBlock.java:56) at com.mysql.cj.jdbc.DatabaseMetaData.getPrimaryKeys(DatabaseMetaData.java:3006) at io.shardingsphere.core.metadata.table.executor.TableMetaDataLoader.getPrimaryKeys(TableMetaDataLoader.java:106) at io.shardingsphere.core.metadata.table.executor.TableMetaDataLoader.getColumnMetaDataList(TableMetaDataLoader.java:93) at io.shardingsphere.core.metadata.table.executor.TableMetaDataLoader.load(TableMetaDataLoader.java:82) at io.shardingsphere.core.metadata.table.executor.TableMetaDataLoader.load(TableMetaDataLoader.java:75) at io.shardingsphere.core.metadata.table.executor.TableMetaDataLoader.access$000(TableMetaDataLoader.java:49) at io.shardingsphere.core.metadata.table.executor.TableMetaDataLoader$1.call(TableMetaDataLoader.java:121) at io.shardingsphere.core.metadata.table.executor.TableMetaDataLoader$1.call(TableMetaDataLoader.java:117) at com.google.common.util.concurrent.TrustedListenableFutureTask$TrustedFutureInterruptibleTask.runInterruptibly(TrustedListenableFutureTask.java:117) at com.google.common.util.concurrent.InterruptibleTask.run(InterruptibleTask.java:38) at com.google.common.util.concurrent.TrustedListenableFutureTask.run(TrustedListenableFutureTask.java:77) at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) at java.lang.Thread.run(Thread.java:748) ```  ### Steps to reproduce the behavior  1, my MySQL version is 5.7 2, MySQL driver is mysql-connector-java (8.0.12)  I am reporting an error during the startup of the program. I started the operation at 3.0.0.M1 and there is no problem. I compared the code of M1 and M2 and found that M2 will extract all the databases when starting, and extract the primary keys in the table.  ### For bug report, please *MUST* provide the reproduce example codes (such as a github link).  My spring-boot (1.5.14.RELEASE)  yml configuration：  ``` sharding:   jdbc:     datasource:       names: ds       ds:         type: com.alibaba.druid.pool.DruidDataSource         driver-class-name: com.mysql.cj.jdbc.Driver         url: jdbc:mysql://localhost:3306/test?serverTimezone=Asia/Shanghai         username: test         password: test123         initialSize: 60         minIdle: 60         maxActive: 60         maxWait: 60000         asyncInit: true     config:       sharding:         props:           sql:             show: true         tables:           test:             actual-data-nodes: ds.test_$-&gt;{0..1}             key-generator-column-name: id             table-strategy:               inline:                 sharding-column: id                 algorithm-expression: test_$-&gt;{id % 2} ```</body>
		<created>2018-08-09 08:57:39</created>
		<closed>2018-08-11 18:08:57</closed>
	</bug>
	<bug>
		<id>1120</id>
		<title>Derived columns of GROUP BY / ORDER BY appear in query result</title>
		<body>### Which version of Sharding-Sphere do you using? 3.0.0.M2  When we execute  &gt; SELECT order_id FROM t_order ORDER BY user_id; the appendColumns for `order by` will also appear in result set.  </body>
		<created>2018-08-09 03:12:54</created>
		<closed>2018-08-09 06:29:02</closed>
	</bug>
	<bug>
		<id>1116</id>
		<title>3.0.0.M2 TransactionListener throw NullPointerException</title>
		<body>- environment java 1.8.144 3.0.0.M2 - question An exception occurs when inserting data in batches ``` Exception thrown by subscriber method listen(io.shardingsphere.core.transaction.event.TransactionEvent) on subscriber io.shardingsphere.core.transaction.listener.TransactionListener@50265207 when dispatching event: io.shardingsphere.core.transaction.event.WeakXaTransactionEvent@54be0a09 java.lang.NullPointerException: null at io.shardingsphere.core.transaction.listener.TransactionListener.listen(TransactionListener.java:61) ~[sharding-core-3.0.0.M2.jar:?] at sun.reflect.GeneratedMethodAccessor140.invoke(Unknown Source) ~[?:?] at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_144] at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_144] at com.google.common.eventbus.Subscriber.invokeSubscriberMethod(Subscriber.java:87) ~[guava-24.0-jre.jar:?] at com.google.common.eventbus.Subscriber$1.run(Subscriber.java:72) ~[guava-24.0-jre.jar:?] at com.google.common.util.concurrent.MoreExecutors$DirectExecutor.execute(MoreExecutors.java:398) ~[guava-24.0-jre.jar:?] at com.google.common.eventbus.Subscriber.dispatchEvent(Subscriber.java:67) ~[guava-24.0-jre.jar:?] at com.google.common.eventbus.Dispatcher$PerThreadQueuedDispatcher.dispatch(Dispatcher.java:108) ~[guava-24.0-jre.jar:?] at com.google.common.eventbus.EventBus.post(EventBus.java:212) ~[guava-24.0-jre.jar:?] at io.shardingsphere.core.jdbc.adapter.AbstractConnectionAdapter.setAutoCommit(AbstractConnectionAdapter.java:91) ~[sharding-jdbc-3.0.0.M2.jar:?] at org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374) ~[spring-jdbc-5.0.7.RELEASE.jar:5.0.7.RELEASE] at org.springframework.transaction.support.AbstractPlatformTransactionManager.cleanupAfterCompletion(AbstractPlatformTransactionManager.java:1007) ~[spring-tx-5.0.7.RELEASE.jar:5.0.7.RELEASE] at org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:793) ~[spring-tx-5.0.7.RELEASE.jar:5.0.7.RELEASE] at org.springframework.transaction.support.AbstractPlatformTransactionManager.commit(AbstractPlatformTransactionManager.java:714) ~[spring-tx-5.0.7.RELEASE.jar:5.0.7.RELEASE] at org.springframework.transaction.interceptor.TransactionAspectSupport.commitTransactionAfterReturning(TransactionAspectSupport.java:532) ~[spring-tx-5.0.7.RELEASE.jar:5.0.7.RELEASE] at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:304) ~[spring-tx-5.0.7.RELEASE.jar:5.0.7.RELEASE] at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98) ~[spring-tx-5.0.7.RELEASE.jar:5.0.7.RELEASE] at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185) ~[spring-aop-5.0.7.RELEASE.jar:5.0.7.RELEASE] at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688) ~[spring-aop-5.0.7.RELEASE.jar:5.0.7.RELEASE] at  ``` But there is no problem with using 3.0.0.M2-SNAPSHOT </body>
		<created>2018-08-08 10:34:25</created>
		<closed>2018-08-10 03:19:34</closed>
	</bug>
	<bug>
		<id>1057</id>
		<title>Table name of no sharding is set low-case defaultly</title>
		<body>### Which version of Sharding-Sphere do you using? 2.0.3  ### Expected behavior insert data correctly  ### Actual behavior can't insert data, throw exception "Table 'test' doesn't exist"  ### Reason analyze Database is case-sensitive and table name is in upper-case. a part of tables is sharing, and other part of tables is not sharding, when insert data into no sharding table, it throw exception "Table 'test' doesn't exist". The reason is that sharding-jdbc set table name low-case defaultly.</body>
		<created>2018-07-27 05:27:21</created>
		<closed>2018-08-14 08:28:09</closed>
	</bug>
	<bug>
		<id>1055</id>
		<title>Throw NullPointerException in InsertColumnsClauseParser.</title>
		<body>For English only, other languages we will close it directly.  Please answer these questions before submitting your issue. Thanks!  ### Which version of Sharding-Sphere do you using? 3.0.0.M2 ### Expected behavior If there is no table to be queried, ss should give information that this logic table does not exist. ### Actual behavior If there is no table to be queried, ss throw NullPointerException. ### Reason analyze If there is no table to be queried, ss will get null by shardingMetaData.getTableMetaDataMap().get(tableName). ### Steps to reproduce the behavior insert into ttttt values(1,2); (ttttt does not exist in database.) ### For bug report, please *MUST* provide the reproduce example codes (such as a github link). </body>
		<created>2018-07-27 04:34:01</created>
		<closed>2018-07-27 08:36:37</closed>
	</bug>
	<bug>
		<id>1029</id>
		<title>[BUG] batch insert have a bug</title>
		<body>For English only, other languages we will close it directly.  Please answer these questions before submitting your issue. Thanks!  ### Which version of Sharding-Sphere do you using? 3.0.0.M1 ### Expected behavior batch insert into can success  ### Actual behavior NPE ### Reason analyze bug: code :　io.shardingsphere.core.optimizer.insert.InsertOptimizeEngine.optimize() row number ： 68 ``` parameters.subList(count * insertValue.getParametersCount(), (count + 1) * insertValue.getParametersCount()) ``` A bug is generated when I insert it in bulk. My sql is as follows: Insert into test_table(id, name, age) values (?,'',?),(?,?,?),(?,?,?) But when the parameter is intercepted in the code, an error occurs because the parameter.sublist, the array subscript is out of bounds. 0×2,1×2 [0,2) 1×3, 2×3 [3,6) 2×3,3×3 [6,9) At this point, the data subscript will be out of bounds because my parameter size is 8, and the second grouping parameter is incorrect. ### Steps to reproduce the behavior  ### Please provide the reproduce example codes (such as a github link). </body>
		<created>2018-07-18 13:54:23</created>
		<closed>2018-07-19 09:42:54</closed>
	</bug>
	<bug>
		<id>1027</id>
		<title>[io.shardingsphere.jdbc.orchestration.spring.datasource.OrchestrationShardingDataSourceFactoryBean]: Constructor threw exception; nested exception is java.lang.NullPointerException</title>
		<body>For English only, other languages we will close it directly.  Please answer these questions before submitting your issue. Thanks!  ### Which version of Sharding-Sphere do you using? 3.0.0.M1 ### Expected behavior Init dataSource success ### Actual behavior  java.lang.NullPointerException ### Reason analyze ![](https://ws4.sinaimg.cn/large/006tNc79gy1ftdx9dksfaj31kw0uttk9.jpg) ![](https://ws1.sinaimg.cn/large/006tNc79gy1ftdxbg6npbj31ii0p8qaw.jpg) ### Steps to reproduce the behavior  https://github.com/sharding-sphere/sharding-sphere-example.git spring-namespace-mybatis-example/io.shardingsphere.example.spring.namespace.mybatis.main.orche.zookeeper.ShardingOnlyWithDatabases 1. execute ShardingOnlyWithDatabases  2. modify LOAD_CONFIG_FROM_REG_CENTER=true;     execute ShardingOnlyWithDatabases  ### Please provide the reproduce example codes (such as a github link). https://github.com/sharding-sphere/sharding-sphere-example.git version:3.0.0.M1</body>
		<created>2018-07-18 05:04:09</created>
		<closed>2018-07-24 02:45:41</closed>
	</bug>
	<bug>
		<id>1023</id>
		<title>Fix bug: use formula expressions for select.</title>
		<body>For English only, other languages we will close it directly.  Please answer these questions before submitting your issue. Thanks!  ### Which version of Sharding-Sphere do you using? 3.0.0.M2-SNAPSHOT ### Expected behavior select * from t_order where id &gt;1-1 limit 1; Only give me one row. ### Actual behavior select * from t_order where id &gt;1-1 limit 1; Only give me one row, but all rows are returned. ### Reason analyze Can not analyse the expression of 1-1; ### Steps to reproduce the behavior  ### Please provide the reproduce example codes (such as a github link). </body>
		<created>2018-07-17 13:36:35</created>
		<closed>2018-07-17 15:48:31</closed>
	</bug>
	<bug>
		<id>1011</id>
		<title>Can't resolve placeholder in Spring Boot YAML configuration</title>
		<body>For English only, other languages we will close it directly.  Please answer these questions before submitting your issue. Thanks!  ### Which version of Sharding-Sphere do you using? 2.0.3  ### Expected behavior resolve placeholder  ### Actual behavior treat placeholder as raw string  ### Steps to reproduce the behavior + use placeholder in configuration yaml  ``` sharding:   jdbc:     datasource:       names: ds       ds:          url: ${KEY_IN_OS_ENV} ``` + start application + get "malfrom url" exception because jdbc get "${KEY_IN_OS_ENV}" for url connection  ### Reason analyze Sharding JDBC get configuration from spring boot yaml files by `io.shardingjdbc.spring.boot.SpringBootConfiguration`. The code to get datasource configuration is blow  ``` private void setDataSourceMap(final Environment environment) {         RelaxedPropertyResolver propertyResolver = new RelaxedPropertyResolver(environment, "sharding.jdbc.datasource.");         String dataSources = propertyResolver.getProperty("names");         for (String each : dataSources.split(",")) {             try {                 Map&lt;String, Object&gt; dataSourceProps = propertyResolver.getSubProperties(each + ".");                 Preconditions.checkState(!dataSourceProps.isEmpty(), "Wrong datasource properties!");                 DataSource dataSource = DataSourceUtil.getDataSource(dataSourceProps.get("type").toString(), dataSourceProps);                 dataSourceMap.put(each, dataSource);             } catch (final ReflectiveOperationException ex) {                 throw new ShardingJdbcException("Can't find datasource type!", ex);             }         }     } ```  `getProperty(String)` can recognize placeholder and parse it. But `RelaxedPropertyResolver.getSubProperties(String)` can't. So all the placeholder has been resolved as raw string and pass to Sharding JDBC framework.  </body>
		<created>2018-07-15 07:55:59</created>
		<closed>2018-07-17 15:43:15</closed>
	</bug>
	<bug>
		<id>1010</id>
		<title>Cannot catch exception when using Sharding-JDBC route to multiple data nodes</title>
		<body>For English only, other languages we will close it directly.  Please answer these questions before submitting your issue. Thanks!  ### Which version of Sharding-Sphere do you using?  3.0.0.M1  ### Expected behavior  Can catch SQLException when exception occur  ### Actual behavior  Cannot catch SQLException when exception occur  ### Reason analyze  Because Sharding-JDBC use multiple thread to execute SQL, if exception occur, cannot catch it on main thread. </body>
		<created>2018-07-14 11:49:34</created>
		<closed>2018-07-24 03:50:42</closed>
	</bug>
	<bug>
		<id>1006</id>
		<title>Master-slave only for Sharding-Proxy execute `SHOW TABLES` occur exception</title>
		<body>For English only, other languages we will close it directly.  Please answer these questions before submitting your issue. Thanks!  ### Which version of Sharding-Sphere do you using?  3.0.0.M2.SNAPSHOT  ### Expected behavior  Master-slave only for Sharding-Proxy execute `SHOW TABLES`, return correct result.  ### Actual behavior  Error message on mysql command line:   ``` ERROR:   table ```  Exception on Sharding-Proxy:  ``` [ERROR] 17:02:39.600 [nioEventLoopGroup-5-2] i.s.p.b.common.ExecuteBackendHandler - ExecuteBackendHandler java.lang.NullPointerException: null at io.shardingsphere.core.merger.dal.show.ShowTablesMergedResult.init(ShowTablesMergedResult.java:75) ~[classes/:na] at io.shardingsphere.core.merger.dal.show.ShowTablesMergedResult.&lt;init&gt;(ShowTablesMergedResult.java:64) ~[classes/:na] at io.shardingsphere.core.merger.dal.DALMergeEngine.merge(DALMergeEngine.java:61) ~[classes/:na] at io.shardingsphere.proxy.backend.common.ExecuteBackendHandler.mergeDQLorDAL(ExecuteBackendHandler.java:204) ~[classes/:na] at io.shardingsphere.proxy.backend.common.ExecuteBackendHandler.merge(ExecuteBackendHandler.java:180) ~[classes/:na] at io.shardingsphere.proxy.backend.common.ExecuteBackendHandler.doExecuteInternal(ExecuteBackendHandler.java:127) ~[classes/:na] at io.shardingsphere.proxy.backend.common.ExecuteBackendHandler.execute(ExecuteBackendHandler.java:106) ~[classes/:na] at io.shardingsphere.proxy.transport.mysql.packet.command.text.query.ComQueryPacket.execute(ComQueryPacket.java:104) [classes/:na] at io.shardingsphere.proxy.frontend.mysql.MySQLFrontendHandler$1.run(MySQLFrontendHandler.java:96) [classes/:na] at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163) [netty-common-4.1.16.Final.jar:4.1.16.Final] at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:403) [netty-common-4.1.16.Final.jar:4.1.16.Final] at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:463) [netty-transport-4.1.16.Final.jar:4.1.16.Final] at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:858) [netty-common-4.1.16.Final.jar:4.1.16.Final] at io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator.run(DefaultThreadFactory.java:138) [netty-common-4.1.16.Final.jar:4.1.16.Final] at java.lang.Thread.run(Thread.java:748) [na:1.8.0_151]  ```  </body>
		<created>2018-07-13 09:05:20</created>
		<closed>2018-07-17 13:33:16</closed>
	</bug>
	<bug>
		<id>993</id>
		<title>Fail to parsing PostgreSQL due to the quotation </title>
		<body>For English only, other languages we will close it directly.  Please answer these questions before submitting your issue. Thanks!  ### Which version of Sharding-Sphere do you using? 3.0.0.M1 ### Expected behavior correctly parsing sql (select * from "t_user") ### Actual behavior sql after parsing was "select * from "tt_user" ### Steps to reproduce the behavior  ### Please provide the reproduce example codes (such as a github link). </body>
		<created>2018-07-10 07:07:23</created>
		<closed>2018-07-25 08:23:57</closed>
	</bug>
	<bug>
		<id>962</id>
		<title>Column types disordered when use prepared statement in Proxy</title>
		<body>Please answer these questions before submitting your issue. Thanks! 开源不易，我们希望将精力放在完成新功能和解决有价值的问题上，为了让大家的配合更具有效率，请填写以下列出的全部问题  ### Which version of Sharding-Sphere do you using?（您使用的Sharding-Sphere版本为？） dev  ### Expected behavior （您预期的结果是） correct prepared statement result  ### Actual behavior （实际运行的结果是） a chance to triger wrong result  ### Steps to reproduce the behavior （可重现问题的操作步骤） use prepared statement in Proxy  ### Please provide the reproduce example codes (such as github link)，otherwise we will label the issue as Invalid and close it.（为了节省复现问题的时间，请务必提供可重现的代码，否则我们会将issue直接标记为invalid并关闭） example  Code should based on https://github.com/sharding-sphere/sharding-sphere-example （代码请基于 https://github.com/sharding-sphere/sharding-sphere-example） </body>
		<created>2018-06-25 10:16:27</created>
		<closed>2018-06-26 02:39:06</closed>
	</bug>
	<bug>
		<id>956</id>
		<title>逻辑表名和表别名相同时会rewrite错误</title>
		<body>这个事情我还是说中文吧，我觉得当表别名和逻辑表名相同的时候，rewrite应该将别名作为tabletoken处理。否则rewrite的结果就出错了，因为select column中的表名如果等于逻辑表明都会被当作tabletoken处理。 比如select order.name,order.time from order order where order.num&gt;100,这是个合理的sql，但是现在order.name中的order都会被当作tabletoken处理,会被rewrite,但是别名 order就不被rewrite 。变成了select order_1.name,order_1.time from order_1 order where order_1.num&gt;100。我觉得这应该算个bug。请处理一下。</body>
		<created>2018-06-21 11:11:34</created>
		<closed>2018-08-25 16:48:29</closed>
	</bug>
	<bug>
		<id>954</id>
		<title>The tables with no configuration appear in the proxy.</title>
		<body>The tables which are not configed in yaml can be used with show tables, select etc. It is not correct, i will fix it in next week.</body>
		<created>2018-06-21 06:46:41</created>
		<closed>2018-06-25 07:55:36</closed>
	</bug>
	<bug>
		<id>947</id>
		<title>批量插入时候，使用自增主键导致sql语句错误</title>
		<body>Please answer these questions before submitting your issue. Thanks! 开源不易，我们希望将精力放在完成新功能和解决有价值的问题上，为了让大家的配合更具有效率，请填写以下列出的全部问题  ### Which version of Sharding-Sphere do you using?（您使用的Sharding-Sphere版本为？） 3.0.0.M1 ### Expected behavior （您预期的结果是） 解析后的sql语句预期应该是（id自增主键）：insert into test_0 (name, create_dt, id) values (?, ?, ?), (?, ?, ?) ### Actual behavior （实际运行的结果是） 实际运行：insert into test_0 (name, create_dt, id) values (?, ?), ?), (?, ?, ?) ### Steps to reproduce the behavior （可重现问题的操作步骤）  ### Please provide the reproduce example codes (such as github link)，otherwise we will label the issue as Invalid and close it.（为了节省复现问题的时间，请务必提供可重现的代码，否则我们会将issue直接标记为invalid并关闭）  ` &lt;insert id="insertTestList" parameterType="java.util.List" useGeneratedKeys="true"             keyProperty="id"&gt;       insert into test (name, create_dt) values       &lt;foreach collection="list" item="item" separator=","&gt;             (#{item.name, jdbcType=VARCHAR}, #{item. createDt, jdbcType=TIMESTAMP})         &lt;/foreach&gt;   &lt;/insert&gt;` Code should based on https://github.com/sharding-sphere/sharding-sphere-example （代码请基于 https://github.com/sharding-sphere/sharding-sphere-example）</body>
		<created>2018-06-20 16:36:55</created>
		<closed>2018-06-21 06:27:03</closed>
	</bug>
	<bug>
		<id>934</id>
		<title>use master-slave and r/w split mode，when distributed deploy mult-apps, the database connections massive increase.</title>
		<body>Please answer these questions before submitting your issue. Thanks! 开源不易，我们希望将精力放在完成新功能和解决有价值的问题上，为了让大家的配合更具有效率，请填写以下列出的全部问题  ### Which version of Sharding-Sphere do you using?（您使用的Sharding-Sphere版本为？） 3.0.0.M1 ### Expected behavior （您预期的结果是） 连接数等比例增加 ### Actual behavior （实际运行的结果是） 数据莫名其妙增加了很多连接 ### Steps to reproduce the behavior （可重现问题的操作步骤）  https://github.com/olderzhou/netty-test.git  在windows里面复现  下载好代码，进入  run-local.sh所在目录，分别执行  ./run-lcoal local ./run-lcoal local2 ./run-lcoal local3  查看数据库连接数  show processlist     ![Uploading 企业微信截图_20180614212716.png…]()          ### Please provide the reproduce example codes (such as github link)，otherwise we will label the issue as Invalid and close it.（为了节省复现问题的时间，请务必提供可重现的代码，否则我们会将issue直接标记为invalid并关闭）  Code should based on https://github.com/sharding-sphere/sharding-sphere-example （代码请基于 https://github.com/sharding-sphere/sharding-sphere-example） </body>
		<created>2018-06-14 13:29:03</created>
		<closed>2018-08-21 11:38:38</closed>
	</bug>
	<bug>
		<id>930</id>
		<title>1109 - 42S02Unknown table 'table_names' in information_schema</title>
		<body>Please answer these questions before submitting your issue. Thanks! 开源不易，我们希望将精力放在完成新功能和解决有价值的问题上，为了让大家的配合更具有效率，请填写以下列出的全部问题  ### Which version of Sharding-Sphere do you using?（您使用的Sharding-Sphere版本为？）  Sharding-Proxy in dev branch  ### Expected behavior （您预期的结果是）  show tables;  ### Actual behavior （实际运行的结果是）  mysql&gt; show tables; ERROR 1109 (HY000): 42S02Unknown table 'table_names' in information_schema  ### Steps to reproduce the behavior （可重现问题的操作步骤）  proxy.mode: CONNECTION_STRICTLY  ### Please provide the reproduce example codes (such as github link)，otherwise we will label the issue as Invalid and close it.（为了节省复现问题的时间，请务必提供可重现的代码，否则我们会将issue直接标记为invalid并关闭）  either CLI or GUI  Code should based on https://github.com/sharding-sphere/sharding-sphere-example （代码请基于 https://github.com/sharding-sphere/sharding-sphere-example） </body>
		<created>2018-06-14 02:55:46</created>
		<closed>2018-06-15 04:23:48</closed>
	</bug>
	<bug>
		<id>919</id>
		<title>Inline expression with groovy may cause memory leak</title>
		<body>## 版本号为 3.0.0.M1 环境是jdk1.8，spring boot 1.5.9，只使用的分库分表 ## 问题 线上跑了一段时间后，发现class对象原来远多，晚上看了一下只有20w个class，但是到了早上就到了40w个，并且老年代持续升高并且gc回收的空间很少，最后直接oom了，通过dump分析，发现groovy加载了大量的classInfo，并且我的项目里只有SS依赖了groovy  ## 复现代码 ```java     //-Xmx200m -Xms200m     public static void main(String[] args) {         for (int i = 0; i &lt; 100000; i++) {             new InlineExpressionParser("\"${0..9}-${0..9}\"").evaluate();         }     } ```</body>
		<created>2018-06-08 10:13:48</created>
		<closed>2018-06-08 15:11:00</closed>
	</bug>
	<bug>
		<id>914</id>
		<title>SQL not supports "Calculate Expression, eg: SUM(pv) / COUNT(uv)" meaning?</title>
		<body>### Which version of Sharding-Sphere do you using?（您使用的Sharding-Sphere版本为？） 3.0.0.M1 ### Q In https://github.com/sharding-sphere/sharding-sphere/blob/3.0.0.M1/ROADMAP.md  &gt; ## Kernel &gt; ### SQL &gt; - [ ] Calculate Expression, eg: SUM(pv) / COUNT(uv)  Because some features, like "INSERT INTO VALUES (xxx), (xxx)" are already supported, but not selected, so I'm not sure if "SUM(pv) / COUNT(uv)" is supported. Can I get some examples of SUM(pv) / COUNT(uv) ？</body>
		<created>2018-06-08 03:31:54</created>
		<closed>2018-06-08 03:53:21</closed>
	</bug>
	<bug>
		<id>901</id>
		<title>使用sharding:inline-strategy报错:通配符的匹配很全面, 但无法找到元素 'sharding:inline-strategy' 的声明。</title>
		<body>Sharding-Sphere 版本：3.0.0.M1   IDEA会提示：This custom Spring bean has not yet been parsed  看起来是sharding.xsd并没有生效  官网给的demo是：http://shardingjdbc.io/schema/shardingjdbc/sharding 但是sharding.xsd里面却不是这个地址，按照文件里面的配置修改成了http://shardingsphere.io/schema/shardingsphere/sharding 然后就报这个错误了</body>
		<created>2018-06-02 11:54:41</created>
		<closed>2018-06-06 02:15:56</closed>
	</bug>
	<bug>
		<id>879</id>
		<title>升级到3.0后启动时间变长了</title>
		<body># 场景 11个数据库，需要初始化11个datasource ## 使用2.0.3 初始化所有数据源需要2s  ## 使用3.0.0.M1 初始化所有的数据源需要需要38s  以上计算的结果是用log日志中截取的时间差 </body>
		<created>2018-05-27 15:15:13</created>
		<closed>2018-06-01 09:20:03</closed>
	</bug>
	<bug>
		<id>878</id>
		<title>升级3.0后select jion on 语句抛空指针异常（2.0没问题）</title>
		<body>## 版本：2.0.3 ```sql SELECT d.* FROM event e     , detector_device d where e.status = #{handleStatus}       and d.is_online not in (2, 3)       and e.device_code = d.code group by e.device_code order by e.date desc ``` 正确执行 ## 升级到3.0.0.M1版本后 同样的sql语句，然后跑了异常  具体抛异常的位置是在 JDBCShardingRefreshHandler#execute() 中的 getRouteResult()得到的结果为null ```java org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.PersistenceException:  ### Error querying database.  Cause: java.lang.NullPointerException ### The error may exist in file [D:\java\WorkSpace\safecuit\safecuit-manage\target\classes\mapper\DetectorDeviceMapper.xml] ### The error may involve defaultParameterMap ### The error occurred while setting parameters ### SQL: SELECT d.*         FROM event e             , detector_device d         where e.status = ?               and d.is_online not in (2, 3)               and e.device_code = d.code         group by e.device_code         order by e.date desc ### Cause: java.lang.NullPointerException  at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:77) at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446) at com.sun.proxy.$Proxy77.selectList(Unknown Source) at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:230) at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:139) at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:76) at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59) at com.sun.proxy.$Proxy96.selectAllByEventType(Unknown Source) at com.gdut.safecuitmanage.service.impl.device.UserCircuitServiceImplTest.insertList(UserCircuitServiceImplTest.java:23) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) at org.springframework.test.context.junit4.statements.RunBeforeTestMethodCallbacks.evaluate(RunBeforeTestMethodCallbacks.java:75) at org.springframework.test.context.junit4.statements.RunAfterTestMethodCallbacks.evaluate(RunAfterTestMethodCallbacks.java:86) at org.springframework.test.context.junit4.statements.SpringRepeat.evaluate(SpringRepeat.java:84) at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:252) at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:94) at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61) at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70) at org.junit.runners.ParentRunner.run(ParentRunner.java:363) at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:191) at org.junit.runner.JUnitCore.run(JUnitCore.java:137) at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) Caused by: org.apache.ibatis.exceptions.PersistenceException:  ### Error querying database.  Cause: java.lang.NullPointerException ### The error may exist in file [D:\java\WorkSpace\safecuit\safecuit-manage\target\classes\mapper\DetectorDeviceMapper.xml] ### The error may involve defaultParameterMap ### The error occurred while setting parameters ### SQL: SELECT d.*         FROM event e             , detector_device d         where e.status = ?               and d.is_online not in (2, 3)               and e.device_code = d.code         group by e.device_code         order by e.date desc ### Cause: java.lang.NullPointerException at org.apache.ibatis.exceptions.ExceptionFactory.wrapException(ExceptionFactory.java:30) at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:150) at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433) ... 35 more Caused by: java.lang.NullPointerException at io.shardingsphere.core.jdbc.metadata.dialect.JDBCShardingRefreshHandler.execute(JDBCShardingRefreshHandler.java:49) at io.shardingsphere.core.jdbc.core.statement.ShardingPreparedStatement.execute(ShardingPreparedStatement.java:159) at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63) at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63) at com.sun.proxy.$Proxy138.query(Unknown Source) at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63) at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:326) at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156) at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109) at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83) at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148) ... 41 more ```</body>
		<created>2018-05-27 15:07:45</created>
		<closed>2018-05-31 08:35:33</closed>
	</bug>
	<bug>
		<id>866</id>
		<title>使用left join时，主表和从表未进行路由。</title>
		<body>SQL语句：  ```sql select * from reb_sale t left join %s reb_busi_ledger on t.supplier_code = t1.supplier_code where t.supplier_code = ? and t.yn=1 and t.mandt=?  and ledger_no_j is null ```  spring配置:  ```xml &lt;bean id="twentyPreciseAlgorithm" class="com.dmall.rebate.dao.algorithm.TwentyPreciseAlgorithm" /&gt;     &lt;bean id="tenPreciseAlgorithm" class="com.dmall.rebate.dao.algorithm.TenPreciseAlgorithm" /&gt;     &lt;bean id="sixteenPreciseAlgorithm" class="com.dmall.rebate.dao.algorithm.SixteenPreciseAlgorithm" /&gt;      &lt;sharding:data-source id="dataSource"&gt;         &lt;sharding:sharding-rule data-source-names="rebate_datasource" default-data-source-name="rebate_datasource"&gt;             &lt;sharding:table-rules&gt;                 &lt;sharding:table-rule logic-table="reb_receipt" table-strategy-ref="rebReceiptStrategy" actual-data-nodes="rebate_datasource.reb_receipt_$-&gt;{0..0}$-&gt;{0..0}$-&gt;{0..9}"/&gt;                 &lt;sharding:table-rule logic-table="reb_sale" table-strategy-ref="rebSaleStrategy" actual-data-nodes="rebate_datasource.reb_sale_$-&gt;{0..0}$-&gt;{0..1}$-&gt;{0..9}"/&gt;                 &lt;sharding:table-rule logic-table="reb_ledger" table-strategy-ref="rebLedgerStrategy" actual-data-nodes="rebate_datasource.reb_ledger_00$-&gt;{0..9}, rebate_datasource.reb_ledger_01$-&gt;{0..5}"/&gt;                 &lt;sharding:table-rule logic-table="reb_busi_ledger" table-strategy-ref="rebSaleStrategy" actual-data-nodes="rebate_datasource.reb_busi_ledger_$-&gt;{0..0}$-&gt;{0..1}$-&gt;{0..9}"/&gt;             &lt;/sharding:table-rules&gt;             &lt;sharding:binding-table-rules&gt;                 &lt;sharding:binding-table-rule logic-tables="reb_sale,reb_busi_ledger"/&gt;             &lt;/sharding:binding-table-rules&gt;         &lt;/sharding:sharding-rule&gt;         &lt;sharding:props&gt;             &lt;prop key="sql.show"&gt;true&lt;/prop&gt;         &lt;/sharding:props&gt;     &lt;/sharding:data-source&gt;       &lt;sharding:standard-strategy id="rebSaleStrategy" sharding-column="supplier_code" precise-algorithm-ref="twentyPreciseAlgorithm"/&gt;     &lt;sharding:standard-strategy id="rebReceiptStrategy" sharding-column="supplier_code" precise-algorithm-ref="tenPreciseAlgorithm"/&gt;     &lt;sharding:standard-strategy id="rebBusiLedgerStrategy" sharding-column="supplier_code" precise-algorithm-ref="twentyPreciseAlgorithm"/&gt;     &lt;sharding:standard-strategy id="rebLedgerStrategy" sharding-column="supplier_code" precise-algorithm-ref="sixteenPreciseAlgorithm"/&gt; ```  跟踪源码发现走的是  ```java routingEngine = new StandardRoutingEngine(shardingRule, tableNames.iterator().next(), shardingConditions); ```  但是这里的tableNames.iterator().next()传入的是reb_busi_ledger ，导致未分表，20张表全部查了出来。 下面是打印出来的sql：  ``` 2018-05-24 11:09:28.960 [INFO ] [main] [io.shardingsphere.core.util.SQLLogger] - Actual SQL: rebate_datasource ::: select * from reb_sale_000 t left join reb_busi_ledger_000 t1 on t.supplier_code = t1.supplier_code where t.supplier_code = ? and t.yn=1 and t.mandt=?  and ledger_no_j is null ::: [[0000331984, 300]] 2018-05-24 11:09:28.961 [INFO ] [main] [io.shardingsphere.core.util.SQLLogger] - Actual SQL: rebate_datasource ::: select * from reb_sale_001 t left join reb_busi_ledger_001 t1 on t.supplier_code = t1.supplier_code where t.supplier_code = ? and t.yn=1 and t.mandt=?  and ledger_no_j is null ::: [[0000331984, 300]] 2018-05-24 11:09:28.961 [INFO ] [main] [io.shardingsphere.core.util.SQLLogger] - Actual SQL: rebate_datasource ::: select * from reb_sale_002 t left join reb_busi_ledger_002 t1 on t.supplier_code = t1.supplier_code where t.supplier_code = ? and t.yn=1 and t.mandt=?  and ledger_no_j is null ::: [[0000331984, 300]] 2018-05-24 11:09:28.961 [INFO ] [main-EventThread] [org.apache.curator.framework.state.ConnectionStateManager] - State change: SUSPENDED 2018-05-24 11:09:28.961 [INFO ] [main] [io.shardingsphere.core.util.SQLLogger] - Actual SQL: rebate_datasource ::: select * from reb_sale_003 t left join reb_busi_ledger_003 t1 on t.supplier_code = t1.supplier_code where t.supplier_code = ? and t.yn=1 and t.mandt=?  and ledger_no_j is null ::: [[0000331984, 300]] 2018-05-24 11:09:28.962 [INFO ] [main] [io.shardingsphere.core.util.SQLLogger] - Actual SQL: rebate_datasource ::: select * from reb_sale_004 t left join reb_busi_ledger_004 t1 on t.supplier_code = t1.supplier_code where t.supplier_code = ? and t.yn=1 and t.mandt=?  and ledger_no_j is null ::: [[0000331984, 300]] 2018-05-24 11:09:28.962 [INFO ] [main] [io.shardingsphere.core.util.SQLLogger] - Actual SQL: rebate_datasource ::: select * from reb_sale_005 t left join reb_busi_ledger_005 t1 on t.supplier_code = t1.supplier_code where t.supplier_code = ? and t.yn=1 and t.mandt=?  and ledger_no_j is null ::: [[0000331984, 300]] 2018-05-24 11:09:28.963 [INFO ] [main] [io.shardingsphere.core.util.SQLLogger] - Actual SQL: rebate_datasource ::: select * from reb_sale_006 t left join reb_busi_ledger_006 t1 on t.supplier_code = t1.supplier_code where t.supplier_code = ? and t.yn=1 and t.mandt=?  and ledger_no_j is null ::: [[0000331984, 300]] 2018-05-24 11:09:28.963 [INFO ] [main] [io.shardingsphere.core.util.SQLLogger] - Actual SQL: rebate_datasource ::: select * from reb_sale_007 t left join reb_busi_ledger_007 t1 on t.supplier_code = t1.supplier_code where t.supplier_code = ? and t.yn=1 and t.mandt=?  and ledger_no_j is null ::: [[0000331984, 300]] 2018-05-24 11:09:28.964 [INFO ] [main] [io.shardingsphere.core.util.SQLLogger] - Actual SQL: rebate_datasource ::: select * from reb_sale_008 t left join reb_busi_ledger_008 t1 on t.supplier_code = t1.supplier_code where t.supplier_code = ? and t.yn=1 and t.mandt=?  and ledger_no_j is null ::: [[0000331984, 300]] 2018-05-24 11:09:28.964 [INFO ] [main] [io.shardingsphere.core.util.SQLLogger] - Actual SQL: rebate_datasource ::: select * from reb_sale_009 t left join reb_busi_ledger_009 t1 on t.supplier_code = t1.supplier_code where t.supplier_code = ? and t.yn=1 and t.mandt=?  and ledger_no_j is null ::: [[0000331984, 300]] 2018-05-24 11:09:28.964 [INFO ] [main] [io.shardingsphere.core.util.SQLLogger] - Actual SQL: rebate_datasource ::: select * from reb_sale_010 t left join reb_busi_ledger_010 t1 on t.supplier_code = t1.supplier_code where t.supplier_code = ? and t.yn=1 and t.mandt=?  and ledger_no_j is null ::: [[0000331984, 300]] 2018-05-24 11:09:28.965 [INFO ] [main] [io.shardingsphere.core.util.SQLLogger] - Actual SQL: rebate_datasource ::: select * from reb_sale_011 t left join reb_busi_ledger_011 t1 on t.supplier_code = t1.supplier_code where t.supplier_code = ? and t.yn=1 and t.mandt=?  and ledger_no_j is null ::: [[0000331984, 300]] 2018-05-24 11:09:28.965 [INFO ] [main] [io.shardingsphere.core.util.SQLLogger] - Actual SQL: rebate_datasource ::: select * from reb_sale_012 t left join reb_busi_ledger_012 t1 on t.supplier_code = t1.supplier_code where t.supplier_code = ? and t.yn=1 and t.mandt=?  and ledger_no_j is null ::: [[0000331984, 300]] 2018-05-24 11:09:28.965 [INFO ] [main] [io.shardingsphere.core.util.SQLLogger] - Actual SQL: rebate_datasource ::: select * from reb_sale_013 t left join reb_busi_ledger_013 t1 on t.supplier_code = t1.supplier_code where t.supplier_code = ? and t.yn=1 and t.mandt=?  and ledger_no_j is null ::: [[0000331984, 300]] 2018-05-24 11:09:28.966 [INFO ] [main] [io.shardingsphere.core.util.SQLLogger] - Actual SQL: rebate_datasource ::: select * from reb_sale_014 t left join reb_busi_ledger_014 t1 on t.supplier_code = t1.supplier_code where t.supplier_code = ? and t.yn=1 and t.mandt=?  and ledger_no_j is null ::: [[0000331984, 300]] 2018-05-24 11:09:28.966 [INFO ] [main] [io.shardingsphere.core.util.SQLLogger] - Actual SQL: rebate_datasource ::: select * from reb_sale_015 t left join reb_busi_ledger_015 t1 on t.supplier_code = t1.supplier_code where t.supplier_code = ? and t.yn=1 and t.mandt=?  and ledger_no_j is null ::: [[0000331984, 300]] 2018-05-24 11:09:28.966 [INFO ] [main] [io.shardingsphere.core.util.SQLLogger] - Actual SQL: rebate_datasource ::: select * from reb_sale_016 t left join reb_busi_ledger_016 t1 on t.supplier_code = t1.supplier_code where t.supplier_code = ? and t.yn=1 and t.mandt=?  and ledger_no_j is null ::: [[0000331984, 300]] 2018-05-24 11:09:28.966 [INFO ] [main] [io.shardingsphere.core.util.SQLLogger] - Actual SQL: rebate_datasource ::: select * from reb_sale_017 t left join reb_busi_ledger_017 t1 on t.supplier_code = t1.supplier_code where t.supplier_code = ? and t.yn=1 and t.mandt=?  and ledger_no_j is null ::: [[0000331984, 300]] 2018-05-24 11:09:28.967 [INFO ] [main] [io.shardingsphere.core.util.SQLLogger] - Actual SQL: rebate_datasource ::: select * from reb_sale_018 t left join reb_busi_ledger_018 t1 on t.supplier_code = t1.supplier_code where t.supplier_code = ? and t.yn=1 and t.mandt=?  and ledger_no_j is null ::: [[0000331984, 300]] 2018-05-24 11:09:28.967 [INFO ] [main] [io.shardingsphere.core.util.SQLLogger] - Actual SQL: rebate_datasource ::: select * from reb_sale_019 t left join reb_busi_ledger_019 t1 on t.supplier_code = t1.supplier_code where t.supplier_code = ? and t.yn=1 and t.mandt=?  and ledger_no_j is null ::: [[0000331984, 300]] ``` 请看一下是否是配置方面的问题，还是sql或者代码有问题。多谢</body>
		<created>2018-05-24 03:13:23</created>
		<closed>2018-05-24 14:24:54</closed>
	</bug>
	<bug>
		<id>865</id>
		<title>Confustion about MySQLPacketPayload</title>
		<body>Please answer these questions before submitting your issue. Thanks! 开源不易，我们希望将精力放在完成新功能和解决有价值的问题上，为了让大家的配合更具有效率，请填写以下列出的全部问题  ### Which version of Sharding-Sphere do you using?（您使用的Sharding-Sphere版本为？） version : 3.0.0.M1 , branch : master ### Expected behavior （您预期的结果是） Get the right numeric value of length encoded integer ### Actual behavior （实际运行的结果是） ## 1、Bad comparision  According to the doc https://dev.mysql.com/doc/internals/en/integer.html#packet-Protocol::LengthEncodedInteger the first byte maybe an unsigned value , so we should use byteBuf.readByte() &amp; 0xFF instead  &lt;img width="564" alt="image" src="https://user-images.githubusercontent.com/6971152/40461066-2aae96a6-5f3c-11e8-91fd-fde497c91a08.png"&gt;  ## 2、Unnecessary comparison MySQLPacketPayload#writeIntLenenc , line 199 The "value &gt;= 251" is checked by "value &lt; 251" &lt;img width="624" alt="image" src="https://user-images.githubusercontent.com/6971152/40461237-e589e304-5f3c-11e8-909b-019bd535917d.png"&gt;  ## by the way RuleRegistry , line 77 Using  map.entrySet() could be more efficiency and readable and the dataSourceMap's size could be adjust to dataSourceParameters.size() &lt;img width="871" alt="image" src="https://user-images.githubusercontent.com/6971152/40461269-19c9f0be-5f3d-11e8-8d9d-312da9151df3.png"&gt;   ### Steps to reproduce the behavior （可重现问题的操作步骤）  ### Please provide the reproduce example codes (such as github link)，otherwise we will label the issue as Invalid and close it.（为了节省复现问题的时间，请务必提供可重现的代码，否则我们会将issue直接标记为invalid并关闭）  package io.shardingsphere.proxy;  import static org.junit.Assert.*;  import io.netty.buffer.ByteBuf; import io.netty.buffer.PooledByteBufAllocator; import io.shardingsphere.proxy.transport.mysql.packet.MySQLPacketPayload; import org.junit.Test;  /**  * @author lzj  * @date 2018/5/23  */ public class MySqlPacketPayloadTest {      @Test     public void test0xfb() throws Exception {         ByteBuf byteBuf = PooledByteBufAllocator.DEFAULT.buffer();         //0xFB, 251         byteBuf.writeByte(0xFB);         MySQLPacketPayload packetPayload = new MySQLPacketPayload(byteBuf);         long result = packetPayload.readIntLenenc();         assertEquals(0xFB, result);      }      @Test     public void test0xfc() throws Exception {         ByteBuf byteBuf = PooledByteBufAllocator.DEFAULT.buffer();         //0xFC,252         byteBuf.writeByte(0xFC);         byteBuf.writeShortLE(0xFC);         MySQLPacketPayload packetPayload = new MySQLPacketPayload(byteBuf);         long result = packetPayload.readIntLenenc();         assertEquals(0xFC, result);      }      @Test     public void test0xfd() throws Exception {         ByteBuf byteBuf = PooledByteBufAllocator.DEFAULT.buffer();         //0xfd,253         byteBuf.writeByte(0xFD);         byteBuf.writeMediumLE(0xFD);         MySQLPacketPayload packetPayload = new MySQLPacketPayload(byteBuf);         long result = packetPayload.readIntLenenc();         assertEquals(0xFD, result);      }      @Test     public void test0xff() throws Exception {         ByteBuf byteBuf = PooledByteBufAllocator.DEFAULT.buffer();         //0xFF,255         byteBuf.writeByte(0xFF);         byteBuf.writeLongLE(0xFF);         MySQLPacketPayload packetPayload = new MySQLPacketPayload(byteBuf);         long result = packetPayload.readIntLenenc();         assertEquals(0xFF, result);     }    }    Code should based on https://github.com/sharding-sphere/sharding-sphere-example （代码请基于 https://github.com/sharding-sphere/sharding-sphere-example） </body>
		<created>2018-05-24 02:42:38</created>
		<closed>2018-05-24 08:01:05</closed>
	</bug>
	<bug>
		<id>858</id>
		<title>sharding-proxy测试问题（中文乱码，应用死锁等）</title>
		<body>Please answer these questions before submitting your issue. Thanks! 开源不易，我们希望将精力放在完成新功能和解决有价值的问题上，为了让大家的配合更具有效率，请填写以下列出的全部问题  ### Which version of Sharding-Sphere do you using?（您使用的Sharding-Sphere版本为？） windows 10 mysql5.5 sharding-proxy-3.0.0.M1 ### Expected behavior （您预期的结果是） 1、中文正常 2、能马上返回错误 3、shardingColumn大小写忽略 ### Actual behavior （实际运行的结果是） 1、中文乱码 2、应用死锁 3、shardingColumn需大小写一致 ### Steps to reproduce the behavior （可重现问题的操作步骤） 1、springboot配置了sharding-proxy的数据源，如下： spring.datasource.slave2.driver-class-name=com.mysql.jdbc.Driver spring.datasource.slave2.url=jdbc:mysql://127.0.0.1:3307/sharding_db?characterEncoding=utf8 spring.datasource.slave2.username=root spring.datasource.slave2.password=sa 在insert时，中文为乱码。（不用sharding-proxy正常） 不知道还需要在哪里配置？  2、insert插入时shardingColumn在config.yaml中无法获取到dataSources，应用死锁。  3、shardingColumn需要严格大小写一致，实际上有些数据库是不区分大小写。  ### Please provide the reproduce example codes (such as github link)，otherwise we will label the issue as Invalid and close it.（为了节省复现问题的时间，请务必提供可重现的代码，否则我们会将issue直接标记为invalid并关闭）  Code should based on https://github.com/sharding-sphere/sharding-sphere-example （代码请基于 https://github.com/sharding-sphere/sharding-sphere-example） </body>
		<created>2018-05-22 08:16:22</created>
		<closed>2018-05-23 13:54:05</closed>
	</bug>
	<bug>
		<id>854</id>
		<title>sharding-opentracing mvn test fail</title>
		<body>Please answer these questions before submitting your issue. Thanks! 开源不易，我们希望将精力放在完成新功能和解决有价值的问题上，为了让大家的配合更具有效率，请填写以下列出的全部问题  ### Which version of Sharding-Sphere do you using?（您使用的Sharding-Sphere版本为？） 3.0.0.M1 , branch : master , mac , jdk1.8.0_151 ### Expected behavior （您预期的结果是） Is there any different between (run mvn test on module) and (run on single Class) ? mvn test pass ### Actual behavior （实际运行的结果是） Run ExecuteEventListenerTest's single method test , pass Run ExecuteEventListenerTest's single class test , pass Run AllTests.java in module sharding-opentracing , pass  **Run mvn test on module sharding-opentracing , fail**  the report is : -------------------------------------------------------  T E S T S ------------------------------------------------------- Running io.shardingsphere.opentracing.ShardingJDBCTracerTest Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.472 sec Running io.shardingsphere.opentracing.config.ConfigurationLoaderTest Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0 sec Running io.shardingsphere.opentracing.ExecuteEventListenerTest Tests run: 2, Failures: 2, Errors: 0, Skipped: 0, Time elapsed: 0.511 sec &lt;&lt;&lt; FAILURE! assertMultiStatement(io.shardingsphere.opentracing.ExecuteEventListenerTest)  Time elapsed: 0.437 sec  &lt;&lt;&lt; FAILURE! java.lang.AssertionError:  Expected: is &lt;3&gt;      but: was &lt;7&gt; at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20) at org.junit.Assert.assertThat(Assert.java:956) at org.junit.Assert.assertThat(Assert.java:923) at io.shardingsphere.opentracing.ExecuteEventListenerTest.assertMultiStatement(ExecuteEventListenerTest.java:92) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26) at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26) at org.junit.runners.ParentRunner.run(ParentRunner.java:363) at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:252) at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:141) at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:112) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189) at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165) at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85) at org.apache.maven.plugin.surefire.InPluginVMSurefireStarter.runSuitesInProcess(InPluginVMSurefireStarter.java:80) at org.apache.maven.plugin.surefire.AbstractSurefireMojo.executeProvider(AbstractSurefireMojo.java:724) at org.apache.maven.plugin.surefire.AbstractSurefireMojo.executeAllProviders(AbstractSurefireMojo.java:682) at org.apache.maven.plugin.surefire.AbstractSurefireMojo.executeAfterPreconditionsChecked(AbstractSurefireMojo.java:648) at org.apache.maven.plugin.surefire.AbstractSurefireMojo.execute(AbstractSurefireMojo.java:586) at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:134) at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:208) at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:154) at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:146) at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:117) at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:81) at org.apache.maven.lifecycle.internal.builder.singlethreaded.SingleThreadedBuilder.build(SingleThreadedBuilder.java:51) at org.apache.maven.lifecycle.internal.LifecycleStarter.execute(LifecycleStarter.java:128) at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:309) at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:194) at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:107) at org.apache.maven.cli.MavenCli.execute(MavenCli.java:955) at org.apache.maven.cli.MavenCli.doMain(MavenCli.java:290) at org.apache.maven.cli.MavenCli.main(MavenCli.java:194) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:289) at org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:229) at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:415) at org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:356) at org.codehaus.classworlds.Launcher.main(Launcher.java:47)  assertSingleStatement(io.shardingsphere.opentracing.ExecuteEventListenerTest)  Time elapsed: 0.001 sec  &lt;&lt;&lt; FAILURE! java.lang.AssertionError:  Expected: is &lt;2&gt;      but: was &lt;4&gt; at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20) at org.junit.Assert.assertThat(Assert.java:956) at org.junit.Assert.assertThat(Assert.java:923) at io.shardingsphere.opentracing.ExecuteEventListenerTest.assertSingleStatement(ExecuteEventListenerTest.java:74) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26) at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26) at org.junit.runners.ParentRunner.run(ParentRunner.java:363) at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:252) at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:141) at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:112) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189) at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165) at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85) at org.apache.maven.plugin.surefire.InPluginVMSurefireStarter.runSuitesInProcess(InPluginVMSurefireStarter.java:80) at org.apache.maven.plugin.surefire.AbstractSurefireMojo.executeProvider(AbstractSurefireMojo.java:724) at org.apache.maven.plugin.surefire.AbstractSurefireMojo.executeAllProviders(AbstractSurefireMojo.java:682) at org.apache.maven.plugin.surefire.AbstractSurefireMojo.executeAfterPreconditionsChecked(AbstractSurefireMojo.java:648) at org.apache.maven.plugin.surefire.AbstractSurefireMojo.execute(AbstractSurefireMojo.java:586) at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:134) at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:208) at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:154) at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:146) at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:117) at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:81) at org.apache.maven.lifecycle.internal.builder.singlethreaded.SingleThreadedBuilder.build(SingleThreadedBuilder.java:51) at org.apache.maven.lifecycle.internal.LifecycleStarter.execute(LifecycleStarter.java:128) at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:309) at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:194) at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:107) at org.apache.maven.cli.MavenCli.execute(MavenCli.java:955) at org.apache.maven.cli.MavenCli.doMain(MavenCli.java:290) at org.apache.maven.cli.MavenCli.main(MavenCli.java:194) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:289) at org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:229) at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:415) at org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:356) at org.codehaus.classworlds.Launcher.main(Launcher.java:47)   Results :  Failed tests:   assertMultiStatement(io.shardingsphere.opentracing.ExecuteEventListenerTest): (..)   assertSingleStatement(io.shardingsphere.opentracing.ExecuteEventListenerTest): (..)  Tests run: 6, Failures: 2, Errors: 0, Skipped: 0  ### Steps to reproduce the behavior （可重现问题的操作步骤） Run mvn test on module sharding-opentracing ### Please provide the reproduce example codes (such as github link)，otherwise we will label the issue as Invalid and close it.（为了节省复现问题的时间，请务必提供可重现的代码，否则我们会将issue直接标记为invalid并关闭）  Code should based on https://github.com/sharding-sphere/sharding-sphere-example （代码请基于 https://github.com/sharding-sphere/sharding-sphere-example） </body>
		<created>2018-05-21 02:26:55</created>
		<closed>2018-05-21 10:53:08</closed>
	</bug>
	<bug>
		<id>846</id>
		<title>typo in doc</title>
		<body>Please answer these questions before submitting your issue. Thanks! 开源不易，我们希望将精力放在完成新功能和解决有价值的问题上，为了让大家的配合更具有效率，请填写以下列出的全部问题  ### Which version of Sharding-Sphere do you using?（您使用的Sharding-Sphere版本为？） http://shardingsphere.io/document/cn/features/sharding/concept/process/ ### Expected behavior （您预期的结果是） 3.1.1 核心概念 -&gt; 流程 启示 应改为 起始 ### Actual behavior （实际运行的结果是） ![image](https://user-images.githubusercontent.com/6971152/40212670-b2370f6c-5a83-11e8-9559-c82972d47b05.png)  ### Steps to reproduce the behavior （可重现问题的操作步骤）  ### Please provide the reproduce example codes (such as github link)，otherwise we will label the issue as Invalid and close it.（为了节省复现问题的时间，请务必提供可重现的代码，否则我们会将issue直接标记为invalid并关闭）  Code should based on https://github.com/sharding-sphere/sharding-sphere-example （代码请基于 https://github.com/sharding-sphere/sharding-sphere-example） </body>
		<created>2018-05-18 02:11:40</created>
		<closed>2018-05-18 08:31:22</closed>
	</bug>
	<bug>
		<id>837</id>
		<title>Spring cloud 健康检查显示Mysql状态为down</title>
		<body>## 环境： spring boot ：1.5.9.RELEASE spring cloud：Edgware.SR3 sharding-jdbc：2.0.3 ## 问题： 当开启spring cloud 的健康检查的是时候，心跳线程会向mysql 发送一条sql语句 ```sql select 1 ``` 以此来确认数据库的健康情况 在线上环境中出现了一下情况（访问/health接口） ```json {     "status": "DOWN",     "database": "MySQL",     "error": "org.springframework.dao.IncorrectResultSizeDataAccessException: Incorrect result size: expected 1, actual 11" } ```  但是由于我分了11个库，然后这条语句返回了11个结果，导致健康检查不通过</body>
		<created>2018-05-16 10:35:46</created>
		<closed>2018-05-17 17:48:36</closed>
	</bug>
	<bug>
		<id>827</id>
		<title>Endless loop for bad SQL like: SELECT * FROM table WHERE id IN ()</title>
		<body>Please answer these questions before submitting your issue. Thanks! 开源不易，我们希望将精力放在完成新功能和解决有价值的问题上，为了让大家的配合更具有效率，请填写以下列出的全部问题 sj死循环，导致内存溢出 ### Which version of Sharding-Sphere do you using?（您使用的Sharding-Sphere版本为？） 2.1版本 ### Expected behavior （您预期的结果是） 虽然sql不对，但是sj不能死循环，导致内存溢出，影响其他业务，sql报错就行 ### Actual behavior （实际运行的结果是） 死循环 ### Steps to reproduce the behavior （可重现问题的操作步骤） select * from table where id in (); ### Please provide the reproduce example codes (such as github link)，otherwise we will label the issue as Invalid and close it.（为了节省复现问题的时间，请务必提供可重现的代码，否则我们会将issue直接标记为invalid并关闭）  ![image](https://user-images.githubusercontent.com/30542968/39973315-f4e50642-5750-11e8-8523-73d4feedbd22.png) Code should based on https://github.com/sharding-sphere/sharding-sphere-example （代码请基于 https://github.com/sharding-sphere/sharding-sphere-example） </body>
		<created>2018-05-14 00:29:59</created>
		<closed>2018-05-14 00:57:01</closed>
	</bug>
	<bug>
		<id>806</id>
		<title>NOT IN parse exception</title>
		<body>### Which version of Sharding-Jdbc do you using?（您使用的Sharding-Jdbc版本为？） 2.0.3 ### Expected behavior （您预期的结果是） SQL  select         create_time createTime ,         enterprise_id enterpriseId,         interval_log_id intervalLogId ,         interval_type intervalType ,         p_member_integral_name pmemberIntegralName ,         member_integral_name memberIntegralName ,         remark remark ,         interval_remark   intervalRemark ,         interval_inout   intervalInout ,         interval_history  intervalHistory,         interval_status  intervalStatus,         frozen_status  frozenStatus,         unfreeze_time  unfreezeTime,         interval_effect intervalEffect,         open_store_id openStoreId ,         main_part_store_id mainPartStoreId  ,         main_store_id mainStoreId       from         tab_gic_member_interval_log        where         member_id in ('ff80808158016b390158041bfc7001eb','ff80808157dcf78e0157e67dbd611b28') and interval_history !=0  and p_member_integral_code not in('1000','1001')      order by create_time desc  分片的查询结果正确的按照create_time进行排序  ### Actual behavior （实际运行的结果是） 并没有按照时间排序  sql解析日志如下： 2018-05-07 11:48:21,021 INFO  main Sharding-JDBC-SQL: SQLStatement:  SelectStatement(super=DQLStatement(super=AbstractSQLStatement(type=DQL, tables=Tables(tables=[Table(name=tab_gic_member_interval_log, alias=Optional.of(log))]), conditions=Conditions(conditions={Column(name=member_id, tableName=tab_gic_member_interval_log)=Condition(column=Column(name=member_id, tableName=tab_gic_member_interval_log), operator=IN, positionValueMap={0=ff80808158016b390158041bfc7001eb, 1=ff80808157dcf78e0157e67dbd611b28}, positionIndexMap={})}),  sqlTokens=[TableToken(beginPosition=765, originalLiterals=tab_gic_member_interval_log)], parametersIndex=0)),  containStar=false, selectListLastPosition=752, groupByLastPosition=0,  items=[CommonSelectItem(expression=log.interval_effect, alias=Optional.of(intervalEffect)), CommonSelectItem(expression=log.interval_type, alias=Optional.of(intervalType)), CommonSelectItem(expression=log.interval_history, alias=Optional.of(intervalHistory)), CommonSelectItem(expression=log.create_time, alias=Optional.of(createTime)), CommonSelectItem(expression=log.unfreeze_time, alias=Optional.of(unfreezeTime)), CommonSelectItem(expression=log.member_integral_name, alias=Optional.of(memberIntegralName)), CommonSelectItem(expression=log.remark, alias=Optional.of(remark)), CommonSelectItem(expression=log.interval_log_id, alias=Optional.of(intervalLogId)), CommonSelectItem(expression=log.p_member_integral_name, alias=Optional.of(pmemberIntegralName)), CommonSelectItem(expression=log.interval_remark, alias=Optional.of(intervalRemark)), CommonSelectItem(expression=log.enterprise_id, alias=Optional.of(enterpriseId)), CommonSelectItem(expression=log.interval_inout, alias=Optional.of(intervalInout)), CommonSelectItem(expression=log.main_part_store_id, alias=Optional.of(mainPartStoreId)), CommonSelectItem(expression=log.open_store_id, alias=Optional.of(openStoreId)), CommonSelectItem(expression=log.main_store_id, alias=Optional.of(mainStoreId)), CommonSelectItem(expression=log.interval_status, alias=Optional.of(intervalStatus)), CommonSelectItem(expression=log.frozen_status, alias=Optional.of(frozenStatus))], groupByItems=[], orderByItems=[], limit=null, subQueryStatement=null)  如果sql语句改为以下格式：  select         create_time createTime ,         enterprise_id enterpriseId,         interval_log_id intervalLogId ,         interval_type intervalType ,         p_member_integral_name pmemberIntegralName ,         member_integral_name memberIntegralName ,         remark remark ,         interval_remark   intervalRemark ,         interval_inout   intervalInout ,         interval_history  intervalHistory,         interval_status  intervalStatus,         frozen_status  frozenStatus,         unfreeze_time  unfreezeTime,         interval_effect intervalEffect,         open_store_id openStoreId ,         main_part_store_id mainPartStoreId  ,         main_store_id mainStoreId       from         tab_gic_member_interval_log        where         member_id in ('ff80808158016b390158041bfc7001eb','ff80808157dcf78e0157e67dbd611b28') and interval_history !=0  and p_member_integral_code !='1000' and p_member_integral_code!='1001' 则能获得正常结果，其解析日志如下：   2018-05-07 11:53:58,058 INFO  main Sharding-JDBC-SQL: SQLStatement: SelectStatement(super=DQLStatement(super=AbstractSQLStatement(type=DQL, tables=Tables(tables=[Table(name=tab_gic_member_interval_log, alias=Optional.absent())]), conditions=Conditions(conditions={Column(name=member_id, tableName=tab_gic_member_interval_log)=Condition(column=Column(name=member_id, tableName=tab_gic_member_interval_log), operator=IN, positionValueMap={0=ff80808158016b390158041bfc7001eb, 1=ff80808157dcf78e0157e67dbd611b28}, positionIndexMap={})}), sqlTokens=[TableToken(beginPosition=697, originalLiterals=tab_gic_member_interval_log)], parametersIndex=0)), containStar=false, selectListLastPosition=684, groupByLastPosition=884, items=[CommonSelectItem(expression=unfreeze_time, alias=Optional.of(unfreezeTime)), CommonSelectItem(expression=interval_log_id, alias=Optional.of(intervalLogId)), CommonSelectItem(expression=interval_inout, alias=Optional.of(intervalInout)), CommonSelectItem(expression=p_member_integral_name, alias=Optional.of(pmemberIntegralName)), CommonSelectItem(expression=frozen_status, alias=Optional.of(frozenStatus)), CommonSelectItem(expression=member_integral_name, alias=Optional.of(memberIntegralName)), CommonSelectItem(expression=enterprise_id, alias=Optional.of(enterpriseId)), CommonSelectItem(expression=interval_type, alias=Optional.of(intervalType)), CommonSelectItem(expression=remark, alias=Optional.of(remark)), CommonSelectItem(expression=create_time, alias=Optional.of(createTime)), CommonSelectItem(expression=interval_remark, alias=Optional.of(intervalRemark)), CommonSelectItem(expression=open_store_id, alias=Optional.of(openStoreId)), CommonSelectItem(expression=interval_effect, alias=Optional.of(intervalEffect)), CommonSelectItem(expression=main_store_id, alias=Optional.of(mainStoreId)), CommonSelectItem(expression=main_part_store_id, alias=Optional.of(mainPartStoreId)), CommonSelectItem(expression=interval_history, alias=Optional.of(intervalHistory)), CommonSelectItem(expression=interval_status, alias=Optional.of(intervalStatus))], groupByItems=[OrderItem(owner=Optional.absent(), name=Optional.of(create_time), type=ASC, nullOrderType=ASC, index=-1, alias=Optional.of(createTime))], orderByItems=[OrderItem(owner=Optional.absent(), name=Optional.of(create_time), type=DESC, nullOrderType=ASC, index=-1, alias=Optional.of(createTime))], limit=null, subQueryStatement=null)   </body>
		<created>2018-05-07 06:23:28</created>
		<closed>2018-05-10 11:24:35</closed>
	</bug>
	<bug>
		<id>750</id>
		<title>Proxy raised an out of bound exception</title>
		<body>Please answer these questions before submitting your issue. Thanks! 开源不易，我们希望将精力放在完成新功能和解决有价值的问题上，为了让大家的配合更具有效率，请填写以下列出的全部问题  ### Which version of Sharding-Jdbc do you using?（您使用的Sharding-Jdbc版本为？） dev  ### Expected behavior （您预期的结果是） Read data correctly from the ByteBuf of sharding-proxy.  ### Actual behavior （实际运行的结果是） [WARN ] 17:20:14.713 [nioEventLoopGroup-5-3] i.n.u.c.AbstractEventExecutor - A task raised an exception. Task: io.shardingjdbc.proxy.frontend.mysql.MySQLFrontendHandler$1@10d19d69 java.lang.IndexOutOfBoundsException: readerIndex(1040) + length(1) exceeds writerIndex(17): PooledUnsafeDirectByteBuf(ridx: 0, widx: 17, cap: 2048) at io.netty.buffer.AbstractByteBuf.checkReadableBytes0(AbstractByteBuf.java:1401) ~[netty-buffer-4.1.16.Final.jar:4.1.16.Final] at io.netty.buffer.AbstractByteBuf.readByte(AbstractByteBuf.java:707) ~[netty-buffer-4.1.16.Final.jar:4.1.16.Final] at io.shardingjdbc.proxy.transport.mysql.packet.MySQLPacketPayload.readInt1(MySQLPacketPayload.java:51) ~[classes/:na] at io.shardingjdbc.proxy.frontend.mysql.MySQLFrontendHandler$1.run(MySQLFrontendHandler.java:69) ~[classes/:na] at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163) ~[netty-common-4.1.16.Final.jar:4.1.16.Final] at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:403) [netty-common-4.1.16.Final.jar:4.1.16.Final] at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:463) [netty-transport-4.1.16.Final.jar:4.1.16.Final] at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:858) [netty-common-4.1.16.Final.jar:4.1.16.Final] at io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator.run(DefaultThreadFactory.java:138) [netty-common-4.1.16.Final.jar:4.1.16.Final] at java.lang.Thread.run(Thread.java:748) [na:1.8.0_162]  ### Steps to reproduce the behavior （可重现问题的操作步骤） This Exception bust randomly, but not difficult to be reproduced by continuously send message to sharding-proxy for not a very long time.  ### Please provide the reproduce example codes (such as github link)，otherwise we will label the issue as Invalid and close it.（为了节省复现问题的时间，请务必提供可重现的代码，否则我们会将issue直接标记为invalid并关闭） https://github.com/shardingjdbc/sharding-proxy-example  Code should based on https://github.com/shardingjdbc/sharding-jdbc-example （代码请基于 https://github.com/shardingjdbc/sharding-jdbc-example） </body>
		<created>2018-04-21 09:52:42</created>
		<closed>2018-04-24 02:56:41</closed>
	</bug>
	<bug>
		<id>735</id>
		<title>Unexpected slave datasource routing result when using Round-robin load-balance algorithm in Mybatis</title>
		<body> **org.apache.ibatis.executor.statement.PreparedStatementHandler**.query ![image](https://user-images.githubusercontent.com/11692089/38844890-e7d54fa4-4227-11e8-9bcf-80c79dacc87e.png)  ps.execute(); 会调用一次 MasterSlaveLoadBalanceAlgorithm.getDataSource  这是函数调用栈 ![image](https://user-images.githubusercontent.com/11692089/38844947-293b8d28-4228-11e8-93ba-6ab3e8819197.png) ---------- return resultSetHandler.&lt;E&gt; handleResultSets(ps);  也会调用 MasterSlaveLoadBalanceAlgorithm.getDataSource 这是函数调用栈  ![image](https://user-images.githubusercontent.com/11692089/38845240-4e1d8726-4229-11e8-97b0-9b9bfa273177.png) ----- 就是 一次 数据操作 会让 RoundBin 的  计数 增加2  一般都是 用   id  &amp; ((1&lt;&lt; x) - 1)    就会 ～～  这问题 怕是修复不了吧～    </body>
		<created>2018-04-17 02:20:00</created>
		<closed>2018-05-11 05:28:39</closed>
	</bug>
	<bug>
		<id>648</id>
		<title>SelectItem should be annotated by EqualsAndHashCode</title>
		<body>I found that there are several subclasses implement  `SelectItem`. They are used as container elements in  `Set` collection(io.shardingjdbc.core.parsing.parser.sql.dql.select.SelectStatement#items), but I only see the `AggregationSelectItem` has `EqualsAndHashCode` annotation. the others are forgotten?</body>
		<created>2018-03-16 08:32:35</created>
		<closed>2018-03-18 01:59:32</closed>
	</bug>
	<bug>
		<id>646</id>
		<title>When aliases in SELECT ITEMS correspond to the real column names of GROUP BY or ORDER BY, there is no need to generate derived columns</title>
		<body>for example:  The SQL like   ```sql SELECT o.user_id uid FROM t_order o GROUP BY o.user_id ORDER BY o.user_id ```  should not add derived column, sharding-jdbc should match alias and item.</body>
		<created>2018-03-16 03:52:21</created>
		<closed>2018-03-16 03:59:41</closed>
	</bug>
	<bug>
		<id>645</id>
		<title>GroupByClauseParser解析问题</title>
		<body>io.shardingjdbc.core.parsing.parser.clause.GroupByClauseParser#addGroupByItem 第84行是不是笔误写错了 `SQLUtil.getExactlyValue(sqlPropertyExpression.getOwner() + "." + SQLUtil.getExactlyValue(sqlPropertyExpression.getName()` 改成 `SQLUtil.getExactlyValue(sqlPropertyExpression.getOwner().getName() + "." + SQLUtil.getExactlyValue(sqlPropertyExpression.getName()` 但是我改过来后，parsing模块测试用例没问题，其它集成单元测试跑不过</body>
		<created>2018-03-16 02:50:05</created>
		<closed>2018-03-16 03:59:51</closed>
	</bug>
	<bug>
		<id>629</id>
		<title>Support transaction isolation on JDBC</title>
		<body>version: 2.0.3 发现在sharding-jdbc拿到的连接 取到的事务隔离级别都是 1 但我们的mysql的事务隔离级别是4（REPEATABLE_READ） 那这种情况在与spring集成时是否得明确指定事务隔离级别，否则是没办法取到mysql设置的隔离级别的？</body>
		<created>2018-03-05 10:58:46</created>
		<closed>2018-05-13 16:49:05</closed>
	</bug>
	<bug>
		<id>628</id>
		<title>Support data type jsonb for PostgreSQL</title>
		<body>Please answer these questions before submitting your issue. Thanks! 开源不易，我们希望将精力放在完成新功能和解决有价值的问题上，为了让大家的配合更具有效率，请填写以下列出的全部问题  请问sharding-jdbc的sql parser是否支持postgresql的数据类型geography(Point,4326)以及jsonb ? 官方文档http://shardingjdbc.io/docs_cn/01-start/sql-supported/并没有明确说明  但是实际执行下来对于这个sql的DMLStatement如下，user_new_id的positonIndex并不对 update t_order         set start_time=?,         status=0,         start_point=ST_GeographyFromText('SRID=4326;POINT('||?||' '||?||')'),         rule=?::jsonb,         discount_type=?,         order_type=?         where         user_new_id = ?         AND create_time=?         AND guid=?   DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=t_order, alias=Optional.absent())]), conditions=Conditions(conditions={Column(name=user_new_id, tableName=t_order)=Condition(column=Column(name=user_new_id, tableName=t_order), operator=EQUAL, positionValueMap={}, positionIndexMap={0=4}), Column(name=create_time, tableName=t_order)=Condition(column=Column(name=create_time, tableName=t_order), operator=EQUAL, positionValueMap={}, positionIndexMap={0=5}), Column(name=guid, tableName=t_order)=Condition(column=Column(name=guid, tableName=t_order), operator=EQUAL, positionValueMap={}, positionIndexMap={0=6})}), sqlTokens=[TableToken(beginPosition=7, originalLiterals=t_order)], parametersIndex=7))   ### Which version of Sharding-Jdbc do you using?（您使用的Sharding-Jdbc版本为？） 2.0.2 ### Expected behavior （您预期的结果是）  ### Actual behavior （实际运行的结果是）  ### Steps to reproduce the behavior （可重现问题的操作步骤）  ### Please provide the reproduce example codes (such as github link)，otherwise we will label the issue as Invalid and close it.（为了节省复现问题的时间，请务必提供可重现的代码，否则我们会将issue直接标记为invalid并关闭）  Code should based on https://github.com/shardingjdbc/sharding-jdbc-example （代码请基于 https://github.com/shardingjdbc/sharding-jdbc-example） </body>
		<created>2018-03-05 07:37:26</created>
		<closed>2018-04-11 01:47:54</closed>
	</bug>
	<bug>
		<id>577</id>
		<title>Support new line for YAML configuration</title>
		<body>Please answer these questions before submitting your issue. Thanks!  获取数据源换行 String dataSources = propertyResolver.getProperty("names");   建议   OrchestrationSpringBootConfiguration文件  line77  String dataSources = propertyResolver.getProperty("names");  加一个去空格处理  改为  String dataSources = propertyResolver.getProperty("names").trim();  ### Which version of Sharding-Jdbc do you using?  ### Expected behavior  ### Actual behavior  ### Steps to reproduce the behavior  ### Please provide the reproduce example codes (such as github link)  Code should based on https://github.com/shardingjdbc/sharding-jdbc-example </body>
		<created>2018-01-24 09:07:07</created>
		<closed>2018-01-29 02:15:34</closed>
	</bug>
	<bug>
		<id>569</id>
		<title>Oracle分页rowno的问题</title>
		<body>不知道有没有人提过这个问题，没细看issue Oracle的分页  路由到各个数据库执行的SQL语句在rownum的值错误， 测试环境：Oracle分库（ds_0、ds_1、ds_2） 我在ParsingSQLRouter#router(String, List, SQLStatement)里面打印了rewriteEngine.generateSQL()生成的SQL语句  1.这种情况下没有问题  &gt; 输入SQL : SELECT * FROM ( SELECT ROWNUM AS rowno, T.* FROM t_person T WHERE age=23 AND ROWNUM &lt;= 20) table_alias WHERE table_alias.rowno &gt;= 1  输出ds_2 : SELECT * FROM ( SELECT ROWNUM AS rowno, T.* FROM t_person T WHERE age=23 AND ROWNUM &lt;= 20) table_alias WHERE table_alias.rowno &gt;= 0 输出ds_1 : SELECT * FROM ( SELECT ROWNUM AS rowno, T.* FROM t_person T WHERE age=23 AND ROWNUM &lt;= 20) table_alias WHERE table_alias.rowno &gt;= 0 输出ds_0 : SELECT * FROM ( SELECT ROWNUM AS rowno, T.* FROM t_person T WHERE age=23 AND ROWNUM &lt;= 20) table_alias WHERE table_alias.rowno &gt;= 0  2.调转一下where后面跟着的条件顺序，会出现rownum由20变成220  &gt; 输入SQL : SELECT * FROM ( SELECT ROWNUM AS rowno, T.* FROM t_person T WHERE ROWNUM &lt;= 20 AND age=23) table_alias WHERE table_alias.rowno &gt;= 1  输出ds_2 : SELECT * FROM ( SELECT ROWNUM AS rowno, T.* FROM t_person T WHERE ROWNUM &lt;= 220AND age=23) table_alias WHERE table_alias.rowno &gt;= 0 输出ds_1 : SELECT * FROM ( SELECT ROWNUM AS rowno, T.* FROM t_person T WHERE ROWNUM &lt;= 220AND age=23) table_alias WHERE table_alias.rowno &gt;= 0 输出ds_0 : SELECT * FROM ( SELECT ROWNUM AS rowno, T.* FROM t_person T WHERE ROWNUM &lt;= 220AND age=23) table_alias WHERE table_alias.rowno &gt;= 0   3.在1的情况下增加order by，会出现2一样的情况，rownum由20变成220  &gt; 输入SQL: SELECT * FROM ( SELECT ROWNUM AS rowno, T.* FROM t_person T WHERE age=23 AND ROWNUM &lt;= 20 ORDER BY account) table_alias WHERE table_alias.rowno &gt;= 1  输出ds_2 : SELECT * FROM ( SELECT ROWNUM AS rowno, T.* , account AS ORDER_BY_DERIVED_0 FROM t_person T WHERE age=23 AND ROWNUM &lt;= 220ORDER BY account) table_alias WHERE table_alias.rowno &gt;= 0 输出ds_1 : SELECT * FROM ( SELECT ROWNUM AS rowno, T.* , account AS ORDER_BY_DERIVED_0 FROM t_person T WHERE age=23 AND ROWNUM &lt;= 220ORDER BY account) table_alias WHERE table_alias.rowno &gt;= 0 输出ds_0 : SELECT * FROM ( SELECT ROWNUM AS rowno, T.* , account AS ORDER_BY_DERIVED_0 FROM t_person T WHERE age=23 AND ROWNUM &lt;= 220ORDER BY account) table_alias WHERE table_alias.rowno &gt;= 0  看上去应该是rownum如果有跟着其它的什么条件就会出现rownum变大的情况</body>
		<created>2018-01-22 02:07:53</created>
		<closed>2018-08-23 06:15:58</closed>
	</bug>
	<bug>
		<id>567</id>
		<title>Add escape char for derived columns or alias when using MySQL</title>
		<body>Please answer these questions before submitting your issue. Thanks!  ### Which version of Sharding-Jdbc do you using?  2.0.1  </body>
		<created>2018-01-17 10:50:40</created>
		<closed>2018-01-17 10:59:44</closed>
	</bug>
	<bug>
		<id>559</id>
		<title>Support parsing numbers beginning with minus and decimal (e.g. `-.12`)</title>
		<body>**BUG**  当前最新分支上，io.shardingjdbc.core.parsing.lexer.Lexer中代码： ```java private boolean isNumberBegin() {         return CharType.isDigital(getCurrentChar(0)) || ('.' == getCurrentChar(0) &amp;&amp; CharType.isDigital(getCurrentChar(1)) &amp;&amp; !isIdentifierBegin(getCurrentChar(-1))                 || ('-' == getCurrentChar(0) &amp;&amp; ('.' == getCurrentChar(0) || CharType.isDigital(getCurrentChar(1)))));     } ``` 最后一个判断负数的逻辑，应该是 `('-' == getCurrentChar(0) &amp;&amp; ('.' == getCurrentChar(1) || CharType.isDigital(getCurrentChar(1))))`，才能解析出 `-.12` 这种情况  </body>
		<created>2018-01-16 00:11:04</created>
		<closed>2018-01-17 05:53:31</closed>
	</bug>
	<bug>
		<id>557</id>
		<title>When GROUP BY and ORDER BY aliases are inconsistent, stream merging should be used</title>
		<body>Please answer these questions before submitting your issue. Thanks!  ### Which version of Sharding-Jdbc do you using? sharingJdbc1.5.0 ### Expected behavior  ### Actual behavior select语句中，当groupBy和orderBy的字段一样时，也会出现内存归并的情况，拉取全部数据进行merge。类似下面的SQL： SELECT co.id orderId, co.order_no orderNo, co.payer_type payerType, co.id AS GROUP_BY_DERIVED_0 （这个是SQL改写之后，追加的别名，和select定义的冲突，导致alias不一致） FROM t1 co LEFT JOIN t2 odt ON co.id = odt.order_id WHERE co.create_time BETWEEN '2018-01-01' AND '2018-01-15' GROUP BY co.id DESC ORDER BY co.id DESC  完整实例SQL： SELECT         co.id orderId,         co.order_no orderNo,         co.combo_name comboName,         co.combo_code comboCode,         co.buyer_id buyerId,         co.buyer_domain_id buyerDomainId,         co.buyer_name buyerName,         co.buyer_mobile buyerMobile,         co.buyer_real_name buyerRealName,         co.creator_id creatorId,         co.creator_name creatorName,         co.creator_work_no creatorWorkNo,         co.creator_real_name creatorRealName,         co.amount amount,         co.actual_amount actualAmount,         co.`status` `status`,         co.create_time createTime,         co.last_update_time updateTime,         co.creator_org_id orgId,         co.creator_org_name orgName,         co.pay_type payType,         co.payer_type payerType         FROM         combo_order co LEFT JOIN order_detail odt ON co.id = odt.order_id         WHERE         AND co.create_time between #{conditions.createTimeBegin} and #{conditions.createTimeEnd}         GROUP BY         co.id DESC         ORDER BY         co.id DESC LIMIT #{start},#{ps} ### Steps to reproduce the behavior  ### Please provide the reproduce example codes (such as github link) if possible. </body>
		<created>2018-01-15 09:05:22</created>
		<closed>2018-01-17 10:18:23</closed>
	</bug>
	<bug>
		<id>553</id>
		<title>并发执行update操作多节点时出现死锁</title>
		<body>Please answer these questions before submitting your issue. Thanks!  ### 2.0.0.M1  ### 各节点都更新成功 ### 执行操作后,无响应  ### 表t_order ```create table T_ORDER (   ORDER_ID INTEGER not null,   USER_ID  INTEGER not null,   STATUS   VARCHAR2(50) ) ``` 分片键使用USER_ID，切分至2个数据库实例中，并在2个数据库实例中分别插入order_id=1234数据记录。 并开启多个线程进行更新操作,语句如下 ``` update t_order set status='11111' where order_id='1234' ```    ### 实例代码 #### SpringMybatisShardingDatabaseOnlyMain2 ```  /*  * Copyright 1999-2015 dangdang.com.  * &lt;p&gt;  * Licensed under the Apache License, Version 2.0 (the "License");  * you may not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  * &lt;/p&gt;  */  package io.shardingjdbc.example.spring.namespace.mybatis;  import org.springframework.context.ApplicationContext; import org.springframework.context.support.ClassPathXmlApplicationContext;  import javax.sql.DataSource; import java.sql.Connection; import java.sql.PreparedStatement; import java.sql.SQLException; import java.util.concurrent.ExecutorService; import java.util.concurrent.Executors; import java.util.concurrent.TimeUnit;  /**  *请求1  1、node1 update test set a=1 where user_id='1'   4、node2 update test set a=1 where user_id='1'  请求2  2、node1  update test set a=1 where user_id='1'  3、node2  update test set a=1 where user_id='1'  *  * 如果按照以上顺序执行时,会不会发生死锁现象  */ public final class SpringMybatisShardingDatabaseOnlyMain2 {      public static void main(final String[] args) throws SQLException, InterruptedException {         final ApplicationContext applicationContext = new ClassPathXmlApplicationContext("META-INF/mybatisShardingDatabaseOnlyContext.xml");         ExecutorService executors = Executors.newFixedThreadPool(10);         for (int i = 0; i &lt; 2; i++) {             executors.execute(new UpdateRunable(applicationContext));         }         TimeUnit.SECONDS.sleep(10);         executors.shutdown();         while (!executors.isTerminated()){         }         System.out.println("程序结束");       }       public static class UpdateRunable implements Runnable {         ApplicationContext applicationContext;          public UpdateRunable(ApplicationContext applicationContext) {             this.applicationContext = applicationContext;         }          @Override         public void run() {                 DataSource dataSource = (DataSource) applicationContext.getBean("shardingDataSource");                 Connection connection = null;                 PreparedStatement pre = null;                 try {                     connection = dataSource.getConnection();                     connection.setAutoCommit(false);                     pre = connection.prepareStatement("update t_order set status='11111' where order_id='1234'");                     int c = pre.executeUpdate();                     System.out.println("t-name:" + Thread.currentThread().getName() + "  c1:" + c);                     connection.commit();                 } catch (Exception e) {                     e.printStackTrace();                 } finally {                     try {                         connection.close();                     } catch (SQLException e) {                         e.printStackTrace();                     }                 }         }     }  }  ``` #### mybatisShardingDatabaseOnlyContext.xml ```  &lt;?xml version="1.0" encoding="UTF-8"?&gt; &lt;beans xmlns="http://www.springframework.org/schema/beans"     xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"     xmlns:context="http://www.springframework.org/schema/context"      xmlns:tx="http://www.springframework.org/schema/tx"      xmlns:sharding="http://shardingjdbc.io/schema/shardingjdbc/sharding"     xsi:schemaLocation="http://www.springframework.org/schema/beans                         http://www.springframework.org/schema/beans/spring-beans.xsd                          http://www.springframework.org/schema/tx                          http://www.springframework.org/schema/tx/spring-tx.xsd                         http://www.springframework.org/schema/context                          http://www.springframework.org/schema/context/spring-context.xsd                         http://shardingjdbc.io/schema/shardingjdbc/sharding                          http://shardingjdbc.io/schema/shardingjdbc/sharding/sharding.xsd"&gt;     &lt;context:component-scan base-package="io.shardingjdbc.example.spring.namespace.mybatis" /&gt;      &lt;bean id="demo_ds_0" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close"&gt;         &lt;property name="driverClassName" value="oracle.jdbc.driver.OracleDriver"/&gt;         &lt;property name="url" value="jdbc:oracle:thin:@127.0.0.1:1521:orcl"/&gt;         &lt;property name="username" value="t2"/&gt;         &lt;property name="password" value="t2"/&gt;         &lt;property name="maxActive" value="50"/&gt;     &lt;/bean&gt;      &lt;bean id="demo_ds_1" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close"&gt;         &lt;property name="driverClassName" value="oracle.jdbc.driver.OracleDriver"/&gt;         &lt;property name="url" value="jdbc:oracle:thin:@127.0.0.1:1521:orcl"/&gt;         &lt;property name="username" value="t1"/&gt;         &lt;property name="password" value="t1"/&gt;         &lt;property name="maxActive" value="50"/&gt;     &lt;/bean&gt;     &lt;sharding:standard-strategy id="databaseShardingStrategy" sharding-column="user_id" precise-algorithm-class="io.shardingjdbc.example.spring.namespace.mybatis.algorithm.PreciseModuloDatabaseShardingAlgorithm"/&gt;          &lt;sharding:data-source id="shardingDataSource"&gt;         &lt;sharding:sharding-rule data-source-names="demo_ds_0, demo_ds_1"&gt;             &lt;sharding:table-rules&gt;                 &lt;sharding:table-rule logic-table="t_order" database-strategy-ref="databaseShardingStrategy" generate-key-column="order_id" /&gt;             &lt;/sharding:table-rules&gt;         &lt;/sharding:sharding-rule&gt;     &lt;/sharding:data-source&gt;          &lt;bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager"&gt;         &lt;property name="dataSource" ref="shardingDataSource" /&gt;     &lt;/bean&gt;     &lt;tx:annotation-driven transaction-manager="transactionManager" /&gt;          &lt;bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean"&gt;         &lt;property name="dataSource" ref="shardingDataSource"/&gt;         &lt;property name="mapperLocations" value="classpath*:META-INF/mappers/*.xml"/&gt;     &lt;/bean&gt;          &lt;bean class="org.mybatis.spring.mapper.MapperScannerConfigurer"&gt;         &lt;property name="basePackage" value="io.shardingjdbc.example.spring.namespace.mybatis"/&gt;         &lt;property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/&gt;     &lt;/bean&gt;  &lt;/beans&gt;  ``` #### OrderMapper.xml ``` &lt;?xml version="1.0" encoding="UTF-8" ?&gt; &lt;!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd"&gt; &lt;mapper namespace="io.shardingjdbc.example.spring.namespace.mybatis.repository.OrderRepository"&gt;     &lt;update id="createIfNotExistsTable"&gt;         CREATE TABLE  t_order (order_id INT , user_id INT NOT NULL, status VARCHAR2(50), PRIMARY KEY (order_id))     &lt;/update&gt;      &lt;update id="truncateTable"&gt;         TRUNCATE TABLE t_order     &lt;/update&gt;          &lt;update id="dropTable"&gt;         DROP TABLE  t_order     &lt;/update&gt;          &lt;insert id="insert" useGeneratedKeys="true" keyProperty="orderId"&gt;         INSERT INTO t_order (           user_id, status         )         VALUES (         #{userId,jdbcType=INTEGER},         #{status,jdbcType=VARCHAR}         )     &lt;/insert&gt;          &lt;delete id="delete"&gt;         DELETE FROM t_order WHERE order_id = #{orderId,jdbcType=INTEGER}     &lt;/delete&gt; &lt;/mapper&gt;    </body>
		<created>2018-01-14 04:35:19</created>
		<closed>2018-08-26 13:36:01</closed>
	</bug>
	<bug>
		<id>541</id>
		<title>IS NOT NULL parse error</title>
		<body>Please answer these questions before submitting your issue. Thanks!  ### 2.0.0  ### 查询条件中出现 is not null 的时候 用limit 0，1，应该最多只能查询一条记录  ### 查询出来的不止一条记录  ### 查询语句里面含有 is not null 判断 limit 0， 1  ###  String sql = "select smUuid, customerId " +                     "from tbl_app_identify_batch_record t1 " +                     "where t1.deliverResult IS Not NULL and validateFlag in(1,2,4,5)  " +                     "and batchId != 0 limit 0, 1";    </body>
		<created>2018-01-08 10:08:15</created>
		<closed>2018-01-17 15:38:19</closed>
	</bug>
	<bug>
		<id>540</id>
		<title>Support SQL that alias is the keyword</title>
		<body>```sql select a.user_id userId, a.user_name userName, a.password password from t_user a where a.user_id = ? ```  其中password被重命名为password，为关键字，导致路由有问题，但是这样确是可以的：  ```sql select a.user_id userId, a.user_name userName, a.password "password" from t_user a where a.user_id = ? ```</body>
		<created>2018-01-07 12:15:13</created>
		<closed>2018-02-15 13:28:33</closed>
	</bug>
	<bug>
		<id>529</id>
		<title>Table name capitalization cannot be queried</title>
		<body> 多张表分库，表名大写找不到表，只有其中一张表能查询，其他不能查询。 spring boot 1.5.9 mybatis3.4.5  shardingjdbc 2.0.1 其中一张表能查到数据，其他的表都报找不到表。表名都是大写 t1表无法查询，报错 org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.PersistenceException:  ### Error querying database.  Cause: io.shardingjdbc.core.exception.ShardingJdbcException: io.shardingjdbc.core.exception.ShardingJdbcException: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'xx.T1' doesn't exist ### The error may exist in file [T1Mapper.xml] ### The error may involve defaultParameterMap ### The error occurred while setting parameters ### SQL: SELECT * from T1 ### Cause: io.shardingjdbc.core.exception.ShardingJdbcException: io.shardingjdbc.core.exception.ShardingJdbcException: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'xx.T1' doesn't exist  T2表查询没有问题  private Map&lt;String, DataSource&gt; createDataSourceMap() {         HashMap&lt;String, DataSource&gt; dataSourceMap = new HashMap&lt;&gt;();         for (Map&lt;String, String&gt; database : myProps.getDatabase()) {             HikariDataSource ds = (HikariDataSource) DataSourceBuilder.create()                     .url(database.get("url"))                     .username(database.get("username"))                     .password(database.get("password"))                     .driverClassName(database.get("driveClassName"))                     .type(HikariDataSource.class).build();             ds.setConnectionTestQuery("SELECT 1");             dataSourceMap.put(database.get("name"), ds);         }         return dataSourceMap;     }      @Bean     @Primary     public DataSource shardingDataSource() throws SQLException {         ShardingRuleConfiguration shardingRuleConfig = new ShardingRuleConfiguration();         shardingRuleConfig.getTableRuleConfigs().add(getT1TableRuleConfiguration());         shardingRuleConfig.getTableRuleConfigs().add(getT2TableRuleConfiguration());         shardingRuleConfig.getBindingTableGroups().add("T1, T2");         shardingRuleConfig.setDefaultDatabaseShardingStrategyConfig(new StandardShardingStrategyConfiguration("T1", PreciseModuloDatabaseShardingAlgorithm.class.getName()));         return ShardingDataSourceFactory.createDataSource(createDataSourceMap(), shardingRuleConfig, new HashMap&lt;String, Object&gt;(), new Properties());     }      private TableRuleConfiguration getT1TableRuleConfiguration() {         TableRuleConfiguration retailOrderTableRuleConfig = new TableRuleConfiguration();         retailOrderTableRuleConfig.setLogicTable("T1");         return retailOrderTableRuleConfig;     }     private TableRuleConfiguration getT2TableRuleConfiguration() {         TableRuleConfiguration retailOrderTableRuleConfig = new TableRuleConfiguration();         retailOrderTableRuleConfig.setLogicTable("T2");         return retailOrderTableRuleConfig;     } </body>
		<created>2018-01-02 07:33:03</created>
		<closed>2018-01-11 09:46:04</closed>
	</bug>
	<bug>
		<id>522</id>
		<title>Slave database does not need to execute the DDL for read-write splitting</title>
		<body>Please answer these questions before submitting your issue. Thanks!  ### Which version of Sharding-Jdbc do you using? 2.0.0M1  ### Expected behavior 做读写分离后，之前每天执行一次的DDL语句居然执行不成功了！  ### Actual behavior ``` 2017-12-26 23:55:00  [DubboServerHandler-10.86.199.108:30103-thread-92] ERROR druid.sql.Statement - Slf4jLogFilter.java:149 - {conn-10610, pstmt-35015} execute error. CREATE TABLE IF NOT EXISTS order_stat_20171227 LIKE order_stat  java.sql.SQLException: The MySQL server is running with the --read-only option so it cannot execute this statement at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:996) ~[mysql-connector-java-5.1.33.jar:5.1.33] at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3887) ~[mysql-connector-java-5.1.33.jar:5.1.33] at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3823) ~[mysql-connector-java-5.1.33.jar:5.1.33] at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2435) ~[mysql-connector-java-5.1.33.jar:5.1.33] at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2582) ~[mysql-connector-java-5.1.33.jar:5.1.33] at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2530) ~[mysql-connector-java-5.1.33.jar:5.1.33] at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1907) ~[mysql-connector-java-5.1.33.jar:5.1.33] at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1199) ~[mysql-connector-java-5.1.33.jar:5.1.33] at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2931) [druid-1.0.15.jar:1.0.15] at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440) [druid-1.0.15.jar:1.0.15] at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929) [druid-1.0.15.jar:1.0.15] at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440) [druid-1.0.15.jar:1.0.15] at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929) [druid-1.0.15.jar:1.0.15] at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:131) [druid-1.0.15.jar:1.0.15] at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493) [druid-1.0.15.jar:1.0.15] at io.shardingjdbc.core.executor.type.prepared.PreparedStatementExecutor$3.execute(PreparedStatementExecutor.java:97) [sharding-jdbc-core-2.0.0.M1.jar:na] at io.shardingjdbc.core.executor.type.prepared.PreparedStatementExecutor$3.execute(PreparedStatementExecutor.java:93) [sharding-jdbc-core-2.0.0.M1.jar:na] at io.shardingjdbc.core.executor.ExecutorEngine.executeInternal(ExecutorEngine.java:175) [sharding-jdbc-core-2.0.0.M1.jar:na] at io.shardingjdbc.core.executor.ExecutorEngine.syncExecute(ExecutorEngine.java:155) [sharding-jdbc-core-2.0.0.M1.jar:na] at io.shardingjdbc.core.executor.ExecutorEngine.execute(ExecutorEngine.java:124) [sharding-jdbc-core-2.0.0.M1.jar:na] at io.shardingjdbc.core.executor.ExecutorEngine.executePreparedStatement(ExecutorEngine.java:96) [sharding-jdbc-core-2.0.0.M1.jar:na] ```  ### Steps to reproduce the behavior 只配置了读写分离，然后在mybatis里随意配置一个DDL的语句，就产生了这个bug. 但是官网说的是无条件支持DDL，希望能修复该BUG. 初步猜测具体原因应该是getConnection时获取到了从库的connection.  ### Please provide the reproduce example codes (such as github link) if possible. 跟进到sharding-jdbc源码中，发现在[MasterSlaveConnection](https://github.com/shardingjdbc/sharding-jdbc/blob/2.0.0.M1/sharding-jdbc-core/src/main/java/io/shardingjdbc/core/jdbc/core/connection/MasterSlaveConnection.java)这个类中的getConnections方法的问题.该方法的注释也进一步说明了这一点 ``` /**      * Get database connections via SQL type.      *      * &lt;p&gt;DDL will return all connections; DQL will return slave connection; DML or updated before in same thread will return master connection.&lt;/p&gt;      *       * @param sqlType SQL type      * @return database connections via SQL type      * @throws SQLException SQL exception      */     public Collection&lt;Connection&gt; getConnections(final SQLType sqlType) throws SQLException {         cachedSQLType = sqlType;         Map&lt;String, DataSource&gt; dataSources = SQLType.DDL == sqlType ? masterSlaveDataSource.getAllDataSources() : masterSlaveDataSource.getDataSource(sqlType).toMap(); ... ... ``` What! SQLType.DDL == sqlType 居然返回masterSlaveDataSource.getAllDataSources()！！！ 很纳闷 **DDL** 什么时候可以跑读库去执行了，希望能尽快修复该BUG。 </body>
		<created>2017-12-27 08:29:06</created>
		<closed>2018-01-31 03:12:27</closed>
	</bug>
	<bug>
		<id>521</id>
		<title>YAML文件中ShardingProperties设置无效</title>
		<body></body>
		<created>2017-12-27 06:48:49</created>
		<closed>2017-12-27 07:26:35</closed>
	</bug>
	<bug>
		<id>520</id>
		<title>Exception is no longer `DuplicateKeyException` when the unique key conflict</title>
		<body>Please answer these questions before submitting your issue. Thanks!  ### Which version of Sharding-Jdbc do you using? 2.0.1  ### Expected behavior 引入分表后，业务代码应该无侵害或者无修改。而且唯一键冲突catch到DuplicateKeyException是比较合理的。  ### Actual behavior 引入分表后，唯一键异常从DuplicateKeyException变为MyBatisSystemException  ### Steps to reproduce the behavior 只配置了读写分离，连续插入两条相同数据，引发唯一键冲突，此时正常catch到DuplicateKeyException； 配置文件改为读写分离+分表，同样连续插入两条相同数据，异常变为MyBatisSystemException  ### Please provide the reproduce example codes (such as github link) if possible. https://github.com/moccanism/shardingjdbc-issue-demo  根据自己的DB环境更改url -&gt; 使用database.sql建表 -&gt; 切换profile运行</body>
		<created>2017-12-27 03:14:14</created>
		<closed>2017-12-28 03:41:01</closed>
	</bug>
	<bug>
		<id>491</id>
		<title>Can't close connection by ResultSet.getStatement().getConnection().close()</title>
		<body>2.0.0版本中，ResultSet反向持有的Statement和Statement反向持有的Connection无法正常close关掉。 源码如下： AbstractResultSetAdapter中 public final Statement getStatement() throws SQLException {         return getResultSets().get(0).getStatement(); } ShardingStatement中connection的getter方法</body>
		<created>2017-12-11 15:59:20</created>
		<closed>2017-12-12 05:21:03</closed>
	</bug>
	<bug>
		<id>490</id>
		<title>Using rownum greater than or equal to or less than or equal to the result of paging is incorrect in Oracle</title>
		<body>在Oracle下使用Shardingjdbc的分页时遇到一个问题，比如我的SQL是：SELECT * FROM (SELECT A1.*, ROWNUM RN1 FROM (SELECT * FROM t_order ORDER BY user_id DESC) A1 WHERE ROWNUM &lt;= 10) B WHERE B.RN1 &gt;= 1，正常情况下应该返回10条数据，但是Shardingjdbc返回了9条数据，漏掉了本来的第一条数据。我看了一下在每个分片的执行语句：SELECT * FROM (SELECT A1.*, ROWNUM RN1 FROM (SELECT * FROM t_order_0 ORDER BY user_id DESC) A1 WHERE ROWNUM &lt;= 10) B WHERE B.RN1 &gt;= 0，这里RowNum变成从0开始的，是Shardingjdbc默认RowNum从0开始吗，这里Shardingjdbc的处理逻辑是怎样的呢，还是说这里存在Bug？ </body>
		<created>2017-12-11 10:20:21</created>
		<closed>2017-12-14 09:59:49</closed>
	</bug>
	<bug>
		<id>489</id>
		<title>Uses `RuntimeBeanReference` to prevent the creation of `InnerBean` on spring namespace</title>
		<body>  ### 版本信息 sharding-jdbc：1.5.1 spring-boot: 1.5.9 druid：1.1.6 druid-spring-boot-starter：1.1.6 ### 现象 使用sharding-jdbc的namespace的配置方式时，rdb:sharding-rule里指定的data-sources使用的并不是context里已有的datasource bean，而是自行创建的一个inner datasource bean。 同时翻阅了一下sharding-jdbc 2.0.0里的starter，发现也是会读取配置文件，然后直接自行构建datasource。  ### 问题 1. 为何总是独立创建datasource，是有什么特殊考虑么，而不是用context中现有的datasource bean么？ 1. 另一个问题是兼容性问题，当使用了druid-spring-boot-starter，这个starter里的多数据源配置是基于spring 的FactoryBeanPostProcessor + configurationProperties来实现的，而spring里有个机制是inner bean不执行FactoryBeanPostProcessor,从而导致sharding-jdbc里的inner datasource bean无法正常初始化。</body>
		<created>2017-12-11 07:56:37</created>
		<closed>2017-12-12 05:29:11</closed>
	</bug>
	<bug>
		<id>485</id>
		<title>Orchestration sharding props overwrite not working</title>
		<body></body>
		<created>2017-12-07 10:02:51</created>
		<closed>2017-12-07 10:06:54</closed>
	</bug>
	<bug>
		<id>481</id>
		<title>README的yaml配置不支持2.0</title>
		<body>Please answer these questions before submitting your issue. Thanks!  ### Which version of Sharding-Jdbc do you using? 2.0 ### Expected behavior 正常启动 ### Actual behavior 报tables属性不存在 ### Steps to reproduce the behavior 把README提供的yaml文件存为demo.yaml,然后启动 ### Please provide the reproduce example codes (such as github link) if possible.  ```yaml shardingRule: // &lt;--- 2.0多了这一层, 1.x没有这一层   tables:     t_order:        actualDataNodes: ds_${0..1}.t_order_${0..1}       databaseStrategy:          inline:           shardingColumn: user_id           algorithmExpression: ds_${user_id % 2}       tableStrategy:          inline:           shardingColumn: order_id           algorithmExpression: t_order_${order_id % 2} ```</body>
		<created>2017-12-06 09:23:24</created>
		<closed>2017-12-07 02:07:44</closed>
	</bug>
	<bug>
		<id>472</id>
		<title>sharding-jdbc-raw-jdbc-java-example getMetaData() 再 setAutoCommit(false) 无法对之后创建的 realconnection 生效</title>
		<body>Sharding-jdbc 2.0.0.M3 example master 分支 为复现此情况，修改 sharding-jdbc-raw-jdbc-java-example 中的 RawJdbcRepository 的 execute() 方法： ```java Connection conn = dataSource.getConnection();  conn.getMetaData();  conn.setAutoCommit(false);  Statement statement = conn.createStatement(); statement.execute(sql); conn.commit();  statement.close(); conn.close(); ``` getMetaData() 时获取了一个 realconnection 存入了 AbstractConnectionAdapter 的 cachedConnections 中，导致之后的 cachedConnections 中一个连接是 autocommit = true 另一个 autocommit = false 在 commit 时，报错了： ``` Exception in thread "main" java.sql.SQLException at io.shardingjdbc.core.jdbc.adapter.WrapperAdapter.throwSQLExceptionIfNecessary(WrapperAdapter.java:82) at io.shardingjdbc.core.jdbc.adapter.AbstractConnectionAdapter.commit(AbstractConnectionAdapter.java:77) at io.shardingjdbc.example.jdbc.java.repository.RawJdbcRepository.execute(RawJdbcRepository.java:109) at io.shardingjdbc.example.jdbc.java.repository.RawJdbcRepository.createTable(RawJdbcRepository.java:33) at io.shardingjdbc.example.jdbc.java.repository.RawJdbcRepository.demo(RawJdbcRepository.java:21) at io.shardingjdbc.example.jdbc.java.RawJdbcJavaShardingDatabaseAndTableMain.main(RawJdbcJavaShardingDatabaseAndTableMain.java:40) ``` </body>
		<created>2017-11-24 10:05:24</created>
		<closed>2017-11-27 11:59:11</closed>
	</bug>
	<bug>
		<id>464</id>
		<title>com.dangdang.ddframe.rdb.sharding.parsing.lexer.token.Token 在虚拟机内存中有很多的实例</title>
		<body>&gt; 请看下，还是cpu使用过高的问题，这两天发现com.dangdang.ddframe.rdb.sharding.parsing.lexer.token.Token虚拟机不停的再处理这个类的实例，这个是sql解析用到的，这个实例的创建销毁貌似很频繁啊！ ![token](https://user-images.githubusercontent.com/31297055/33160185-181bf112-d055-11e7-83ea-be936378c10c.PNG)  </body>
		<created>2017-11-23 05:50:28</created>
		<closed>2017-11-30 07:28:32</closed>
	</bug>
	<bug>
		<id>452</id>
		<title>Sharding DDL statement for multiple table's connection leak problem</title>
		<body>As cached connection map is stored as multiple connection, but single table's DDL statements doesn't reuse the connection and caused the leak connection problem.</body>
		<created>2017-11-20 05:54:30</created>
		<closed>2017-11-20 06:00:09</closed>
	</bug>
	<bug>
		<id>437</id>
		<title>https://github.com/shardingjdbc/sharding-jdbc,此页最下方有笔误，见：dataSource2.setDriverClassName("com.mysql.jdbc.Driver");</title>
		<body>Please answer these questions before submitting your issue. Thanks!  ### Which version of Sharding-Jdbc do you using?  ### Expected behavior  ### Actual behavior  ### Steps to reproduce the behavior  ### Please provide the reproduce example codes (such as github link) if possible. </body>
		<created>2017-11-13 09:58:39</created>
		<closed>2017-11-13 10:02:25</closed>
	</bug>
	<bug>
		<id>436</id>
		<title>读写分离多从库配置RoundRobin算法并使用MyBatis时，只能路由到同一从库</title>
		<body></body>
		<created>2017-11-09 08:17:35</created>
		<closed>2017-11-16 06:22:22</closed>
	</bug>
	<bug>
		<id>419</id>
		<title>底层改写逻辑SQL后添加了`ORDER BY key ASC`, 未判断别名是否为关键字未加转义符导致了SQL异常</title>
		<body>在聚合函数中别名为关键字`key`时，底层改写逻辑SQL后添加了`ORDER BY key ASC`, 未判断别名是否为关键字未加转义符导致了SQL异常！ 应该是一个通病，底层在改写后拼接SQL应该主动转义。  ### Which version of Sharding-Jdbc do you using? 1.5.4.1  ### Expected behavior 正常返回结果  ### Actual behavior  ```` 17:23:54.166 INFO  [main] - Started ParkingRecordRepostoryTest in 21.433 seconds (JVM running for 23.256) 17:23:54.352 INFO  [main] - Logic SQL: SELECT DATE_FORMAT(pp.`result_time`, '%Y-%m') AS `key`, SUM(pp.`pay_value`) AS `value` FROM `_parking_payment` pp LEFT JOIN `_parking_order` po ON pp.`serial` = po.`self_order`  WHERE po.`status` = 1 AND pp.`result` = 1 AND DATE_FORMAT(pp.`result_time`, '%Y-%m') IN ( DATE_FORMAT(?, '%Y-%m') , DATE_FORMAT(?, '%Y-%m') )  GROUP BY DATE_FORMAT(pp.`result_time`, '%Y-%m') 17:23:54.354 INFO  [main] - SQLStatement: SelectStatement(super=DQLStatement(super=AbstractSQLStatement(type=DQL, tables=Tables(tables=[Table(name=_parking_payment, alias=Optional.of(pp)), Table(name=_parking_order, alias=Optional.of(po))]), conditions=Conditions(conditions={}), sqlTokens=[TableToken(beginPosition=100, originalLiterals=`_parking_payment`), TableToken(beginPosition=134, originalLiterals=`_parking_order`), com.dangdang.ddframe.rdb.sharding.parsing.parser.token.OrderByToken@2098d37d], parametersIndex=2)), containStar=false, selectListLastPosition=95, groupByLastPosition=410, items=[AggregationSelectItem(type=SUM, innerExpression=(pp.`pay_value`), alias=Optional.of(value), derivedAggregationSelectItems=[], index=-1), CommonSelectItem(expression=DATE_FORMAT(pp.result_time, %Y-%m), alias=Optional.of(key))], groupByItems=[OrderItem(owner=Optional.absent(), name=Optional.of(DATE_FORMAT(pp.`result_time`, '%Y-%m')), type=ASC, nullOrderType=ASC, index=-1, alias=Optional.of(key))], orderByItems=[OrderItem(owner=Optional.absent(), name=Optional.of(DATE_FORMAT(pp.`result_time`, '%Y-%m')), type=ASC, nullOrderType=ASC, index=-1, alias=Optional.of(key))], limit=null, subQueryStatement=null) 17:23:54.354 INFO  [main] - Actual SQL: park_pay ::: SELECT DATE_FORMAT(pp.`result_time`, '%Y-%m') AS `key`, SUM(pp.`pay_value`) AS `value` FROM _parking_payment pp LEFT JOIN _parking_order po ON pp.`serial` = po.`self_order`  WHERE po.`status` = 1 AND pp.`result` = 1 AND DATE_FORMAT(pp.`result_time`, '%Y-%m') IN ( DATE_FORMAT(?, '%Y-%m') , DATE_FORMAT(?, '%Y-%m') )  GROUP BY DATE_FORMAT(pp.`result_time`, '%Y-%m') ORDER BY key ASC  ::: [2017-01-01 00:00:00.0, 2016-12-01 00:00:00.0]  org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.PersistenceException:  ### Error querying database.  Cause: com.dangdang.ddframe.rdb.sharding.exception.ShardingJdbcException: com.dangdang.ddframe.rdb.sharding.exception.ShardingJdbcException: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'key ASC' at line 14 ### The error may exist in com/chinaroad/parking/persistence/mapper/ParkingPaymentMapper.xml ### The error may involve defaultParameterMap ### The error occurred while setting parameters ### SQL: SELECT    DATE_FORMAT(pp.`result_time`, '%Y-%m') AS `key`,    SUM(pp.`pay_value`) AS `value`   FROM `_parking_payment` pp   LEFT JOIN `_parking_order` po ON pp.`serial` = po.`self_order`    WHERE po.`status` = 1 AND    pp.`result` = 1 AND    DATE_FORMAT(pp.`result_time`, '%Y-%m') IN     (      DATE_FORMAT(?, '%Y-%m')     ,      DATE_FORMAT(?, '%Y-%m')     )    GROUP BY DATE_FORMAT(pp.`result_time`, '%Y-%m') ### Cause: com.dangdang.ddframe.rdb.sharding.exception.ShardingJdbcException: com.dangdang.ddframe.rdb.sharding.exception.ShardingJdbcException: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'key ASC' at line 14  at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:77) at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446) at com.sun.proxy.$Proxy65.selectList(Unknown Source) at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:230) at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:137) at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:75) at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59) at com.sun.proxy.$Proxy72.statsByMonths(Unknown Source) at com.chinaroad.parking.persistence.mapper.ParkingRecordRepostoryTest.testStatsByMonth(ParkingRecordRepostoryTest.java:42) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) at org.springframework.test.context.junit4.statements.RunBeforeTestMethodCallbacks.evaluate(RunBeforeTestMethodCallbacks.java:75) at org.springframework.test.context.junit4.statements.RunAfterTestMethodCallbacks.evaluate(RunAfterTestMethodCallbacks.java:86) at org.springframework.test.context.junit4.statements.SpringRepeat.evaluate(SpringRepeat.java:84) at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:252) at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:94) at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61) at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70) at org.junit.runners.ParentRunner.run(ParentRunner.java:363) at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:191) at org.junit.runner.JUnitCore.run(JUnitCore.java:137) at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) Caused by: org.apache.ibatis.exceptions.PersistenceException:  ### Error querying database.  Cause: com.dangdang.ddframe.rdb.sharding.exception.ShardingJdbcException: com.dangdang.ddframe.rdb.sharding.exception.ShardingJdbcException: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'key ASC' at line 14 ### The error may exist in com/chinaroad/parking/persistence/mapper/ParkingPaymentMapper.xml ### The error may involve defaultParameterMap ### The error occurred while setting parameters ### SQL: SELECT    DATE_FORMAT(pp.`result_time`, '%Y-%m') AS `key`,    SUM(pp.`pay_value`) AS `value`   FROM `_parking_payment` pp   LEFT JOIN `_parking_order` po ON pp.`serial` = po.`self_order`    WHERE po.`status` = 1 AND    pp.`result` = 1 AND    DATE_FORMAT(pp.`result_time`, '%Y-%m') IN     (      DATE_FORMAT(?, '%Y-%m')     ,      DATE_FORMAT(?, '%Y-%m')     )    GROUP BY DATE_FORMAT(pp.`result_time`, '%Y-%m') ### Cause: com.dangdang.ddframe.rdb.sharding.exception.ShardingJdbcException: com.dangdang.ddframe.rdb.sharding.exception.ShardingJdbcException: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'key ASC' at line 14 at org.apache.ibatis.exceptions.ExceptionFactory.wrapException(ExceptionFactory.java:30) at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:150) at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433) ... 35 more Caused by: com.dangdang.ddframe.rdb.sharding.exception.ShardingJdbcException: com.dangdang.ddframe.rdb.sharding.exception.ShardingJdbcException: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'key ASC' at line 14 at com.dangdang.ddframe.rdb.sharding.executor.threadlocal.ExecutorExceptionHandler.handleException(ExecutorExceptionHandler.java:61) at com.dangdang.ddframe.rdb.sharding.executor.ExecutorEngine.execute(ExecutorEngine.java:129) at com.dangdang.ddframe.rdb.sharding.executor.ExecutorEngine.executePreparedStatement(ExecutorEngine.java:96) at com.dangdang.ddframe.rdb.sharding.executor.type.prepared.PreparedStatementExecutor.execute(PreparedStatementExecutor.java:93) at com.dangdang.ddframe.rdb.sharding.jdbc.core.statement.ShardingPreparedStatement.execute(ShardingPreparedStatement.java:140) at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63) at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79) at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63) at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324) at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156) at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109) at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83) at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148) ... 41 more Caused by: com.dangdang.ddframe.rdb.sharding.exception.ShardingJdbcException: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'key ASC' at line 14 at com.dangdang.ddframe.rdb.sharding.executor.threadlocal.ExecutorExceptionHandler.handleException(ExecutorExceptionHandler.java:61) at com.dangdang.ddframe.rdb.sharding.executor.ExecutorEngine.executeInternal(ExecutorEngine.java:181) at com.dangdang.ddframe.rdb.sharding.executor.ExecutorEngine.syncExecute(ExecutorEngine.java:155) at com.dangdang.ddframe.rdb.sharding.executor.ExecutorEngine.execute(ExecutorEngine.java:124) ... 52 more Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'key ASC' at line 14 at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) at java.lang.reflect.Constructor.newInstance(Constructor.java:423) at com.mysql.jdbc.Util.handleNewInstance(Util.java:425) at com.mysql.jdbc.Util.getInstance(Util.java:408) at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:943) at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3973) at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3909) at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2527) at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2680) at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2487) at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858) at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197) at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:494) at com.dangdang.ddframe.rdb.sharding.executor.type.prepared.PreparedStatementExecutor$3.execute(PreparedStatementExecutor.java:97) at com.dangdang.ddframe.rdb.sharding.executor.type.prepared.PreparedStatementExecutor$3.execute(PreparedStatementExecutor.java:93) at com.dangdang.ddframe.rdb.sharding.executor.ExecutorEngine.executeInternal(ExecutorEngine.java:175) ... 54 more ````  ### Steps to reproduce the behavior 逻辑SQL:  ```` SELECT DATE_FORMAT(pp.`result_time`, '%Y-%m') AS `key`, SUM(pp.`pay_value`) AS `value` FROM `_parking_payment` pp LEFT JOIN `_parking_order` po ON pp.`serial` = po.`self_order`  WHERE po.`status` = 1 AND pp.`result` = 1 AND DATE_FORMAT(pp.`result_time`, '%Y-%m') IN ( DATE_FORMAT(?, '%Y-%m') , DATE_FORMAT(?, '%Y-%m') )  GROUP BY DATE_FORMAT(pp.`result_time`, '%Y-%m')  ````   ### Please provide the reproduce example codes (such as github link) if possible. </body>
		<created>2017-10-19 09:29:03</created>
		<closed>2017-10-20 05:20:50</closed>
	</bug>
	<bug>
		<id>412</id>
		<title>Fail to commit a Connection</title>
		<body>Please answer these questions before submitting your issue. Thanks!  ### Which version of Sharding-Jdbc do you using?  1.5.4.1 2.0.0.M1  ### Expected behavior  Follow the step below:  The transaction will be executed correctly.   ### Actual behavior  A ```java.sql.SQLException``` will be raised.  details: ``` Could not commit JDBC transaction; nested exception is java.sql.SQLException: Can't call commit when autocommit=true ```  ### Steps to reproduce the behavior   1. Configure a ```ShardingDataSource``` that contains two sub-datasources.  1. Get a ```ShardingConnection``` from this ```ShardingDataSource```.  1. **Invoke ```ShardingConnection#getMetaData()```.**  1. Invoke ```ShardingConnection#setAutoCommit(false)```.  1. Use that ```ShardingConnection``` to execute  a dml sql.  1.  Invoke ```ShardingConnection#commit()```. </body>
		<created>2017-10-16 07:30:16</created>
		<closed>2017-10-18 10:19:26</closed>
	</bug>
	<bug>
		<id>404</id>
		<title>sharding-jdbc-spring-boot-starter cannot support HikariDataSource</title>
		<body>Please answer these questions before submitting your issue. Thanks!  ### Which version of Sharding-Jdbc do you using?  2.0.0.M1</body>
		<created>2017-10-11 07:33:17</created>
		<closed>2017-10-11 08:25:38</closed>
	</bug>
	<bug>
		<id>398</id>
		<title>Hint route cannot ignore case sensative</title>
		<body>Please answer these questions before submitting your issue. Thanks!  ### Which version of Sharding-Jdbc do you using? 1.5.4.1</body>
		<created>2017-10-06 04:44:26</created>
		<closed>2017-10-10 03:52:21</closed>
	</bug>
	<bug>
		<id>394</id>
		<title>类AbstractStatementAdapter中close方法实现中clear顺序倒了</title>
		<body>sharding-jdbc-core version-1.5.4.1 AbstractStatementAdapter方法实现中逐个close RoutedStatements集合前，先对集合做了clear操作，会导致RoutedStatements集合中的各个Statement的close方法执行不到。  ### 目前的代码     @Override     public final void close() throws SQLException {         closed = true;         getRoutedStatements().clear();         Collection&lt;SQLException&gt; exceptions = new LinkedList&lt;&gt;();         for (Statement each : getRoutedStatements()) {             try {                 each.close();             } catch (final SQLException ex) {                 exceptions.add(ex);             }         }         throwSQLExceptionIfNecessary(exceptions);     }  ### 可以修改为：      public final void close() throws SQLException {         closed = true;         Collection&lt;SQLException&gt; exceptions = new LinkedList&lt;&gt;();         for (Statement each : getRoutedStatements()) {             try {                 each.close();             } catch (final SQLException ex) {                 exceptions.add(ex);             }         }         getRoutedStatements().clear();         throwSQLExceptionIfNecessary(exceptions);     } </body>
		<created>2017-09-30 07:13:49</created>
		<closed>2017-10-09 12:19:02</closed>
	</bug>
	<bug>
		<id>387</id>
		<title>当函数+列名中存在'`'防止关键字时处理出错。</title>
		<body>建议调整下处理结果列名策略，保证兼容性  ### Which version of Sharding-Jdbc do you using? 1.5.4.1  ### Expected behavior NO ERROR!  ### Actual behavior  ```` Caused by: org.apache.ibatis.executor.result.ResultMapException: Error attempting to get column 'COUNT(`status`)' from result set.  Cause: java.lang.NullPointerException at org.apache.ibatis.type.BaseTypeHandler.getResult(BaseTypeHandler.java:68) at org.apache.ibatis.executor.resultset.DefaultResultSetHandler.createPrimitiveResultObject(DefaultResultSetHandler.java:720) at org.apache.ibatis.executor.resultset.DefaultResultSetHandler.createResultObject(DefaultResultSetHandler.java:607) at org.apache.ibatis.executor.resultset.DefaultResultSetHandler.createResultObject(DefaultResultSetHandler.java:586) at org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getRowValue(DefaultResultSetHandler.java:388) at org.apache.ibatis.executor.resultset.DefaultResultSetHandler.handleRowValuesForSimpleResultMap(DefaultResultSetHandler.java:347) at org.apache.ibatis.executor.resultset.DefaultResultSetHandler.handleRowValues(DefaultResultSetHandler.java:322) at org.apache.ibatis.executor.resultset.DefaultResultSetHandler.handleResultSet(DefaultResultSetHandler.java:295) at org.apache.ibatis.executor.resultset.DefaultResultSetHandler.handleResultSets(DefaultResultSetHandler.java:192) at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:64) at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79) at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63) at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324) at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156) at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109) at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83) at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148) at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141) at org.apache.ibatis.session.defaults.DefaultSqlSession.selectOne(DefaultSqlSession.java:77) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433) ... 17 more Caused by: java.lang.NullPointerException at com.dangdang.ddframe.rdb.sharding.merger.common.AbstractMemoryResultSetMerger.getValue(AbstractMemoryResultSetMerger.java:64) at com.dangdang.ddframe.rdb.sharding.jdbc.core.resultset.ShardingResultSet.getInt(ShardingResultSet.java:100) at org.apache.ibatis.type.IntegerTypeHandler.getNullableResult(IntegerTypeHandler.java:37) at org.apache.ibatis.type.IntegerTypeHandler.getNullableResult(IntegerTypeHandler.java:26) at org.apache.ibatis.type.BaseTypeHandler.getResult(BaseTypeHandler.java:66) ... 40 more ````  ### Steps to reproduce the behavior 数据库层添加统计方法不为结果添加别名 ````     &lt;select id="count" resultType="java.lang.Integer"&gt;         SELECT          COUNT(`status`)         FROM t_order     &lt;/select&gt; ````  ### Please provide the reproduce example codes (such as github link) if possible. ```` private Map&lt;String, Integer&gt; getColumnLabelIndexMap(ResultSet resultSet) throws SQLException {         ResultSetMetaData resultSetMetaData = resultSet.getMetaData();         Map&lt;String, Integer&gt; result = new TreeMap(String.CASE_INSENSITIVE_ORDER);          for(int i = 1; i &lt;= resultSetMetaData.getColumnCount(); ++i) {             result.put(SQLUtil.getExactlyValue(resultSetMetaData.getColumnLabel(i)), i);         }          return result;     } ````</body>
		<created>2017-09-24 06:56:53</created>
		<closed>2017-10-09 12:16:16</closed>
	</bug>
	<bug>
		<id>382</id>
		<title>查询未分表的表失败</title>
		<body>Please answer these questions before submitting your issue. Thanks!  ### Which version of Sharding-Jdbc do you using? 1.5.3 ### Expected behavior 使用mybaits作为orm框架 单个数据源包含分表和没有分表的表 查询没有分表的表正常 ### Actual behavior 单个数据源查询未分表的表失败  ### Steps to reproduce the behavior 1.启动项目 2Controller包下的的mapping 3点击控制台的输出 http://localhost:8081/nosdSelect ### Please provide the reproduce example codes (such as github link) if possible. https://git.oschina.net/lxhs/com.study.demo.git</body>
		<created>2017-09-18 15:11:33</created>
		<closed>2017-09-19 05:59:00</closed>
	</bug>
	<bug>
		<id>379</id>
		<title>链接获取后不会自动释放链接，然后报错连接池没有空闲链接，程序卡死</title>
		<body>Please answer these questions before submitting your issue. Thanks!  ### Which version of Sharding-Jdbc do you using? 1.5.3和1.5.4快照版  ### Expected behavior 正常应该会自动获取链接，释放链接，但是实际没有，链接全部是busy.... ### Actual behavior 不会释放链接，程序卡死 ### Steps to reproduce the behavior 项目启动后随便查询数据库，大概到获取到第100个就获取不到了，一共是一百个链接，下一个查询就会卡死，程序报错没有空闲链接 ### Please provide the reproduce example codes (such as github link) if possible. 我是使用这个demo发现还是存在这个问题的，你可以试试 https://github.com/Max010230/ShardingTest</body>
		<created>2017-09-15 10:40:34</created>
		<closed>2017-09-18 14:00:32</closed>
	</bug>
	<bug>
		<id>375</id>
		<title>sharding-jdbc单库分表查询不拆分数据表分页只能查询到第一页数据</title>
		<body>Please answer these questions before submitting your issue. Thanks!  ### Which version of Sharding-Jdbc do you using? 1.5.3 ### Expected behavior mysql分页不需要改动即可正常显示 ### Actual behavior 数据分页第一页执行“select * from table limit 5”可以正常查询到结果集，但是当查询第二页执行“select * from table limit 5,5”查询不到数据 ### Steps to reproduce the behavior 1.初始化脚本在sjdbc-demo\src\main\resources\META-INF\schema\mysql.sql 2.运行com.mabo.example.jpa.Main#main方法 3.查看输出结果控制台打印5和0 ### Please provide the reproduce example codes (such as github link) if possible. http://git.oschina.net/mabo1993/sjdbc-demo</body>
		<created>2017-09-12 08:12:35</created>
		<closed>2017-09-12 09:26:44</closed>
	</bug>
	<bug>
		<id>372</id>
		<title>Reuse PreparedStatement cause cache of route result do not clean</title>
		<body>Please answer these questions before submitting your issue. Thanks!  ### Which version of Sharding-Jdbc do you using? 1.5.3 ### Expected behavior 使用mybaits作为orm框架 开启spring事物支持时，在mybaits的settings中将defaultExecutorType设置为REUSE, 在同一个事物中查询时，即使路由不同的表查询正常 ### Actual behavior 开启事物 路由到同一张表是则查询正常，路由不同的表则异常 ### Steps to reproduce the behavior 1.启动项目 2Controller包下的的方法 3.点击控制台打印的路径 http://localhot:8081/select 若想不产生这个bug可以采取如下两种方法之一 1.关闭事物 2.开启事物则需将mybatisConfig.xml的defaultExecutorType设置为SIMPLE  ### Please provide the reproduce example codes (such as github link) if possible. https://git.oschina.net/lxhs/com.study.demo.git</body>
		<created>2017-09-12 07:13:44</created>
		<closed>2018-07-25 15:11:24</closed>
	</bug>
	<bug>
		<id>370</id>
		<title>无法插入其他自增主键的表，从1.4.2升级到1.5.3出现的bug</title>
		<body>Please answer these questions before submitting your issue. Thanks!  ### Which version of Sharding-Jdbc do you using? 1.5.3 ### Expected behavior 自增主键的表应该能正常插入，现在不能正常插入。 ### Actual behavior 抛出异常：详情看demo java.sql.SQLException: Generated keys not requested. You need to specify Statement.RETURN_GENERATED_KEYS to Statement.executeUpdate(), Statement.executeLargeUpdate() or Connection.prepareStatement(). ### Steps to reproduce the behavior 重现步骤  1.执行demo中的sql文件建表 2.配置application.properties中的数据库连接信息  3.运行DemoSjApplication类里的主函数 3.打开 [http://localhost:8080/](http://localhost:8080/) 返回json串则正常添加，否则出现上述所说的异常。。 /* pom文件里注释1.5.3 的引入，切换为 1.4.2则可正常返回 根据tangmin721 所说的，我测试了下，1.5.2是正常的，1.5.3就不行了。 */  ### Please provide the reproduce example codes (such as github link) if possible. demo地址：[https://github.com/pptom/demo-sj](https://github.com/pptom/demo-sj)</body>
		<created>2017-09-11 06:39:23</created>
		<closed>2017-09-12 07:14:38</closed>
	</bug>
	<bug>
		<id>362</id>
		<title>mybatis使用sjdbc做读写分离时报错（仅仅做读写分离，不做分片）</title>
		<body>使用 1.5.3版本   预期行为：插入无报错  实际行为：插入报错  步骤：   # 1.报错时的配置：       &lt;bean id="ds_0" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close"&gt;         &lt;property name="driverClassName" value="com.mysql.jdbc.Driver"/&gt;         &lt;property name="url" value="jdbc:mysql://localhost:3306/ds_0"/&gt;         &lt;property name="username" value="root"/&gt;         &lt;property name="password" value="wqch"/&gt;     &lt;/bean&gt;          &lt;bean id="ds_1" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close"&gt;         &lt;property name="driverClassName" value="com.mysql.jdbc.Driver"/&gt;         &lt;property name="url" value="jdbc:mysql://localhost:3306/ds_1"/&gt;         &lt;property name="username" value="root"/&gt;         &lt;property name="password" value="wqch"/&gt;     &lt;/bean&gt;          &lt;rdb:master-slave-data-source id="shardingDataSource" master-data-source-ref="ds_0" slave-data-sources-ref="ds_1" /&gt;          &lt;bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager"&gt;         &lt;property name="dataSource" ref="shardingDataSource" /&gt;     &lt;/bean&gt;     &lt;tx:annotation-driven transaction-manager="transactionManager" /&gt;  2.具体的错误： Exception in thread "main" org.springframework.jdbc.BadSqlGrammarException:  ### Error updating database.  Cause: java.sql.SQLException: No value specified for parameter 1 ### The error may involve defaultParameterMap ### The error occurred while setting parameters ### SQL: INSERT INTO t_order(order_id,user_id, status)         VALUES (         ?,         ?,         ?         ) ### Cause: java.sql.SQLException: No value specified for parameter 1 ; bad SQL grammar []; nested exception is java.sql.SQLException: No value specified for parameter 1  注：但是在执行例如查询所有，删除所有等没有传递参数的操作，程序将顺利执行  3注假如不使用读写分离，仅仅注释一下配置，不用改代码，程序将顺利执行插入操作   4.github地址  https://github.com/wangqingchengsg/sharding-jdbc-example-mybatis </body>
		<created>2017-09-06 07:57:50</created>
		<closed>2017-09-06 11:41:35</closed>
	</bug>
	<bug>
		<id>356</id>
		<title>regexp support </title>
		<body>Please answer these questions before submitting your issue. Thanks!  ### Which version of Sharding-Jdbc do you using?   1.5.3 ### Expected behavior    ### Actual behavior  ### Steps to reproduce the behavior  ### Please provide the reproduce example codes (such as github link) if possible. my sql as below:       select * from resourcetable where TITLE REGEXP 'abc' order by UPDTIME desc limit 0,1 sharding-columns : UPDTIME the question is that when i use this sql to query resourcetable ,i got two records from two different Physical tables,  so limit 0,1 doesn't work </body>
		<created>2017-09-05 05:53:05</created>
		<closed>2017-09-06 16:59:46</closed>
	</bug>
	<bug>
		<id>354</id>
		<title>Compatible with NOT operator which is not sharding-column in SQL for where condition</title>
		<body>Please answer these questions before submitting your issue. Thanks!  ### Which version of Sharding-Jdbc do you using? 1.5.2</body>
		<created>2017-09-01 07:11:41</created>
		<closed>2017-09-01 07:14:08</closed>
	</bug>
	<bug>
		<id>353</id>
		<title>Compatible with !=, !&gt; and !&lt; operator which is not sharding-column in SQL for where condition</title>
		<body>Please answer these questions before submitting your issue. Thanks!  ### Which version of Sharding-Jdbc do you using? 1.5.2</body>
		<created>2017-08-31 12:23:38</created>
		<closed>2017-08-31 12:27:31</closed>
	</bug>
	<bug>
		<id>351</id>
		<title>Cannot work if table in default-data-source but not in table-rule</title>
		<body>Please answer these questions before submitting your issue. Thanks!  ### Which version of Sharding-Jdbc do you using?  1.5.2</body>
		<created>2017-08-31 02:45:08</created>
		<closed>2017-08-31 10:15:53</closed>
	</bug>
	<bug>
		<id>349</id>
		<title>ResultSet.wasNull is not correctly</title>
		<body>Please answer these questions before submitting your issue. Thanks!  ### Which version of Sharding-Jdbc do you using?  1.5.2  </body>
		<created>2017-08-29 09:13:09</created>
		<closed>2017-08-29 10:22:10</closed>
	</bug>
	<bug>
		<id>346</id>
		<title>DDL语句 DROP TABLE IF EXISTS `USER` 解析表明错误</title>
		<body>Please answer these questions before submitting your issue. Thanks!  ### Which version of Sharding-Jdbc do you using? 1.5.1 ### Expected behavior 表名解析为 USER ### Actual behavior 表名解析为 IF ### Steps to reproduce the behavior  log： 2017-08-24 17:29:03,764 datasourceService INFO  [main] Sharding-JDBC-SQL: Logic SQL: DROP TABLE IF EXISTS `USER`; 2017-08-24 17:29:03,764 datasourceService INFO  [main] Sharding-JDBC-SQL: SQLStatement: DDLStatement(super=AbstractSQLStatement(type=DDL, tables=Tables(tables=[Table(name=IF, alias=Optional.absent())]), conditions=Conditions(conditions={}), sqlTokens=[TableToken(beginPosition=11, originalLiterals=IF)])) 2017-08-24 17:29:03,764 datasourceService INFO  [main] Sharding-JDBC-SQL: Actual SQL: user_00 ::: DROP TABLE IF EXISTS `USER`;  ### Please provide the reproduce example codes (such as github link) if possible. </body>
		<created>2017-08-24 09:36:44</created>
		<closed>2017-08-24 10:42:52</closed>
	</bug>
	<bug>
		<id>339</id>
		<title>使用表全名关联的JOIN解析不正确</title>
		<body>Please answer these questions before submitting your issue. Thanks!  ### Which version of Sharding-Jdbc do you using? 1.5.1 ### Expected behavior 92sql语法规范  @Select("SELECT play.id as id, play.name as name, video_image.url as coverUrl , video_image.width as width, video_image.height as height FROM play left join video_image on play.cover_id = video_image.id WHERE play.id = #{id}") 得到列表结果    ### Actual behavior  ```   报sql语法异常 ### Error querying database.  Cause: com.dangdang.ddframe.rdb.sharding.exception.ShardingJdbcException: com.dangdang.ddframe.rdb.sharding.exception.ShardingJdbcException: java.sql.SQLSyntaxErrorException: Unknown column 'playplayer_id' in 'on clause' ### The error may exist in PlayMapper.java (best guess) ### The error may involve PlayMapper.getVideoPlay-Inline ### The error occurred while setting parameters ### SQL: SELECT play.id as id, play.name as name, video_image.url as coverUrl , video_image.width as width, video_image.height as height FROM play left join video_image on play.cover_id = video_image.id WHERE play.id = ? ### Cause: com.dangdang.ddframe.rdb.sharding.exception.ShardingJdbcException: com.dangdang.ddframe.rdb.sharding.exception.ShardingJdbcException: java.sql.SQLSyntaxErrorException: Unknown column 'playplayer_id' in 'on clause' at org.apache.ibatis.exceptions.ExceptionFactory.wrapException(ExceptionFactory.java:30) at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:150) at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141) at org.apache.ibatis.session.defaults.DefaultSqlSession.selectOne(DefaultSqlSession.java:77) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434) ... 39 more Caused by: com.dangdang.ddframe.rdb.sharding.exception.ShardingJdbcException: com.dangdang.ddframe.rdb.sharding.exception.ShardingJdbcException: java.sql.SQLSyntaxErrorException: Unknown column 'playplayer_id' in 'on clause' at com.dangdang.ddframe.rdb.sharding.executor.threadlocal.ExecutorExceptionHandler.handleException(ExecutorExceptionHandler.java:61) at com.dangdang.ddframe.rdb.sharding.executor.ExecutorEngine.execute(ExecutorEngine.java:129) at com.dangdang.ddframe.rdb.sharding.executor.ExecutorEngine.executePreparedStatement(ExecutorEngine.java:96) at com.dangdang.ddframe.rdb.sharding.executor.type.prepared.PreparedStatementExecutor.execute(PreparedStatementExecutor.java:109) at com.dangdang.ddframe.rdb.sharding.jdbc.core.statement.ShardingPreparedStatement.execute(ShardingPreparedStatement.java:113) at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63) at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79) at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63) at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324) at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156) at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109) at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83) at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148) ... 46 more Caused by: com.dangdang.ddframe.rdb.sharding.exception.ShardingJdbcException: java.sql.SQLSyntaxErrorException: Unknown column 'playplayer_id' in 'on clause' at com.dangdang.ddframe.rdb.sharding.executor.threadlocal.ExecutorExceptionHandler.handleException(ExecutorExceptionHandler.java:61) at com.dangdang.ddframe.rdb.sharding.executor.ExecutorEngine.executeInternal(ExecutorEngine.java:181) at com.dangdang.ddframe.rdb.sharding.executor.ExecutorEngine.syncExecute(ExecutorEngine.java:155) at com.dangdang.ddframe.rdb.sharding.executor.ExecutorEngine.execute(ExecutorEngine.java:124) ... 57 more Caused by: java.sql.SQLSyntaxErrorException: Unknown column 'playplayer_id' in 'on clause' at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:686) at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:663) at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:653) at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:115) at com.mysql.cj.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2041) at com.mysql.cj.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1827) at com.mysql.cj.jdbc.PreparedStatement.execute(PreparedStatement.java:1156) at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:494) at com.dangdang.ddframe.rdb.sharding.executor.type.prepared.PreparedStatementExecutor$3.execute(PreparedStatementExecutor.java:113) at com.dangdang.ddframe.rdb.sharding.executor.type.prepared.PreparedStatementExecutor$3.execute(PreparedStatementExecutor.java:109) at com.dangdang.ddframe.rdb.sharding.executor.ExecutorEngine.executeInternal(ExecutorEngine.java:175) ... 59 more ``` ### Steps to reproduce the behavior  执行单元测试，输入id，解析出这个错误异常并没有这个字段。Unknown column 'playplayer_id' in 'on clause'  ### Please provide the reproduce example codes (such as github link) if possible.  @Select("SELECT play.id as id, play.name as name, video_image.url as coverUrl , video_image.width as width, video_image.height as height FROM play left join video_image on play.cover_id = video_image.id WHERE play.id = #{id}")     VideoPlayDto getVideoPlay(@Param("id") Long id);   使用另外一种89sql语法规范就可以了。      @Select("SELECT play.id as id, play.name as name, video_image.url as coverUrl , video_image.width as width, video_image.height as height FROM play, video_image WHERE play.cover_id = video_image.id and play.id = #{id}")   8-19更新： 已经打开show.sql ``` 打印的sql如下： Actual SQL: dbtbl_0 ::: SELECT play.id as id, play.name as name, video_image.url as coverUrl , video_image.width as width, video_image.height as height FROM play left join video_image on playplayer_id = video_image.id WHERE play.id = ? ::: [19]  mybatis配置的sql SELECT play.id as id, play.name as name, video_image.url as coverUrl , video_image.width as width, video_image.height as height FROM play left join video_image on play.cover_id = video_image.id WHERE play.id = #{id} ```</body>
		<created>2017-08-16 11:56:25</created>
		<closed>2017-08-19 11:12:43</closed>
	</bug>
	<bug>
		<id>334</id>
		<title>order by  语句解析，如果有函数，会把后面的 asc,desc解析到OrderItem name属性中。</title>
		<body>Please answer these questions before submitting your issue. Thanks!  ### Which version of Sharding-Jdbc do you using? 1.5.1   如图 ### Please provide the reproduce example codes (such as github link) if possible. &lt;img width="898" alt="orderby" src="https://user-images.githubusercontent.com/1187815/29257367-ffa1ee9a-80e3-11e7-9747-970f8a30bb55.png"&gt; </body>
		<created>2017-08-14 03:32:36</created>
		<closed>2017-08-14 11:13:37</closed>
	</bug>
	<bug>
		<id>328</id>
		<title>ShardingConnection commit 时，持有的 Connection commit 异常时，后面的 Connection 无法提交</title>
		<body>ShardingConnection 继承自 AbstractConnectionAdapter， commit 代码如下：  ```Java // AbstractConnectionAdapter.java      @Override     public final void commit() throws SQLException {         for (Connection each : getConnections()) {             each.commit();         }     }          @Override     public final void rollback() throws SQLException {         Collection&lt;SQLException&gt; exceptions = new LinkedList&lt;&gt;();         for (Connection each : getConnections()) {             try {                 each.rollback();             } catch (final SQLException ex) {                 exceptions.add(ex);             }         }         throwSQLExceptionIfNecessary(exceptions);     } ```  * 未对 `Connection#commit()` 异常进行捕获，导致异常时，后面的 Connection 无法提交  参考 `#rollback()` 方法修改如下：  ``` Java     @Override     public final void commit() throws SQLException {         Collection&lt;SQLException&gt; exceptions = new LinkedList&lt;&gt;();         for (Connection each : getConnections()) {             try {                 each.commit();             } catch (final SQLException ex) {                 exceptions.add(ex);             }         }         throwSQLExceptionIfNecessary(exceptions);     } ```  已经提交 pr。</body>
		<created>2017-08-12 08:35:41</created>
		<closed>2017-08-12 13:29:44</closed>
	</bug>
	<bug>
		<id>323</id>
		<title>Can parse ORDER BY with aggregation expression</title>
		<body>Please answer these questions before submitting your issue. Thanks!  ### Which version of Sharding-Jdbc do you using?  1.5.0  ### Expected behavior  parse SQL  ```sql SELECT user_id, SUM(order_id) FROM t_order GROUP BY user_id ORDER BY SUM(order_id) ```  Order By SQL Context should be: SUM(order_id)  ### Actual behavior  Order By SQL Context is ignore</body>
		<created>2017-08-10 13:58:38</created>
		<closed>2017-08-10 14:01:31</closed>
	</bug>
	<bug>
		<id>322</id>
		<title>可执行jar发布，用YamlShardingDataSource时报错</title>
		<body>Please answer these questions before submitting your issue. Thanks!  ### Which version of Sharding-Jdbc do you using? 1.5.0.M3  ### Expected behavior 我用可执行jar的方式发布，用YamlShardingDataSource生成datasource  ### Actual behavior 报错： class path resource [xx.yml] cannot be resolved to absolute file path because it does not reside in the file system: jar:file:/xx.jar!/BOOT-INF/classes!/xx.yml  ### Steps to reproduce the behavior YamlShardingDataSource的入参是java.io.File。我用可执行jar的方式发布，获取不到File，但是可以获取到InputStream，原因见： https://stackoverflow.com/questions/25869428/classpath-resource-not-found-when-running-as-jar 希望能提供java.io.Inputsream的入参而不仅仅是java.io.File入参 ### Please provide the reproduce example codes (such as github link) if possible. </body>
		<created>2017-08-10 13:03:56</created>
		<closed>2017-08-11 05:09:43</closed>
	</bug>
	<bug>
		<id>321</id>
		<title>中文文档有错</title>
		<body>[中文文档](http://dangdangdotcom.github.io/sharding-jdbc/02-guide/sharding/)的"2. 使用指南-分库分表"部分，“构造ShardingDataSource”一小节的代码有误： ```java DataSource dataSource = new ShardingDataSourceFactory.createDataSource(shardingRule); ``` 调用类ShardingDataSourceFactory的静态方法时，多写了一个new.  英文文档没错。</body>
		<created>2017-08-10 01:36:19</created>
		<closed>2017-08-10 03:37:48</closed>
	</bug>
	<bug>
		<id>320</id>
		<title>GROUP BY + LIMIT rewrite incorrect</title>
		<body>Please answer these questions before submitting your issue. Thanks!  ### Which version of Sharding-Jdbc do you using?  1.5.0  ### Expected behavior  ```sql SELECT user_id FROM t_order GROUP BY user_id LIMIT ? ```   =&gt;   ```sql SELECT user_id FROM t_order GROUP BY user_id ORDER BY user_id ASC LIMIT ? ```  ### Actual behavior  ```sql SELECT user_id FROM t_order GROUP BY user_id LIMIT ? ```   =&gt;   ```sql SELECT user_id FROM t_order GROUP BY user_id LIMIT ORDER BY user_id ASC ```  </body>
		<created>2017-08-09 10:02:07</created>
		<closed>2017-08-09 10:11:40</closed>
	</bug>
	<bug>
		<id>317</id>
		<title>LIMIT参数不能是Long类型</title>
		<body>Please answer these questions before submitting your issue. Thanks!  ### Which version of Sharding-Jdbc do you using?  &lt;sharding-jdbc.version&gt;1.5.0&lt;/sharding-jdbc.version&gt;  ### Expected behavior 查询条件：LIMIT #{startIndex},#{pageSize} 当 startIndex 是一个Long类型 能正常运行，有返回结果。 ### Actual behavior ![7z r 2 2j to p kgzvcqvt](https://user-images.githubusercontent.com/12838303/29063498-aa717fc4-7c58-11e7-94e6-444c15cb2d47.png) 导致问题： Caused by: com.dangdang.ddframe.rdb.sharding.exception.ShardingJdbcException: Invalid value to transfer: 0 at com.dangdang.ddframe.rdb.sharding.util.NumberUtil.roundHalfUp(NumberUtil.java:55) ~[sharding-jdbc-core-1.5.0.jar:na] at com.dangdang.ddframe.rdb.sharding.parsing.parser.context.limit.Limit.fill(Limit.java:82) ~[sharding-jdbc-core-1.5.0.jar:na] at com.dangdang.ddframe.rdb.sharding.parsing.parser.context.limit.Limit.processParameters(Limit.java:73) ~[sharding-jdbc-core-1.5.0.jar:na] at com.dangdang.ddframe.rdb.sharding.routing.router.ParsingSQLRouter.processLimit(ParsingSQLRouter.java:147) ~[sharding-jdbc-core-1.5.0.jar:na] at com.dangdang.ddframe.rdb.sharding.routing.router.ParsingSQLRouter.route(ParsingSQLRouter.java:93) ~[sharding-jdbc-core-1.5.0.jar:na]  ### Steps to reproduce the behavior 查询条件：LIMIT #{startIndex},#{pageSize} startIndex 传入一个Long类型   ### Please provide the reproduce example codes (such as github link) if possible. </body>
		<created>2017-08-08 08:46:55</created>
		<closed>2017-08-10 01:42:49</closed>
	</bug>
	<bug>
		<id>313</id>
		<title>It seems not support sql statement contains  " &lt;&gt; " </title>
		<body>Please answer these questions before submitting your issue. Thanks!  ### Which version of Sharding-Jdbc do you using?  1.5.0 ### Expected behavior Support complex sql ### Actual behavior not contains  " &lt;&gt; " ### Steps to reproduce the behavior  ### Please provide the reproduce example codes (such as github link) if possible. </body>
		<created>2017-08-04 06:35:24</created>
		<closed>2017-08-08 02:20:42</closed>
	</bug>
	<bug>
		<id>308</id>
		<title>数据库自增GeneratedKey的返回无效，已经确认不支持。</title>
		<body>Please answer these questions before submitting your issue. Thanks!  ### Which version of Sharding-Jdbc do you using? 1.5.0 ### Expected behavior mysql自增id在Mybatis中能拿到  @Options(useGeneratedKeys = true, keyProperty = "id" )     boolean add(User user);  ### Actual behavior  配置sjdbc的&lt;rdb:generate-key-column column-name="id"/&gt;意味着只能使用分布式id策略，无法满足现有需求，1.4.2一直可以的。  ### Steps to reproduce the behavior   &lt;insert id="insert" useGeneratedKeys="true" keyProperty="orderId"&gt;         INSERT INTO t_order (           user_id, status         )         VALUES (         #{userId,jdbcType=INTEGER},         #{status,jdbcType=VARCHAR}         )     &lt;/insert&gt;  ### Please provide the reproduce example codes (such as github link) if possible.  能够像1.4.2一样支持数据库自增id返回GeneratedKey策略，经过调试发现，GeneratedKey仅在配置分布式自增id才会生效。</body>
		<created>2017-08-02 11:36:58</created>
		<closed>2017-08-02 15:28:54</closed>
	</bug>
	<bug>
		<id>307</id>
		<title>inline表达式配置的问题</title>
		<body>使用的是release v1.5.0版本的sharding-jdbc，在配置inline表达式时，如果配置成如下： actual-tables="order_${[1,2,3,4,5,6,7,8,9,a,b,c,d,e,f]}" 在工程启动时会报错： Caused by: groovy.lang.MissingPropertyException: No such property: a for class: Script1  如果配置改成： actual-tables="order_${['1','2','3','4','5','6','7','8','9','a','b','c','d','e','f']}"则不会报错  请确认一下这里是否要加单引号才行，因为我看官方文档上inline表达式这块的例子，字符串是不用加引号的： ![1](https://user-images.githubusercontent.com/25171658/28866660-32786138-77a6-11e7-87ac-8fc644a7b373.png) </body>
		<created>2017-08-02 09:16:01</created>
		<closed>2017-08-02 09:25:52</closed>
	</bug>
	<bug>
		<id>295</id>
		<title>Not filter limit ResultSet if limit row count is 0</title>
		<body></body>
		<created>2017-07-19 07:03:52</created>
		<closed>2017-07-19 07:04:05</closed>
	</bug>
	<bug>
		<id>292</id>
		<title>内存方式处理GROUP BY语句如有分页信息则需改写</title>
		<body>内存方式处理的GROUP BY语句需要修改分页信息，需将全部数据加载至内存并分组以及聚合。然后再从内存中获取LIMIT（或rownum）的数据，才能保证结果的正确性  所谓内存方式处理GROUP BY即使GROUP BY 与ORDER BY的顺序不一致的SQL。</body>
		<created>2017-07-13 11:10:28</created>
		<closed>2017-07-14 17:09:20</closed>
	</bug>
	<bug>
		<id>285</id>
		<title>动态表配置，联表查询时分页查询第三页时会将第一页，第二页数据也返回。</title>
		<body>Please answer these questions before submitting your issue. Thanks!  ### Which version of Sharding-Jdbc do you using?  ### Expected behavior  查询第三页时，只返回第三页数据  ### Actual behavior  查询第三页时会将第一页，第二页数据也返回。  ### Steps to reproduce the behavior  两个动态表联表查询，使用分页插件pageHelper  ### Please provide the reproduce example codes (such as github link) if possible. sharding-jdbc 配置：  private Map&lt;String, TableRuleConfig&gt; createTableRuleConfigMap() {         Map&lt;String, TableRuleConfig&gt; result = new HashMap&lt;&gt;(3);         result.put("ord_order_info", createDynamicTableRuleConfig("ord_order_info"));         result.put("ord_order_detail", createDynamicTableRuleConfig("ord_order_detail"));         result.put("pay_flow", createDynamicTableRuleConfig("pay_flow"));         return result;     }      private StrategyConfig getTableStrategyConfigForExpression(String tableName) {         StrategyConfig result = new StrategyConfig();         result.setShardingColumns("store_id");         result.setAlgorithmExpression(tableName + "_${store_id}");         return result;     }      private TableRuleConfig createDynamicTableRuleConfig(String tableName) {         TableRuleConfig result = new TableRuleConfig();         result.setDynamic(true);         result.setDataSourceNames("db_order_sharding");         result.setTableStrategy(getTableStrategyConfigForExpression(tableName));         return result;     }   SQL： select ooi.id as orderCode, ooi.store_Id as storeID,          ooi.payment_type_id as paymentTypeId, ooi.order_total as orderAmount,          ooi.create_time as saleDate, ooi.payment_time as paymentDate,          ooi.member_cardNo as customerCode, ooi.user_tel as customerPhone,          ooi.order_node as remark,          ood.product_sku, ood.product_barcode, ood.product_name,          ood.product_format, ood.product_unit, ood.number         from ord_order_info ooi, ord_order_detail ood         where ooi.id = ood.order_id         &lt;if test="orderId!=null and orderId!=''"&gt;             and ooi.id = #{orderId}         &lt;/if&gt;         and ooi.store_id = #{storeId}         and ood.store_id = #{storeId} </body>
		<created>2017-07-11 07:11:31</created>
		<closed>2017-07-14 12:34:26</closed>
	</bug>
	<bug>
		<id>276</id>
		<title>generate-key-column 不配置 插入数据不成功</title>
		<body>Please answer these questions before submitting your issue. Thanks!  ### Which version of Sharding-Jdbc do you using? 使用 sharding-jdbc 1.5.0.m2 在目前的使用中， 有部分表要做分表操作， 有一部分保存不变。  表结构为： CREATE TABLE `chat_content` (   `id` bigint(19) NOT NULL AUTO_INCREMENT,   `content` text,   PRIMARY KEY (`id`) ) ENGINE=InnoDB AUTO_INCREMENT=14775 DEFAULT CHARSET=utf8mb4;  插入语句：  &lt;insert id="insert" parameterType="com.yiguo.qiakr.example.jdbc.entity.ChatContent" useGeneratedKeys="true" keyProperty="id"&gt; insert into chat_content ( content ) values ( #{content} ) &lt;/insert&gt; 现在保持不变的表 如果没有 配置：  &lt;rdb:table-rule logic-table="chat_content" actual-tables="chat_content"&gt;                   &lt;rdb:generate-key-column column-name="id"/&gt;             &lt;/rdb:table-rule&gt;  在向表里插入数据的时候，报下面错误， 个人觉得即使不配置 也可以正常： Exception in thread "main" org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.executor.ExecutorException: Error getting generated key or setting result to parameter object. Cause: java.lang.IllegalStateException: ResultSet has closed. at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:75) at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:371) at com.sun.proxy.$Proxy16.insert(Unknown Source) at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:240) at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:51) at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:52) at com.sun.proxy.$Proxy18.insert(Unknown Source) at com.yiguo.qiakr.example.jdbc.service.ChatlogService.insertContent(ChatlogService.java:109) at com.yiguo.qiakr.example.jdbc.service.ChatlogService$$FastClassBySpringCGLIB$$70c88c09.invoke(&lt;generated&gt;) at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204) at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:649) at com.yiguo.qiakr.example.jdbc.service.ChatlogService$$EnhancerBySpringCGLIB$$eeea63a3.insertContent(&lt;generated&gt;) at com.yiguo.qiakr.example.jdbc.service.ChatService.insert(ChatService.java:182) at com.yiguo.qiakr.example.jdbc.service.ChatService.insertBatch(ChatService.java:129) at com.yiguo.qiakr.example.jdbc.Main.main(Main.java:41) Caused by: org.apache.ibatis.executor.ExecutorException: Error getting generated key or setting result to parameter object. Cause: java.lang.IllegalStateException: ResultSet has closed. at org.apache.ibatis.executor.keygen.Jdbc3KeyGenerator.processBatch(Jdbc3KeyGenerator.java:66) at org.apache.ibatis.executor.keygen.Jdbc3KeyGenerator.processAfter(Jdbc3KeyGenerator.java:45) at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48) at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:69) at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:48) at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:105) at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:71) at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:152) at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:141) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:497) at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:358) ... 13 more Caused by: java.lang.IllegalStateException: ResultSet has closed. at com.google.common.base.Preconditions.checkState(Preconditions.java:173) at com.dangdang.ddframe.rdb.sharding.jdbc.core.resultset.GeneratedKeysResultSet.checkState(GeneratedKeysResultSet.java:234) at com.dangdang.ddframe.rdb.sharding.jdbc.core.resultset.GeneratedKeysResultSet.getMetaData(GeneratedKeysResultSet.java:78) at org.apache.ibatis.executor.keygen.Jdbc3KeyGenerator.processBatch(Jdbc3KeyGenerator.java:55) ... 26 more   </body>
		<created>2017-07-04 09:03:53</created>
		<closed>2017-07-14 12:32:48</closed>
	</bug>
	<bug>
		<id>272</id>
		<title>分页的bug</title>
		<body>数据分布不均匀的，第一个数据库表中有该用户数据，第二个数据库中，表中没有用户数据，根据用户编号查询，按照创建时间排序进行分页查询请求，前几页返回的数据正确，超过了最大页数的分页，返回的数据不是空。并且一直有数据。 举例A表中有该用户的数据100条，B表中没有该用户数据 分页大小每次10条，则，请求13页的时候，仍然会得到数据。 ### Which version of Sharding-Jdbc do you using? 1.4.2 ### Actual behavior 有数据返回，看样子像是第一页的数据 </body>
		<created>2017-06-26 03:26:12</created>
		<closed>2017-06-26 07:49:31</closed>
	</bug>
	<bug>
		<id>266</id>
		<title>ShardingPreparedStatement.addBatch()方法错误，导致柔性事务重复主键</title>
		<body>### Which version of Sharding-Jdbc do you using? 1.5.0.M1 ### Expected behavior 因柔性事务保存、删除正常 ### Actual behavior  ` [2017-06-22 16:26:48.706] [ERROR] [ShardingJDBC-3] [druid.sql.Statement] &gt;&gt;&gt; {conn-10009, pstmt-21613} execute error. INSERT INTO `transaction_log` (`id`, `transaction_type`, `data_source`, `sql`, `parameters`, `creation_time`) VALUES (?, ?, ?, ?, ?, ?); org.h2.jdbc.JdbcSQLException: Unique index or primary key violation: "PRIMARY_KEY_8 ON PUBLIC.TRANSACTION_LOG(ID) VALUES ('d7c3c64c-9903-4c6a-898b-023638c89dd1', 819)"; SQL statement: INSERT INTO `transaction_log` (`id`, `transaction_type`, `data_source`, `sql`, `parameters`, `creation_time`) VALUES (?, ?, ?, ?, ?, ?); [23505-192] at org.h2.message.DbException.getJdbcSQLException(DbException.java:345) at org.h2.message.DbException.get(DbException.java:179) at org.h2.message.DbException.get(DbException.java:155) at org.h2.index.BaseIndex.getDuplicateKeyException(BaseIndex.java:103) at org.h2.mvstore.db.MVSecondaryIndex.checkUnique(MVSecondaryIndex.java:231) at org.h2.mvstore.db.MVSecondaryIndex.add(MVSecondaryIndex.java:190) at org.h2.mvstore.db.MVTable.addRow(MVTable.java:704) at org.h2.command.dml.Insert.insertRows(Insert.java:156) at org.h2.command.dml.Insert.update(Insert.java:114) at org.h2.command.CommandContainer.update(CommandContainer.java:98) at org.h2.command.Command.executeUpdate(Command.java:258) at org.h2.jdbc.JdbcPreparedStatement.executeUpdateInternal(JdbcPreparedStatement.java:160) at org.h2.jdbc.JdbcPreparedStatement.executeUpdate(JdbcPreparedStatement.java:146) at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_executeUpdate(FilterChainImpl.java:2723) at com.alibaba.druid.filter.FilterAdapter.preparedStatement_executeUpdate(FilterAdapter.java:1069) at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_executeUpdate(FilterEventAdapter.java:491) at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_executeUpdate(FilterChainImpl.java:2721) at com.alibaba.druid.filter.FilterAdapter.preparedStatement_executeUpdate(FilterAdapter.java:1069) at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_executeUpdate(FilterEventAdapter.java:491) at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_executeUpdate(FilterChainImpl.java:2721) at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.executeUpdate(PreparedStatementProxyImpl.java:145) at com.alibaba.druid.pool.DruidPooledPreparedStatement.executeUpdate(DruidPooledPreparedStatement.java:253) at com.dangdang.ddframe.rdb.transaction.soft.storage.impl.RdbTransactionLogStorage.add(RdbTransactionLogStorage.java:59) at com.dangdang.ddframe.rdb.transaction.soft.bed.sync.BestEffortsDeliveryListener.listen(BestEffortsDeliveryListener.java:59) at sun.reflect.GeneratedMethodAccessor53.invoke(Unknown Source) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at com.google.common.eventbus.Subscriber.invokeSubscriberMethod(Subscriber.java:91) at com.google.common.eventbus.Subscriber$1.run(Subscriber.java:76) at com.google.common.util.concurrent.MoreExecutors$DirectExecutor.execute(MoreExecutors.java:435) at com.google.common.eventbus.Subscriber.dispatchEvent(Subscriber.java:71) at com.google.common.eventbus.Dispatcher$PerThreadQueuedDispatcher.dispatch(Dispatcher.java:116) at com.google.common.eventbus.EventBus.post(EventBus.java:217) at com.dangdang.ddframe.rdb.sharding.executor.ExecutorEngine.executeInternal(ExecutorEngine.java:172) at com.dangdang.ddframe.rdb.sharding.executor.ExecutorEngine.access$0(ExecutorEngine.java:158) at com.dangdang.ddframe.rdb.sharding.executor.ExecutorEngine$1.call(ExecutorEngine.java:147) at com.google.common.util.concurrent.TrustedListenableFutureTask$TrustedFutureInterruptibleTask.runInterruptibly(TrustedListenableFutureTask.java:111) at com.google.common.util.concurrent.InterruptibleTask.run(InterruptibleTask.java:58) at com.google.common.util.concurrent.TrustedListenableFutureTask.run(TrustedListenableFutureTask.java:75) at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) at java.lang.Thread.run(Thread.java:745) `  看代码因为这段有个clearParameters()，导致传入柔性事务的参数都是空，最终导致多次事务的insert就出现重复id `@Override     public void addBatch() throws SQLException {         try {             for (BatchPreparedStatementUnit each : routeBatch()) {                 each.getStatement().addBatch();                 each.mapAddBatchCount(parameterSets.size());             }             parameterSets.add(getParameters());         } finally {             setCurrentResultSet(null);             clearParameters();         }     } ` </body>
		<created>2017-06-22 08:32:50</created>
		<closed>2018-06-28 09:21:16</closed>
	</bug>
	<bug>
		<id>263</id>
		<title>分片列和逻辑表配置可忽略大小写</title>
		<body></body>
		<created>2017-06-16 10:31:23</created>
		<closed>2017-06-16 10:32:37</closed>
	</bug>
	<bug>
		<id>248</id>
		<title>查询物理分页时有BUG,查询结果不分页</title>
		<body>举例: 订单表 order_info , 订单分表  order_info_01 (有数据), order_info_02(没数据) , 查询SQL :  select * from order_info order by id desc limit 10,10 ; sharding-jdbc 发出的 sql 为查询两张分表, 在查询结果归并的时候,被识别为单表命中. 打印的日志内容为:  Sharding-JDBC: Sharding result sets type is 'SINGLE' , 在该类型下,结果返回时没有做物理分页的处理,直接把所有结果返回. 结果导致分页无效,返回全部数据. </body>
		<created>2017-05-03 03:01:49</created>
		<closed>2017-06-26 07:49:47</closed>
	</bug>
	<bug>
		<id>239</id>
		<title>limit在多个查询中，只有一个结果集不为空时，返回的分页结果不对</title>
		<body>limit查询如：limit 20,10，查询到多个结果集，其中只有一个不为空时，在ShardingResultSets中filterResultSets方法返回的list只有一个结果集： ``` private List&lt;ResultSet&gt; filterResultSets(final List&lt;ResultSet&gt; resultSets) throws SQLException {         List&lt;ResultSet&gt; result = new ArrayList&lt;&gt;(resultSets.size());         for (ResultSet each : resultSets) {             if (each.next()) {                 result.add(new WrapperResultSet(each));             }         }         return result;     } ``` 此时，type值为SINGLE。 ``` private Type generateType() {         if (this.resultSets.isEmpty()) {             return Type.EMPTY;         } else if (1 == this.resultSets.size()) {             return Type.SINGLE;         } else {             return Type.MULTIPLE;         }     } ``` 此时直接返回了唯一的结果集（limit 0,30）</body>
		<created>2017-04-05 09:05:54</created>
		<closed>2017-06-26 07:49:19</closed>
	</bug>
	<bug>
		<id>238</id>
		<title>sharding-jdbc会默认把类似于T.ID或T.id修改为t.id</title>
		<body>sharding-jdbc会默认把类似于T.ID或T.id修改为t.id，如果设置mysql大小写敏感并且sql语句中别名都写为大写时，则会引起报错：com.mysql.jdbc.exceptions.MySQLSyntaxErrorException: Unknown column 't.id' in 'field list'</body>
		<created>2017-04-01 05:29:06</created>
		<closed>2017-06-24 08:21:17</closed>
	</bug>
	<bug>
		<id>237</id>
		<title>数据源加载出现double情况</title>
		<body>data-source指定数据源会被初始化成内部bean， sharding-jdbc 是使用这个内部bean作为数据源，外层设定数据源bean没有被用，这就造成 数据源会被初始化两次 也就是启动时 会有两套同样的数据源 都加载了  排查原因：  Map&lt;String, BeanDefinition&gt; result = new ManagedMap&lt;&gt;(dataSources.size());  value 使用了 BeanDefinition 类型 spring 解析 ManagedMap 类型代码  else if (value instanceof ManagedMap) { // May need to resolve contained runtime references. return resolveManagedMap(argName, (Map&lt;?, ?&gt;) value); }  private Map&lt;?, ?&gt; resolveManagedMap(Object argName, Map&lt;?, ?&gt; mm) { Map&lt;Object, Object&gt; resolved = new LinkedHashMap&lt;Object, Object&gt;(mm.size()); for (Map.Entry&lt;?, ?&gt; entry : mm.entrySet()) { Object resolvedKey = resolveValueIfNecessary(argName, entry.getKey()); Object resolvedValue = resolveValueIfNecessary( new KeyedArgName(argName, entry.getKey()), entry.getValue()); resolved.put(resolvedKey, resolvedValue); } return resolved; }  value 最后重新调用 resolveValueIfNecessary方法  解析 else if (value instanceof BeanDefinition) { // Resolve plain BeanDefinition, without contained name: use dummy name. BeanDefinition bd = (BeanDefinition) value; String innerBeanName = "(inner bean)" + BeanFactoryUtils.GENERATED_BEAN_NAME_SEPARATOR + ObjectUtils.getIdentityHexString(bd); return resolveInnerBean(argName, innerBeanName, bd); }  BeanDefinition类型会直接生成内部bean ，没有使用外部bean作为数据源；  这种情况配置bean数据源就会被加载两套 内部bean一套，外部bean 一套  sharding-jdbc使用的是内部bean作为数据源，外部bean数据源没有用</body>
		<created>2017-03-29 10:49:14</created>
		<closed>2017-09-04 05:01:46</closed>
	</bug>
	<bug>
		<id>225</id>
		<title>自动生成Id最后一位不归零</title>
		<body>在高并发调用时，如果同一个毫秒内sequence溢出后不归零    **Sharding-JDBC版本:** 1.4.1 **操作系统及版本:** MacOS</body>
		<created>2017-02-15 08:36:45</created>
		<closed>2017-02-15 08:39:49</closed>
	</bug>
	<bug>
		<id>214</id>
		<title>where中 table_name.column_name in (?,?)无法解析表达式</title>
		<body>`select * from tbl where tbl.id in (?, ?)` 里面的 `tbl.id in (?, )` tbl 没有被解析出来。  日志如下  ``` Logic SQL: SELECT board.id, board.author_id, board.title, board.description, board.accessibility, board.create_time, board.update_time FROM board WHERE board.id IN (?, ?), [23524622263648256, 23524622263648256] 2017-01-04 22:25:28.646 DEBUG 4234 --- [nio-8080-exec-1] c.d.d.r.sharding.parser.SQLParseEngine   : Parsed SQL result: SQLParsedResult(routeContext=RouteContext(tables=[Table(name=board, alias=Optional.absent())], sqlStatementType=null, sqlBuilder=null), generatedKeyContext=GeneratedKeyContext(columns=[], columnNameToIndexMap={}, valueTable={}, rowIndex=0, columnIndex=0, autoGeneratedKeys=0, columnIndexes=null, columnNames=null), conditionContexts=[ConditionContext(conditions={Condition.Column(columnName=id, tableName=board)=Condition(column=Condition.Column(columnName=id, tableName=board), operator=IN, values=[23524622263648256, 23524622263648256], valueIndices=[0, 1])})], mergeContext=MergeContext(orderByColumns=[], groupByColumns=[], aggregationColumns=[], limit=null)) 2017-01-04 22:25:28.648 DEBUG 4234 --- [nio-8080-exec-1] c.d.d.r.sharding.parser.SQLParseEngine   : Parsed SQL: SELECT [Token(board)].id, [Token(board)].author_id, [Token(board)].title, [Token(board)].description, [Token(board)].accessibility , [Token(board)].create_time, [Token(board)].update_time FROM [Token(board)] WHERE board.id IN (?, ?) 2017-01-04 22:25:28.651 DEBUG 4234 --- [nio-8080-exec-1] c.d.d.r.s.r.single.SingleTableRouter     : Before database sharding board routes db names: [ds_0, ds_1] sharding columns: [id] sharding values: [ShardingValue(logicTableName=board, columnName=id, value=null, values=[23524622263648256, 23524622263648256], valueRange=null)] 2017-01-04 22:25:28.654 DEBUG 4234 --- [nio-8080-exec-1] c.d.d.r.s.r.single.SingleTableRouter     : After database sharding board result: [ds_0] 2017-01-04 22:25:28.654 DEBUG 4234 --- [nio-8080-exec-1] c.d.d.r.s.r.single.SingleTableRouter     : Before table sharding board routes db names: [DataNode(dataSourceName=ds_0, tableName=board_0002), DataNode(dataSourceName=ds_1, tableName=board_0002), DataNode(dataSourceName=ds_0, tableName=board_0000), DataNode(dataSourceName=ds_1, tableName=board_0000), DataNode(dataSourceName=ds_0, tableName=board_0001), DataNode(dataSourceName=ds_1, tableName=board_0001)] sharding columns: [id] sharding values: [ShardingValue(logicTableName=board, columnName=id, value=null, values=[23524622263648256, 23524622263648256], valueRange=null)] 2017-01-04 22:25:28.654 DEBUG 4234 --- [nio-8080-exec-1] c.d.d.r.s.r.single.SingleTableRouter     : After table sharding board result: [board_0001] 2017-01-04 22:25:28.659 DEBUG 4234 --- [nio-8080-exec-1] c.d.d.r.sharding.router.SQLRouteEngine   : final route result is 1 target 2017-01-04 22:25:28.659 DEBUG 4234 --- [nio-8080-exec-1] c.d.d.r.sharding.router.SQLRouteEngine   : ds_0:SELECT board_0001.id, board_0001.author_id, board_0001.title, board_0001.description, board_0001.accessibility , board_0001.create_time, board_0001.update_time FROM board_0001 WHERE board.id IN (?, ?) [23524622263648256, 23524622263648256] 2017-01-04 22:25:28.659 DEBUG 4234 --- [nio-8080-exec-1] c.d.d.r.sharding.router.SQLRouteEngine   : merge context:MergeContext(orderByColumns=[], groupByColumns=[], aggregationColumns=[], limit=null) ```</body>
		<created>2017-01-04 14:32:04</created>
		<closed>2017-01-20 10:22:24</closed>
	</bug>
	<bug>
		<id>212</id>
		<title>1.3.1版本 表名前加库名查询报空指针</title>
		<body>select * from dbname.tablename; 表名前加库名会报空指针。原生jdbcTemplate正常运行。 版本是1.3.1，在后续版本已修复请忽略。 若没修复建议进行修复，保持与原生jdbcTemplate的无缝切换。</body>
		<created>2016-12-24 08:41:45</created>
		<closed>2017-01-20 10:22:24</closed>
	</bug>
	<bug>
		<id>209</id>
		<title>limit并行异常</title>
		<body>并行执行limit查询，会出现数据异常  **问题复现步骤:**  1. 并行执行多个limit查询  **期望的表现:**  每个查询可以正常返回  **观察到的表现:**  出现IndexOutOfBoundsException  **Sharding-JDBC版本:** 1.4.0 **操作系统及版本:** OS X </body>
		<created>2016-12-15 05:53:10</created>
		<closed>2016-12-15 05:59:07</closed>
	</bug>
	<bug>
		<id>201</id>
		<title>批量操作执行前事件发送缺失</title>
		<body>监听器执行前获得的消息数量比升级生成的事件少  **问题复现步骤:**  1. 增加监听器  ```java DMLExecutionEventBus.register(new DMLExecutionEventListener() {             @Override             public String getName() {                 return "test";             }                          @Subscribe             @AllowConcurrentEvents             public void subscribe(final DMLExecutionEvent event) {                ......             }         }); ```  2. 执行sql  ```java String sql = "INSERT INTO `t_order`(`order_id`, `user_id`, `status`) VALUES (?,?,?)";         try (                 Connection connection = shardingDataSource.getConnection();                 PreparedStatement preparedStatement = connection.prepareStatement(sql)) {             preparedStatement.setInt(1, 3101);             preparedStatement.setInt(2, 11);             preparedStatement.setString(3, "BATCH");             preparedStatement.addBatch();             preparedStatement.setInt(1, 3102);             preparedStatement.setInt(2, 12);             preparedStatement.setString(3, "BATCH");             preparedStatement.addBatch();             preparedStatement.setInt(1, 3111);             preparedStatement.setInt(2, 21);             preparedStatement.setString(3, "BATCH");             preparedStatement.addBatch();             preparedStatement.setInt(1, 3112);             preparedStatement.setInt(2, 22);             preparedStatement.setString(3, "BATCH");             preparedStatement.addBatch();             int[] result = preparedStatement.executeBatch();         } ```  **期望的表现:**  subscribe收到的事件的数量应该为8，**4条** BEFORE类型，4条SUCCESS类型  **观察到的表现:**  subscribe收到的事件的数量应该为8，**2条** BEFORE类型，4条SUCCESS类型  **Sharding-JDBC版本:** [1.4.0] **操作系统及版本:** [OSX]</body>
		<created>2016-11-30 08:18:53</created>
		<closed>2016-11-30 08:49:18</closed>
	</bug>
	<bug>
		<id>199</id>
		<title>分表且复用PreparedStatement对象造成数据路由错误</title>
		<body>分表场景下，复用PreparedStatement对象 或者 使用batch方法  **问题复现步骤:**  1.  只分表 1.  复用PreparedStatement ```java PreparedStatement ps = shardingConnection.prepareStatement(.....) ... ... ps.execute(); ... ... ps.execute() ```  1.  或使用batch接口 ```java ... ps.addBatch(); ... ... ps.addBatch(); ps.executeBatch(); ```  **期望的表现:**  数据像日志预期的那样插入到指定的表  **观察到的表现:**  数据全插入了第一次路由到的表，后续的表不插入  **Sharding-JDBC版本:** [1.4.0] **操作系统及版本:** [OSX] </body>
		<created>2016-11-29 13:22:24</created>
		<closed>2016-11-29 13:50:19</closed>
	</bug>
	<bug>
		<id>194</id>
		<title>jdbc接口中资源释放错误</title>
		<body>jdbc中，Connection，Statement，Resultset等接口中的close方法中部分组件异常造成另外一部分组件的close方法没有被调用。  **问题复现步骤:**  1.执行一组多分片查询 2.用模拟连接池，对这次查询的一组连接里中间的连接模拟close阶段抛出异常  **期望的表现:**  模拟出来的所有连接都正常关闭  **观察到的表现:**  部分连接没有关闭  **屏幕截图和动态GIF图**  无 **Sharding-JDBC版本:** [1.4.0] **操作系统及版本:** [OSX  10.11.6]</body>
		<created>2016-11-24 04:21:00</created>
		<closed>2016-11-28 13:42:36</closed>
	</bug>
	<bug>
		<id>182</id>
		<title>读写分离Spring命名空间的实现问题</title>
		<body>Spring命名空间的实现没有依赖于CommonConfig。应该把代码统一做实现</body>
		<created>2016-11-18 01:50:34</created>
		<closed>2017-09-12 07:17:53</closed>
	</bug>
	<bug>
		<id>180</id>
		<title>批量执行Update返回值不准确</title>
		<body>批量执行Update 返回执行条数不准确。返回数据的行数是真实的SQL执行，但按照`JDBC`的规范应该返回逻辑SQL的执行。目前在特定条件返回的数组会多。</body>
		<created>2016-11-18 00:10:50</created>
		<closed>2017-01-20 10:22:25</closed>
	</bug>
	<bug>
		<id>176</id>
		<title>AbstractMemoryResultSet对SQL的wasNull实现有问题</title>
		<body>标志位wasNull是在结果集中某个字段的值是`SQLNULL`的时候会被设置为true，用来表示从ResultSet中获取的值是null。但是当某个字段的值不是null的时候应该及时修改此标志位。  但是`AbstractMemoryResultSet`的实现中没有及时修正此flag，导致查询的数据会出现一连串的null。  比如，getObject方法应该这样处理wasNull。  ````java     @Override     public Object getObject(final int columnIndex) throws SQLException {         Preconditions.checkState(!isClosed(), "Result set is closed");         Preconditions.checkState(!beforeFirst, "Before start of result set");         Preconditions.checkState(null != currentRow, "After end of result set");         Preconditions.checkArgument(currentRow.inRange(columnIndex), String.format("Column Index %d out of range", columnIndex));         Object result = currentRow.getCell(columnIndex);         wasNull = null == result;         return result;     } ```` 当然还有其他的几个方法同样存在这样的问题。  Java中对此接口的定义如下：  ````java     /**      * Reports whether      * the last column read had a value of SQL &lt;code&gt;NULL&lt;/code&gt;.      * Note that you must first call one of the getter methods      * on a column to try to read its value and then call      * the method &lt;code&gt;wasNull&lt;/code&gt; to see if the value read was      * SQL &lt;code&gt;NULL&lt;/code&gt;.      *      * @return &lt;code&gt;true&lt;/code&gt; if the last column value read was SQL      *         &lt;code&gt;NULL&lt;/code&gt; and &lt;code&gt;false&lt;/code&gt; otherwise      * @exception SQLException if a database access error occurs or this method is      *            called on a closed result set      */     boolean wasNull() throws SQLException; ````</body>
		<created>2016-11-16 07:03:03</created>
		<closed>2016-11-17 03:38:44</closed>
	</bug>
	<bug>
		<id>166</id>
		<title>频繁并发执行sql出现ERROR executor.ExecutorEngine: Concurrent execute result error 和No operations allowed after statement closed</title>
		<body>当我频繁的执行sql或者在一个请求中执行sql太多会出现 [27/10/16 10:20:28:028 CST] pool-1-thread-26 ERROR executor.ExecutorEngine: Concurrent execute result error {} com.dangdang.ddframe.rdb.sharding.exception.ShardingJdbcException: java.sql.SQLException: Error 和 [27/10/16 10:20:28:028 CST] pool-1-thread-30 ERROR stat.StatFilter: getUpdateCount error com.mysql.jdbc.exceptions.jdbc4.MySQLNonTransientConnectionException: No operations allowed after statement closed. 服务配置如下:  &lt;bean id="dataSource_0" class="com.alibaba.druid.pool.DruidDataSource"         init-method="init" destroy-method="close"&gt;  ```     &lt;!-- 数据源驱动类可不写，Druid默认会自动根据URL识别DriverClass --&gt;     &lt;!-- &lt;property name="driverClassName" value="${jdbc.replicationDriver}"          /&gt; --&gt;     &lt;property name="driverClassName" value="${jdbc.driver}" /&gt;     &lt;!-- 基本属性 url、user、password --&gt;     &lt;property name="url" value="${jdbc.url_0}" /&gt;     &lt;property name="username" value="${jdbc.username_0}" /&gt;     &lt;property name="password" value="${jdbc.password_0}" /&gt;      &lt;!-- 配置初始化大小、最小、最大 --&gt;     &lt;property name="initialSize" value="100" /&gt;     &lt;property name="minIdle" value="300" /&gt;     &lt;property name="maxActive" value="2000" /&gt;      &lt;!-- 配置获取连接等待超时的时间 --&gt;     &lt;property name="maxWait" value="60000" /&gt;      &lt;!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 --&gt;     &lt;property name="timeBetweenEvictionRunsMillis" value="5000" /&gt;      &lt;!-- 配置一个连接在池中最小生存的时间，单位是毫秒 --&gt;     &lt;property name="minEvictableIdleTimeMillis" value="30000" /&gt;      &lt;property name="testWhileIdle" value="true" /&gt;     &lt;property name="testOnBorrow" value="false" /&gt;     &lt;property name="testOnReturn" value="false" /&gt;     &lt;!-- 配置监控统计拦截的filters --&gt;     &lt;property name="filters" value="stat" /&gt; &lt;/bean&gt;  &lt;bean id="dataSource_1" class="com.alibaba.druid.pool.DruidDataSource"     init-method="init" destroy-method="close"&gt;      &lt;!-- 数据源驱动类可不写，Druid默认会自动根据URL识别DriverClass --&gt;     &lt;!-- &lt;property name="driverClassName" value="${jdbc.replicationDriver}"          /&gt; --&gt;     &lt;property name="driverClassName" value="${jdbc.driver}" /&gt;     &lt;!-- 基本属性 url、user、password --&gt;     &lt;property name="url" value="${jdbc.url_1}" /&gt;     &lt;property name="username" value="${jdbc.username_1}" /&gt;     &lt;property name="password" value="${jdbc.password_1}" /&gt;      &lt;!-- 配置初始化大小、最小、最大 --&gt;     &lt;property name="initialSize" value="100" /&gt;     &lt;property name="minIdle" value="300" /&gt;     &lt;property name="maxActive" value="2000" /&gt;     &lt;!-- 配置获取连接等待超时的时间 --&gt;     &lt;property name="maxWait" value="60000" /&gt;      &lt;!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 --&gt;     &lt;property name="timeBetweenEvictionRunsMillis" value="5000" /&gt;      &lt;!-- 配置一个连接在池中最小生存的时间，单位是毫秒 --&gt;     &lt;property name="minEvictableIdleTimeMillis" value="30000" /&gt;      &lt;property name="testWhileIdle" value="true" /&gt;     &lt;property name="testOnBorrow" value="false" /&gt;     &lt;property name="testOnReturn" value="false" /&gt;     &lt;!-- 配置监控统计拦截的filters --&gt;     &lt;property name="filters" value="stat" /&gt; &lt;/bean&gt;   &lt;rdb:strategy id="databaseShardingStrategy" sharding-columns="id"     algorithm-class="com.handu.open.dubbo.monitor.config.ModuloSingleKeyDatabaseShardingAlgorithm" /&gt; &lt;rdb:strategy id="tableShardingStrategy" sharding-columns="invoke_time"     algorithm-class="com.handu.open.dubbo.monitor.config.ModuloSingleKeyTableShardingAlgorithm" /&gt;  &lt;rdb:data-source id="shardingDataSource"&gt; &lt;rdb:sharding-rule data-sources="dataSource_0,dataSource_1"     default-data-source="dataSource_0"&gt;     &lt;rdb:table-rules&gt;         &lt;rdb:table-rule logic-table="dubbo_invoke"             actual-tables="dubbo_invoke_${0..1}" database-strategy="databaseShardingStrategy"             table-strategy="tableShardingStrategy" /&gt;     &lt;/rdb:table-rules&gt; &lt;/rdb:sharding-rule&gt; &lt;rdb:props&gt;     &lt;prop key="executor.min.idle.size"&gt;30&lt;/prop&gt;     &lt;prop key="executor.max.size"&gt;100&lt;/prop&gt;     &lt;prop key="executor.max.idle.timeout.millisecond"&gt;3000000&lt;/prop&gt; &lt;/rdb:props&gt; ```  /rdb:data-source  pom文件: &lt;dependency&gt;             &lt;groupId&gt;com.dangdang&lt;/groupId&gt;             &lt;artifactId&gt;sharding-jdbc-core&lt;/artifactId&gt;             &lt;version&gt;1.3.3&lt;/version&gt;         &lt;/dependency&gt;     &lt;dependency&gt;         &lt;groupId&gt;com.dangdang&lt;/groupId&gt;         &lt;artifactId&gt;sharding-jdbc-config-spring&lt;/artifactId&gt;         &lt;version&gt;1.3.3&lt;/version&gt;     &lt;/dependency&gt;  java加载配置: public class MyBatisConfig implements ApplicationContextAware {  ``` @Autowired private Environment env;  private ApplicationContext context; private final ApplicationContext ac = new FileSystemXmlApplicationContext("classpath:spring-context.xml");  @Bean public DataSource dataSource() {     DataSource dataSource = (DataSource) ac.getBean("shardingDataSource");     return dataSource; }  @Bean public SqlSessionFactory sqlSessionFactory() throws Exception {     SqlSessionFactoryBean factoryBean = new SqlSessionFactoryBean();     factoryBean.setDataSource(dataSource());     factoryBean.setMapperLocations(context.getResources("classpath*:mappers/**/*.xml"));     return factoryBean.getObject(); }  @Bean public DataSourceTransactionManager transactionManager() {     DataSourceTransactionManager transactionManager = new DataSourceTransactionManager();     transactionManager.setDataSource(dataSource());     return transactionManager; }  public void setApplicationContext(ApplicationContext applicationContext) throws BeansException {     context = applicationContext; } ```  }  具体错误: [27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4 endVisit node: class com.alibaba.druid.sql.ast.statement.SQLSelectItem [27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4 endVisit result: SQLParsedResult(routeContext=RouteContext(tables=[Table(name=dubbo_invoke, alias=Optional.absent())], sqlStatementType=null, sqlBuilder=null), conditionContexts=[], mergeContext=MergeContext(orderByColumns=[], groupByColumns=[], aggregationColumns=[AggregationColumn(expression=SUM(success), aggregationType=SUM, alias=Optional.of(success), option=Optional.absent(), derivedColumns=[], columnIndex=1)], limit=null)) [27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4 endVisit condition: ConditionContext(conditions={}) [27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4 endVisit SQL: SELECT SUM(success) AS success [27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4 visit node: class com.alibaba.druid.sql.ast.statement.SQLSelectItem [27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4 visit argument: com.alibaba.druid.sql.ast.expr.SQLAggregateExpr@42ac9424 AS failure [27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5 visit node: class com.alibaba.druid.sql.ast.expr.SQLAggregateExpr [27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5 visit argument: com.alibaba.druid.sql.ast.expr.SQLAggregateExpr@42ac9424 [27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5   6 visit node: class com.alibaba.druid.sql.ast.expr.SQLIdentifierExpr [27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5   6 visit argument: failure [27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5   6 endVisit node: class com.alibaba.druid.sql.ast.expr.SQLIdentifierExpr [27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5   6 endVisit result: SQLParsedResult(routeContext=RouteContext(tables=[Table(name=dubbo_invoke, alias=Optional.absent())], sqlStatementType=null, sqlBuilder=null), conditionContexts=[], mergeContext=MergeContext(orderByColumns=[], groupByColumns=[], aggregationColumns=[AggregationColumn(expression=SUM(success), aggregationType=SUM, alias=Optional.of(success), option=Optional.absent(), derivedColumns=[], columnIndex=1), AggregationColumn(expression=SUM(failure), aggregationType=SUM, alias=Optional.of(failure), option=Optional.absent(), derivedColumns=[], columnIndex=2)], limit=null)) [27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5   6 endVisit condition: ConditionContext(conditions={}) [27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5   6 endVisit SQL: SELECT SUM(success) AS success, SUM(failure [27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5 endVisit node: class com.alibaba.druid.sql.ast.expr.SQLAggregateExpr [27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5 endVisit result: SQLParsedResult(routeContext=RouteContext(tables=[Table(name=dubbo_invoke, alias=Optional.absent())], sqlStatementType=null, sqlBuilder=null), conditionContexts=[], mergeContext=MergeContext(orderByColumns=[], groupByColumns=[], aggregationColumns=[AggregationColumn(expression=SUM(success), aggregationType=SUM, alias=Optional.of(success), option=Optional.absent(), derivedColumns=[], columnIndex=1), AggregationColumn(expression=SUM(failure), aggregationType=SUM, alias=Optional.of(failure), option=Optional.absent(), derivedColumns=[], columnIndex=2)], limit=null)) [27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5 endVisit condition: ConditionContext(conditions={}) [27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5 endVisit SQL: SELECT SUM(success) AS success, SUM(failure) [27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4 endVisit node: class com.alibaba.druid.sql.ast.statement.SQLSelectItem [27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4 endVisit result: SQLParsedResult(routeContext=RouteContext(tables=[Table(name=dubbo_invoke, alias=Optional.absent())], sqlStatementType=null, sqlBuilder=null), conditionContexts=[], mergeContext=MergeContext(orderByColumns=[], groupByColumns=[], aggregationColumns=[AggregationColumn(expression=SUM(success), aggregationType=SUM, alias=Optional.of(success), option=Optional.absent(), derivedColumns=[], columnIndex=1), AggregationColumn(expression=SUM(failure), aggregationType=SUM, alias=Optional.of(failure), option=Optional.absent(), derivedColumns=[], columnIndex=2)], limit=null)) [27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4 endVisit condition: ConditionContext(conditions={}) [27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4 endVisit SQL: SELECT SUM(success) AS success, SUM(failure) AS failure [27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4 visit node: class com.alibaba.druid.sql.ast.statement.SQLSelectItem [27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4 visit argument: com.alibaba.druid.sql.ast.expr.SQLAggregateExpr@3dc216f2 AS elapsed [27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5 visit node: class com.alibaba.druid.sql.ast.expr.SQLAggregateExpr [27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5 visit argument: com.alibaba.druid.sql.ast.expr.SQLAggregateExpr@3dc216f2 [27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5   6 visit node: class com.alibaba.druid.sql.ast.expr.SQLIdentifierExpr [27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5   6 visit argument: elapsed [27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5   6 endVisit node: class com.alibaba.druid.sql.ast.expr.SQLIdentifierExpr [27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5   6 endVisit result: SQLParsedResult(routeContext=RouteContext(tables=[Table(name=dubbo_invoke, alias=Optional.absent())], sqlStatementType=null, sqlBuilder=null), conditionContexts=[], mergeContext=MergeContext(orderByColumns=[], groupByColumns=[], aggregationColumns=[AggregationColumn(expression=SUM(success), aggregationType=SUM, alias=Optional.of(success), option=Optional.absent(), derivedColumns=[], columnIndex=1), AggregationColumn(expression=SUM(failure), aggregationType=SUM, alias=Optional.of(failure), option=Optional.absent(), derivedColumns=[], columnIndex=2), AggregationColumn(expression=SUM(elapsed), aggregationType=SUM, alias=Optional.of(elapsed), option=Optional.absent(), derivedColumns=[], columnIndex=3)], limit=null)) [27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5   6 endVisit condition: ConditionContext(conditions={}) [27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5   6 endVisit SQL: SELECT SUM(success) AS success, SUM(failure) AS failure, SUM(elapsed [27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5 endVisit node: class com.alibaba.druid.sql.ast.expr.SQLAggregateExpr [27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5 endVisit result: SQLParsedResult(routeContext=RouteContext(tables=[Table(name=dubbo_invoke, alias=Optional.absent())], sqlStatementType=null, sqlBuilder=null), conditionContexts=[], mergeContext=MergeContext(orderByColumns=[], groupByColumns=[], aggregationColumns=[AggregationColumn(expression=SUM(success), aggregationType=SUM, alias=Optional.of(success), option=Optional.absent(), derivedColumns=[], columnIndex=1), AggregationColumn(expression=SUM(failure), aggregationType=SUM, alias=Optional.of(failure), option=Optional.absent(), derivedColumns=[], columnIndex=2), AggregationColumn(expression=SUM(elapsed), aggregationType=SUM, alias=Optional.of(elapsed), option=Optional.absent(), derivedColumns=[], columnIndex=3)], limit=null)) [27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5 endVisit condition: ConditionContext(conditions={}) [27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5 endVisit SQL: SELECT SUM(success) AS success, SUM(failure) AS failure, SUM(elapsed) [27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4 endVisit node: class com.alibaba.druid.sql.ast.statement.SQLSelectItem [27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4 endVisit result: SQLParsedResult(routeContext=RouteContext(tables=[Table(name=dubbo_invoke, alias=Optional.absent())], sqlStatementType=null, sqlBuilder=null), conditionContexts=[], mergeContext=MergeContext(orderByColumns=[], groupByColumns=[], aggregationColumns=[AggregationColumn(expression=SUM(success), aggregationType=SUM, alias=Optional.of(success), option=Optional.absent(), derivedColumns=[], columnIndex=1), AggregationColumn(expression=SUM(failure), aggregationType=SUM, alias=Optional.of(failure), option=Optional.absent(), derivedColumns=[], columnIndex=2), AggregationColumn(expression=SUM(elapsed), aggregationType=SUM, alias=Optional.of(elapsed), option=Optional.absent(), derivedColumns=[], columnIndex=3)], limit=null)) [27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4 endVisit condition: ConditionContext(conditions={}) [27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4 endVisit SQL: SELECT SUM(success) AS success, SUM(failure) AS failure, SUM(elapsed) AS elapsed [27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4 visit node: class com.alibaba.druid.sql.ast.statement.SQLSelectItem [27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4 visit argument: com.alibaba.druid.sql.ast.expr.SQLAggregateExpr@a49cc586 AS maxElapsed [27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5 visit node: class com.alibaba.druid.sql.ast.expr.SQLAggregateExpr [27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5 visit argument: com.alibaba.druid.sql.ast.expr.SQLAggregateExpr@a49cc586 [27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5   6 visit node: class com.alibaba.druid.sql.ast.expr.SQLIdentifierExpr [27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5   6 visit argument: max_elapsed [27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5   6 endVisit node: class com.alibaba.druid.sql.ast.expr.SQLIdentifierExpr [27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5   6 endVisit result: SQLParsedResult(routeContext=RouteContext(tables=[Table(name=dubbo_invoke, alias=Optional.absent())], sqlStatementType=null, sqlBuilder=null), conditionContexts=[], mergeContext=MergeContext(orderByColumns=[], groupByColumns=[], aggregationColumns=[AggregationColumn(expression=SUM(success), aggregationType=SUM, alias=Optional.of(success), option=Optional.absent(), derivedColumns=[], columnIndex=1), AggregationColumn(expression=SUM(failure), aggregationType=SUM, alias=Optional.of(failure), option=Optional.absent(), derivedColumns=[], columnIndex=2), AggregationColumn(expression=SUM(elapsed), aggregationType=SUM, alias=Optional.of(elapsed), option=Optional.absent(), derivedColumns=[], columnIndex=3), AggregationColumn(expression=MAX(max_elapsed), aggregationType=MAX, alias=Optional.of(maxElapsed), option=Optional.absent(), derivedColumns=[], columnIndex=4)], limit=null)) [27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5   6 endVisit condition: ConditionContext(conditions={}) [27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5   6 endVisit SQL: SELECT SUM(success) AS success, SUM(failure) AS failure, SUM(elapsed) AS elapsed, MAX(max_elapsed [27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5 endVisit node: class com.alibaba.druid.sql.ast.expr.SQLAggregateExpr [27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5 endVisit result: SQLParsedResult(routeContext=RouteContext(tables=[Table(name=dubbo_invoke, alias=Optional.absent())], sqlStatementType=null, sqlBuilder=null), conditionContexts=[], mergeContext=MergeContext(orderByColumns=[], groupByColumns=[], aggregationColumns=[AggregationColumn(expression=SUM(success), aggregationType=SUM, alias=Optional.of(success), option=Optional.absent(), derivedColumns=[], columnIndex=1), AggregationColumn(expression=SUM(failure), aggregationType=SUM, alias=Optional.of(failure), option=Optional.absent(), derivedColumns=[], columnIndex=2), AggregationColumn(expression=SUM(elapsed), aggregationType=SUM, alias=Optional.of(elapsed), option=Optional.absent(), derivedColumns=[], columnIndex=3), AggregationColumn(expression=MAX(max_elapsed), aggregationType=MAX, alias=Optional.of(maxElapsed), option=Optional.absent(), derivedColumns=[], columnIndex=4)], limit=null)) [27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5 endVisit condition: ConditionContext(conditions={}) [27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5 endVisit SQL: SELECT SUM(success) AS success, SUM(failure) AS failure, SUM(elapsed) AS elapsed, MAX(max_elapsed) [27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4 endVisit node: class com.alibaba.druid.sql.ast.statement.SQLSelectItem [27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4 endVisit result: SQLParsedResult(routeContext=RouteContext(tables=[Table(name=dubbo_invoke, alias=Optional.absent())], sqlStatementType=null, sqlBuilder=null), conditionContexts=[], mergeContext=MergeContext(orderByColumns=[], groupByColumns=[], aggregationColumns=[AggregationColumn(expression=SUM(success), aggregationType=SUM, alias=Optional.of(success), option=Optional.absent(), derivedColumns=[], columnIndex=1), AggregationColumn(expression=SUM(failure), aggregationType=SUM, alias=Optional.of(failure), option=Optional.absent(), derivedColumns=[], columnIndex=2), AggregationColumn(expression=SUM(elapsed), aggregationType=SUM, alias=Optional.of(elapsed), option=Optional.absent(), derivedColumns=[], columnIndex=3), AggregationColumn(expression=MAX(max_elapsed), aggregationType=MAX, alias=Optional.of(maxElapsed), option=Optional.absent(), derivedColumns=[], columnIndex=4)], limit=null)) [27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4 endVisit condition: ConditionContext(conditions={}) [27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4 endVisit SQL: SELECT SUM(success) AS success, SUM(failure) AS failure, SUM(elapsed) AS elapsed, MAX(max_elapsed) AS maxElapsed [27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4 visit node: class com.alibaba.druid.sql.ast.statement.SQLSelectItem [27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4 visit argument: com.alibaba.druid.sql.ast.expr.SQLAggregateExpr@11570f83 AS maxConcurrent [27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5 visit node: class com.alibaba.druid.sql.ast.expr.SQLAggregateExpr [27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5 visit argument: com.alibaba.druid.sql.ast.expr.SQLAggregateExpr@11570f83 [27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5   6 visit node: class com.alibaba.druid.sql.ast.expr.SQLIdentifierExpr [27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5   6 visit argument: max_concurrent [27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5   6 endVisit node: class com.alibaba.druid.sql.ast.expr.SQLIdentifierExpr [27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5   6 endVisit result: SQLParsedResult(routeContext=RouteContext(tables=[Table(name=dubbo_invoke, alias=Optional.absent())], sqlStatementType=null, sqlBuilder=null), conditionContexts=[], mergeContext=MergeContext(orderByColumns=[], groupByColumns=[], aggregationColumns=[AggregationColumn(expression=SUM(success), aggregationType=SUM, alias=Optional.of(success), option=Optional.absent(), derivedColumns=[], columnIndex=1), AggregationColumn(expression=SUM(failure), aggregationType=SUM, alias=Optional.of(failure), option=Optional.absent(), derivedColumns=[], columnIndex=2), AggregationColumn(expression=SUM(elapsed), aggregationType=SUM, alias=Optional.of(elapsed), option=Optional.absent(), derivedColumns=[], columnIndex=3), AggregationColumn(expression=MAX(max_elapsed), aggregationType=MAX, alias=Optional.of(maxElapsed), option=Optional.absent(), derivedColumns=[], columnIndex=4), AggregationColumn(expression=MIN(max_concurrent), aggregationType=MIN, alias=Optional.of(maxConcurrent), option=Optional.absent(), derivedColumns=[], columnIndex=5)], limit=null)) [27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5   6 endVisit condition: ConditionContext(conditions={}) [27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5   6 endVisit SQL: SELECT SUM(success) AS success, SUM(failure) AS failure, SUM(elapsed) AS elapsed, MAX(max_elapsed) AS maxElapsed, MIN(max_concurrent [27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5 endVisit node: class com.alibaba.druid.sql.ast.expr.SQLAggregateExpr [27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5 endVisit result: SQLParsedResult(routeContext=RouteContext(tables=[Table(name=dubbo_invoke, alias=Optional.absent())], sqlStatementType=null, sqlBuilder=null), conditionContexts=[], mergeContext=MergeContext(orderByColumns=[], groupByColumns=[], aggregationColumns=[AggregationColumn(expression=SUM(success), aggregationType=SUM, alias=Optional.of(success), option=Optional.absent(), derivedColumns=[], columnIndex=1), AggregationColumn(expression=SUM(failure), aggregationType=SUM, alias=Optional.of(failure), option=Optional.absent(), derivedColumns=[], columnIndex=2), AggregationColumn(expression=SUM(elapsed), aggregationType=SUM, alias=Optional.of(elapsed), option=Optional.absent(), derivedColumns=[], columnIndex=3), AggregationColumn(expression=MAX(max_elapsed), aggregationType=MAX, alias=Optional.of(maxElapsed), option=Optional.absent(), derivedColumns=[], columnIndex=4), AggregationColumn(expression=MIN(max_concurrent), aggregationType=MIN, alias=Optional.of(maxConcurrent), option=Optional.absent(), derivedColumns=[], columnIndex=5)], limit=null)) [27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5 endVisit condition: ConditionContext(conditions={}) [27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5 endVisit SQL: SELECT SUM(success) AS success, SUM(failure) AS failure, SUM(elapsed) AS elapsed, MAX(max_elapsed) AS maxElapsed, MIN(max_concurrent) [27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4 endVisit node: class com.alibaba.druid.sql.ast.statement.SQLSelectItem [27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4 endVisit result: SQLParsedResult(routeContext=RouteContext(tables=[Table(name=dubbo_invoke, alias=Optional.absent())], sqlStatementType=null, sqlBuilder=null), conditionContexts=[], mergeContext=MergeContext(orderByColumns=[], groupByColumns=[], aggregationColumns=[AggregationColumn(expression=SUM(success), aggregationType=SUM, alias=Optional.of(success), option=Optional.absent(), derivedColumns=[], columnIndex=1), AggregationColumn(expression=SUM(failure), aggregationType=SUM, alias=Optional.of(failure), option=Optional.absent(), derivedColumns=[], columnIndex=2), AggregationColumn(expression=SUM(elapsed), aggregationType=SUM, alias=Optional.of(elapsed), option=Optional.absent(), derivedColumns=[], columnIndex=3), AggregationColumn(expression=MAX(max_elapsed), aggregationType=MAX, alias=Optional.of(maxElapsed), option=Optional.absent(), derivedColumns=[], columnIndex=4), AggregationColumn(expression=MIN(max_concurrent), aggregationType=MIN, alias=Optional.of(maxConcurrent), option=Optional.absent(), derivedColumns=[], columnIndex=5)], limit=null)) [27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4 endVisit condition: ConditionContext(conditions={}) [27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4 endVisit SQL: SELECT SUM(success) AS success, SUM(failure) AS failure, SUM(elapsed) AS elapsed, MAX(max_elapsed) AS maxElapsed, MIN(max_concurrent) AS maxConcurrent [27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4 visit node: class com.alibaba.druid.sql.ast.expr.SQLBinaryOpExpr [27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4 visit argument: 1 = 1     AND invoke_time &gt;= ?     AND invoke_time &lt;= ?     AND service = ?     AND method = ?     AND type = ? [27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5 visit node: class com.alibaba.druid.sql.ast.expr.SQLBinaryOpExpr [27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5 visit argument: 1 = 1 [27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5   6 visit node: class com.alibaba.druid.sql.ast.expr.SQLIntegerExpr [27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5   6 visit argument: 1 [27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5   6 endVisit node: class com.alibaba.druid.sql.ast.expr.SQLIntegerExpr [27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5   6 endVisit result: SQLParsedResult(routeContext=RouteContext(tables=[Table(name=dubbo_invoke, alias=Optional.absent())], sqlStatementType=null, sqlBuilder=null), conditionContexts=[], mergeContext=MergeContext(orderByColumns=[], groupByColumns=[], aggregationColumns=[AggregationColumn(expression=SUM(success), aggregationType=SUM, alias=Optional.of(success), option=Optional.absent(), derivedColumns=[], columnIndex=1), AggregationColumn(expression=SUM(failure), aggregationType=SUM, alias=Optional.of(failure), option=Optional.absent(), derivedColumns=[], columnIndex=2), AggregationColumn(expression=SUM(elapsed), aggregationType=SUM, alias=Optional.of(elapsed), option=Optional.absent(), derivedColumns=[], columnIndex=3), AggregationColumn(expression=MAX(max_elapsed), aggregationType=MAX, alias=Optional.of(maxElapsed), option=Optional.absent(), derivedColumns=[], columnIndex=4), AggregationColumn(expression=MIN(max_concurrent), aggregationType=MIN, alias=Optional.of(maxConcurrent), option=Optional.absent(), derivedColumns=[], columnIndex=5)], limit=null)) [27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5   6 endVisit condition: ConditionContext(conditions={}) [27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5   6 endVisit SQL: SELECT SUM(success) AS success, SUM(failure) AS failure, SUM(elapsed) AS elapsed, MAX(max_elapsed) AS maxElapsed, MIN(max_concurrent) AS maxConcurrent FROM [Token(dubbo_invoke)] WHERE 1 [27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5   6 visit node: class com.alibaba.druid.sql.ast.expr.SQLIntegerExpr [27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5   6 visit argument: 1 [27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5   6 endVisit node: class com.alibaba.druid.sql.ast.expr.SQLIntegerExpr [27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5   6 endVisit result: SQLParsedResult(routeContext=RouteContext(tables=[Table(name=dubbo_invoke, alias=Optional.absent())], sqlStatementType=null, sqlBuilder=null), conditionContexts=[], mergeContext=MergeContext(orderByColumns=[], groupByColumns=[], aggregationColumns=[AggregationColumn(expression=SUM(success), aggregationType=SUM, alias=Optional.of(success), option=Optional.absent(), derivedColumns=[], columnIndex=1), AggregationColumn(expression=SUM(failure), aggregationType=SUM, alias=Optional.of(failure), option=Optional.absent(), derivedColumns=[], columnIndex=2), AggregationColumn(expression=SUM(elapsed), aggregationType=SUM, alias=Optional.of(elapsed), option=Optional.absent(), derivedColumns=[], columnIndex=3), AggregationColumn(expression=MAX(max_elapsed), aggregationType=MAX, alias=Optional.of(maxElapsed), option=Optional.absent(), derivedColumns=[], columnIndex=4), AggregationColumn(expression=MIN(max_concurrent), aggregationType=MIN, alias=Optional.of(maxConcurrent), option=Optional.absent(), derivedColumns=[], columnIndex=5)], limit=null)) [27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5   6 endVisit condition: ConditionContext(conditions={}) [27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5   6 endVisit SQL: SELECT SUM(success) AS success, SUM(failure) AS failure, SUM(elapsed) AS elapsed, MAX(max_elapsed) AS maxElapsed, MIN(max_concurrent) AS maxConcurrent FROM [Token(dubbo_invoke)] WHERE 1 = 1 [27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5 endVisit node: class com.alibaba.druid.sql.ast.expr.SQLBinaryOpExpr [27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5 endVisit result: SQLParsedResult(routeContext=RouteContext(tables=[Table(name=dubbo_invoke, alias=Optional.absent())], sqlStatementType=null, sqlBuilder=null), conditionContexts=[], mergeContext=MergeContext(orderByColumns=[], groupByColumns=[], aggregationColumns=[AggregationColumn(expression=SUM(success), aggregationType=SUM, alias=Optional.of(success), option=Optional.absent(), derivedColumns=[], columnIndex=1), AggregationColumn(expression=SUM(failure), aggregationType=SUM, alias=Optional.of(failure), option=Optional.absent(), derivedColumns=[], columnIndex=2), AggregationColumn(expression=SUM(elapsed), aggregationType=SUM, alias=Optional.of(elapsed), option=Optional.absent(), derivedColumns=[], columnIndex=3), AggregationColumn(expression=MAX(max_elapsed), aggregationType=MAX, alias=Optional.of(maxElapsed), option=Optional.absent(), derivedColumns=[], columnIndex=4), AggregationColumn(expression=MIN(max_concurrent), aggregationType=MIN, alias=Optional.of(maxConcurrent), option=Optional.absent(), derivedColumns=[], columnIndex=5)], limit=null)) [27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5 endVisit condition: ConditionContext(conditions={}) [27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5 endVisit SQL: SELECT SUM(success) AS success, SUM(failure) AS failure, SUM(elapsed) AS elapsed, MAX(max_elapsed) AS maxElapsed, MIN(max_concurrent) AS maxConcurrent FROM [Token(dubbo_invoke)] WHERE 1 = 1 [27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5 visit node: class com.alibaba.druid.sql.ast.expr.SQLBinaryOpExpr [27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5 visit argument: invoke_time &gt;= ? [27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5   6 visit node: class com.alibaba.druid.sql.ast.expr.SQLIdentifierExpr [27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5   6 visit argument: invoke_time [27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5   6 endVisit node: class com.alibaba.druid.sql.ast.expr.SQLIdentifierExpr [27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5   6 endVisit result: SQLParsedResult(routeContext=RouteContext(tables=[Table(name=dubbo_invoke, alias=Optional.absent())], sqlStatementType=null, sqlBuilder=null), conditionContexts=[], mergeContext=MergeContext(orderByColumns=[], groupByColumns=[], aggregationColumns=[AggregationColumn(expression=SUM(success), aggregationType=SUM, alias=Optional.of(success), option=Optional.absent(), derivedColumns=[], columnIndex=1), AggregationColumn(expression=SUM(failure), aggregationType=SUM, alias=Optional.of(failure), option=Optional.absent(), derivedColumns=[], columnIndex=2), AggregationColumn(expression=SUM(elapsed), aggregationType=SUM, alias=Optional.of(elapsed), option=Optional.absent(), derivedColumns=[], columnIndex=3), AggregationColumn(expression=MAX(max_elapsed), aggregationType=MAX, alias=Optional.of(maxElapsed), option=Optional.absent(), derivedColumns=[], columnIndex=4), AggregationColumn(expression=MIN(max_concurrent), aggregationType=MIN, alias=Optional.of(maxConcurrent), option=Optional.absent(), derivedColumns=[], columnIndex=5)], limit=null)) [27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5   6 endVisit condition: ConditionContext(conditions={}) [27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5   6 endVisit SQL: SELECT SUM(success) AS success, SUM(failure) AS failure, SUM(elapsed) AS elapsed, MAX(max_elapsed) AS maxElapsed, MIN(max_concurrent) AS maxConcurrent FROM [Token(dubbo_invoke)] WHERE 1 = 1 AND invoke_time [27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5 endVisit node: class com.alibaba.druid.sql.ast.expr.SQLBinaryOpExpr [27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5 endVisit result: SQLParsedResult(routeContext=RouteContext(tables=[Table(name=dubbo_invoke, alias=Optional.absent())], sqlStatementType=null, sqlBuilder=null), conditionContexts=[], mergeContext=MergeContext(orderByColumns=[], groupByColumns=[], aggregationColumns=[AggregationColumn(expression=SUM(success), aggregationType=SUM, alias=Optional.of(success), option=Optional.absent(), derivedColumns=[], columnIndex=1), AggregationColumn(expression=SUM(failure), aggregationType=SUM, alias=Optional.of(failure), option=Optional.absent(), derivedColumns=[], columnIndex=2), AggregationColumn(expression=SUM(elapsed), aggregationType=SUM, alias=Optional.of(elapsed), option=Optional.absent(), derivedColumns=[], columnIndex=3), AggregationColumn(expression=MAX(max_elapsed), aggregationType=MAX, alias=Optional.of(maxElapsed), option=Optional.absent(), derivedColumns=[], columnIndex=4), AggregationColumn(expression=MIN(max_concurrent), aggregationType=MIN, alias=Optional.of(maxConcurrent), option=Optional.absent(), derivedColumns=[], columnIndex=5)], limit=null)) [27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5 endVisit condition: ConditionContext(conditions={}) [27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5 endVisit SQL: SELECT SUM(success) AS success, SUM(failure) AS failure, SUM(elapsed) AS elapsed, MAX(max_elapsed) AS maxElapsed, MIN(max_concurrent) AS maxConcurrent FROM [Token(dubbo_invoke)] WHERE 1 = 1 AND invoke_time &gt;= ? [27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5 visit node: class com.alibaba.druid.sql.ast.expr.SQLBinaryOpExpr [27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5 visit argument: invoke_time &lt;= ? [27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5   6 visit node: class com.alibaba.druid.sql.ast.expr.SQLIdentifierExpr [27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5   6 visit argument: invoke_time [27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5   6 endVisit node: class com.alibaba.druid.sql.ast.expr.SQLIdentifierExpr [27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5   6 endVisit result: SQLParsedResult(routeContext=RouteContext(tables=[Table(name=dubbo_invoke, alias=Optional.absent())], sqlStatementType=null, sqlBuilder=null), conditionContexts=[], mergeContext=MergeContext(orderByColumns=[], groupByColumns=[], aggregationColumns=[AggregationColumn(expression=SUM(success), aggregationType=SUM, alias=Optional.of(success), option=Optional.absent(), derivedColumns=[], columnIndex=1), AggregationColumn(expression=SUM(failure), aggregationType=SUM, alias=Optional.of(failure), option=Optional.absent(), derivedColumns=[], columnIndex=2), AggregationColumn(expression=SUM(elapsed), aggregationType=SUM, alias=Optional.of(elapsed), option=Optional.absent(), derivedColumns=[], columnIndex=3), AggregationColumn(expression=MAX(max_elapsed), aggregationType=MAX, alias=Optional.of(maxElapsed), option=Optional.absent(), derivedColumns=[], columnIndex=4), AggregationColumn(expression=MIN(max_concurrent), aggregationType=MIN, alias=Optional.of(maxConcurrent), option=Optional.absent(), derivedColumns=[], columnIndex=5)], limit=null)) [27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5   6 endVisit condition: ConditionContext(conditions={}) [27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5   6 endVisit SQL: SELECT SUM(success) AS success, SUM(failure) AS failure, SUM(elapsed) AS elapsed, MAX(max_elapsed) AS maxElapsed, MIN(max_concurrent) AS maxConcurrent FROM [Token(dubbo_invoke)] WHERE 1 = 1 AND invoke_time &gt;= ? AND invoke_time [27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5 endVisit node: class com.alibaba.druid.sql.ast.expr.SQLBinaryOpExpr [27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5 endVisit result: SQLParsedResult(routeContext=RouteContext(tables=[Table(name=dubbo_invoke, alias=Optional.absent())], sqlStatementType=null, sqlBuilder=null), conditionContexts=[], mergeContext=MergeContext(orderByColumns=[], groupByColumns=[], aggregationColumns=[AggregationColumn(expression=SUM(success), aggregationType=SUM, alias=Optional.of(success), option=Optional.absent(), derivedColumns=[], columnIndex=1), AggregationColumn(expression=SUM(failure), aggregationType=SUM, alias=Optional.of(failure), option=Optional.absent(), derivedColumns=[], columnIndex=2), AggregationColumn(expression=SUM(elapsed), aggregationType=SUM, alias=Optional.of(elapsed), option=Optional.absent(), derivedColumns=[], columnIndex=3), AggregationColumn(expression=MAX(max_elapsed), aggregationType=MAX, alias=Optional.of(maxElapsed), option=Optional.absent(), derivedColumns=[], columnIndex=4), AggregationColumn(expression=MIN(max_concurrent), aggregationType=MIN, alias=Optional.of(maxConcurrent), option=Optional.absent(), derivedColumns=[], columnIndex=5)], limit=null)) [27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5 endVisit condition: ConditionContext(conditions={}) [27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5 endVisit SQL: SELECT SUM(success) AS success, SUM(failure) AS failure, SUM(elapsed) AS elapsed, MAX(max_elapsed) AS maxElapsed, MIN(max_concurrent) AS maxConcurrent FROM [Token(dubbo_invoke)] WHERE 1 = 1 AND invoke_time &gt;= ? AND invoke_time &lt;= ? [27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5 visit node: class com.alibaba.druid.sql.ast.expr.SQLBinaryOpExpr [27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5 visit argument: service = ? [27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5   6 visit node: class com.alibaba.druid.sql.ast.expr.SQLIdentifierExpr [27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5   6 visit argument: service [27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5   6 endVisit node: class com.alibaba.druid.sql.ast.expr.SQLIdentifierExpr [27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5   6 endVisit result: SQLParsedResult(routeContext=RouteContext(tables=[Table(name=dubbo_invoke, alias=Optional.absent())], sqlStatementType=null, sqlBuilder=null), conditionContexts=[], mergeContext=MergeContext(orderByColumns=[], groupByColumns=[], aggregationColumns=[AggregationColumn(expression=SUM(success), aggregationType=SUM, alias=Optional.of(success), option=Optional.absent(), derivedColumns=[], columnIndex=1), AggregationColumn(expression=SUM(failure), aggregationType=SUM, alias=Optional.of(failure), option=Optional.absent(), derivedColumns=[], columnIndex=2), AggregationColumn(expression=SUM(elapsed), aggregationType=SUM, alias=Optional.of(elapsed), option=Optional.absent(), derivedColumns=[], columnIndex=3), AggregationColumn(expression=MAX(max_elapsed), aggregationType=MAX, alias=Optional.of(maxElapsed), option=Optional.absent(), derivedColumns=[], columnIndex=4), AggregationColumn(expression=MIN(max_concurrent), aggregationType=MIN, alias=Optional.of(maxConcurrent), option=Optional.absent(), derivedColumns=[], columnIndex=5)], limit=null)) [27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5   6 endVisit condition: ConditionContext(conditions={}) [27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5   6 endVisit SQL: SELECT SUM(success) AS success, SUM(failure) AS failure, SUM(elapsed) AS elapsed, MAX(max_elapsed) AS maxElapsed, MIN(max_concurrent) AS maxConcurrent FROM [Token(dubbo_invoke)] WHERE 1 = 1 AND invoke_time &gt;= ? AND invoke_time &lt;= ? AND service [27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5 endVisit node: class com.alibaba.druid.sql.ast.expr.SQLBinaryOpExpr [27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5 endVisit result: SQLParsedResult(routeContext=RouteContext(tables=[Table(name=dubbo_invoke, alias=Optional.absent())], sqlStatementType=null, sqlBuilder=null), conditionContexts=[], mergeContext=MergeContext(orderByColumns=[], groupByColumns=[], aggregationColumns=[AggregationColumn(expression=SUM(success), aggregationType=SUM, alias=Optional.of(success), option=Optional.absent(), derivedColumns=[], columnIndex=1), AggregationColumn(expression=SUM(failure), aggregationType=SUM, alias=Optional.of(failure), option=Optional.absent(), derivedColumns=[], columnIndex=2), AggregationColumn(expression=SUM(elapsed), aggregationType=SUM, alias=Optional.of(elapsed), option=Optional.absent(), derivedColumns=[], columnIndex=3), AggregationColumn(expression=MAX(max_elapsed), aggregationType=MAX, alias=Optional.of(maxElapsed), option=Optional.absent(), derivedColumns=[], columnIndex=4), AggregationColumn(expression=MIN(max_concurrent), aggregationType=MIN, alias=Optional.of(maxConcurrent), option=Optional.absent(), derivedColumns=[], columnIndex=5)], limit=null)) [27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5 endVisit condition: ConditionContext(conditions={}) [27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5 endVisit SQL: SELECT SUM(success) AS success, SUM(failure) AS failure, SUM(elapsed) AS elapsed, MAX(max_elapsed) AS maxElapsed, MIN(max_concurrent) AS maxConcurrent FROM [Token(dubbo_invoke)] WHERE 1 = 1 AND invoke_time &gt;= ? AND invoke_time &lt;= ? AND service = ? [27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5 visit node: class com.alibaba.druid.sql.ast.expr.SQLBinaryOpExpr [27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5 visit argument: method = ? [27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5   6 visit node: class com.alibaba.druid.sql.ast.expr.SQLIdentifierExpr [27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5   6 visit argument: method [27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5   6 endVisit node: class com.alibaba.druid.sql.ast.expr.SQLIdentifierExpr [27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5   6 endVisit result: SQLParsedResult(routeContext=RouteContext(tables=[Table(name=dubbo_invoke, alias=Optional.absent())], sqlStatementType=null, sqlBuilder=null), conditionContexts=[], mergeContext=MergeContext(orderByColumns=[], groupByColumns=[], aggregationColumns=[AggregationColumn(expression=SUM(success), aggregationType=SUM, alias=Optional.of(success), option=Optional.absent(), derivedColumns=[], columnIndex=1), AggregationColumn(expression=SUM(failure), aggregationType=SUM, alias=Optional.of(failure), option=Optional.absent(), derivedColumns=[], columnIndex=2), AggregationColumn(expression=SUM(elapsed), aggregationType=SUM, alias=Optional.of(elapsed), option=Optional.absent(), derivedColumns=[], columnIndex=3), AggregationColumn(expression=MAX(max_elapsed), aggregationType=MAX, alias=Optional.of(maxElapsed), option=Optional.absent(), derivedColumns=[], columnIndex=4), AggregationColumn(expression=MIN(max_concurrent), aggregationType=MIN, alias=Optional.of(maxConcurrent), option=Optional.absent(), derivedColumns=[], columnIndex=5)], limit=null)) [27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5   6 endVisit condition: ConditionContext(conditions={}) [27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5   6 endVisit SQL: SELECT SUM(success) AS success, SUM(failure) AS failure, SUM(elapsed) AS elapsed, MAX(max_elapsed) AS maxElapsed, MIN(max_concurrent) AS maxConcurrent FROM [Token(dubbo_invoke)] WHERE 1 = 1 AND invoke_time &gt;= ? AND invoke_time &lt;= ? AND service = ? AND method [27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5 endVisit node: class com.alibaba.druid.sql.ast.expr.SQLBinaryOpExpr [27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5 endVisit result: SQLParsedResult(routeContext=RouteContext(tables=[Table(name=dubbo_invoke, alias=Optional.absent())], sqlStatementType=null, sqlBuilder=null), conditionContexts=[], mergeContext=MergeContext(orderByColumns=[], groupByColumns=[], aggregationColumns=[AggregationColumn(expression=SUM(success), aggregationType=SUM, alias=Optional.of(success), option=Optional.absent(), derivedColumns=[], columnIndex=1), AggregationColumn(expression=SUM(failure), aggregationType=SUM, alias=Optional.of(failure), option=Optional.absent(), derivedColumns=[], columnIndex=2), AggregationColumn(expression=SUM(elapsed), aggregationType=SUM, alias=Optional.of(elapsed), option=Optional.absent(), derivedColumns=[], columnIndex=3), AggregationColumn(expression=MAX(max_elapsed), aggregationType=MAX, alias=Optional.of(maxElapsed), option=Optional.absent(), derivedColumns=[], columnIndex=4), AggregationColumn(expression=MIN(max_concurrent), aggregationType=MIN, alias=Optional.of(maxConcurrent), option=Optional.absent(), derivedColumns=[], columnIndex=5)], limit=null)) [27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5 endVisit condition: ConditionContext(conditions={}) [27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5 endVisit SQL: SELECT SUM(success) AS success, SUM(failure) AS failure, SUM(elapsed) AS elapsed, MAX(max_elapsed) AS maxElapsed, MIN(max_concurrent) AS maxConcurrent FROM [Token(dubbo_invoke)] WHERE 1 = 1 AND invoke_time &gt;= ? AND invoke_time &lt;= ? AND service = ? AND method = ? [27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5 visit node: class com.alibaba.druid.sql.ast.expr.SQLBinaryOpExpr [27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5 visit argument: type = ? [27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5   6 visit node: class com.alibaba.druid.sql.ast.expr.SQLIdentifierExpr [27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5   6 visit argument: type [27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5   6 endVisit node: class com.alibaba.druid.sql.ast.expr.SQLIdentifierExpr [27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5   6 endVisit result: SQLParsedResult(routeContext=RouteContext(tables=[Table(name=dubbo_invoke, alias=Optional.absent())], sqlStatementType=null, sqlBuilder=null), conditionContexts=[], mergeContext=MergeContext(orderByColumns=[], groupByColumns=[], aggregationColumns=[AggregationColumn(expression=SUM(success), aggregationType=SUM, alias=Optional.of(success), option=Optional.absent(), derivedColumns=[], columnIndex=1), AggregationColumn(expression=SUM(failure), aggregationType=SUM, alias=Optional.of(failure), option=Optional.absent(), derivedColumns=[], columnIndex=2), AggregationColumn(expression=SUM(elapsed), aggregationType=SUM, alias=Optional.of(elapsed), option=Optional.absent(), derivedColumns=[], columnIndex=3), AggregationColumn(expression=MAX(max_elapsed), aggregationType=MAX, alias=Optional.of(maxElapsed), option=Optional.absent(), derivedColumns=[], columnIndex=4), AggregationColumn(expression=MIN(max_concurrent), aggregationType=MIN, alias=Optional.of(maxConcurrent), option=Optional.absent(), derivedColumns=[], columnIndex=5)], limit=null)) [27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5   6 endVisit condition: ConditionContext(conditions={}) [27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5   6 endVisit SQL: SELECT SUM(success) AS success, SUM(failure) AS failure, SUM(elapsed) AS elapsed, MAX(max_elapsed) AS maxElapsed, MIN(max_concurrent) AS maxConcurrent FROM [Token(dubbo_invoke)] WHERE 1 = 1 AND invoke_time &gt;= ? AND invoke_time &lt;= ? AND service = ? AND method = ? AND type [27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5 endVisit node: class com.alibaba.druid.sql.ast.expr.SQLBinaryOpExpr [27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5 endVisit result: SQLParsedResult(routeContext=RouteContext(tables=[Table(name=dubbo_invoke, alias=Optional.absent())], sqlStatementType=null, sqlBuilder=null), conditionContexts=[], mergeContext=MergeContext(orderByColumns=[], groupByColumns=[], aggregationColumns=[AggregationColumn(expression=SUM(success), aggregationType=SUM, alias=Optional.of(success), option=Optional.absent(), derivedColumns=[], columnIndex=1), AggregationColumn(expression=SUM(failure), aggregationType=SUM, alias=Optional.of(failure), option=Optional.absent(), derivedColumns=[], columnIndex=2), AggregationColumn(expression=SUM(elapsed), aggregationType=SUM, alias=Optional.of(elapsed), option=Optional.absent(), derivedColumns=[], columnIndex=3), AggregationColumn(expression=MAX(max_elapsed), aggregationType=MAX, alias=Optional.of(maxElapsed), option=Optional.absent(), derivedColumns=[], columnIndex=4), AggregationColumn(expression=MIN(max_concurrent), aggregationType=MIN, alias=Optional.of(maxConcurrent), option=Optional.absent(), derivedColumns=[], columnIndex=5)], limit=null)) [27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5 endVisit condition: ConditionContext(conditions={}) [27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5 endVisit SQL: SELECT SUM(success) AS success, SUM(failure) AS failure, SUM(elapsed) AS elapsed, MAX(max_elapsed) AS maxElapsed, MIN(max_concurrent) AS maxConcurrent FROM [Token(dubbo_invoke)] WHERE 1 = 1 AND invoke_time &gt;= ? AND invoke_time &lt;= ? AND service = ? AND method = ? AND type = ? [27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4 endVisit node: class com.alibaba.druid.sql.ast.expr.SQLBinaryOpExpr [27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4 endVisit result: SQLParsedResult(routeContext=RouteContext(tables=[Table(name=dubbo_invoke, alias=Optional.absent())], sqlStatementType=null, sqlBuilder=null), conditionContexts=[], mergeContext=MergeContext(orderByColumns=[], groupByColumns=[], aggregationColumns=[AggregationColumn(expression=SUM(success), aggregationType=SUM, alias=Optional.of(success), option=Optional.absent(), derivedColumns=[], columnIndex=1), AggregationColumn(expression=SUM(failure), aggregationType=SUM, alias=Optional.of(failure), option=Optional.absent(), derivedColumns=[], columnIndex=2), AggregationColumn(expression=SUM(elapsed), aggregationType=SUM, alias=Optional.of(elapsed), option=Optional.absent(), derivedColumns=[], columnIndex=3), AggregationColumn(expression=MAX(max_elapsed), aggregationType=MAX, alias=Optional.of(maxElapsed), option=Optional.absent(), derivedColumns=[], columnIndex=4), AggregationColumn(expression=MIN(max_concurrent), aggregationType=MIN, alias=Optional.of(maxConcurrent), option=Optional.absent(), derivedColumns=[], columnIndex=5)], limit=null)) [27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4 endVisit condition: ConditionContext(conditions={}) [27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4 endVisit SQL: SELECT SUM(success) AS success, SUM(failure) AS failure, SUM(elapsed) AS elapsed, MAX(max_elapsed) AS maxElapsed, MIN(max_concurrent) AS maxConcurrent FROM [Token(dubbo_invoke)] WHERE 1 = 1 AND invoke_time &gt;= ? AND invoke_time &lt;= ? AND service = ? AND method = ? AND type = ? [27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3 endVisit node: class com.alibaba.druid.sql.dialect.mysql.ast.statement.MySqlSelectQueryBlock [27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3 endVisit result: SQLParsedResult(routeContext=RouteContext(tables=[Table(name=dubbo_invoke, alias=Optional.absent())], sqlStatementType=null, sqlBuilder=null), conditionContexts=[], mergeContext=MergeContext(orderByColumns=[], groupByColumns=[], aggregationColumns=[AggregationColumn(expression=SUM(success), aggregationType=SUM, alias=Optional.of(success), option=Optional.absent(), derivedColumns=[], columnIndex=1), AggregationColumn(expression=SUM(failure), aggregationType=SUM, alias=Optional.of(failure), option=Optional.absent(), derivedColumns=[], columnIndex=2), AggregationColumn(expression=SUM(elapsed), aggregationType=SUM, alias=Optional.of(elapsed), option=Optional.absent(), derivedColumns=[], columnIndex=3), AggregationColumn(expression=MAX(max_elapsed), aggregationType=MAX, alias=Optional.of(maxElapsed), option=Optional.absent(), derivedColumns=[], columnIndex=4), AggregationColumn(expression=MIN(max_concurrent), aggregationType=MIN, alias=Optional.of(maxConcurrent), option=Optional.absent(), derivedColumns=[], columnIndex=5)], limit=null)) [27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3 endVisit condition: ConditionContext(conditions={}) [27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3 endVisit SQL: SELECT SUM(success) AS success, SUM(failure) AS failure, SUM(elapsed) AS elapsed, MAX(max_elapsed) AS maxElapsed, MIN(max_concurrent) AS maxConcurrent FROM [Token(dubbo_invoke)] WHERE 1 = 1 AND invoke_time &gt;= ? AND invoke_time &lt;= ? AND service = ? AND method = ? AND type = ? [27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2 endVisit node: class com.alibaba.druid.sql.ast.statement.SQLSelect [27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2 endVisit result: SQLParsedResult(routeContext=RouteContext(tables=[Table(name=dubbo_invoke, alias=Optional.absent())], sqlStatementType=null, sqlBuilder=null), conditionContexts=[], mergeContext=MergeContext(orderByColumns=[], groupByColumns=[], aggregationColumns=[AggregationColumn(expression=SUM(success), aggregationType=SUM, alias=Optional.of(success), option=Optional.absent(), derivedColumns=[], columnIndex=1), AggregationColumn(expression=SUM(failure), aggregationType=SUM, alias=Optional.of(failure), option=Optional.absent(), derivedColumns=[], columnIndex=2), AggregationColumn(expression=SUM(elapsed), aggregationType=SUM, alias=Optional.of(elapsed), option=Optional.absent(), derivedColumns=[], columnIndex=3), AggregationColumn(expression=MAX(max_elapsed), aggregationType=MAX, alias=Optional.of(maxElapsed), option=Optional.absent(), derivedColumns=[], columnIndex=4), AggregationColumn(expression=MIN(max_concurrent), aggregationType=MIN, alias=Optional.of(maxConcurrent), option=Optional.absent(), derivedColumns=[], columnIndex=5)], limit=null)) [27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2 endVisit condition: ConditionContext(conditions={}) [27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2 endVisit SQL: SELECT SUM(success) AS success, SUM(failure) AS failure, SUM(elapsed) AS elapsed, MAX(max_elapsed) AS maxElapsed, MIN(max_concurrent) AS maxConcurrent FROM [Token(dubbo_invoke)] WHERE 1 = 1 AND invoke_time &gt;= ? AND invoke_time &lt;= ? AND service = ? AND method = ? AND type = ? [27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1 endVisit node: class com.alibaba.druid.sql.ast.statement.SQLSelectStatement [27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1 endVisit result: SQLParsedResult(routeContext=RouteContext(tables=[Table(name=dubbo_invoke, alias=Optional.absent())], sqlStatementType=null, sqlBuilder=null), conditionContexts=[], mergeContext=MergeContext(orderByColumns=[], groupByColumns=[], aggregationColumns=[AggregationColumn(expression=SUM(success), aggregationType=SUM, alias=Optional.of(success), option=Optional.absent(), derivedColumns=[], columnIndex=1), AggregationColumn(expression=SUM(failure), aggregationType=SUM, alias=Optional.of(failure), option=Optional.absent(), derivedColumns=[], columnIndex=2), AggregationColumn(expression=SUM(elapsed), aggregationType=SUM, alias=Optional.of(elapsed), option=Optional.absent(), derivedColumns=[], columnIndex=3), AggregationColumn(expression=MAX(max_elapsed), aggregationType=MAX, alias=Optional.of(maxElapsed), option=Optional.absent(), derivedColumns=[], columnIndex=4), AggregationColumn(expression=MIN(max_concurrent), aggregationType=MIN, alias=Optional.of(maxConcurrent), option=Optional.absent(), derivedColumns=[], columnIndex=5)], limit=null)) [27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1 endVisit condition: ConditionContext(conditions={}) [27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1 endVisit SQL: SELECT SUM(success) AS success, SUM(failure) AS failure, SUM(elapsed) AS elapsed, MAX(max_elapsed) AS maxElapsed, MIN(max_concurrent) AS maxConcurrent FROM [Token(dubbo_invoke)] WHERE 1 = 1 AND invoke_time &gt;= ? AND invoke_time &lt;= ? AND service = ? AND method = ? AND type = ? [27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 DEBUG parser.SQLParseEngine: Parsed SQL result: SQLParsedResult(routeContext=RouteContext(tables=[Table(name=dubbo_invoke, alias=Optional.absent())], sqlStatementType=null, sqlBuilder=null), conditionContexts=[ConditionContext(conditions={})], mergeContext=MergeContext(orderByColumns=[], groupByColumns=[], aggregationColumns=[AggregationColumn(expression=SUM(success), aggregationType=SUM, alias=Optional.of(success), option=Optional.absent(), derivedColumns=[], columnIndex=1), AggregationColumn(expression=SUM(failure), aggregationType=SUM, alias=Optional.of(failure), option=Optional.absent(), derivedColumns=[], columnIndex=2), AggregationColumn(expression=SUM(elapsed), aggregationType=SUM, alias=Optional.of(elapsed), option=Optional.absent(), derivedColumns=[], columnIndex=3), AggregationColumn(expression=MAX(max_elapsed), aggregationType=MAX, alias=Optional.of(maxElapsed), option=Optional.absent(), derivedColumns=[], columnIndex=4), AggregationColumn(expression=MIN(max_concurrent), aggregationType=MIN, alias=Optional.of(maxConcurrent), option=Optional.absent(), derivedColumns=[], columnIndex=5)], limit=null)) [27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 DEBUG parser.SQLParseEngine: Parsed SQL: SELECT SUM(success) AS success, SUM(failure) AS failure, SUM(elapsed) AS elapsed, MAX(max_elapsed) AS maxElapsed, MIN(max_concurrent) AS maxConcurrent FROM [Token(dubbo_invoke)] WHERE 1 = 1 AND invoke_time &gt;= ? AND invoke_time &lt;= ? AND service = ? AND method = ? AND type = ? [27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 DEBUG single.SingleTableRouter: Before database sharding dubbo_invoke routes db names: [dataSource_0, dataSource_1] sharding columns: [id] sharding values: [] [27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 DEBUG single.SingleTableRouter: After database sharding dubbo_invoke result: [dataSource_0, dataSource_1] [27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 DEBUG single.SingleTableRouter: Before table sharding dubbo_invoke routes db names: [DataNode(dataSourceName=dataSource_0, tableName=dubbo_invoke_1), DataNode(dataSourceName=dataSource_1, tableName=dubbo_invoke_1), DataNode(dataSourceName=dataSource_0, tableName=dubbo_invoke_0), DataNode(dataSourceName=dataSource_1, tableName=dubbo_invoke_0)] sharding columns: [invoke_time] sharding values: [] [27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 DEBUG single.SingleTableRouter: After table sharding dubbo_invoke result: [dubbo_invoke_1, dubbo_invoke_0] [27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 DEBUG router.SQLRouteEngine: final route result is 4 target [27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 DEBUG router.SQLRouteEngine: dataSource_1:SELECT SUM(success) AS success, SUM(failure) AS failure, SUM(elapsed) AS elapsed, MAX(max_elapsed) AS maxElapsed, MIN(max_concurrent) AS maxConcurrent FROM dubbo_invoke_0 WHERE 1 = 1 AND invoke_time &gt;= ? AND invoke_time &lt;= ? AND service = ? AND method = ? AND type = ? [1477497600986, 1477583999986, com.talk51.modules.course.CourseService, getSeries, provider] [27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 DEBUG router.SQLRouteEngine: dataSource_0:SELECT SUM(success) AS success, SUM(failure) AS failure, SUM(elapsed) AS elapsed, MAX(max_elapsed) AS maxElapsed, MIN(max_concurrent) AS maxConcurrent FROM dubbo_invoke_1 WHERE 1 = 1 AND invoke_time &gt;= ? AND invoke_time &lt;= ? AND service = ? AND method = ? AND type = ? [1477497600986, 1477583999986, com.talk51.modules.course.CourseService, getSeries, provider] [27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 DEBUG router.SQLRouteEngine: dataSource_1:SELECT SUM(success) AS success, SUM(failure) AS failure, SUM(elapsed) AS elapsed, MAX(max_elapsed) AS maxElapsed, MIN(max_concurrent) AS maxConcurrent FROM dubbo_invoke_1 WHERE 1 = 1 AND invoke_time &gt;= ? AND invoke_time &lt;= ? AND service = ? AND method = ? AND type = ? [1477497600986, 1477583999986, com.talk51.modules.course.CourseService, getSeries, provider] [27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 DEBUG router.SQLRouteEngine: dataSource_0:SELECT SUM(success) AS success, SUM(failure) AS failure, SUM(elapsed) AS elapsed, MAX(max_elapsed) AS maxElapsed, MIN(max_concurrent) AS maxConcurrent FROM dubbo_invoke_0 WHERE 1 = 1 AND invoke_time &gt;= ? AND invoke_time &lt;= ? AND service = ? AND method = ? AND type = ? [1477497600986, 1477583999986, com.talk51.modules.course.CourseService, getSeries, provider] [27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 DEBUG router.SQLRouteEngine: merge context:MergeContext(orderByColumns=[], groupByColumns=[], aggregationColumns=[AggregationColumn(expression=SUM(success), aggregationType=SUM, alias=Optional.of(success), option=Optional.absent(), derivedColumns=[], columnIndex=1), AggregationColumn(expression=SUM(failure), aggregationType=SUM, alias=Optional.of(failure), option=Optional.absent(), derivedColumns=[], columnIndex=2), AggregationColumn(expression=SUM(elapsed), aggregationType=SUM, alias=Optional.of(elapsed), option=Optional.absent(), derivedColumns=[], columnIndex=3), AggregationColumn(expression=MAX(max_elapsed), aggregationType=MAX, alias=Optional.of(maxElapsed), option=Optional.absent(), derivedColumns=[], columnIndex=4), AggregationColumn(expression=MIN(max_concurrent), aggregationType=MIN, alias=Optional.of(maxConcurrent), option=Optional.absent(), derivedColumns=[], columnIndex=5)], limit=null) [27/10/16 10:57:12:012 CST] pool-1-thread-27 ERROR executor.ExecutorEngine: Concurrent execute result error {} com.dangdang.ddframe.rdb.sharding.exception.ShardingJdbcException: java.sql.SQLException: Error     at com.dangdang.ddframe.rdb.sharding.executor.ExecutorExceptionHandler.handleException(ExecutorExceptionHandler.java:61)     at com.dangdang.ddframe.rdb.sharding.executor.PreparedStatementExecutor.executeInternal(PreparedStatementExecutor.java:188)     at com.dangdang.ddframe.rdb.sharding.executor.PreparedStatementExecutor.access$200(PreparedStatementExecutor.java:46)     at com.dangdang.ddframe.rdb.sharding.executor.PreparedStatementExecutor$4.execute(PreparedStatementExecutor.java:170)     at com.dangdang.ddframe.rdb.sharding.executor.PreparedStatementExecutor$4.execute(PreparedStatementExecutor.java:166)     at com.dangdang.ddframe.rdb.sharding.executor.ExecutorEngine$1.call(ExecutorEngine.java:109)     at com.google.common.util.concurrent.TrustedListenableFutureTask$TrustedFutureInterruptibleTask.runInterruptibly(TrustedListenableFutureTask.java:108)     at com.google.common.util.concurrent.InterruptibleTask.run(InterruptibleTask.java:41)     at com.google.common.util.concurrent.TrustedListenableFutureTask.run(TrustedListenableFutureTask.java:77)     at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)     at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)     at java.lang.Thread.run(Thread.java:745) Caused by: java.sql.SQLException: Error     at com.alibaba.druid.pool.DruidDataSource.handleConnectionException(DruidDataSource.java:1193)     at com.alibaba.druid.pool.DruidPooledConnection.handleException(DruidPooledConnection.java:127)     at com.alibaba.druid.pool.DruidPooledStatement.checkException(DruidPooledStatement.java:68)     at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:495)     at com.dangdang.ddframe.rdb.sharding.executor.PreparedStatementExecutor.executeInternal(PreparedStatementExecutor.java:185)     ... 10 more Caused by: java.lang.NullPointerException     at com.alibaba.druid.support.profile.Profiler.release(Profiler.java:58)     at com.alibaba.druid.filter.stat.StatFilter.statement_executeErrorAfter(StatFilter.java:501)     at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:450)     at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)     at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:118)     at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)     ... 11 more [27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 DEBUG spring.SqlSessionUtils: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@632fafe1] [27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 DEBUG datasource.DataSourceUtils: Returning JDBC Connection to DataSource [27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 DEBUG annotation.ExceptionHandlerExceptionResolver: Resolving exception from handler [public java.lang.String com.handu.open.dubbo.monitor.controller.StatisticsController.index(com.handu.open.dubbo.monitor.domain.DubboInvoke,org.springframework.ui.Model)]: org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.PersistenceException:  ### Error querying database.  Cause: com.dangdang.ddframe.rdb.sharding.exception.ShardingJdbcException: java.util.concurrent.ExecutionException: com.dangdang.ddframe.rdb.sharding.exception.ShardingJdbcException: java.sql.SQLException: Error ### The error may exist in file [D:\workspace.metadata.plugins\org.eclipse.wst.server.core\tmp9\wtpwebapps\dubbo-monitor\WEB-INF\classes\mappers\DubboInvokeMapper.xml] ### The error may involve com.handu.open.dubbo.monitor.DubboMonitorService.countDubboInvokeInfo-Inline ### The error occurred while setting parameters ### SQL: SELECT             SUM(success) as success,             SUM(failure) as failure,             SUM(elapsed) as elapsed,             MAX(max_elapsed) as maxElapsed,             MIN(max_concurrent) as maxConcurrent         FROM dubbo_invoke         WHERE             1 = 1                                                     AND invoke_time &gt;= ?                                 AND invoke_time &lt;= ?                                 AND service = ?                                 AND method = ?                                                      AND type = ? ### Cause: com.dangdang.ddframe.rdb.sharding.exception.ShardingJdbcException: java.util.concurrent.ExecutionException: com.dangdang.ddframe.rdb.sharding.exception.ShardingJdbcException: java.sql.SQLException: Error  [27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 DEBUG annotation.ResponseStatusExceptionResolver: Resolving exception from handler [public java.lang.String com.handu.open.dubbo.monitor.controller.StatisticsController.index(com.handu.open.dubbo.monitor.domain.DubboInvoke,org.springframework.ui.Model)]: org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.PersistenceException:  ### Error querying database.  Cause: com.dangdang.ddframe.rdb.sharding.exception.ShardingJdbcException: java.util.concurrent.ExecutionException: com.dangdang.ddframe.rdb.sharding.exception.ShardingJdbcException: java.sql.SQLException: Error ### The error may exist in file [D:\workspace.metadata.plugins\org.eclipse.wst.server.core\tmp9\wtpwebapps\dubbo-monitor\WEB-INF\classes\mappers\DubboInvokeMapper.xml] ### The error may involve com.handu.open.dubbo.monitor.DubboMonitorService.countDubboInvokeInfo-Inline ### The error occurred while setting parameters ### SQL: SELECT             SUM(success) as success,             SUM(failure) as failure,             SUM(elapsed) as elapsed,             MAX(max_elapsed) as maxElapsed,             MIN(max_concurrent) as maxConcurrent         FROM dubbo_invoke         WHERE             1 = 1                                                     AND invoke_time &gt;= ?                                 AND invoke_time &lt;= ?                                 AND service = ?                                 AND method = ?                                                      AND type = ? ### Cause: com.dangdang.ddframe.rdb.sharding.exception.ShardingJdbcException: java.util.concurrent.ExecutionException: com.dangdang.ddframe.rdb.sharding.exception.ShardingJdbcException: java.sql.SQLException: Error  [27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 DEBUG support.DefaultHandlerExceptionResolver: Resolving exception from handler [public java.lang.String com.handu.open.dubbo.monitor.controller.StatisticsController.index(com.handu.open.dubbo.monitor.domain.DubboInvoke,org.springframework.ui.Model)]: org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.PersistenceException:  ### Error querying database.  Cause: com.dangdang.ddframe.rdb.sharding.exception.ShardingJdbcException: java.util.concurrent.ExecutionException: com.dangdang.ddframe.rdb.sharding.exception.ShardingJdbcException: java.sql.SQLException: Error ### The error may exist in file [D:\workspace.metadata.plugins\org.eclipse.wst.server.core\tmp9\wtpwebapps\dubbo-monitor\WEB-INF\classes\mappers\DubboInvokeMapper.xml] ### The error may involve com.handu.open.dubbo.monitor.DubboMonitorService.countDubboInvokeInfo-Inline ### The error occurred while setting parameters ### SQL: SELECT             SUM(success) as success,             SUM(failure) as failure,             SUM(elapsed) as elapsed,             MAX(max_elapsed) as maxElapsed,             MIN(max_concurrent) as maxConcurrent         FROM dubbo_invoke         WHERE             1 = 1                                                     AND invoke_time &gt;= ?                                 AND invoke_time &lt;= ?                                 AND service = ?                                 AND method = ?                                                      AND type = ? ### Cause: com.dangdang.ddframe.rdb.sharding.exception.ShardingJdbcException: java.util.concurrent.ExecutionException: com.dangdang.ddframe.rdb.sharding.exception.ShardingJdbcException: java.sql.SQLException: Error  [27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE servlet.DispatcherServlet: Cleared thread-bound request context: SecurityContextHolderAwareRequestWrapper[ org.springframework.security.web.context.HttpSessionSecurityContextRepository$Servlet3SaveToSessionRequestWrapper@674b68bd] [27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 DEBUG servlet.DispatcherServlet: Could not complete request org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.PersistenceException:  ### Error querying database.  Cause: com.dangdang.ddframe.rdb.sharding.exception.ShardingJdbcException: java.util.concurrent.ExecutionException: com.dangdang.ddframe.rdb.sharding.exception.ShardingJdbcException: java.sql.SQLException: Error ### The error may exist in file [D:\workspace.metadata.plugins\org.eclipse.wst.server.core\tmp9\wtpwebapps\dubbo-monitor\WEB-INF\classes\mappers\DubboInvokeMapper.xml] ### The error may involve com.handu.open.dubbo.monitor.DubboMonitorService.countDubboInvokeInfo-Inline ### The error occurred while setting parameters ### SQL: SELECT             SUM(success) as success,             SUM(failure) as failure,             SUM(elapsed) as elapsed,             MAX(max_elapsed) as maxElapsed,             MIN(max_concurrent) as maxConcurrent         FROM dubbo_invoke         WHERE             1 = 1                                                     AND invoke_time &gt;= ?                                 AND invoke_time &lt;= ?                                 AND service = ?                                 AND method = ?                                                      AND type = ? ### Cause: com.dangdang.ddframe.rdb.sharding.exception.ShardingJdbcException: java.util.concurrent.ExecutionException: com.dangdang.ddframe.rdb.sharding.exception.ShardingJdbcException: java.sql.SQLException: Error  ``` at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:75) at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:371) at com.sun.proxy.$Proxy26.selectList(Unknown Source) at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:198) at com.handu.open.dubbo.monitor.support.Dao.getList(Dao.java:145) at com.handu.open.dubbo.monitor.DubboMonitorService.countDubboInvokeInfo(DubboMonitorService.java:319) at com.handu.open.dubbo.monitor.controller.StatisticsController.composeData(StatisticsController.java:135) at com.handu.open.dubbo.monitor.controller.StatisticsController.index(StatisticsController.java:81) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:606) at org.springframework.web.method.support.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:215) at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:132) at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104) at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandleMethod(RequestMappingHandlerAdapter.java:745) at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:685) at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:80) at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:919) at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:851) at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:953) at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:844) at javax.servlet.http.HttpServlet.service(HttpServlet.java:620) at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:829) at javax.servlet.http.HttpServlet.service(HttpServlet.java:727) at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:303) at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:208) at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52) at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:241) at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:208) at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330) at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:118) at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:84) at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342) at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:113) at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342) at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:103) at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342) at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:113) at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342) at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:154) at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342) at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:45) at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342) at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilter(BasicAuthenticationFilter.java:201) at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342) at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:110) at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342) at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:57) at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:106) at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342) at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:87) at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342) at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:50) at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:106) at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342) at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:192) at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:160) at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:343) at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:260) at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:241) at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:208) at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:220) at org.apache.catalina.core.StandardContextValv十月 27, 2016 10:57:12 上午 org.apache.catalina.core.StandardWrapperValve invoke ```  严重: Servlet.service() for servlet [springServlet] in context with path [/dubbo-monitor] threw exception [Request processing failed; nested exception is org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.PersistenceException:  ### Error querying database.  Cause: com.dangdang.ddframe.rdb.sharding.exception.ShardingJdbcException: java.util.concurrent.ExecutionException: com.dangdang.ddframe.rdb.sharding.exception.ShardingJdbcException: java.sql.SQLException: Error ### The error may exist in file [D:\workspace.metadata.plugins\org.eclipse.wst.server.core\tmp9\wtpwebapps\dubbo-monitor\WEB-INF\classes\mappers\DubboInvokeMapper.xml] ### The error may involve com.handu.open.dubbo.monitor.DubboMonitorService.countDubboInvokeInfo-Inline ### The error occurred while setting parameters ### SQL: SELECT             SUM(success) as success,             SUM(failure) as failure,             SUM(elapsed) as elapsed,             MAX(max_elapsed) as maxElapsed,             MIN(max_concurrent) as maxConcurrent         FROM dubbo_invoke         WHERE             1 = 1                                                     AND invoke_time &gt;= ?                                 AND invoke_time &lt;= ?                                 AND service = ?                                 AND method = ?                                                      AND type = ? ### Cause: com.dangdang.ddframe.rdb.sharding.exception.ShardingJdbcException: java.util.concurrent.ExecutionException: com.dangdang.ddframe.rdb.sharding.exception.ShardingJdbcException: java.sql.SQLException: Error] with root cause  java.lang.NullPointerException     at com.alibaba.druid.support.profile.Profiler.release(Profiler.java:58)     at com.alibaba.druid.filter.stat.StatFilter.statement_executeErrorAfter(StatFilter.java:501)     at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:450)     at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)     at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:118)     at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)     at com.dangdang.ddframe.rdb.sharding.executor.PreparedStatementExecutor.executeInternal(PreparedStatementExecutor.java:185)     at com.dangdang.ddframe.rdb.sharding.executor.PreparedStatementExecutor.access$200(PreparedStatementExecutor.java:46)     at com.dangdang.ddframe.rdb.sharding.executor.PreparedStatementExecutor$4.execute(PreparedStatementExecutor.java:170)     at com.dangdang.ddframe.rdb.sharding.executor.PreparedStatementExecutor$4.execute(PreparedStatementExecutor.java:166)     at com.dangdang.ddframe.rdb.sharding.executor.ExecutorEngine$1.call(ExecutorEngine.java:109)     at com.google.common.util.concurrent.TrustedListenableFutureTask$TrustedFutureInterruptibleTask.runInterruptibly(TrustedListenableFutureTask.java:108)     at com.google.common.util.concurrent.InterruptibleTask.run(InterruptibleTask.java:41)     at com.google.common.util.concurrent.TrustedListenableFutureTask.run(TrustedListenableFutureTask.java:77)     at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)     at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)     at java.lang.Thread.run(Thread.java:745)  e.invoke(StandardContextValve.java:122)     at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:501)     at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:170)     at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:98)     at org.apache.catalina.valves.AccessLogValve.invoke(AccessLogValve.java:950)     at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:116)     at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:408)     at org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1040)     at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:607)     at org.apache.tomcat.util.net.JIoEndpoint$SocketProcessor.run(JIoEndpoint.java:315)     at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)     at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)     at java.lang.Thread.run(Thread.java:745) Caused by: org.apache.ibatis.exceptions.PersistenceException:  ### Error querying database.  Cause: com.dangdang.ddframe.rdb.sharding.exception.ShardingJdbcException: java.util.concurrent.ExecutionException: com.dangdang.ddframe.rdb.sharding.exception.ShardingJdbcException: java.sql.SQLException: Error ### The error may exist in file [D:\workspace.metadata.plugins\org.eclipse.wst.server.core\tmp9\wtpwebapps\dubbo-monitor\WEB-INF\classes\mappers\DubboInvokeMapper.xml] ### The error may involve com.handu.open.dubbo.monitor.DubboMonitorService.countDubboInvokeInfo-Inline ### The error occurred while setting parameters ### SQL: SELECT             SUM(success) as success,             SUM(failure) as failure,             SUM(elapsed) as elapsed,             MAX(max_elapsed) as maxElapsed,             MIN(max_concurrent) as maxConcurrent         FROM dubbo_invoke         WHERE             1 = 1                                                     AND invoke_time &gt;= ?                                 AND invoke_time &lt;= ?                                 AND service = ?                                 AND method = ?                                                      AND type = ? ### Cause: com.dangdang.ddframe.rdb.sharding.exception.ShardingJdbcException: java.util.concurrent.ExecutionException: com.dangdang.ddframe.rdb.sharding.exception.ShardingJdbcException: java.sql.SQLException: Error  ``` at org.apache.ibatis.exceptions.ExceptionFactory.wrapException(ExceptionFactory.java:26) at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:111) at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:102) at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:606) at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:358) ... 74 more ```  Caused by: com.dangdang.ddframe.rdb.sharding.exception.ShardingJdbcException: java.util.concurrent.ExecutionException: com.dangdang.ddframe.rdb.sharding.exception.ShardingJdbcException: java.sql.SQLException: Error     at com.dangdang.ddframe.rdb.sharding.executor.ExecutorExceptionHandler.handleException(ExecutorExceptionHandler.java:61)     at com.dangdang.ddframe.rdb.sharding.executor.ExecutorEngine.getFutureResults(ExecutorEngine.java:134)     at com.dangdang.ddframe.rdb.sharding.executor.ExecutorEngine.execute(ExecutorEngine.java:70)     at com.dangdang.ddframe.rdb.sharding.executor.PreparedStatementExecutor.execute(PreparedStatementExecutor.java:166)     at com.dangdang.ddframe.rdb.sharding.jdbc.ShardingPreparedStatement.execute(ShardingPreparedStatement.java:112)     at sun.reflect.GeneratedMethodAccessor35.invoke(Unknown Source)     at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)     at java.lang.reflect.Method.invoke(Method.java:606)     at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:62)     at com.sun.proxy.$Proxy35.execute(Unknown Source)     at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:59)     at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:73)     at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:60)     at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:267)     at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:137)     at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:96)     at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:77)     at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:108)     ... 79 more Caused by: java.util.concurrent.ExecutionException: com.dangdang.ddframe.rdb.sharding.exception.ShardingJdbcException: java.sql.SQLException: Error     at com.google.common.util.concurrent.AbstractFuture.getDoneValue(AbstractFuture.java:472)     at com.google.common.util.concurrent.AbstractFuture.get(AbstractFuture.java:451)     at com.google.common.util.concurrent.AbstractFuture$TrustedFuture.get(AbstractFuture.java:74)     at com.dangdang.ddframe.rdb.sharding.executor.ExecutorEngine.getFutureResults(ExecutorEngine.java:132)     ... 95 more Caused by: com.dangdang.ddframe.rdb.sharding.exception.ShardingJdbcException: java.sql.SQLException: Error     at com.dangdang.ddframe.rdb.sharding.executor.ExecutorExceptionHandler.handleException(ExecutorExceptionHandler.java:61)     at com.dangdang.ddframe.rdb.sharding.executor.PreparedStatementExecutor.executeInternal(PreparedStatementExecutor.java:188)     at com.dangdang.ddframe.rdb.sharding.executor.PreparedStatementExecutor.access$200(PreparedStatementExecutor.java:46)     at com.dangdang.ddframe.rdb.sharding.executor.PreparedStatementExecutor$4.execute(PreparedStatementExecutor.java:170)     at com.dangdang.ddframe.rdb.sharding.executor.PreparedStatementExecutor$4.execute(PreparedStatementExecutor.java:166)     at com.dangdang.ddframe.rdb.sharding.executor.ExecutorEngine$1.call(ExecutorEngine.java:109)     at com.google.common.util.concurrent.TrustedListenableFutureTask$TrustedFutureInterruptibleTask.runInterruptibly(TrustedListenableFutureTask.java:108)     at com.google.common.util.concurrent.InterruptibleTask.run(InterruptibleTask.java:41)     at com.google.common.util.concurrent.TrustedListenableFutureTask.run(TrustedListenableFutureTask.java:77)     ... 3 more Caused by: java.sql.SQLException: Error     at com.alibaba.druid.pool.DruidDataSource.handleConnectionException(DruidDataSource.java:1193)     at com.alibaba.druid.pool.DruidPooledConnection.handleException(DruidPooledConnection.java:127)     at com.alibaba.druid.pool.DruidPooledStatement.checkException(DruidPooledStatement.java:68)     at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:495)     at com.dangdang.ddframe.rdb.sharding.executor.PreparedStatementExecutor.executeInternal(PreparedStatementExecutor.java:185)     ... 10 more Caused by: java.lang.NullPointerException     at com.alibaba.druid.support.profile.Profiler.release(Profiler.java:58)     at com.alibaba.druid.filter.stat.StatFilter.statement_executeErrorAfter(StatFilter.java:501)     at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:450)     at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)     at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:118)     at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)     ... 11 more [27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE support.XmlWebApplicationContext: Publishing event in WebApplicationContext for namespace 'springServlet-servlet': ServletRequestHandledEvent: url=[/dubbo-monitor/services/statistics]; client=[127.0.0.1]; method=[GET]; servlet=[springServlet]; session=[0CD0C26C26FBC7F192F21A645B3F58B2]; user=[admin]; time=[4806ms]; status=[failed: org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.PersistenceException:  ### Error querying database.  Cause: com.dangdang.ddframe.rdb.sharding.exception.ShardingJdbcException: java.util.concurrent.ExecutionException: com.dangdang.ddframe.rdb.sharding.exception.ShardingJdbcException: java.sql.SQLException: Error ### The error may exist in file [D:\workspace.metadata.plugins\org.eclipse.wst.server.core\tmp9\wtpwebapps\dubbo-monitor\WEB-INF\classes\mappers\DubboInvokeMapper.xml] ### The error may involve com.handu.open.dubbo.monitor.DubboMonitorService.countDubboInvokeInfo-Inline ### The error occurred while setting parameters ### SQL: SELECT             SUM(success) as success,             SUM(failure) as failure,             SUM(elapsed) as elapsed,             MAX(max_elapsed) as maxElapsed,             MIN(max_concurrent) as maxConcurrent         FROM dubbo_invoke         WHERE             1 = 1                                                     AND invoke_time &gt;= ?                                 AND invoke_time &lt;= ?                                 AND service = ?                                 AND method = ?                                                      AND type = ? ### Cause: com.dangdang.ddframe.rdb.sharding.exception.ShardingJdbcException: java.util.concurrent.ExecutionException: com.dangdang.ddframe.rdb.sharding.exception.ShardingJdbcException: java.sql.SQLException: Error]  [27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE support.AnnotationConfigWebApplicationContext: Publishing event in Root WebApplicationContext: ServletRequestHandledEvent: url=[/dubbo-monitor/services/statistics]; client=[127.0.0.1]; method=[GET]; servlet=[springServlet]; session=[0CD0C26C26FBC7F192F21A645B3F58B2]; user=[admin]; time=[4806ms]; status=[failed: org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.PersistenceException:  ### Error querying database.  Cause: com.dangdang.ddframe.rdb.sharding.exception.ShardingJdbcException: java.util.concurrent.ExecutionException: com.dangdang.ddframe.rdb.sharding.exception.ShardingJdbcException: java.sql.SQLException: Error ### The error may exist in file [D:\workspace.metadata.plugins\org.eclipse.wst.server.core\tmp9\wtpwebapps\dubbo-monitor\WEB-INF\classes\mappers\DubboInvokeMapper.xml] ### The error may involve com.handu.open.dubbo.monitor.DubboMonitorService.countDubboInvokeInfo-Inline ### The error occurred while setting parameters ### SQL: SELECT             SUM(success) as success,             SUM(failure) as failure,             SUM(elapsed) as elapsed,             MAX(max_elapsed) as maxElapsed,             MIN(max_concurrent) as maxConcurrent         FROM dubbo_invoke         WHERE             1 = 1                                                     AND invoke_time &gt;= ?                                 AND invoke_time &lt;= ?                                 AND service = ?                                 AND method = ?                                                      AND type = ? ### Cause: com.dangdang.ddframe.rdb.sharding.exception.ShardingJdbcException: java.util.concurrent.ExecutionException: com.dangdang.ddframe.rdb.sharding.exception.ShardingJdbcException: java.sql.SQLException: Error]  [27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 DEBUG context.SecurityContextPersistenceFilter: SecurityContextHolder now cleared, as request processing completed [27/10/16 10:57:14:014 CST] DubboServerHandler-172.16.3.47:7070-thread-200 DEBUG transport.DecodeHandler:  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.8.4, current host: 172.16.3.47 [27/10/16 10:57:14:014 CST] DubboServerHandler-172.16.3.47:7070-thread-200  INFO monitor.DubboMonitorService:  [DUBBO] collect statistics: count://172.16.0.179/com.talk51.modules.courseNew.ImportDataService/checkRedisDate?application=course-consumer&amp;concurrent=0&amp;elapsed=0&amp;failure=0&amp;input=0&amp;interface=com.talk51.modules.courseNew.ImportDataService&amp;max.concurrent=0&amp;max.elapsed=0&amp;max.input=0&amp;max.output=0&amp;method=checkRedisDate&amp;output=0&amp;provider=172.16.0.179:20887&amp;success=0&amp;timestamp=1477536710132, dubbo version: 2.8.4, current host: 172.16.3.47 [27/10/16 10:57:14:014 CST] DubboServerHandler-172.16.3.47:7070-thread-200 TRACE codec.ExchangeCodec:  [DUBBO] the resulting byte size of encoding is 17, dubbo version: 2.8.4, current host: 172.16.3.47 [27/10/16 10:57:14:014 CST] DubboMonitorAsyncWriteLogThread  INFO idgen.IdWorker: worker starting. timestamp left shift 22, datacenter id bits 5, worker id bits 5, sequence bits 12, workerid 1   &lt;!--- @huboard:{"custom_state":"archived"} --&gt; </body>
		<created>2016-10-27 02:32:55</created>
		<closed>2016-11-01 03:50:37</closed>
	</bug>
	<bug>
		<id>152</id>
		<title>可能同一个connection多线程导致问题</title>
		<body>我在使用指定表分片后 ，使用非分片字段查询多次经常会线程这个问题   java.lang.ArrayIndexOutOfBoundsException: 1     at java.util.concurrent.CopyOnWriteArrayList.get(CopyOnWriteArrayList.java:368) ~[na:1.7.0_71]     at java.util.concurrent.CopyOnWriteArrayList.get(CopyOnWriteArrayList.java:377) ~[na:1.7.0_71]     at com.alibaba.druid.filter.FilterChainImpl.nextFilter(FilterChainImpl.java:405) ~[druid-1.0.9.jar:1.0.9]     at com.alibaba.druid.filter.FilterChainImpl.connection_getAutoCommit(FilterChainImpl.java:282) ~[druid-1.0.9.jar:1.0.9]     at com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl.getAutoCommit(ConnectionProxyImpl.java:212) ~[druid-1.0.9.jar:1.0.9]     at com.alibaba.druid.pool.DruidPooledConnection.transactionRecord(DruidPooledConnection.java:689) ~[druid-1.0.9.jar:1.0.9]     at com.alibaba.druid.pool.DruidPooledStatement.transactionRecord(DruidPooledStatement.java:131) ~[druid-1.0.9.jar:1.0.9]     at com.alibaba.druid.pool.DruidPooledPreparedStatement.executeQuery(DruidPooledPreparedStatement.java:221) ~[druid-1.0.9.jar:1.0.9]     at com.dangdang.ddframe.rdb.sharding.executor.PreparedStatementExecutor.executeQueryInternal(PreparedStatementExecutor.java:86) ~[sharding-jdbc-core-1.3.2.jar:na]     at com.dangdang.ddframe.rdb.sharding.executor.PreparedStatementExecutor.access$000(PreparedStatementExecutor.java:46) ~[sharding-jdbc-core-1.3.2.jar:na]     at com.dangdang.ddframe.rdb.sharding.executor.PreparedStatementExecutor$1.execute(PreparedStatementExecutor.java:71) ~[sharding-jdbc-core-1.3.2.jar:na]     at com.dangdang.ddframe.rdb.sharding.executor.PreparedStatementExecutor$1.execute(PreparedStatementExecutor.java:67) ~[sharding-jdbc-core-1.3.2.jar:na]     at com.dangdang.ddframe.rdb.sharding.executor.ExecutorEngine$1.call(ExecutorEngine.java:109) ~[sharding-jdbc-core-1.3.2.jar:na]     at java.util.concurrent.FutureTask.run(FutureTask.java:262) ~[na:1.7.0_71]     at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145) [na:1.7.0_71]     at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615) [na:1.7.0_71]     at java.lang.Thread.run(Thread.java:745) [na:1.7.0_71]  查询druid后发现是 druid中  FilterChainImpl类方法   ``` @Override public boolean connection_getAutoCommit(ConnectionProxy connection) throws SQLException {     if (this.pos &lt; filterSize) {         return nextFilter().connection_getAutoCommit(this, connection);     }      return connection.getRawObject().getAutoCommit(); } ```  引起的 一个 越界错误，感觉可能是因为多线程使用同一个连接导致的多线程访问导致的问题  &lt;!--- @huboard:{"custom_state":"archived"} --&gt; </body>
		<created>2016-10-12 03:59:50</created>
		<closed>2016-10-26 01:07:11</closed>
	</bug>
	<bug>
		<id>150</id>
		<title>与最新SQLserver jdbc驱动兼容问题</title>
		<body> public String getDatabaseProductName() throws SQLServerException {         this.checkClosed();         return "Microsoft SQL Server";     }  新驱动的PN是这个，导致不能转换shardingDataSource  &lt;!--- @huboard:{"custom_state":"archived"} --&gt; </body>
		<created>2016-09-30 04:49:55</created>
		<closed>2016-10-26 02:59:31</closed>
	</bug>
	<bug>
		<id>149</id>
		<title>INSERT IGNORE INTO时如果数据重了忽略时返回的成-1了，应该返回0</title>
		<body>发生版本：1.3.2 之前的1.3.1还是正确的0  &lt;!--- @huboard:{"custom_state":"archived"} --&gt; </body>
		<created>2016-09-28 10:08:17</created>
		<closed>2016-09-29 01:25:01</closed>
	</bug>
	<bug>
		<id>141</id>
		<title>多线程执行器参数设置无效</title>
		<body>多线程执行器的参数设置没有达到应有的效果 </body>
		<created>2016-09-01 08:27:17</created>
		<closed>2016-09-01 08:40:01</closed>
	</bug>
	<bug>
		<id>137</id>
		<title>读写分离情况下offset值不正常</title>
		<body>com.dangdang.ddframe.rdb.sharding.parser.visitor.basic.mysql.MySQLSelectVisitor public boolean visit(com.alibaba.druid.sql.dialect.mysql.ast.statement.MySqlSelectQueryBlock.Limit x) 方法中。  假设查询为select \* from user limit 10 offset 10   ，sql 解析完结果为  select \* from user limit 20,0 查询结果为0条记录  具体见下面代码的注释， 请问这样写是何用意？  ```  public boolean visit(final MySqlSelectQueryBlock.Limit x) {         print("LIMIT ");         int offset = 0;         if (null != x.getOffset()) {             if (x.getOffset() instanceof SQLNumericLiteralExpr) {                 offset = ((SQLNumericLiteralExpr) x.getOffset()).getNumber().intValue();                 print("0, ");             } else {                 offset = ((Number) getParameters().get(((SQLVariantRefExpr) x.getOffset()).getIndex())).intValue();                 getParameters().set(((SQLVariantRefExpr) x.getOffset()).getIndex(), 0); // 该行将offset 设置为0                 print("?, ");             }         }         int rowCount;         if (x.getRowCount() instanceof SQLNumericLiteralExpr) {             rowCount = ((SQLNumericLiteralExpr) x.getRowCount()).getNumber().intValue();             print(rowCount + offset);         } else {             rowCount = ((Number) getParameters().get(((SQLVariantRefExpr) x.getRowCount()).getIndex())).intValue();             getParameters().set(((SQLVariantRefExpr) x.getRowCount()).getIndex(), rowCount + offset);  //该行将rowcount 设置为 10 + 10 即20             print("?");         }         getParseContext().getParsedResult().getMergeContext().setLimit(new Limit(offset, rowCount));         return false;     } ``` </body>
		<created>2016-08-24 06:17:33</created>
		<closed>2016-08-25 02:03:40</closed>
	</bug>
	<bug>
		<id>134</id>
		<title>柔性事务中ShardingPreparedStatement多次调用executeUpdate()问题</title>
		<body>在1.3.1版本中，因柔性事务要autoCommit，所以对于批量插入时，只能使用类似如下的方式提交：  ``` transaction.begin(conn); for(User u : userList){   pstm.setString(1, u.getName());   pstm.setInt(2, u.getCode());   hintManager.addDatabaseShardingValue("test", "user_id", u.getUserId);     pstm.executeUpdate();   pstm.clearParameters(); } transaction.end(); ```  在ShardingPreparedStatement#executeUpdate()中  ``` @Override     public int executeUpdate() throws SQLException {         hasExecuted = true;         return new PreparedStatementExecutor(getShardingConnection().getShardingContext().getExecutorEngine(), getRoutedPreparedStatements()).executeUpdate();     } ```  其中 `getRoutedPreparedStatements()`会因为`hasExecuted = true;`反复使用相同的cachedRoutedPreparedStatements，导致插入的值都相同且在同一分片中  &lt;!--- @huboard:{"custom_state":"archived"} --&gt; </body>
		<created>2016-08-16 09:52:56</created>
		<closed>2016-10-20 06:23:48</closed>
	</bug>
	<bug>
		<id>124</id>
		<title>一个查询时的小bug，没深入分析是否会影响结果</title>
		<body>Bug修复建议： com.dangdang.ddframe.rdb.sharding.jdbc.adapter.AbstractStatementAdapter中的重写的getUpdateCount方法     @Override     public final int getUpdateCount() throws SQLException {         int result = 0;         for (Statement each : getRoutedStatements()) {             result += each.getUpdateCount();         }         return result;     } 应该修改为     @Override     public final int getUpdateCount() throws SQLException {         int result = -1;         for (Statement each : getRoutedStatements()) {             if(each.getUpdateCount() == -1){                 continue;             }             result += each.getUpdateCount();         }         return result;     }  Bug说明： 测试时，发现当多表查询时，每个表中都没有结果时 1、each.getUpdateCount()会返回-1。若多个查询statement均没有结果时，result += each.getUpdateCount()返回-4（2库，表水平分2），此时，会调用org.apache.ibatis.logging.jdbc.ResultSetLogger的invoke(Object proxy, Method method, Object[] params)方法，将resultSet设置为close  2、在org.apache.ibatis.executor.resultset.DefaultResultSetHandler中代码逻辑中，若获取到的getUpdateCount不是-1，会继续返回resultSet，然后继续调用getMetaData if (stmt.getConnection().getMetaData().supportsMultipleResultSets()) {         // Crazy Standard JDBC way of determining if there are more results         if (!((!stmt.getMoreResults()) &amp;&amp; (stmt.getUpdateCount() == -1))) {           ResultSet rs = stmt.getResultSet();           return rs != null ? new ResultSetWrapper(rs, configuration) : null;         } }  3、此时org.apache.ibatis.logging.jdbc.ResultSetLogger的invoke(Object proxy, Method method, Object[] params)方法,proxy=resultSet{close=true}，method=getMetaData，导致异常，异常信息：java.sql.SQLException: Operation not allowed after ResultSet closed  org.apache.ibatis.logging.jdbc.ResultSetLogger相关代码如下 public Object invoke(Object proxy, Method method, Object[] params) throws Throwable {     try {       if (Object.class.equals(method.getDeclaringClass())) {         return method.invoke(this, params);       }         Object o = method.invoke(rs, params);       if ("next".equals(method.getName())) {         if (((Boolean) o)) {           rows++;           if (isTraceEnabled()) {             ResultSetMetaData rsmd = rs.getMetaData();             final int columnCount = rsmd.getColumnCount();             if (first) {               first = false;               printColumnHeaders(rsmd, columnCount);             }             printColumnValues(columnCount);           }         } else {           debug("     Total: " + rows, false);         }       }       clearColumnInfo();       return o;     } catch (Throwable t) {       throw ExceptionUtil.unwrapThrowable(t);     }   } </body>
		<created>2016-07-18 16:03:06</created>
		<closed>2016-07-25 08:51:21</closed>
	</bug>
	<bug>
		<id>122</id>
		<title>柔性事务中autocommit问题及fail重试问题</title>
		<body>我查看到代码  ``` AbstractSoftTransaction#beginInternal中 previousAutoCommit = connection.getAutoCommit(); connection.setAutoCommit(true); ```  这里的设置为自动提交模式是什么意思? 我查看过SoftTransactionTest#bedSoftTransactionTest 这里的conn对象为实际执行业务语句的对象,这里反而设置为自动提交模式,不就是让业务代码自动提交了.那业务中的事务回滚如何处理?  同时,在best事务实现中,以下代码:  ```                         conn = bedSoftTransaction.getConnection().getConnection(event.getDataSource(), SQLStatementType.SELECT);                         if (!isValidConnection(conn)) {                             conn = bedSoftTransaction.getConnection();                             isNewConnection = true;                         } ```  这里本意是新开连接, 如何体现出来? 由于 ShardingConnection#connectionMap对象的存在,这里将conn回到shardconn并不会导致连接被重建 按照sql标准来说,如果原连接本身不可用(如网络中断),则应该直接中断事务,而不是重试.因为原来的连接中执行的代码本身就被破坏了.  &lt;!--- @huboard:{"custom_state":"archived"} --&gt; </body>
		<created>2016-07-17 06:53:54</created>
		<closed>2016-10-20 04:00:13</closed>
	</bug>
	<bug>
		<id>118</id>
		<title>同一个线程内读写分离问题</title>
		<body>同一个方法内同时有读写操作时 如果读操作在前 方法内的所有读写操作都会走从库 如果写操作在前 之后的所有读写操作都走主库   &lt;!--- @huboard:{"custom_state":"archived"} --&gt; </body>
		<created>2016-07-02 02:19:10</created>
		<closed>2016-10-18 06:40:48</closed>
	</bug>
	<bug>
		<id>114</id>
		<title>PreparedStatement executeBatch  Java heap space</title>
		<body>``` private void initDBConnection(){             try {         conn.setAutoCommit(false);                   StringBuffer sb = new StringBuffer();         sb.append(" insert into t_mv_owner_x(videoid,kugouid,userid,deleteTime,deleteStatus,selfdirect,");         sb.append(" relation)");                         sb.append(" values(?,?,?,?,?,?,?)");         pres = conn.prepareStatement(sb.toString());                 } catch (SQLException e1) {         log.error("init 3006 DB exception:",e1);     } }   private void batchInsert(List&lt;MvOwner&gt; Owners) throws SQLException{     for (MvOwner vo : Owners) {         pres.setLong(1, vo.getVideoid());         pres.setLong(2, vo.getKugouid());         pres.setLong(3, vo.getUserid());         pres.setInt(4, vo.getDeleteTime());         pres.setInt(5, vo.getDeleteStatus());         pres.setInt(6, vo.getSelfdirect());         pres.setInt(7, vo.getSelfdirect());         pres.addBatch();     }     pres.executeBatch();     conn.commit();     pres.clearBatch();     Owners.clear(); }        TableRule ownerRule = TableRule.builder("t_mv_owner_x").actualTables(Arrays.asList("t_mv_owner_0", "t_mv_owner_1")).dataSourceRule(dataSourceRule).build();     ShardingRule shardingRule = ShardingRule.builder().dataSourceRule(dataSourceRule).tableRules(Arrays.asList(ownerRule))             .bindingTableRules(Collections.singletonList(new BindingTableRule(Arrays.asList(ownerRule))))             .tableShardingStrategy(new TableShardingStrategy("videoid", new SingleKeyModuloTableShardingAlgorithm())).build();     return new ShardingDataSource(shardingRule); ``` </body>
		<created>2016-06-28 06:58:14</created>
		<closed>2016-07-06 09:59:37</closed>
	</bug>
	<bug>
		<id>113</id>
		<title>TransactionLogStorage类中的processData方法注释好像不正确</title>
		<body>1.3.1代码中的注释：  /**      \* 增加事务日志异步重试次数.      *      \* @param connection 业务数据库连接      \* @param transactionLog 事务日志      \* @param maxDeliveryTryTimes 事务送达的最大尝试次数      */     boolean processData(Connection connection, TransactionLog transactionLog, int maxDeliveryTryTimes); </body>
		<created>2016-06-27 09:51:34</created>
		<closed>2016-07-11 15:39:29</closed>
	</bug>
	<bug>
		<id>106</id>
		<title>PreparedStatement预编译一次，多次set值多次executeUpdate数据相同</title>
		<body>DataSource dataSource = getShardingDataSource();         String sql = "insert ignore into t_user(login_code,user_name,age,telephone,address) values(?,?,?,?,?)";         try (             Connection conn = dataSource.getConnection();             PreparedStatement **ps = conn.prepareStatement(sql);**){             List&lt;User&gt; userList = getUserList(20);             for(User user:userList){                 ps.setString(1, user.getLoginCode());                 ps.setString(2, user.getUserName());                 ps.setInt(3, user.getAge());                 ps.setString(4, user.getTelephone());                 ps.setString(5, user.getAddress());                 **ps.executeUpdate();**             }             ps.close();             conn.close();         } </body>
		<created>2016-06-18 12:18:08</created>
		<closed>2016-06-24 00:58:35</closed>
	</bug>
	<bug>
		<id>90</id>
		<title>运行 sharding-jdbc-example-mybatis 代码示例出错</title>
		<body>运行 sharding-jdbc-example-mybatis 代码示例出错  Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'orderTableRule' defined in class path resource [META-INF/shardingContext.xml]: Unsatisfied dependency expressed through constructor argument with index 1 of type [boolean]: Could not convert constructor argument value of type [java.util.ArrayList] to required type [boolean]: Failed to convert value of type 'java.util.ArrayList' to required type 'boolean'; nested exception is java.lang.IllegalArgumentException: Cannot convert value of type [java.util.ArrayList] to required type [boolean]: PropertyEditor [org.springframework.beans.propertyeditors.CustomBooleanEditor] returned inappropriate value of type [java.util.ArrayList] </body>
		<created>2016-06-01 08:18:07</created>
		<closed>2016-06-02 02:21:36</closed>
	</bug>
	<bug>
		<id>89</id>
		<title>读写分离和分片的hint一起使用导致冲突问题</title>
		<body>由于使用一个HintManager，导致读写分离和分片一起使用时相互影响，目前已通过标记的方式隔离，API未做改动。 </body>
		<created>2016-06-01 08:07:31</created>
		<closed>2016-06-01 09:15:48</closed>
	</bug>
	<bug>
		<id>81</id>
		<title>关联表查询使用or查询条件解析结果异常</title>
		<body></body>
		<created>2016-05-24 12:51:11</created>
		<closed>2016-05-24 12:53:47</closed>
	</bug>
	<bug>
		<id>75</id>
		<title>MemoryTransactionLogStorage重试次数更新并发问题</title>
		<body>代码 com.dangdang.ddframe.rdb.transaction.soft.storage.impl.MemoryTransactionLogStorage  方法中：     @Override     public void increaseAsyncDeliveryTryTimes(final String id) {         if (DATA.containsKey(id)) {             TransactionLog transactionLog = DATA.get(id);             transactionLog.setAsyncDeliveryTryTimes(transactionLog.getAsyncDeliveryTryTimes() + 1);             DATA.put(id, transactionLog);         }     }  getAsyncDeliveryTryTimes是否应该在TransactionLog 的asyncDeliveryTryTimes 加个volatile关键字，现在这种场合下，并发时，是否会有问题。 </body>
		<created>2016-05-19 02:27:18</created>
		<closed>2016-05-20 11:44:32</closed>
	</bug>
	<bug>
		<id>71</id>
		<title>对于只路由到一个分区导致LIMIT错误的问题</title>
		<body>如果路由到一个分区，且LIMIT的offset不为0使，Sharding-JDBC计算偏移量错误。原因是对于路由单分片没有计算LIMIT </body>
		<created>2016-05-13 13:09:09</created>
		<closed>2016-05-13 13:20:27</closed>
	</bug>
	<bug>
		<id>69</id>
		<title>配置内存性柔性事务失效</title>
		<body></body>
		<created>2016-05-11 10:12:30</created>
		<closed>2016-05-11 10:21:45</closed>
	</bug>
	<bug>
		<id>67</id>
		<title>分片路由到多表时柔性事务日志无法删除</title>
		<body></body>
		<created>2016-05-11 01:33:29</created>
		<closed>2016-05-11 03:14:09</closed>
	</bug>
	<bug>
		<id>63</id>
		<title>ORDER BY与GROUP BY衍生列未添加表名或表别名</title>
		<body>1. order by 生成的补充列不带所有表的别名    bug现象  ``` sql select ... order_id AS sharding_gen_1 from order a order by a.order_id ```  应该为  ``` sql select ... a.order_id AS sharding_gen_1 from order a order by a.order_id ``` 1. group by 生成补充列时没有判断查询投射中是否已经存在了该列    bug现象  ``` sql select a.order_id, order_id AS sharding_gen_1 from order a group by a.order_id ```  应该为  ``` sql select a.order_id  from order a order by a.order_id ``` </body>
		<created>2016-05-06 09:37:30</created>
		<closed>2016-05-06 09:44:09</closed>
	</bug>
	<bug>
		<id>59</id>
		<title>向含有text字段类型的分表中插入数据时失败</title>
		<body> # **MyBatis+MySQL，向含有text字段类型的分表中插入数据数据时失败，异常信息如下：** Caused by: java.sql.SQLException: Invalid argument value: java.io.NotSerializableException at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:998) at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:937) at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:926) at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:872) at com.mysql.jdbc.PreparedStatement.setSerializableObject(PreparedStatement.java:3887) at com.mysql.jdbc.PreparedStatement.setObject(PreparedStatement.java:3603) at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_setObject(FilterChainImpl.java:2923) at com.alibaba.druid.filter.FilterAdapter.preparedStatement_setObject(FilterAdapter.java:1298) at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_setObject(FilterChainImpl.java:2920) at com.alibaba.druid.filter.FilterAdapter.preparedStatement_setObject(FilterAdapter.java:1298) at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_setObject(FilterChainImpl.java:2920) at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.setObject(PreparedStatementProxyImpl.java:411) at com.alibaba.druid.pool.DruidPooledPreparedStatement.setObject(DruidPooledPreparedStatement.java:476) at com.dangdang.ddframe.rdb.sharding.jdbc.ShardingPreparedStatement.setParameters(ShardingPreparedStatement.java:188) at com.dangdang.ddframe.rdb.sharding.jdbc.ShardingPreparedStatement.routeSQL(ShardingPreparedStatement.java:163) at com.dangdang.ddframe.rdb.sharding.jdbc.ShardingPreparedStatement.routeIfNeed(ShardingPreparedStatement.java:151) at com.dangdang.ddframe.rdb.sharding.jdbc.ShardingPreparedStatement.getRoutedPreparedStatements(ShardingPreparedStatement.java:138) at com.dangdang.ddframe.rdb.sharding.jdbc.ShardingPreparedStatement.execute(ShardingPreparedStatement.java:107)  Caused by: java.io.NotSerializableException: java.io.StringReader at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1184) at java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:348) at com.mysql.jdbc.PreparedStatement.setSerializableObject(PreparedStatement.java:3876)  &lt;!--- @huboard:{"custom_state":"archived"} --&gt; </body>
		<created>2016-05-06 01:01:29</created>
		<closed>2016-10-18 02:31:07</closed>
	</bug>
	<bug>
		<id>54</id>
		<title>SQL解析模块，并未解析o.id=i.id的场景</title>
		<body></body>
		<created>2016-04-29 09:40:09</created>
		<closed>2016-05-03 03:38:30</closed>
	</bug>
	<bug>
		<id>48</id>
		<title>yaml文件读取之后未关闭</title>
		<body></body>
		<created>2016-04-06 08:54:30</created>
		<closed>2016-04-06 08:56:27</closed>
	</bug>
	<bug>
		<id>43</id>
		<title>yaml文件中包含中文，且操作系统模式不是utf-8编码导致的yaml不能解析</title>
		<body>之前使用的是FileReader读取yaml文件，导致使用操作系统的字符集。 应修正为统一使用utf-8字符集。 </body>
		<created>2016-03-29 06:56:11</created>
		<closed>2016-03-29 06:59:58</closed>
	</bug>
	<bug>
		<id>38</id>
		<title>JPA与Sharding-JDBC的兼容问题。JPA会自动增加SELECT的列别名，导致ORDER BY只能通过别名，而非列名称获取ResultSet的数据。</title>
		<body></body>
		<created>2016-03-25 12:51:08</created>
		<closed>2016-03-25 12:51:51</closed>
	</bug>
	<bug>
		<id>36</id>
		<title>ShardingPreparedStatement.execute()方法中缓存语句cachedRoutedPreparedStatements未更新导致的问题</title>
		<body> String sql = "insert into user_info_shard(id,user_no,user_name) values(?,?,?)";             try {                     Connection conn = shardingDS.getConnection();                     PreparedStatement pstmt = conn.prepareStatement(sql);  ```                 for (int i = 1; i &lt;= 10000; i++) {                     pstmt.setInt(1, i);                     pstmt.setString(2, UUID.randomUUID().toString().replace("-", ""));                     pstmt.setString(3,"ZHANG"+i);                      pstmt.execute();                 }           } catch(Exception ex) {             ex.printStackTrace();         } ```  单库、分表测试，只有一张逻辑表。 测试代码如上，该测试代码只有第一条记录插入成功，第二条记录插入时就出异常（主键冲突），原因是ShardingPreparedStatement的参数重新设置以后，cachedRoutedPreparedStatements未更新。 </body>
		<created>2016-03-21 11:50:29</created>
		<closed>2016-07-06 09:59:37</closed>
	</bug>
	<bug>
		<id>33</id>
		<title>limit 支持问题</title>
		<body>不支持 limit 1 offset 10   不支持 limit 100 , -1 </body>
		<created>2016-03-17 09:22:14</created>
		<closed>2016-07-12 10:48:56</closed>
	</bug>
	<bug>
		<id>26</id>
		<title>如果实际表只有一张，那么应该部调用分片算法直接路由到这张表上</title>
		<body></body>
		<created>2016-03-04 10:18:16</created>
		<closed>2016-03-14 10:14:50</closed>
	</bug>
	<bug>
		<id>25</id>
		<title>OR表达式下会出现重复结果问题</title>
		<body>假设有两个分表：tb0, tb1； 按照id字段取模。现在有where查询条件 id = 0 or id = 2，则导致在分表tb0上执行两次这样的条件查询，出现重复结果： &lt;0,2&gt;, &lt;0, 2&gt; </body>
		<created>2016-03-02 07:28:57</created>
		<closed>2016-03-14 10:09:41</closed>
	</bug>
	<bug>
		<id>19</id>
		<title>sum和avg函数，不加别名不执行merger，加了空指针异常</title>
		<body>AccumulationAggregationUnit和AvgAggregationUnit类的doMerger函数的入参在查询结果为空的时候，为null，需要加非空判断 </body>
		<created>2016-02-26 07:16:44</created>
		<closed>2016-03-03 12:02:57</closed>
	</bug>
	<bug>
		<id>18</id>
		<title>查询Count时，使用getObject()取数会报异常</title>
		<body>**现象：** SQL： `select count(*) as cnt from tbl;`  如果我使用 `ResultSet.getLong()` 或 `getInt()`都可以。 但是如果我使用 `getObject()`，就会报异常： `ShardingJdbcException("Unsupported data type:%s", convertType)`  **原因：** `s-jdbc`在聚合`Merge`时，会根据调用方法的返回值来转换`merge`的结果，当调用`getObject()`取`Number`类型结果时，就需要将`Number`转为`Object`了，现在`s-jdbc`直接报不支持的类型。  **修改方法：** 对于返回类型为`Object`时，直接将`Number`值返回。  代码位置： `com/dangdang/ddframe/rdb/sharding/merger/common/ResultSetUtil.java` `convertNumberValue`方法： 我给增加了  ``` case "java.lang.Object":               return value; ```  在我本地测试没有问题了。 </body>
		<created>2016-02-25 17:54:41</created>
		<closed>2016-02-26 10:40:49</closed>
	</bug>
	<bug>
		<id>11</id>
		<title>count函数在某些情况下返回不正确</title>
		<body>参考示例代码里的场景，求t_order的count总数：  使用mybatis，分成3个库，每个库里分2张表，每个表里插入2条记录，正确的count值应该是12  ``` sql     &lt;select id="queryCount" resultType="int"&gt;         select count(*) from t_order     &lt;/select&gt; ```  仅返回一个int型整数，返回的数值，仅为某条子查询的count值，没有累加，下面是输出的日志：  ``` 15:00:28,341 &lt;com.dangdang.ddframe.rdb.sharding.parser.SQLParserFactory&gt; DEBUG [main]: Logic SQL: select count(0) from t_order 15:00:28,391 &lt;com.dangdang.ddframe.rdb.sharding.parser.SQLParserFactory&gt; TRACE [main]: Get com.alibaba.druid.sql.ast.statement.SQLSelectStatement SQL Statement 15:00:28,783 &lt;com.dangdang.ddframe.rdb.sharding.parser.visitor.VisitorLogProxy&gt; TRACE [main]:   1 visit node: class com.alibaba.druid.sql.ast.statement.SQLSelectStatement 15:00:28,822 &lt;com.dangdang.ddframe.rdb.sharding.parser.visitor.VisitorLogProxy&gt; TRACE [main]:   1 visit argument: SELECT COUNT(0) FROM t_order 15:00:28,822 &lt;com.dangdang.ddframe.rdb.sharding.parser.visitor.VisitorLogProxy&gt; TRACE [main]:   1   2 visit node: class com.alibaba.druid.sql.ast.statement.SQLSelect 15:00:28,823 &lt;com.dangdang.ddframe.rdb.sharding.parser.visitor.VisitorLogProxy&gt; TRACE [main]:   1   2 visit argument: com.alibaba.druid.sql.ast.statement.SQLSelect@1d60737e 15:00:28,823 &lt;com.dangdang.ddframe.rdb.sharding.parser.visitor.VisitorLogProxy&gt; TRACE [main]:   1   2   3 visit node: class com.alibaba.druid.sql.dialect.mysql.ast.statement.MySqlSelectQueryBlock 15:00:28,823 &lt;com.dangdang.ddframe.rdb.sharding.parser.visitor.VisitorLogProxy&gt; TRACE [main]:   1   2   3 visit argument: com.alibaba.druid.sql.dialect.mysql.ast.statement.MySqlSelectQueryBlock@c7242101 15:00:28,856 &lt;com.dangdang.ddframe.rdb.sharding.parser.visitor.VisitorLogProxy&gt; TRACE [main]:   1   2   3   4 visit node: class com.alibaba.druid.sql.ast.statement.SQLSelectItem 15:00:28,856 &lt;com.dangdang.ddframe.rdb.sharding.parser.visitor.VisitorLogProxy&gt; TRACE [main]:   1   2   3   4 visit argument: com.alibaba.druid.sql.ast.expr.SQLAggregateExpr@640d1fb2 15:00:28,856 &lt;com.dangdang.ddframe.rdb.sharding.parser.visitor.VisitorLogProxy&gt; TRACE [main]:   1   2   3   4   5 visit node: class com.alibaba.druid.sql.ast.expr.SQLAggregateExpr 15:00:28,856 &lt;com.dangdang.ddframe.rdb.sharding.parser.visitor.VisitorLogProxy&gt; TRACE [main]:   1   2   3   4   5 visit argument: com.alibaba.druid.sql.ast.expr.SQLAggregateExpr@640d1fb2 15:00:28,858 &lt;com.dangdang.ddframe.rdb.sharding.parser.visitor.VisitorLogProxy&gt; TRACE [main]:   1   2   3   4   5   6 visit node: class com.alibaba.druid.sql.ast.expr.SQLIntegerExpr 15:00:28,859 &lt;com.dangdang.ddframe.rdb.sharding.parser.visitor.VisitorLogProxy&gt; TRACE [main]:   1   2   3   4   5   6 visit argument: 0 15:00:28,859 &lt;com.dangdang.ddframe.rdb.sharding.parser.visitor.VisitorLogProxy&gt; TRACE [main]:   1   2   3   4   5   6 endVisit node: class com.alibaba.druid.sql.ast.expr.SQLIntegerExpr 15:00:28,859 &lt;com.dangdang.ddframe.rdb.sharding.parser.visitor.VisitorLogProxy&gt; TRACE [main]:   1   2   3   4   5   6 endVisit result: SQLParsedResult(routeContext=RouteContext(tables=[Table(name=t_order, alias=Optional.absent())], sqlBuilder=null), conditionContexts=[], mergeContext=MergeContext(orderByColumns=[], groupByColumns=[], aggregationColumns=[AggregationColumn(expression=COUNT(0), aggregationType=COUNT, alias=Optional.absent(), option=Optional.absent(), derivedColumns=[], index=1)], limit=null)) 15:00:28,860 &lt;com.dangdang.ddframe.rdb.sharding.parser.visitor.VisitorLogProxy&gt; TRACE [main]:   1   2   3   4   5   6 endVisit condition: ConditionContext(conditions={}) 15:00:28,860 &lt;com.dangdang.ddframe.rdb.sharding.parser.visitor.VisitorLogProxy&gt; TRACE [main]:   1   2   3   4   5   6 endVisit SQL: SELECT COUNT(0 15:00:28,879 &lt;com.dangdang.ddframe.rdb.sharding.parser.visitor.VisitorLogProxy&gt; TRACE [main]:   1   2   3   4   5 endVisit node: class com.alibaba.druid.sql.ast.expr.SQLAggregateExpr 15:00:28,879 &lt;com.dangdang.ddframe.rdb.sharding.parser.visitor.VisitorLogProxy&gt; TRACE [main]:   1   2   3   4   5 endVisit result: SQLParsedResult(routeContext=RouteContext(tables=[Table(name=t_order, alias=Optional.absent())], sqlBuilder=null), conditionContexts=[], mergeContext=MergeContext(orderByColumns=[], groupByColumns=[], aggregationColumns=[AggregationColumn(expression=COUNT(0), aggregationType=COUNT, alias=Optional.absent(), option=Optional.absent(), derivedColumns=[], index=1)], limit=null)) 15:00:28,879 &lt;com.dangdang.ddframe.rdb.sharding.parser.visitor.VisitorLogProxy&gt; TRACE [main]:   1   2   3   4   5 endVisit condition: ConditionContext(conditions={}) 15:00:28,879 &lt;com.dangdang.ddframe.rdb.sharding.parser.visitor.VisitorLogProxy&gt; TRACE [main]:   1   2   3   4   5 endVisit SQL: SELECT COUNT(0) 15:00:28,879 &lt;com.dangdang.ddframe.rdb.sharding.parser.visitor.VisitorLogProxy&gt; TRACE [main]:   1   2   3   4 endVisit node: class com.alibaba.druid.sql.ast.statement.SQLSelectItem 15:00:28,879 &lt;com.dangdang.ddframe.rdb.sharding.parser.visitor.VisitorLogProxy&gt; TRACE [main]:   1   2   3   4 endVisit result: SQLParsedResult(routeContext=RouteContext(tables=[Table(name=t_order, alias=Optional.absent())], sqlBuilder=null), conditionContexts=[], mergeContext=MergeContext(orderByColumns=[], groupByColumns=[], aggregationColumns=[AggregationColumn(expression=COUNT(0), aggregationType=COUNT, alias=Optional.absent(), option=Optional.absent(), derivedColumns=[], index=1)], limit=null)) 15:00:28,879 &lt;com.dangdang.ddframe.rdb.sharding.parser.visitor.VisitorLogProxy&gt; TRACE [main]:   1   2   3   4 endVisit condition: ConditionContext(conditions={}) 15:00:28,879 &lt;com.dangdang.ddframe.rdb.sharding.parser.visitor.VisitorLogProxy&gt; TRACE [main]:   1   2   3   4 endVisit SQL: SELECT COUNT(0) 15:00:28,882 &lt;com.dangdang.ddframe.rdb.sharding.parser.visitor.VisitorLogProxy&gt; TRACE [main]:   1   2   3 endVisit node: class com.alibaba.druid.sql.dialect.mysql.ast.statement.MySqlSelectQueryBlock 15:00:28,882 &lt;com.dangdang.ddframe.rdb.sharding.parser.visitor.VisitorLogProxy&gt; TRACE [main]:   1   2   3 endVisit result: SQLParsedResult(routeContext=RouteContext(tables=[Table(name=t_order, alias=Optional.absent())], sqlBuilder=null), conditionContexts=[], mergeContext=MergeContext(orderByColumns=[], groupByColumns=[], aggregationColumns=[AggregationColumn(expression=COUNT(0), aggregationType=COUNT, alias=Optional.absent(), option=Optional.absent(), derivedColumns=[], index=1)], limit=null)) 15:00:28,882 &lt;com.dangdang.ddframe.rdb.sharding.parser.visitor.VisitorLogProxy&gt; TRACE [main]:   1   2   3 endVisit condition: ConditionContext(conditions={}) 15:00:28,885 &lt;com.dangdang.ddframe.rdb.sharding.parser.visitor.VisitorLogProxy&gt; TRACE [main]:   1   2   3 endVisit SQL: SELECT COUNT(0) FROM [Token(t_order)] 15:00:28,885 &lt;com.dangdang.ddframe.rdb.sharding.parser.visitor.VisitorLogProxy&gt; TRACE [main]:   1   2 endVisit node: class com.alibaba.druid.sql.ast.statement.SQLSelect 15:00:28,885 &lt;com.dangdang.ddframe.rdb.sharding.parser.visitor.VisitorLogProxy&gt; TRACE [main]:   1   2 endVisit result: SQLParsedResult(routeContext=RouteContext(tables=[Table(name=t_order, alias=Optional.absent())], sqlBuilder=null), conditionContexts=[], mergeContext=MergeContext(orderByColumns=[], groupByColumns=[], aggregationColumns=[AggregationColumn(expression=COUNT(0), aggregationType=COUNT, alias=Optional.absent(), option=Optional.absent(), derivedColumns=[], index=1)], limit=null)) 15:00:28,885 &lt;com.dangdang.ddframe.rdb.sharding.parser.visitor.VisitorLogProxy&gt; TRACE [main]:   1   2 endVisit condition: ConditionContext(conditions={}) 15:00:28,885 &lt;com.dangdang.ddframe.rdb.sharding.parser.visitor.VisitorLogProxy&gt; TRACE [main]:   1   2 endVisit SQL: SELECT COUNT(0) FROM [Token(t_order)] 15:00:28,886 &lt;com.dangdang.ddframe.rdb.sharding.parser.visitor.VisitorLogProxy&gt; TRACE [main]:   1 endVisit node: class com.alibaba.druid.sql.ast.statement.SQLSelectStatement 15:00:28,886 &lt;com.dangdang.ddframe.rdb.sharding.parser.visitor.VisitorLogProxy&gt; TRACE [main]:   1 endVisit result: SQLParsedResult(routeContext=RouteContext(tables=[Table(name=t_order, alias=Optional.absent())], sqlBuilder=null), conditionContexts=[], mergeContext=MergeContext(orderByColumns=[], groupByColumns=[], aggregationColumns=[AggregationColumn(expression=COUNT(0), aggregationType=COUNT, alias=Optional.absent(), option=Optional.absent(), derivedColumns=[], index=1)], limit=null)) 15:00:28,886 &lt;com.dangdang.ddframe.rdb.sharding.parser.visitor.VisitorLogProxy&gt; TRACE [main]:   1 endVisit condition: ConditionContext(conditions={}) 15:00:28,886 &lt;com.dangdang.ddframe.rdb.sharding.parser.visitor.VisitorLogProxy&gt; TRACE [main]:   1 endVisit SQL: SELECT COUNT(0) FROM [Token(t_order)] 15:00:28,886 &lt;com.dangdang.ddframe.rdb.sharding.parser.SQLParseEngine&gt; DEBUG [main]: Parsed SQL result: SQLParsedResult(routeContext=RouteContext(tables=[Table(name=t_order, alias=Optional.absent())], sqlBuilder=null), conditionContexts=[ConditionContext(conditions={})], mergeContext=MergeContext(orderByColumns=[], groupByColumns=[], aggregationColumns=[AggregationColumn(expression=COUNT(0), aggregationType=COUNT, alias=Optional.absent(), option=Optional.absent(), derivedColumns=[], index=1)], limit=null)) 15:00:28,886 &lt;com.dangdang.ddframe.rdb.sharding.parser.SQLParseEngine&gt; DEBUG [main]: Parsed SQL: SELECT COUNT(0) FROM [Token(t_order)] 15:00:28,904 &lt;com.dangdang.ddframe.rdb.sharding.router.single.SingleTableRouter&gt; TRACE [main]: Before database sharding t_order routes db names: [ds_0, ds_1, ds_2] sharding columns: [user_id] sharding values: [] 15:00:28,904 &lt;com.dangdang.ddframe.rdb.sharding.router.single.SingleTableRouter&gt; TRACE [main]: After database sharding t_order result: [ds_2, ds_1, ds_0] 15:00:28,904 &lt;com.dangdang.ddframe.rdb.sharding.router.single.SingleTableRouter&gt; TRACE [main]: Before table sharding t_order routes db names: [DataNode(dataSourceName=ds_0, tableName=t_order_0), DataNode(dataSourceName=ds_1, tableName=t_order_0), DataNode(dataSourceName=ds_2, tableName=t_order_0), DataNode(dataSourceName=ds_0, tableName=t_order_1), DataNode(dataSourceName=ds_1, tableName=t_order_1), DataNode(dataSourceName=ds_2, tableName=t_order_1)] sharding columns: [order_id] sharding values: [] 15:00:28,904 &lt;com.dangdang.ddframe.rdb.sharding.router.single.SingleTableRouter&gt; TRACE [main]: After table sharding t_order result: [t_order_0, t_order_1] 15:00:28,907 &lt;com.dangdang.ddframe.rdb.sharding.router.SQLExecutionUnit&gt; DEBUG [main]: route sql to db: [ds_0] sql: [SELECT COUNT(0) FROM t_order_0] 15:00:28,907 &lt;com.dangdang.ddframe.rdb.sharding.router.SQLExecutionUnit&gt; DEBUG [main]: route sql to db: [ds_0] sql: [SELECT COUNT(0) FROM t_order_1] 15:00:28,907 &lt;com.dangdang.ddframe.rdb.sharding.router.SQLExecutionUnit&gt; DEBUG [main]: route sql to db: [ds_1] sql: [SELECT COUNT(0) FROM t_order_0] 15:00:28,907 &lt;com.dangdang.ddframe.rdb.sharding.router.SQLExecutionUnit&gt; DEBUG [main]: route sql to db: [ds_1] sql: [SELECT COUNT(0) FROM t_order_1] 15:00:28,907 &lt;com.dangdang.ddframe.rdb.sharding.router.SQLExecutionUnit&gt; DEBUG [main]: route sql to db: [ds_2] sql: [SELECT COUNT(0) FROM t_order_0] 15:00:28,907 &lt;com.dangdang.ddframe.rdb.sharding.router.SQLExecutionUnit&gt; DEBUG [main]: route sql to db: [ds_2] sql: [SELECT COUNT(0) FROM t_order_1] 15:00:29,084 &lt;com.dangdang.ddframe.rdb.sharding.executor.ExecutorEngine&gt; TRACE [main]: Concurrent execute result success [true, true, true, true, true, true] 15:00:29,088 &lt;com.dangdang.ddframe.rdb.sharding.merger.ResultSetFactory&gt; TRACE [main]: Get 'Aggregate' result set Feb 22, 2016 3:00:29 PM org.springframework.context.support.ClassPathXmlApplicationContext doClose INFO: Closing org.springframework.context.support.ClassPathXmlApplicationContext@3d82c5f3: startup date [Mon Feb 22 15:00:24 CST 2016]; root of context hierarchy count =&gt; 2 ***这是我输出的结果 ```  但是，如果改成  ``` sql     &lt;select id="queryCount" resultType="int"&gt;         select count(*) order_count from t_order     &lt;/select&gt; ```  写成这样，即：加一个字段别名后，返回结果是正确的，会把各分库、分表子查询的count值累加返回，输出日志如下：  ``` 15:03:49,055 &lt;com.dangdang.ddframe.rdb.sharding.parser.SQLParserFactory&gt; DEBUG [main]: Logic SQL: select count(0) order_count from t_order 15:03:49,105 &lt;com.dangdang.ddframe.rdb.sharding.parser.SQLParserFactory&gt; TRACE [main]: Get com.alibaba.druid.sql.ast.statement.SQLSelectStatement SQL Statement 15:03:49,505 &lt;com.dangdang.ddframe.rdb.sharding.parser.visitor.VisitorLogProxy&gt; TRACE [main]:   1 visit node: class com.alibaba.druid.sql.ast.statement.SQLSelectStatement 15:03:49,540 &lt;com.dangdang.ddframe.rdb.sharding.parser.visitor.VisitorLogProxy&gt; TRACE [main]:   1 visit argument: SELECT COUNT(0) AS order_count FROM t_order 15:03:49,540 &lt;com.dangdang.ddframe.rdb.sharding.parser.visitor.VisitorLogProxy&gt; TRACE [main]:   1   2 visit node: class com.alibaba.druid.sql.ast.statement.SQLSelect 15:03:49,540 &lt;com.dangdang.ddframe.rdb.sharding.parser.visitor.VisitorLogProxy&gt; TRACE [main]:   1   2 visit argument: com.alibaba.druid.sql.ast.statement.SQLSelect@1d60737e 15:03:49,540 &lt;com.dangdang.ddframe.rdb.sharding.parser.visitor.VisitorLogProxy&gt; TRACE [main]:   1   2   3 visit node: class com.alibaba.druid.sql.dialect.mysql.ast.statement.MySqlSelectQueryBlock 15:03:49,540 &lt;com.dangdang.ddframe.rdb.sharding.parser.visitor.VisitorLogProxy&gt; TRACE [main]:   1   2   3 visit argument: com.alibaba.druid.sql.dialect.mysql.ast.statement.MySqlSelectQueryBlock@c7242101 15:03:49,572 &lt;com.dangdang.ddframe.rdb.sharding.parser.visitor.VisitorLogProxy&gt; TRACE [main]:   1   2   3   4 visit node: class com.alibaba.druid.sql.ast.statement.SQLSelectItem 15:03:49,572 &lt;com.dangdang.ddframe.rdb.sharding.parser.visitor.VisitorLogProxy&gt; TRACE [main]:   1   2   3   4 visit argument: com.alibaba.druid.sql.ast.expr.SQLAggregateExpr@640d1fb2 AS order_count 15:03:49,572 &lt;com.dangdang.ddframe.rdb.sharding.parser.visitor.VisitorLogProxy&gt; TRACE [main]:   1   2   3   4   5 visit node: class com.alibaba.druid.sql.ast.expr.SQLAggregateExpr 15:03:49,572 &lt;com.dangdang.ddframe.rdb.sharding.parser.visitor.VisitorLogProxy&gt; TRACE [main]:   1   2   3   4   5 visit argument: com.alibaba.druid.sql.ast.expr.SQLAggregateExpr@640d1fb2 15:03:49,574 &lt;com.dangdang.ddframe.rdb.sharding.parser.visitor.VisitorLogProxy&gt; TRACE [main]:   1   2   3   4   5   6 visit node: class com.alibaba.druid.sql.ast.expr.SQLIntegerExpr 15:03:49,574 &lt;com.dangdang.ddframe.rdb.sharding.parser.visitor.VisitorLogProxy&gt; TRACE [main]:   1   2   3   4   5   6 visit argument: 0 15:03:49,574 &lt;com.dangdang.ddframe.rdb.sharding.parser.visitor.VisitorLogProxy&gt; TRACE [main]:   1   2   3   4   5   6 endVisit node: class com.alibaba.druid.sql.ast.expr.SQLIntegerExpr 15:03:49,574 &lt;com.dangdang.ddframe.rdb.sharding.parser.visitor.VisitorLogProxy&gt; TRACE [main]:   1   2   3   4   5   6 endVisit result: SQLParsedResult(routeContext=RouteContext(tables=[Table(name=t_order, alias=Optional.absent())], sqlBuilder=null), conditionContexts=[], mergeContext=MergeContext(orderByColumns=[], groupByColumns=[], aggregationColumns=[AggregationColumn(expression=COUNT(0), aggregationType=COUNT, alias=Optional.of(order_count), option=Optional.absent(), derivedColumns=[], index=1)], limit=null)) 15:03:49,575 &lt;com.dangdang.ddframe.rdb.sharding.parser.visitor.VisitorLogProxy&gt; TRACE [main]:   1   2   3   4   5   6 endVisit condition: ConditionContext(conditions={}) 15:03:49,575 &lt;com.dangdang.ddframe.rdb.sharding.parser.visitor.VisitorLogProxy&gt; TRACE [main]:   1   2   3   4   5   6 endVisit SQL: SELECT COUNT(0 15:03:49,604 &lt;com.dangdang.ddframe.rdb.sharding.parser.visitor.VisitorLogProxy&gt; TRACE [main]:   1   2   3   4   5 endVisit node: class com.alibaba.druid.sql.ast.expr.SQLAggregateExpr 15:03:49,604 &lt;com.dangdang.ddframe.rdb.sharding.parser.visitor.VisitorLogProxy&gt; TRACE [main]:   1   2   3   4   5 endVisit result: SQLParsedResult(routeContext=RouteContext(tables=[Table(name=t_order, alias=Optional.absent())], sqlBuilder=null), conditionContexts=[], mergeContext=MergeContext(orderByColumns=[], groupByColumns=[], aggregationColumns=[AggregationColumn(expression=COUNT(0), aggregationType=COUNT, alias=Optional.of(order_count), option=Optional.absent(), derivedColumns=[], index=1)], limit=null)) 15:03:49,604 &lt;com.dangdang.ddframe.rdb.sharding.parser.visitor.VisitorLogProxy&gt; TRACE [main]:   1   2   3   4   5 endVisit condition: ConditionContext(conditions={}) 15:03:49,604 &lt;com.dangdang.ddframe.rdb.sharding.parser.visitor.VisitorLogProxy&gt; TRACE [main]:   1   2   3   4   5 endVisit SQL: SELECT COUNT(0) 15:03:49,605 &lt;com.dangdang.ddframe.rdb.sharding.parser.visitor.VisitorLogProxy&gt; TRACE [main]:   1   2   3   4 endVisit node: class com.alibaba.druid.sql.ast.statement.SQLSelectItem 15:03:49,605 &lt;com.dangdang.ddframe.rdb.sharding.parser.visitor.VisitorLogProxy&gt; TRACE [main]:   1   2   3   4 endVisit result: SQLParsedResult(routeContext=RouteContext(tables=[Table(name=t_order, alias=Optional.absent())], sqlBuilder=null), conditionContexts=[], mergeContext=MergeContext(orderByColumns=[], groupByColumns=[], aggregationColumns=[AggregationColumn(expression=COUNT(0), aggregationType=COUNT, alias=Optional.of(order_count), option=Optional.absent(), derivedColumns=[], index=1)], limit=null)) 15:03:49,605 &lt;com.dangdang.ddframe.rdb.sharding.parser.visitor.VisitorLogProxy&gt; TRACE [main]:   1   2   3   4 endVisit condition: ConditionContext(conditions={}) 15:03:49,605 &lt;com.dangdang.ddframe.rdb.sharding.parser.visitor.VisitorLogProxy&gt; TRACE [main]:   1   2   3   4 endVisit SQL: SELECT COUNT(0) AS order_count 15:03:49,606 &lt;com.dangdang.ddframe.rdb.sharding.parser.visitor.VisitorLogProxy&gt; TRACE [main]:   1   2   3 endVisit node: class com.alibaba.druid.sql.dialect.mysql.ast.statement.MySqlSelectQueryBlock 15:03:49,606 &lt;com.dangdang.ddframe.rdb.sharding.parser.visitor.VisitorLogProxy&gt; TRACE [main]:   1   2   3 endVisit result: SQLParsedResult(routeContext=RouteContext(tables=[Table(name=t_order, alias=Optional.absent())], sqlBuilder=null), conditionContexts=[], mergeContext=MergeContext(orderByColumns=[], groupByColumns=[], aggregationColumns=[AggregationColumn(expression=COUNT(0), aggregationType=COUNT, alias=Optional.of(order_count), option=Optional.absent(), derivedColumns=[], index=1)], limit=null)) 15:03:49,606 &lt;com.dangdang.ddframe.rdb.sharding.parser.visitor.VisitorLogProxy&gt; TRACE [main]:   1   2   3 endVisit condition: ConditionContext(conditions={}) 15:03:49,609 &lt;com.dangdang.ddframe.rdb.sharding.parser.visitor.VisitorLogProxy&gt; TRACE [main]:   1   2   3 endVisit SQL: SELECT COUNT(0) AS order_count FROM [Token(t_order)] 15:03:49,609 &lt;com.dangdang.ddframe.rdb.sharding.parser.visitor.VisitorLogProxy&gt; TRACE [main]:   1   2 endVisit node: class com.alibaba.druid.sql.ast.statement.SQLSelect 15:03:49,609 &lt;com.dangdang.ddframe.rdb.sharding.parser.visitor.VisitorLogProxy&gt; TRACE [main]:   1   2 endVisit result: SQLParsedResult(routeContext=RouteContext(tables=[Table(name=t_order, alias=Optional.absent())], sqlBuilder=null), conditionContexts=[], mergeContext=MergeContext(orderByColumns=[], groupByColumns=[], aggregationColumns=[AggregationColumn(expression=COUNT(0), aggregationType=COUNT, alias=Optional.of(order_count), option=Optional.absent(), derivedColumns=[], index=1)], limit=null)) 15:03:49,609 &lt;com.dangdang.ddframe.rdb.sharding.parser.visitor.VisitorLogProxy&gt; TRACE [main]:   1   2 endVisit condition: ConditionContext(conditions={}) 15:03:49,610 &lt;com.dangdang.ddframe.rdb.sharding.parser.visitor.VisitorLogProxy&gt; TRACE [main]:   1   2 endVisit SQL: SELECT COUNT(0) AS order_count FROM [Token(t_order)] 15:03:49,610 &lt;com.dangdang.ddframe.rdb.sharding.parser.visitor.VisitorLogProxy&gt; TRACE [main]:   1 endVisit node: class com.alibaba.druid.sql.ast.statement.SQLSelectStatement 15:03:49,610 &lt;com.dangdang.ddframe.rdb.sharding.parser.visitor.VisitorLogProxy&gt; TRACE [main]:   1 endVisit result: SQLParsedResult(routeContext=RouteContext(tables=[Table(name=t_order, alias=Optional.absent())], sqlBuilder=null), conditionContexts=[], mergeContext=MergeContext(orderByColumns=[], groupByColumns=[], aggregationColumns=[AggregationColumn(expression=COUNT(0), aggregationType=COUNT, alias=Optional.of(order_count), option=Optional.absent(), derivedColumns=[], index=1)], limit=null)) 15:03:49,610 &lt;com.dangdang.ddframe.rdb.sharding.parser.visitor.VisitorLogProxy&gt; TRACE [main]:   1 endVisit condition: ConditionContext(conditions={}) 15:03:49,610 &lt;com.dangdang.ddframe.rdb.sharding.parser.visitor.VisitorLogProxy&gt; TRACE [main]:   1 endVisit SQL: SELECT COUNT(0) AS order_count FROM [Token(t_order)] 15:03:49,611 &lt;com.dangdang.ddframe.rdb.sharding.parser.SQLParseEngine&gt; DEBUG [main]: Parsed SQL result: SQLParsedResult(routeContext=RouteContext(tables=[Table(name=t_order, alias=Optional.absent())], sqlBuilder=null), conditionContexts=[ConditionContext(conditions={})], mergeContext=MergeContext(orderByColumns=[], groupByColumns=[], aggregationColumns=[AggregationColumn(expression=COUNT(0), aggregationType=COUNT, alias=Optional.of(order_count), option=Optional.absent(), derivedColumns=[], index=1)], limit=null)) 15:03:49,611 &lt;com.dangdang.ddframe.rdb.sharding.parser.SQLParseEngine&gt; DEBUG [main]: Parsed SQL: SELECT COUNT(0) AS order_count FROM [Token(t_order)] 15:03:49,637 &lt;com.dangdang.ddframe.rdb.sharding.router.single.SingleTableRouter&gt; TRACE [main]: Before database sharding t_order routes db names: [ds_0, ds_1, ds_2] sharding columns: [user_id] sharding values: [] 15:03:49,638 &lt;com.dangdang.ddframe.rdb.sharding.router.single.SingleTableRouter&gt; TRACE [main]: After database sharding t_order result: [ds_2, ds_1, ds_0] 15:03:49,638 &lt;com.dangdang.ddframe.rdb.sharding.router.single.SingleTableRouter&gt; TRACE [main]: Before table sharding t_order routes db names: [DataNode(dataSourceName=ds_0, tableName=t_order_0), DataNode(dataSourceName=ds_1, tableName=t_order_0), DataNode(dataSourceName=ds_2, tableName=t_order_0), DataNode(dataSourceName=ds_0, tableName=t_order_1), DataNode(dataSourceName=ds_1, tableName=t_order_1), DataNode(dataSourceName=ds_2, tableName=t_order_1)] sharding columns: [order_id] sharding values: [] 15:03:49,638 &lt;com.dangdang.ddframe.rdb.sharding.router.single.SingleTableRouter&gt; TRACE [main]: After table sharding t_order result: [t_order_0, t_order_1] 15:03:49,641 &lt;com.dangdang.ddframe.rdb.sharding.router.SQLExecutionUnit&gt; DEBUG [main]: route sql to db: [ds_0] sql: [SELECT COUNT(0) AS order_count FROM t_order_0] 15:03:49,641 &lt;com.dangdang.ddframe.rdb.sharding.router.SQLExecutionUnit&gt; DEBUG [main]: route sql to db: [ds_0] sql: [SELECT COUNT(0) AS order_count FROM t_order_1] 15:03:49,641 &lt;com.dangdang.ddframe.rdb.sharding.router.SQLExecutionUnit&gt; DEBUG [main]: route sql to db: [ds_1] sql: [SELECT COUNT(0) AS order_count FROM t_order_0] 15:03:49,641 &lt;com.dangdang.ddframe.rdb.sharding.router.SQLExecutionUnit&gt; DEBUG [main]: route sql to db: [ds_1] sql: [SELECT COUNT(0) AS order_count FROM t_order_1] 15:03:49,642 &lt;com.dangdang.ddframe.rdb.sharding.router.SQLExecutionUnit&gt; DEBUG [main]: route sql to db: [ds_2] sql: [SELECT COUNT(0) AS order_count FROM t_order_0] 15:03:49,642 &lt;com.dangdang.ddframe.rdb.sharding.router.SQLExecutionUnit&gt; DEBUG [main]: route sql to db: [ds_2] sql: [SELECT COUNT(0) AS order_count FROM t_order_1] 15:03:49,774 &lt;com.dangdang.ddframe.rdb.sharding.executor.ExecutorEngine&gt; TRACE [main]: Concurrent execute result success [true, true, true, true, true, true] 15:03:49,779 &lt;com.dangdang.ddframe.rdb.sharding.merger.ResultSetFactory&gt; TRACE [main]: Get 'Aggregate' result set 15:03:49,826 &lt;com.dangdang.ddframe.rdb.sharding.merger.aggregation.AccumulationAggregationUnit&gt; TRACE [main]: Accumulation result: 2 15:03:49,826 &lt;com.dangdang.ddframe.rdb.sharding.merger.aggregation.AccumulationAggregationUnit&gt; TRACE [main]: Accumulation result: 4 15:03:49,827 &lt;com.dangdang.ddframe.rdb.sharding.merger.aggregation.AccumulationAggregationUnit&gt; TRACE [main]: Accumulation result: 6 15:03:49,827 &lt;com.dangdang.ddframe.rdb.sharding.merger.aggregation.AccumulationAggregationUnit&gt; TRACE [main]: Accumulation result: 8 15:03:49,827 &lt;com.dangdang.ddframe.rdb.sharding.merger.aggregation.AccumulationAggregationUnit&gt; TRACE [main]: Accumulation result: 10 15:03:49,827 &lt;com.dangdang.ddframe.rdb.sharding.merger.aggregation.AccumulationAggregationUnit&gt; TRACE [main]: Accumulation result: 12 Feb 22, 2016 3:03:49 PM org.springframework.context.support.ClassPathXmlApplicationContext doClose INFO: Closing org.springframework.context.support.ClassPathXmlApplicationContext@3d82c5f3: startup date [Mon Feb 22 15:03:45 CST 2016]; root of context hierarchy count =&gt; 12 *** 这次就对了 ```  各位大大，有空看下，谢谢！ </body>
		<created>2016-02-19 16:14:42</created>
		<closed>2016-02-26 10:40:49</closed>
	</bug>
	<bug>
		<id>3</id>
		<title>你们的parent pom没有提交到maven仓库。</title>
		<body>&lt;groupId&gt;com.dangdang&lt;/groupId&gt; &lt;artifactId&gt;sharding-jdbc&lt;/artifactId&gt; &lt;version&gt;1.0.0&lt;/version&gt; </body>
		<created>2016-01-30 05:01:46</created>
		<closed>2016-02-01 02:40:08</closed>
	</bug>
</bugs>
