<?xml version="1.0" encoding="ISO-8859-1"?>

<bugs>
	<bug>
		<id>3030</id>
		<title>DockerManager confuses exposed/bind ports</title>
		<body></body>
		<created>2020-07-23 12:18:43</created>
		<closed>2020-07-23 15:35:55</closed>
	</bug>
	<bug>
		<id>3028</id>
		<title>Cannot create undertow endpoint from war deployment</title>
		<body>A camel deployment can only access the undertow subsystem when it is a WAR deployment, otherwise the deployment is not processed by undertow DUPs and hence access to server/host not available.  There may however be the case where we don't want to deploy a war based servlet endpoint, but instead use camel-undertow to create that endpoint. This currently leads to infinite recursion when done from a ServletContextListener.</body>
		<created>2020-07-14 07:15:04</created>
		<closed>2020-07-14 09:23:50</closed>
	</bug>
	<bug>
		<id>2996</id>
		<title>Failed to define class ZipSecureFile in Module org.apache.poi</title>
		<body>``` 14:50:11 [INFO] Running org.wildfly.camel.test.jcr.JcrIntegrationTest ... 14:50:17 08:50:17,579 WARN  [org.jboss.modules.define] (pool-623-thread-1) Failed to define class org.apache.poi.openxml4j.util.ZipSecureFile in Module "org.apache.poi" from local module loader @2b6faea6 (finder: local module finder @778d1062 (roots: /mnt/hudson_workspace/workspace/wildfly-camel-pullreq/itests/standalone/basic/target/wildfly-20.0.0.Final/modules,/mnt/hudson_workspace/workspace/wildfly-camel-pullreq/itests/standalone/basic/target/wildfly-20.0.0.Final/modules/system/layers/fuse,/mnt/hudson_workspace/workspace/wildfly-camel-pullreq/itests/standalone/basic/target/wildfly-20.0.0.Final/modules/system/layers/base)): java.lang.NoClassDefFoundError: Failed to link org/apache/poi/openxml4j/util/ZipSecureFile (Module "org.apache.poi" from local module loader @2b6faea6 (finder: local module finder @778d1062 (roots: /mnt/hudson_workspace/workspace/wildfly-camel-pullreq/itests/standalone/basic/target/wildfly-20.0.0.Final/modules,/mnt/hudson_workspace/workspace/wildfly-camel-pullreq/itests/standalone/basic/target/wildfly-20.0.0.Final/modules/system/layers/fuse,/mnt/hudson_workspace/workspace/wildfly-camel-pullreq/itests/standalone/basic/target/wildfly-20.0.0.Final/modules/system/layers/base))): org/apache/commons/compress/archivers/zip/ZipFile 14:50:17 at java.lang.ClassLoader.defineClass1(Native Method) 14:50:17 at java.lang.ClassLoader.defineClass(ClassLoader.java:763) 14:50:17 at org.jboss.modules.ModuleClassLoader.doDefineOrLoadClass(ModuleClassLoader.java:423) 14:50:17 at org.jboss.modules.ModuleClassLoader.defineClass(ModuleClassLoader.java:555) 14:50:17 at org.jboss.modules.ModuleClassLoader.loadClassLocal(ModuleClassLoader.java:339) 14:50:17 at org.jboss.modules.ModuleClassLoader$1.loadClassLocal(ModuleClassLoader.java:126) 14:50:17 at org.jboss.modules.Module.loadModuleClass(Module.java:731) 14:50:17 at org.jboss.modules.ModuleClassLoader.findClass(ModuleClassLoader.java:247) 14:50:17 at org.jboss.modules.ConcurrentClassLoader.performLoadClassUnchecked(ConcurrentClassLoader.java:410) 14:50:17 at org.jboss.modules.ConcurrentClassLoader.performLoadClass(ConcurrentClassLoader.java:398) 14:50:17 at org.jboss.modules.ConcurrentClassLoader.loadClass(ConcurrentClassLoader.java:116) 14:50:17 at org.apache.tika.parser.microsoft.ooxml.OOXMLParser.&lt;clinit&gt;(OOXMLParser.java:41) ```</body>
		<created>2020-07-06 12:52:25</created>
		<closed>2020-07-06 13:28:23</closed>
	</bug>
	<bug>
		<id>2985</id>
		<title>Cannot deploy test war to docker</title>
		<body>``` Caused by: java.io.EOFException: XNIO000812: Connection closed unexpectedly at org.xnio.http.HttpUpgrade$HttpUpgradeState$UpgradeResultListener.handleEvent(HttpUpgrade.java:416) at org.xnio.http.HttpUpgrade$HttpUpgradeState$UpgradeResultListener.handleEvent(HttpUpgrade.java:400) at org.xnio.ChannelListeners.invokeChannelListener(ChannelListeners.java:92) at org.xnio.conduits.ReadReadyHandler$ChannelListenerHandler.readReady(ReadReadyHandler.java:66) at org.xnio.nio.NioSocketConduit.handleReady(NioSocketConduit.java:89) at org.xnio.nio.WorkerThread.run(WorkerThread.java:591) at ...asynchronous invocation...(Unknown Source) at org.jboss.remoting3.EndpointImpl.connect(EndpointImpl.java:599) at org.jboss.remoting3.EndpointImpl.connect(EndpointImpl.java:561) at org.jboss.remoting3.EndpointImpl.connect(EndpointImpl.java:549) at org.jboss.as.protocol.ProtocolConnectionUtils.connect(ProtocolConnectionUtils.java:209) at org.jboss.as.protocol.ProtocolConnectionUtils.connectSync(ProtocolConnectionUtils.java:121) ... 103 more [ERROR] Tests run: 1, Failures: 0, Errors: 1, Skipped: 0, Time elapsed: 8.408 s &lt;&lt;&lt; FAILURE! - in org.wildfly.camel.test.docker.CXFEndpointTest [ERROR] org.wildfly.camel.test.docker.CXFEndpointTest  Time elapsed: 8.407 s  &lt;&lt;&lt; ERROR! org.jboss.arquillian.container.spi.client.container.DeploymentException: Cannot deploy: cxf-ws-consumer.war Caused by: java.io.IOException: JBREM000202: Abrupt close on Remoting connection 04c4515b to localhost/127.0.0.1:9990 of endpoint "management-client" &lt;56681eaf&gt; ```</body>
		<created>2020-06-25 08:36:30</created>
		<closed>2020-07-09 06:43:47</closed>
	</bug>
	<bug>
		<id>2981</id>
		<title>Camel defines version of snakeyaml incompatible with arquillian-docker</title>
		<body>All docker tests fail with ...  ``` [INFO] Running org.wildfly.camel.test.lra.LRAIntegrationTest Jun 23, 2020 8:07:00 AM org.arquillian.cube.docker.impl.client.CubeDockerConfigurationResolver resolveSystemDefaultSetup INFO: Connected to docker (docker-desktop) using default settings version: 19.03.8 kernel: 4.19.76-linuxkit Jun 23, 2020 8:07:00 AM org.arquillian.spacelift.Spacelift$SpaceliftInstance &lt;init&gt; INFO: Initialized Spacelift from defaults, workspace: /Users/tdiesler/git/wildfly-camel/itests/standalone/docker, cache: /Users/tdiesler/.spacelift/cache Jun 23, 2020 8:07:02 AM org.arquillian.cube.docker.impl.client.CubeDockerConfigurationResolver resolveSystemDefaultSetup INFO: Connected to docker (docker-desktop) using default settings version: 19.03.8 kernel: 4.19.76-linuxkit [ERROR] Tests run: 1, Failures: 0, Errors: 1, Skipped: 0, Time elapsed: 4.162 s &lt;&lt;&lt; FAILURE! - in org.wildfly.camel.test.lra.LRAIntegrationTest [ERROR] org.wildfly.camel.test.lra.LRAIntegrationTest  Time elapsed: 4.161 s  &lt;&lt;&lt; ERROR! java.lang.RuntimeException: Could not create new instance of class org.jboss.arquillian.test.impl.EventTestRunnerAdaptor Caused by: java.lang.reflect.InvocationTargetException Caused by: java.lang.NoSuchMethodError: org.arquillian.cube.docker.impl.util.ConfigUtil$CubeConstructor.constructScalar(Lorg/yaml/snakeyaml/nodes/ScalarNode;)Ljava/lang/Object;  ```</body>
		<created>2020-06-23 06:10:35</created>
		<closed>2020-06-23 07:44:15</closed>
	</bug>
	<bug>
		<id>2973</id>
		<title>Salesforce uses property that is no longer generated</title>
		<body></body>
		<created>2020-06-15 10:30:36</created>
		<closed>2020-06-15 11:15:13</closed>
	</bug>
	<bug>
		<id>2972</id>
		<title>WildFly-Camel 11.1.0 release is missing in Docker Hub</title>
		<body>The tag 11.1.0 is missing in the Docker Hub registry.  Also in the documentation (available at https://wildfly-extras.github.io/wildfly-camel/) it's written that the project is available at:  https://registry.hub.docker.com/u/wildflyext/wildfly-camel  but searching for it on Docker Hub the project is available at:  https://hub.docker.com/r/wildflyext/wildfly-camel or https://registry.hub.docker.com/r/wildflyext/wildfly-camel</body>
		<created>2020-06-12 18:45:15</created>
		<closed>2020-07-09 08:34:12</closed>
	</bug>
	<bug>
		<id>2966</id>
		<title>MasterIntegrationTest failure prevents all further testing</title>
		<body>``` 16:09:38,256 WARN  [org.wildfly.camel.test.master.MasterIntegrationTest] (pool-384-thread-3) : org.apache.camel.FailedToCreateRouteException: Failed to create route route-2: Route(route-2)[From[master:ns:timer:test?delay=1s&amp;period=1s]... because of Failed to resolve endpoint: master://ns:timer:test?delay=1s&amp;period=1s due to: Failed to resolve endpoint: timer://test?delay=1s&amp;period=1s due to: Error binding property (delay=1s) with name: delay on bean: timer://test?delay=1s&amp;period=1s with value: 1s at org.apache.camel.reifier.RouteReifier.createRoute(RouteReifier.java:123) at org.apache.camel.impl.DefaultCamelContext.startRouteDefinitions(DefaultCamelContext.java:374) at org.apache.camel.impl.DefaultCamelContext.startRouteDefinitions(DefaultCamelContext.java:348) at org.apache.camel.impl.engine.AbstractCamelContext.doInit(AbstractCamelContext.java:2617) at org.apache.camel.support.service.BaseService.init(BaseService.java:83) at org.apache.camel.impl.engine.AbstractCamelContext.init(AbstractCamelContext.java:2450) at org.apache.camel.support.service.BaseService.start(BaseService.java:111) at org.apache.camel.impl.engine.AbstractCamelContext.start(AbstractCamelContext.java:2467) at org.wildfly.camel.test.master.MasterIntegrationTest.run(MasterIntegrationTest.java:105) at org.wildfly.camel.test.master.MasterIntegrationTest.lambda$test$0(MasterIntegrationTest.java:63) ```</body>
		<created>2020-06-04 14:21:48</created>
		<closed>2020-07-03 14:34:35</closed>
	</bug>
	<bug>
		<id>2960</id>
		<title>The geolocation service requires a mandatory geolocationAccessKey</title>
		<body>``` 14:54:26 08:54:26,269 SEVERE [org.jboss.arquillian.protocol.jmx.JMXTestRunner] (pool-9-thread-1) Failed: org.wildfly.camel.test.weather.WeatherIntegrationTest.testGetWeatherFromGeoIpLocation: org.apache.camel.FailedToCreateProducerException: Failed to create Producer for endpoint: weather://foo?appid=[*******]&amp;geolocationAccessKey=[*******]&amp;geolocationRequestHostIP=redhat.com. Reason: java.lang.IllegalStateException: The geolocation service requires a mandatory geolocationAccessKey 14:54:26 at org.apache.camel.impl.engine.DefaultProducerCache.acquireProducer(DefaultProducerCache.java:150) 14:54:26 at org.apache.camel.impl.engine.DefaultProducerCache.send(DefaultProducerCache.java:166) 14:54:26 at org.apache.camel.impl.engine.DefaultProducerTemplate.send(DefaultProducerTemplate.java:176) 14:54:26 at org.apache.camel.impl.engine.DefaultProducerTemplate.send(DefaultProducerTemplate.java:172) 14:54:26 at org.apache.camel.impl.engine.DefaultProducerTemplate.requestBody(DefaultProducerTemplate.java:390) 14:54:26 at org.wildfly.camel.test.weather.WeatherIntegrationTest.testGetWeatherFromGeoIpLocation(WeatherIntegrationTest.java:74) ```</body>
		<created>2020-03-04 14:15:43</created>
		<closed>2020-07-07 14:42:15</closed>
	</bug>
	<bug>
		<id>2959</id>
		<title>Cannot parse catalog/components/kafka.json</title>
		<body>CrossRef: https://issues.apache.org/jira/browse/CAMEL-14649</body>
		<created>2020-03-03 16:25:40</created>
		<closed>2020-06-03 13:19:58</closed>
	</bug>
	<bug>
		<id>2953</id>
		<title>Endpoint configurer fails with abstract component in camel-3.1.x</title>
		<body>``` Caused by: org.apache.camel.component.hipchat.HipchatException: OAuth 2 auth token must be specified at org.apache.camel.component.hipchat.HipchatComponent.createEndpoint(HipchatComponent.java:55) at org.apache.camel.support.DefaultComponent.createEndpoint(DefaultComponent.java:240) at org.apache.camel.impl.engine.AbstractCamelContext.getEndpoint(AbstractCamelContext.java:779) ```</body>
		<created>2020-02-21 11:44:01</created>
		<closed>2020-02-21 11:45:38</closed>
	</bug>
	<bug>
		<id>2952</id>
		<title>Yammer integration fails with 401 on camel-3.1.x</title>
		<body>``` 11:20:22,045 WARN  [org.apache.camel.component.yammer.YammerMessagePollingConsumer] (Camel (camel-1) thread #1 - yammer://messages) Consumer Consumer[yammer://messages?accessToken=xxxxxx&amp;consumerKey=aConsumerKey&amp;consumerSecret=aConsumerSecretKey] failed polling endpoint: yammer://messages?accessToken=xxxxxx&amp;consumerKey=aConsumerKey&amp;consumerSecret=aConsumerSecretKey. Will try again at next poll. Caused by: [java.lang.NullPointerException - null]: java.lang.NullPointerException at org.apache.camel.component.yammer.YammerMessagePollingConsumer.poll(YammerMessagePollingConsumer.java:120) at org.apache.camel.support.ScheduledPollConsumer.doRun(ScheduledPollConsumer.java:187) at org.apache.camel.support.ScheduledPollConsumer.run(ScheduledPollConsumer.java:106) at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) at java.lang.Thread.run(Thread.java:748) ```</body>
		<created>2020-02-21 10:25:53</created>
		<closed>2020-02-21 10:38:02</closed>
	</bug>
	<bug>
		<id>2951</id>
		<title>Cannot find custom type converter with camel-3.1.x</title>
		<body>``` Caused by: org.apache.camel.NoTypeConversionAvailableException: No type converter available to convert from type: java.util.LinkedHashMap to the required type: org.wildfly.camel.test.common.types.Customer with value {firstName=John, lastName=Doe} at org.apache.camel.impl.converter.BaseTypeConverterRegistry.mandatoryConvertTo(BaseTypeConverterRegistry.java:224) at org.apache.camel.support.MessageSupport.getMandatoryBody(MessageSupport.java:116) ```  https://camel.apache.org/manual/latest/camel-3x-upgrade-guide.html#_package_scanning_typeconverter  CrossRef: https://issues.apache.org/jira/browse/CAMEL-14593</body>
		<created>2020-02-19 13:30:29</created>
		<closed>2020-02-21 09:28:26</closed>
	</bug>
	<bug>
		<id>2948</id>
		<title>Cannot run docker tests on WildFly-19.x</title>
		<body>``` Feb 06, 2020 12:57:05 PM org.arquillian.cube.docker.impl.client.CubeDockerConfigurationResolver resolveSystemDefaultSetup INFO: Connected to docker (docker-desktop) using default settings version: 19.03.5 kernel: 4.19.76-linuxkit Feb 06, 2020 12:57:05 PM org.arquillian.spacelift.Spacelift$SpaceliftInstance &lt;init&gt; INFO: Initialized Spacelift from defaults, workspace: /Users/tdiesler/git/wildfly-camel/itests/standalone/docker, cache: /Users/tdiesler/.spacelift/cache Feb 06, 2020 12:57:08 PM org.arquillian.cube.docker.impl.client.CubeDockerConfigurationResolver resolveSystemDefaultSetup INFO: Connected to docker (docker-desktop) using default settings version: 19.03.5 kernel: 4.19.76-linuxkit [ERROR] Tests run: 1, Failures: 0, Errors: 1, Skipped: 0, Time elapsed: 5.089 s &lt;&lt;&lt; FAILURE! - in org.wildfly.camel.test.lra.LRAIntegrationTest [ERROR] org.wildfly.camel.test.lra.LRAIntegrationTest  Time elapsed: 5.087 s  &lt;&lt;&lt; ERROR! java.lang.RuntimeException: Could not create new instance of class org.jboss.arquillian.test.impl.EventTestRunnerAdaptor Caused by: java.lang.reflect.InvocationTargetException Caused by: java.lang.NoSuchMethodError: org.arquillian.cube.docker.impl.util.ConfigUtil$CubeConstructor.constructScalar(Lorg/yaml/snakeyaml/nodes/ScalarNode;)Ljava/lang/Object; ```</body>
		<created>2020-02-06 11:55:29</created>
		<closed>2020-02-06 12:12:28</closed>
	</bug>
	<bug>
		<id>2946</id>
		<title>Cannot load properties from global module</title>
		<body>... on WildFly-19.x any more</body>
		<created>2020-02-06 11:27:23</created>
		<closed>2020-02-21 09:53:38</closed>
	</bug>
	<bug>
		<id>2936</id>
		<title>Reactive stream has no active subscriptions</title>
		<body>``` timer://reactive) Failed delivery for (MessageId: ID-ci-vm-10-0-144-224-hosted-upshift-rdu2-redhat-com-1579251438092-538-3 on ExchangeId: ID-ci-vm-10-0-144-224-hosted-upshift-rdu2-redhat-com-1579251438092-538-2). Exhausted after delivery attempt: 1 caught: java.lang.IllegalStateException: The stream has no active subscriptions  Message History --------------------------------------------------------------------------------------------------------------------------------------- RouteId              ProcessorId          Processor                                                                        Elapsed (ms) [route926          ] [route926          ] [timer://reactive?period=250&amp;repeatCount=3                                     ] [         1] [route926          ] [to1001            ] [reactive-streams:ID-ci-vm-10-0-144-224-hosted-upshift-rdu2-redhat-com-15792514] [         0]  Stacktrace ---------------------------------------------------------------------------------------------------------------------------------------: java.lang.IllegalStateException: The stream has no active subscriptions at org.apache.camel.component.reactive.streams.engine.CamelPublisher.publish(CamelPublisher.java:108) at org.apache.camel.component.reactive.streams.engine.DefaultCamelReactiveStreamsService.sendCamelExchange(DefaultCamelReactiveStreamsService.java:143) at org.apache.camel.component.reactive.streams.ReactiveStreamsProducer.process(ReactiveStreamsProducer.java:52) at org.apache.camel.processor.SendProcessor.process(SendProcessor.java:148) at org.apache.camel.processor.RedeliveryErrorHandler.process(RedeliveryErrorHandler.java:548) at org.apache.camel.processor.CamelInternalProcessor.process(CamelInternalProcessor.java:201) at org.apache.camel.processor.CamelInternalProcessor.process(CamelInternalProcessor.java:201) at org.apache.camel.component.timer.TimerConsumer.sendTimerExchange(TimerConsumer.java:197) at org.apache.camel.component.timer.TimerConsumer$1.run(TimerConsumer.java:79) at java.util.TimerThread.mainLoop(Timer.java:555) at java.util.TimerThread.run(Timer.java:505) ```</body>
		<created>2020-01-17 10:21:54</created>
		<closed>2020-01-17 11:58:21</closed>
	</bug>
	<bug>
		<id>2935</id>
		<title>Cannot deploy CXFWSClientCertSecureProducerIntegrationTest.war</title>
		<body>More often than not, I see  ``` Tests run: 1, Failures: 0, Errors: 1, Skipped: 0, Time elapsed: 82.248 s &lt;&lt;&lt; FAILURE! - in org.wildfly.camel.test.cxf.ws.secure.CXFWSClientCertSecureProducerIntegrationTest org.wildfly.camel.test.cxf.ws.secure.CXFWSClientCertSecureProducerIntegrationTest  Time elapsed: 82.248 s  &lt;&lt;&lt; ERROR! org.jboss.arquillian.container.spi.client.container.DeploymentException:   Cannot deploy CXFWSClientCertSecureProducerIntegrationTest.war:  WFLYCTL0379: System boot is in process; execution of remote management operations is not currently available ```  when running the full test suite. The individual test passes</body>
		<created>2020-01-17 09:54:53</created>
		<closed>2020-02-06 13:03:49</closed>
	</bug>
	<bug>
		<id>2932</id>
		<title>Startup failure when Java Security Manager is enabled</title>
		<body>Trying to start the server with `-secmgr` flag fails with the following error:  ``` 09:56:44,989 ERROR [org.jboss.msc.service.fail] (MSC service thread 1-1) MSC000001: Failed to start service jboss.wildfly.camel.ContextCreateHandlerRegistry: org.jboss.msc.service.StartException in service jboss.wildfly.camel.ContextCreateHandlerRegistry: Failed to start service         at org.jboss.msc@1.4.11.Final//org.jboss.msc.service.ServiceControllerImpl$StartTask.execute(ServiceControllerImpl.java:1731) [jboss-msc-1.4.11.Final.jar:1.4.11.Final]         at org.jboss.msc@1.4.11.Final//org.jboss.msc.service.ServiceControllerImpl$ControllerTask.run(ServiceControllerImpl.java:1559) [jboss-msc-1.4.11.Final.jar:1.4.11.Final]         at org.jboss.threads@2.3.3.Final//org.jboss.threads.ContextClassLoaderSavingRunnable.run(ContextClassLoaderSavingRunnable.java:35) [jboss-threads-2.3.3.Final.jar:2.3.3.Final]         at org.jboss.threads@2.3.3.Final//org.jboss.threads.EnhancedQueueExecutor.safeRun(EnhancedQueueExecutor.java:1982) [jboss-threads-2.3.3.Final.jar:2.3.3.Final]         at org.jboss.threads@2.3.3.Final//org.jboss.threads.EnhancedQueueExecutor$ThreadBody.doRunTask(EnhancedQueueExecutor.java:1486) [jboss-threads-2.3.3.Final.jar:2.3.3.Final]         at org.jboss.threads@2.3.3.Final//org.jboss.threads.EnhancedQueueExecutor$ThreadBody.run(EnhancedQueueExecutor.java:1363) [jboss-threads-2.3.3.Final.jar:2.3.3.Final]         at java.base/java.lang.Thread.run(Thread.java:834) [java.base:] Caused by: java.lang.NoClassDefFoundError: org/wildfly/security/manager/action/GetContextClassLoaderAction         at org.wildfly.extension.camel.cxf.undertow//org.apache.cxf.transport.undertow.wildfly.subsystem.extension.SecurityActions.getContextClassLoader(SecurityActions.java:41)         at org.wildfly.extension.camel.cxf.undertow//org.apache.cxf.transport.undertow.wildfly.subsystem.extension.CxfDefaultBusHandler$CxfDefaultBusEndpointStrategy.&lt;init&gt;(CxfDefaultBusHandler.java:65)         at org.wildfly.extension.camel.cxf.undertow//org.apache.cxf.transport.undertow.wildfly.subsystem.extension.CxfDefaultBusHandler.&lt;init&gt;(CxfDefaultBusHandler.java:48)         at org.wildfly.extension.camel.cxf.undertow//org.apache.cxf.transport.undertow.wildfly.subsystem.extension.CxfSubsytemExtension.getContextCreateHandler(CxfSubsytemExtension.java:38)         at org.wildfly.extension.camel//org.wildfly.extension.camel.service.ContextCreateHandlerRegistryService$ContextCreateHandlerRegistryImpl$1.accept(ContextCreateHandlerRegistryService.java:93)         at org.wildfly.extension.camel//org.wildfly.extension.camel.service.ContextCreateHandlerRegistryService$ContextCreateHandlerRegistryImpl$1.accept(ContextCreateHandlerRegistryService.java:90)         at java.base/java.util.ArrayList$Itr.forEachRemaining(ArrayList.java:1032) [java.base:]         at org.wildfly.extension.camel//org.wildfly.extension.camel.parser.SubsystemState.processExtensions(SubsystemState.java:95)         at org.wildfly.extension.camel//org.wildfly.extension.camel.service.ContextCreateHandlerRegistryService$ContextCreateHandlerRegistryImpl.&lt;init&gt;(ContextCreateHandlerRegistryService.java:90)         at org.wildfly.extension.camel//org.wildfly.extension.camel.service.ContextCreateHandlerRegistryService.start(ContextCreateHandlerRegistryService.java:71)         at org.jboss.msc@1.4.11.Final//org.jboss.msc.service.ServiceControllerImpl$StartTask.startService(ServiceControllerImpl.java:1739) [jboss-msc-1.4.11.Final.jar:1.4.11.Final]         at org.jboss.msc@1.4.11.Final//org.jboss.msc.service.ServiceControllerImpl$StartTask.execute(ServiceControllerImpl.java:1701) [jboss-msc-1.4.11.Final.jar:1.4.11.Final]         ... 6 more Caused by: java.lang.ClassNotFoundException: org.wildfly.security.manager.action.GetContextClassLoaderAction from [Module "org.wildfly.extension.camel.cxf.undertow" from local module loader @2ecf3cb (finder: local module finder @4850fc5e (roots: /opt/wildfly/modules,/opt/wildfly/modules/system/layers/fuse,/opt/wildfly/modules/system/layers/base,/opt/wildfly/modules/system/add-ons/keycloak))]         at org.jboss.modules.ModuleClassLoader.findClass(ModuleClassLoader.java:255) [jboss-modules.jar:1.9.1.Final]         at org.jboss.modules.ConcurrentClassLoader.performLoadClassUnchecked(ConcurrentClassLoader.java:410) [jboss-modules.jar:1.9.1.Final]         at org.jboss.modules.ConcurrentClassLoader.performLoadClass(ConcurrentClassLoader.java:398) [jboss-modules.jar:1.9.1.Final]         at org.jboss.modules.ConcurrentClassLoader.loadClass(ConcurrentClassLoader.java:116) [jboss-modules.jar:1.9.1.Final]         ... 18 more ```  Can be reproduced using Docker image ``` docker run --rm -it -e SECMGR=true wildflyext/wildfly-camel:11.0.0 ``` </body>
		<created>2020-01-14 10:03:41</created>
		<closed>2020-01-15 08:41:01</closed>
	</bug>
	<bug>
		<id>2928</id>
		<title>WeatherIntegrationTest fails due to CamelContext is stopped</title>
		<body>Seems this has been skipped for a while on the CI build, so this went unnoticed after the Camel 3 upgrade.  ``` Caused by: java.util.concurrent.RejectedExecutionException: CamelContext is stopped at org.apache.camel.impl.engine.DefaultProducerCache.send(DefaultProducerCache.java:151) at org.apache.camel.impl.engine.DefaultProducerTemplate.send(DefaultProducerTemplate.java:176) at org.apache.camel.impl.engine.DefaultProducerTemplate.send(DefaultProducerTemplate.java:172) at org.apache.camel.impl.engine.DefaultProducerTemplate.requestBody(DefaultProducerTemplate.java:390) ... 148 more ```</body>
		<created>2020-01-03 14:03:58</created>
		<closed>2020-01-03 15:00:20</closed>
	</bug>
	<bug>
		<id>2917</id>
		<title>XChange cannot check API connection before start</title>
		<body></body>
		<created>2019-11-27 10:05:56</created>
		<closed>2019-11-27 11:06:22</closed>
	</bug>
	<bug>
		<id>2916</id>
		<title>CNFE ...jackson.annotation.JsonFormat$Feature</title>
		<body>Shows on wildfly-19.x ``` [ERROR] testServiceDiscovery(org.wildfly.camel.test.consul.ConsulIntegrationTest)  Time elapsed: 3.242 s  &lt;&lt;&lt; ERROR! java.lang.NoClassDefFoundError: com/fasterxml/jackson/annotation/JsonFormat$Feature at org.wildfly.camel.test.consul.ConsulIntegrationTest.testServiceDiscovery(ConsulIntegrationTest.java:175) Caused by: java.lang.ClassNotFoundException: com.fasterxml.jackson.annotation.JsonFormat$Feature from [Module "com.fasterxml.jackson.datatype.guava" version 2.10.1 from local module loader @37e547da (finder: local module finder @2b6856dd (roots: /Users/tdiesler/git/wildfly-camel/itests/standalone/docker/target/wildfly-19.0.0.Beta1-SNAPSHOT/modules,/Users/tdiesler/git/wildfly-camel/itests/standalone/docker/target/wildfly-19.0.0.Beta1-SNAPSHOT/modules/system/layers/fuse,/Users/tdiesler/git/wildfly-camel/itests/standalone/docker/target/wildfly-19.0.0.Beta1-SNAPSHOT/modules/system/layers/base))] at org.wildfly.camel.test.consul.ConsulIntegrationTest.testServiceDiscovery(ConsulIntegrationTest.java:175) ```</body>
		<created>2019-11-27 07:19:26</created>
		<closed>2019-11-27 09:58:15</closed>
	</bug>
	<bug>
		<id>2915</id>
		<title>LdapIntegration fails with NoSuchFieldError: SESSION_SECURED</title>
		<body>``` 2019-11-26 08:30:41 WARN  [org.apache.directory.server.ldap.LdapProtocolHandler] (pool-7-thread-1) - Unexpected exception forcing session to close: sending disconnect notice to client. java.lang.NoSuchFieldError: SESSION_SECURED at org.apache.directory.server.ldap.LdapProtocolHandler.messageReceived(LdapProtocolHandler.java:182) at org.apache.mina.core.filterchain.DefaultIoFilterChain$TailFilter.messageReceived(DefaultIoFilterChain.java:1015) at org.apache.mina.core.filterchain.DefaultIoFilterChain.callNextMessageReceived(DefaultIoFilterChain.java:650) at org.apache.mina.core.filterchain.DefaultIoFilterChain.access$1300(DefaultIoFilterChain.java:49) at org.apache.mina.core.filterchain.DefaultIoFilterChain$EntryImpl$1.messageReceived(DefaultIoFilterChain.java:1128) at org.apache.mina.core.filterchain.IoFilterEvent.fire(IoFilterEvent.java:106) at org.apache.mina.core.session.IoEvent.run(IoEvent.java:89) at org.apache.mina.filter.executor.UnorderedThreadPoolExecutor$Worker.runTask(UnorderedThreadPoolExecutor.java:541) at org.apache.mina.filter.executor.UnorderedThreadPoolExecutor$Worker.run(UnorderedThreadPoolExecutor.java:493) at java.lang.Thread.run(Thread.java:748) ```</body>
		<created>2019-11-26 07:41:04</created>
		<closed>2019-11-27 15:43:43</closed>
	</bug>
	<bug>
		<id>2896</id>
		<title>SSLHandshakeException with XMPP</title>
		<body>``` SEVERE: Failed: org.wildfly.camel.test.xmpp.XMPPIntegrationTest.testXMPPComponent java.lang.RuntimeException: Could not connect to XMPP server. at org.apache.camel.component.xmpp.XmppConsumer.doStart(XmppConsumer.java:71) at org.apache.camel.support.service.ServiceSupport.start(ServiceSupport.java:117) at org.apache.camel.impl.engine.AbstractCamelContext.startService(AbstractCamelContext.java:2893) at org.apache.camel.impl.engine.AbstractCamelContext.doStartOrResumeRouteConsumers(AbstractCamelContext.java:3220) at org.apache.camel.impl.engine.AbstractCamelContext.doStartRouteConsumers(AbstractCamelContext.java:3154) at org.apache.camel.impl.engine.AbstractCamelContext.safelyStartRouteServices(AbstractCamelContext.java:3064) at org.apache.camel.impl.engine.AbstractCamelContext.doStartOrResumeRoutes(AbstractCamelContext.java:2829) at org.apache.camel.impl.engine.AbstractCamelContext.doStartCamel(AbstractCamelContext.java:2633) at org.apache.camel.impl.engine.AbstractCamelContext.lambda$doStart$2(AbstractCamelContext.java:2438) at org.apache.camel.impl.engine.AbstractCamelContext.doWithDefinedClassLoader(AbstractCamelContext.java:2455) at org.apache.camel.impl.engine.AbstractCamelContext.doStart(AbstractCamelContext.java:2436) at org.apache.camel.support.service.ServiceSupport.start(ServiceSupport.java:117) at org.apache.camel.impl.engine.AbstractCamelContext.start(AbstractCamelContext.java:2345) at org.wildfly.camel.test.xmpp.XMPPIntegrationTest.testXMPPComponent(XMPPIntegrationTest.java:145) ... Caused by: org.jivesoftware.smack.SmackException: javax.net.ssl.SSLHandshakeException: sun.security.validator.ValidatorException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target at org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketReader.parsePackets(XMPPTCPConnection.java:1176) at org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketReader.access$1000(XMPPTCPConnection.java:1092) at org.jivesoftware.smack.tcp.XMPPTCPConnection$PacketReader$1.run(XMPPTCPConnection.java:1112) ```  CrossRefs:  https://issues.redhat.com/browse/ENTESB-13674 https://issues.apache.org/jira/browse/CAMEL-13337</body>
		<created>2019-11-04 10:34:16</created>
		<closed>2020-02-06 13:03:48</closed>
	</bug>
	<bug>
		<id>2885</id>
		<title>Wildfly shutdown after every test</title>
		<body>``` mvn clean install -Dtest=org.wildfly.camel.test.smoke.*Test.java ```  ``` [INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 8.108 s - in org.wildfly.camel.test.smoke.BeanTransformTest 17:23:04.825 INFO  Undeploy arquillian service: arquillian-service: 1238 assets - ArquillianServiceDeployer.undeploy  17:23:04,837 INFO  [org.jboss.as.server.deployment] (MSC service thread 1-6) WFLYSRV0028: Stopped deployment arquillian-service (runtime-name: arquillian-service) in 9ms 17:23:04,855 INFO  [org.jboss.as.repository] (management-handler-thread - 1) WFLYDR0002: Content removed from location /Users/tdiesler/git/wildfly-camel/itests/standalone/smoke/target/wildfly-17.0.1.Final/standalone/data/content/99/971e0248783e3aca017e54252755eb328b9e26/content 17:23:04,855 INFO  [org.jboss.as.server] (management-handler-thread - 1) WFLYSRV0009: Undeployed "arquillian-service" (runtime-name: "arquillian-service") 17:23:04,860 INFO  [org.jboss.as.server] (management-handler-thread - 1) WFLYSRV0272: Suspending server 17:23:04,861 INFO  [org.jboss.as.ejb3] (management-handler-thread - 1) WFLYEJB0493: EJB subsystem suspension complete 17:23:04,863 INFO  [org.jboss.as.server] (Management Triggered Shutdown) WFLYSRV0241: Shutting down in response to management operation 'shutdown' 17:23:04,867 INFO  [org.wildfly.extension.camel] (ServerService Thread Pool -- 89) Remove Camel endpoint: http://127.0.0.1:8080/hawtio 17:23:04,868 INFO  [org.wildfly.extension.undertow] (ServerService Thread Pool -- 89) WFLYUT0022: Unregistered web context: '/hawtio' from server 'default-server' 17:23:04,871 INFO  [io.hawt.HawtioContextListener] (ServerService Thread Pool -- 89) Destroying hawtio services 17:23:04,872 INFO  [org.jboss.as.mail.extension] (MSC service thread 1-4) WFLYMAIL0002: Unbound mail session [java:jboss/mail/Default] 17:23:04,875 INFO  [org.jboss.as.connector.subsystems.datasources] (MSC service thread 1-1) WFLYJCA0010: Unbound data source [java:jboss/datasources/ExampleDS] 17:23:04,876 INFO  [org.wildfly.extension.undertow] (MSC service thread 1-8) WFLYUT0019: Host default-host stopping 17:23:04,876 INFO  [org.jboss.as.connector.deployers.jdbc] (MSC service thread 1-7) WFLYJCA0019: Stopped Driver service with driver-name = h2 17:23:04,877 INFO  [org.wildfly.extension.undertow] (MSC service thread 1-1) WFLYUT0008: Undertow HTTPS listener https suspending 17:23:04,878 INFO  [org.wildfly.extension.undertow] (MSC service thread 1-1) WFLYUT0007: Undertow HTTPS listener https stopped, was bound to 127.0.0.1:8443 17:23:04,883 INFO  [org.wildfly.extension.undertow] (MSC service thread 1-8) WFLYUT0008: Undertow HTTP listener default suspending 17:23:04,884 INFO  [org.wildfly.extension.undertow] (MSC service thread 1-8) WFLYUT0007: Undertow HTTP listener default stopped, was bound to 127.0.0.1:8080 17:23:04,885 INFO  [org.wildfly.extension.undertow] (MSC service thread 1-8) WFLYUT0004: Undertow 2.0.21.Final stopping 17:23:04,885 INFO  [org.jboss.as.clustering.infinispan] (ServerService Thread Pool -- 27) WFLYCLINF0003: Stopped client-mappings cache from ejb container 17:23:04,921 INFO  [org.jboss.as.server.deployment] (MSC service thread 1-7) WFLYSRV0028: Stopped deployment hawtio-wildfly-2.7.1.war (runtime-name: hawtio-wildfly-2.7.1.war) in 53ms 17:23:04,926 INFO  [org.jboss.as] (MSC service thread 1-2) WFLYSRV0050: WildFly Core 9.0.2.Final stopped in 59ms [INFO] Running org.wildfly.camel.test.smoke.SimpleTransformTest Sep 18, 2019 5:23:05 PM org.jboss.as.arquillian.container.managed.ManagedDeployableContainer startInternal INFO: Starting container with: [/Library/Java/JavaVirtualMachines/jdk1.8.0_221.jdk/Contents/Home/bin/java, -D[Standalone], -Xmx1G, -XX:MaxPermSize=512m, -Djava.net.preferIPv4Stack=true, -Djava.security.egd=file:/dev/./urandom, -agentlib:jdwp=transport=dt_socket,address=8787,server=y,suspend=n, -DTEST_PROPERTY=TestValue, -ea, -Djboss.home.dir=/Users/tdiesler/git/wildfly-camel/itests/standalone/smoke/target/wildfly-17.0.1.Final, -Dorg.jboss.boot.log.file=/Users/tdiesler/git/wildfly-camel/itests/standalone/smoke/target/wildfly-17.0.1.Final/standalone/log/server.log, -Dlogging.configuration=file:/Users/tdiesler/git/wildfly-camel/itests/standalone/smoke/target/wildfly-17.0.1.Final/standalone/configuration/logging.properties, -jar, /Users/tdiesler/git/wildfly-camel/itests/standalone/smoke/target/wildfly-17.0.1.Final/jboss-modules.jar, -mp, /Users/tdiesler/git/wildfly-camel/itests/standalone/smoke/target/wildfly-17.0.1.Final/modules, org.jboss.as.standalone, -Djboss.home.dir=/Users/tdiesler/git/wildfly-camel/itests/standalone/smoke/target/wildfly-17.0.1.Final, -Djboss.server.base.dir=/Users/tdiesler/git/wildfly-camel/itests/standalone/smoke/target/wildfly-17.0.1.Final/standalone, -Djboss.server.log.dir=/Users/tdiesler/git/wildfly-camel/itests/standalone/smoke/target/wildfly-17.0.1.Final/standalone/log, -Djboss.server.config.dir=/Users/tdiesler/git/wildfly-camel/itests/standalone/smoke/target/wildfly-17.0.1.Final/standalone/configuration, -c=standalone.xml] Java HotSpot(TM) 64-Bit Server VM warning: ignoring option MaxPermSize=512m; support was removed in 8.0 Listening for transport dt_socket at address: 8787 ```  To debug the sure fire process, run ...  ``` mvn clean install -Dmaven.surefire.debug -Dtest=org.wildfly.camel.test.smoke.*Test.java ```  Blocked by: https://github.com/wildfly/wildfly-arquillian/issues/157</body>
		<created>2019-09-18 15:29:36</created>
		<closed>2019-09-24 08:27:41</closed>
	</bug>
	<bug>
		<id>2879</id>
		<title>Olingo4 component module is missing dependency for org.apache.commons.lang3</title>
		<body>https://issues.jboss.org/browse/ENTESB-11283  When testing the batch endpoint, code paths requiring commons lang3 are activated.</body>
		<created>2019-09-17 12:55:58</created>
		<closed>2019-09-17 14:32:13</closed>
	</bug>
	<bug>
		<id>2862</id>
		<title>NsqIntegrationTest cannot access DOCKER_HOST</title>
		<body>There is this funky host name, which results from `TestUtils.getDockerHost()`  ``` Caused by: io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: MacBook3.fritz.box/192.168.178.30:4150 at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method) at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:717) at io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:327) at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:340) at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:644) at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:591) at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:508) at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:470) at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:909) at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) ... 1 more ```</body>
		<created>2019-08-07 10:44:03</created>
		<closed>2020-02-06 13:03:46</closed>
	</bug>
	<bug>
		<id>2859</id>
		<title>CDI integration fails with camel-3.0</title>
		<body>``` Exception 0 : javax.enterprise.inject.InjectionException: Error adding routes of type [org.wildfly.camel.test.cdi.subA.RouteBuilderB] to Camel context [contextB] at org.apache.camel.cdi.CdiCamelExtension.addRouteToContext(CdiCamelExtension.java:467) at org.apache.camel.cdi.CdiCamelExtension.afterDeploymentValidation(CdiCamelExtension.java:410) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at org.jboss.weld.injection.StaticMethodInjectionPoint.invoke(StaticMethodInjectionPoint.java:95) at org.jboss.weld.injection.MethodInvocationStrategy$SpecialParamPlusBeanManagerStrategy.invoke(MethodInvocationStrategy.java:187) at org.jboss.weld.event.ObserverMethodImpl.sendEvent(ObserverMethodImpl.java:330) at org.jboss.weld.event.ExtensionObserverMethodImpl.sendEvent(ExtensionObserverMethodImpl.java:123) at org.jboss.weld.event.ObserverMethodImpl.sendEvent(ObserverMethodImpl.java:308) at org.jboss.weld.event.ObserverMethodImpl.notify(ObserverMethodImpl.java:286) at javax.enterprise.inject.spi.ObserverMethod.notify(ObserverMethod.java:124) at org.jboss.weld.util.Observers.notify(Observers.java:166) at org.jboss.weld.event.ObserverNotifier.notifySyncObservers(ObserverNotifier.java:285) at org.jboss.weld.event.ObserverNotifier.notify(ObserverNotifier.java:273) at org.jboss.weld.event.ObserverNotifier.fireEvent(ObserverNotifier.java:177) at org.jboss.weld.event.ObserverNotifier.fireEvent(ObserverNotifier.java:171) at org.jboss.weld.bootstrap.events.AbstractContainerEvent.fire(AbstractContainerEvent.java:53) at org.jboss.weld.bootstrap.events.AbstractDeploymentContainerEvent.fire(AbstractDeploymentContainerEvent.java:35) at org.jboss.weld.bootstrap.events.AfterDeploymentValidationImpl.fire(AfterDeploymentValidationImpl.java:28) at org.jboss.weld.bootstrap.WeldStartup.validateBeans(WeldStartup.java:505) at org.jboss.weld.bootstrap.WeldBootstrap.validateBeans(WeldBootstrap.java:93) at org.jboss.as.weld.WeldStartService.start(WeldStartService.java:98) at org.jboss.msc.service.ServiceControllerImpl$StartTask.startService(ServiceControllerImpl.java:1737) at org.jboss.msc.service.ServiceControllerImpl$StartTask.execute(ServiceControllerImpl.java:1699) at org.jboss.msc.service.ServiceControllerImpl$ControllerTask.run(ServiceControllerImpl.java:1557) at org.jboss.threads.ContextClassLoaderSavingRunnable.run(ContextClassLoaderSavingRunnable.java:35) at org.jboss.threads.EnhancedQueueExecutor.safeRun(EnhancedQueueExecutor.java:1982) at org.jboss.threads.EnhancedQueueExecutor$ThreadBody.doRunTask(EnhancedQueueExecutor.java:1486) at org.jboss.threads.EnhancedQueueExecutor$ThreadBody.run(EnhancedQueueExecutor.java:1377) at java.lang.Thread.run(Thread.java:748) Caused by: javax.enterprise.inject.InjectionException: Camel annotations post processing of [InjectionTarget for Managed Bean [class org.wildfly.camel.test.cdi.subA.RouteBuilderB] with qualifiers [@Any @ContextName]] failed! at org.apache.camel.cdi.CamelBeanInjectionTarget.inject(CamelBeanInjectionTarget.java:44) at org.jboss.weld.bean.ManagedBean.create(ManagedBean.java:161) at org.jboss.weld.contexts.unbound.DependentContextImpl.get(DependentContextImpl.java:70) at org.jboss.weld.bean.ContextualInstanceStrategy$DefaultContextualInstanceStrategy.get(ContextualInstanceStrategy.java:100) at org.jboss.weld.bean.ContextualInstance.get(ContextualInstance.java:50) at org.jboss.weld.manager.BeanManagerImpl.getReference(BeanManagerImpl.java:694) at org.jboss.weld.manager.BeanManagerImpl.getReference(BeanManagerImpl.java:717) at org.jboss.weld.util.ForwardingBeanManager.getReference(ForwardingBeanManager.java:64) at org.jboss.weld.bean.builtin.BeanManagerProxy.getReference(BeanManagerProxy.java:87) at org.apache.camel.cdi.BeanManagerHelper.getReference(BeanManagerHelper.java:53) at org.apache.camel.cdi.CdiCamelExtension.addRouteToContext(CdiCamelExtension.java:452) ... 31 more Caused by: java.lang.NullPointerException at org.apache.camel.support.CamelContextHelper.getEndpointInjection(CamelContextHelper.java:187) at org.apache.camel.impl.engine.CamelPostProcessorHelper.doGetEndpointInjection(CamelPostProcessorHelper.java:160) at org.apache.camel.impl.engine.CamelPostProcessorHelper.getEndpointInjection(CamelPostProcessorHelper.java:150) at org.apache.camel.impl.engine.CamelPostProcessorHelper.getInjectionValue(CamelPostProcessorHelper.java:228) at org.apache.camel.impl.engine.DefaultCamelBeanPostProcessor.injectField(DefaultCamelBeanPostProcessor.java:210) at org.apache.camel.impl.engine.DefaultCamelBeanPostProcessor.injectField(DefaultCamelBeanPostProcessor.java:204) at org.apache.camel.impl.engine.DefaultCamelBeanPostProcessor.lambda$injectFields$0(DefaultCamelBeanPostProcessor.java:181) at org.apache.camel.util.ReflectionHelper.doWithFields(ReflectionHelper.java:108) at org.apache.camel.impl.engine.DefaultCamelBeanPostProcessor.injectFields(DefaultCamelBeanPostProcessor.java:166) at org.apache.camel.impl.engine.DefaultCamelBeanPostProcessor.postProcessBeforeInitialization(DefaultCamelBeanPostProcessor.java:91) at org.apache.camel.cdi.CamelBeanInjectionTarget.inject(CamelBeanInjectionTarget.java:41) ... 41 more Exception 1 : javax.enterprise.inject.InjectionException: Error adding routes of type [org.wildfly.camel.test.cdi.subA.RouteBuilderA] to Camel context [contextA] at org.apache.camel.cdi.CdiCamelExtension.addRouteToContext(CdiCamelExtension.java:467) at org.apache.camel.cdi.CdiCamelExtension.afterDeploymentValidation(CdiCamelExtension.java:410) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at org.jboss.weld.injection.StaticMethodInjectionPoint.invoke(StaticMethodInjectionPoint.java:95) at org.jboss.weld.injection.MethodInvocationStrategy$SpecialParamPlusBeanManagerStrategy.invoke(MethodInvocationStrategy.java:187) at org.jboss.weld.event.ObserverMethodImpl.sendEvent(ObserverMethodImpl.java:330) at org.jboss.weld.event.ExtensionObserverMethodImpl.sendEvent(ExtensionObserverMethodImpl.java:123) at org.jboss.weld.event.ObserverMethodImpl.sendEvent(ObserverMethodImpl.java:308) at org.jboss.weld.event.ObserverMethodImpl.notify(ObserverMethodImpl.java:286) at javax.enterprise.inject.spi.ObserverMethod.notify(ObserverMethod.java:124) at org.jboss.weld.util.Observers.notify(Observers.java:166) at org.jboss.weld.event.ObserverNotifier.notifySyncObservers(ObserverNotifier.java:285) at org.jboss.weld.event.ObserverNotifier.notify(ObserverNotifier.java:273) at org.jboss.weld.event.ObserverNotifier.fireEvent(ObserverNotifier.java:177) at org.jboss.weld.event.ObserverNotifier.fireEvent(ObserverNotifier.java:171) at org.jboss.weld.bootstrap.events.AbstractContainerEvent.fire(AbstractContainerEvent.java:53) at org.jboss.weld.bootstrap.events.AbstractDeploymentContainerEvent.fire(AbstractDeploymentContainerEvent.java:35) at org.jboss.weld.bootstrap.events.AfterDeploymentValidationImpl.fire(AfterDeploymentValidationImpl.java:28) at org.jboss.weld.bootstrap.WeldStartup.validateBeans(WeldStartup.java:505) at org.jboss.weld.bootstrap.WeldBootstrap.validateBeans(WeldBootstrap.java:93) at org.jboss.as.weld.WeldStartService.start(WeldStartService.java:98) at org.jboss.msc.service.ServiceControllerImpl$StartTask.startService(ServiceControllerImpl.java:1737) at org.jboss.msc.service.ServiceControllerImpl$StartTask.execute(ServiceControllerImpl.java:1699) at org.jboss.msc.service.ServiceControllerImpl$ControllerTask.run(ServiceControllerImpl.java:1557) at org.jboss.threads.ContextClassLoaderSavingRunnable.run(ContextClassLoaderSavingRunnable.java:35) at org.jboss.threads.EnhancedQueueExecutor.safeRun(EnhancedQueueExecutor.java:1982) at org.jboss.threads.EnhancedQueueExecutor$ThreadBody.doRunTask(EnhancedQueueExecutor.java:1486) at org.jboss.threads.EnhancedQueueExecutor$ThreadBody.run(EnhancedQueueExecutor.java:1377) at java.lang.Thread.run(Thread.java:748) Caused by: javax.enterprise.inject.InjectionException: Camel annotations post processing of [InjectionTarget for Managed Bean [class org.wildfly.camel.test.cdi.subA.RouteBuilderA] with qualifiers [@Any @ContextName]] failed! at org.apache.camel.cdi.CamelBeanInjectionTarget.inject(CamelBeanInjectionTarget.java:44) at org.jboss.weld.bean.ManagedBean.create(ManagedBean.java:161) at org.jboss.weld.contexts.unbound.DependentContextImpl.get(DependentContextImpl.java:70) at org.jboss.weld.bean.ContextualInstanceStrategy$DefaultContextualInstanceStrategy.get(ContextualInstanceStrategy.java:100) at org.jboss.weld.bean.ContextualInstance.get(ContextualInstance.java:50) at org.jboss.weld.manager.BeanManagerImpl.getReference(BeanManagerImpl.java:694) at org.jboss.weld.manager.BeanManagerImpl.getReference(BeanManagerImpl.java:717) at org.jboss.weld.util.ForwardingBeanManager.getReference(ForwardingBeanManager.java:64) at org.jboss.weld.bean.builtin.BeanManagerProxy.getReference(BeanManagerProxy.java:87) at org.apache.camel.cdi.BeanManagerHelper.getReference(BeanManagerHelper.java:53) at org.apache.camel.cdi.CdiCamelExtension.addRouteToContext(CdiCamelExtension.java:452) ... 31 more Caused by: java.lang.NullPointerException at org.apache.camel.support.CamelContextHelper.getEndpointInjection(CamelContextHelper.java:187) at org.apache.camel.impl.engine.CamelPostProcessorHelper.doGetEndpointInjection(CamelPostProcessorHelper.java:160) at org.apache.camel.impl.engine.CamelPostProcessorHelper.getEndpointInjection(CamelPostProcessorHelper.java:150) at org.apache.camel.impl.engine.CamelPostProcessorHelper.getInjectionValue(CamelPostProcessorHelper.java:228) at org.apache.camel.impl.engine.DefaultCamelBeanPostProcessor.injectField(DefaultCamelBeanPostProcessor.java:210) at org.apache.camel.impl.engine.DefaultCamelBeanPostProcessor.injectField(DefaultCamelBeanPostProcessor.java:204) at org.apache.camel.impl.engine.DefaultCamelBeanPostProcessor.lambda$injectFields$0(DefaultCamelBeanPostProcessor.java:181) at org.apache.camel.util.ReflectionHelper.doWithFields(ReflectionHelper.java:108) at org.apache.camel.impl.engine.DefaultCamelBeanPostProcessor.injectFields(DefaultCamelBeanPostProcessor.java:166) at org.apache.camel.impl.engine.DefaultCamelBeanPostProcessor.postProcessBeforeInitialization(DefaultCamelBeanPostProcessor.java:91) at org.apache.camel.cdi.CamelBeanInjectionTarget.inject(CamelBeanInjectionTarget.java:41) ... 41 more "}}}} ```  CrossRef: https://issues.apache.org/jira/browse/CAMEL-13799</body>
		<created>2019-07-29 11:46:02</created>
		<closed>2019-08-14 11:26:18</closed>
	</bug>
	<bug>
		<id>2853</id>
		<title>Intermittent failure of JNDIIntegrationTest</title>
		<body>This one has been failing regularly for a long time now. We need to wait for resources to be unbound before proceeding with the next test(s).  ``` &amp;amp#27;[0m06:20:12,717 INFO  [org.jboss.arquillian.testenricher.cdi.container.BeanManagerProducer] (pool-213-thread-1) BeanManager not found. &amp;amp#27;[0m&amp;amp#27;[31m06:20:12,735 SEVERE [org.jboss.arquillian.protocol.jmx.JMXTestRunner] (pool-213-thread-1) Failed: org.wildfly.camel.test.jndi.JNDIIntegrationTest.testCamelContextFactoryLookup: org.jboss.msc.service.DuplicateServiceException: Service jboss.naming.context.java.helloBean is already registered at org.jboss.msc.service.ServiceRegistrationImpl.setInstance(ServiceRegistrationImpl.java:111) at org.jboss.msc.service.ServiceControllerImpl.startInstallation(ServiceControllerImpl.java:245) at org.jboss.msc.service.ServiceContainerImpl.install(ServiceContainerImpl.java:757) at org.jboss.msc.service.ServiceTargetImpl.install(ServiceTargetImpl.java:260) at org.jboss.msc.service.ServiceControllerImpl$ChildServiceTarget.install(ServiceControllerImpl.java:2058) at org.jboss.msc.service.ServiceBuilderImpl.install(ServiceBuilderImpl.java:189) at org.wildfly.extension.camel.handler.NamingContextAssociationHandler$CamelNamingContext.addBinderService(NamingContextAssociationHandler.java:125) at org.wildfly.extension.camel.handler.NamingContextAssociationHandler$CamelNamingContext.bind(NamingContextAssociationHandler.java:103) at org.wildfly.camel.test.jndi.JNDIIntegrationTest.assertBeanBinding(JNDIIntegrationTest.java:92) at org.wildfly.camel.test.jndi.JNDIIntegrationTest.testCamelContextFactoryLookup(JNDIIntegrationTest.java:75) ```</body>
		<created>2019-07-22 06:15:23</created>
		<closed>2019-07-22 07:22:33</closed>
	</bug>
	<bug>
		<id>2841</id>
		<title>ClassLoader leak in CamelUndertowHostService</title>
		<body>`CamelUndertowHostService` maintains a map of Undertow handlers for the desired consumer path and associated deployment ClassLoader.  The map is populated before a check is performed on the deployment ClassLoader to ensure it's associated with a WAR deployment. If it's not a WAR deployment, an exception is thrown.   Unfortunately, the routing map entry is never removed in this scenario and we leak the deployment ClassLoader instance. </body>
		<created>2019-07-08 07:13:37</created>
		<closed>2019-07-09 08:03:35</closed>
	</bug>
	<bug>
		<id>2840</id>
		<title>SlackIntegrationTest fails to trigger onException handler</title>
		<body>Not sure what's changed on the Slack side, but `SlackIntegrationTest` has been failing repeatedly on the stability build.  ``` [ERROR]   SlackIntegrationTest.testSlackMessage:66 mock://errors Received message count. Expected: &lt;0&gt; but was: &lt;1&gt; ```</body>
		<created>2019-07-08 06:29:53</created>
		<closed>2019-07-09 07:13:15</closed>
	</bug>
	<bug>
		<id>2834</id>
		<title>Patch archive contains Galleon hashes directory</title>
		<body>Seems we are packaging a bunch of Galleon metadata files into the patch distro archive. It adds upwards of 6MB and is probably unnecessary.  ``` $ du -h patch/target/wildfly-patch/.galleon  .galleon/ .galleon/hashes/ .galleon/hashes/modules/ .galleon/hashes/modules/system/ .galleon/hashes/modules/system/layers/ .galleon/hashes/modules/system/layers/base/ .galleon/hashes/modules/system/layers/base/org/ .galleon/hashes/modules/system/layers/base/org/jboss/ .galleon/hashes/modules/system/layers/base/org/jboss/as/ .galleon/hashes/modules/system/layers/base/org/jboss/as/product/ .galleon/hashes/modules/system/layers/base/org/jboss/as/product/wildfly-camel/ .galleon/hashes/modules/system/layers/base/org/jboss/as/product/wildfly-camel/dir/ .galleon/hashes/modules/system/layers/base/org/jboss/as/product/wildfly-camel/dir/META-INF/ .galleon/hashes/modules/system/layers/fuse/ .galleon/hashes/modules/system/layers/fuse/de/ ```</body>
		<created>2019-06-26 14:51:33</created>
		<closed>2019-07-23 06:29:23</closed>
	</bug>
	<bug>
		<id>2822</id>
		<title>CXF BOM/EAP container version mismatch</title>
		<body>CrossRef: https://issues.jboss.org/browse/ENTESB-10436</body>
		<created>2019-05-21 10:42:07</created>
		<closed>2019-05-21 11:28:42</closed>
	</bug>
	<bug>
		<id>2821</id>
		<title>JsonProcessingException not found for micrometer component</title>
		<body>Have problem to add :  addRoutePolicyFactory(new MicrometerRoutePolicyFactory()); setMessageHistoryFactory(new MicrometerMessageHistoryFactory());  to my context,  When I deploly to wildfly 16.0.0.Final  patch 10.0.0 I get:  ```  Caused by: org.jboss.weld.exceptions.DeploymentException     Caused by: javax.enterprise.event.ObserverException     Caused by: java.lang.NoClassDefFoundError: com/fasterxml/jackson/core/JsonProcessingException     Caused by: java.lang.ClassNotFoundException: com.fasterxml.jackson.core.JsonProcessingException from [Module \"org.apache.camel.component.micrometer\" version 2.23.1 from local module loader @26ba2a48 (finder: local module finder @5f2050f6 (roots: /opt/jboss/wildfly/modules,/opt/jboss/wildfly/modules/system/layers/fuse,/opt/jboss/wildfly/modules/system/layers/base))]"}} ``` </body>
		<created>2019-05-21 08:00:49</created>
		<closed>2019-05-22 07:08:35</closed>
	</bug>
	<bug>
		<id>2818</id>
		<title>WSPasswordCallback no longer on classpath</title>
		<body>Happens on the wildfly-17.x branch  ``` import org.apache.wss4j.common.ext.WSPasswordCallback ```</body>
		<created>2019-05-16 09:44:56</created>
		<closed>2020-07-06 11:29:11</closed>
	</bug>
	<bug>
		<id>2817</id>
		<title>Docker component socket mode does not work</title>
		<body>https://issues.apache.org/jira/browse/CAMEL-13526</body>
		<created>2019-05-16 06:07:13</created>
		<closed>2019-05-29 09:25:38</closed>
	</bug>
	<bug>
		<id>2813</id>
		<title>Jasypt should not see com.ibm.icu4j</title>
		<body>Jasypt is currently part of org.apache.ws.security in the base layer and because camel uses an identical version it cannot be replaced by a different slot.  ``` Caused by: org.jasypt.exceptions.EncryptionInitializationException: java.lang.NoClassDefFoundError: com/ibm/icu/text/Normalizer at org.jasypt.encryption.pbe.StandardPBEByteEncryptor.initialize(StandardPBEByteEncryptor.java:716) at org.jasypt.encryption.pbe.StandardPBEStringEncryptor.initialize(StandardPBEStringEncryptor.java:553) at org.jasypt.encryption.pbe.StandardPBEStringEncryptor.decrypt(StandardPBEStringEncryptor.java:705) at org.apache.camel.component.jasypt.JasyptPropertiesParser.parseProperty(JasyptPropertiesParser.java:60)  ```</body>
		<created>2019-05-13 12:43:39</created>
		<closed>2019-05-14 14:37:11</closed>
	</bug>
	<bug>
		<id>2812</id>
		<title>No MBeans registered for system context</title>
		<body>``` mvn clean install -Dtest=JMXIntegrationTest ```</body>
		<created>2019-05-13 12:40:43</created>
		<closed>2019-05-29 09:26:32</closed>
	</bug>
	<bug>
		<id>2811</id>
		<title>Cannot resolve optaplanner endpoint</title>
		<body>``` Caused by: org.apache.camel.ResolveEndpointFailedException: Failed to resolve endpoint: optaplanner://optaplanner/solverConfig.xml due to: KieServices must be specified at org.apache.camel.impl.engine.AbstractCamelContext.getEndpoint(AbstractCamelContext.java:769) at org.apache.camel.support.CamelContextHelper.getMandatoryEndpoint(CamelContextHelper.java:71) at org.apache.camel.impl.DefaultRouteContext.resolveEndpoint(DefaultRouteContext.java:118) at org.apache.camel.impl.DefaultRouteContext.resolveEndpoint(DefaultRouteContext.java:124) ```</body>
		<created>2019-05-13 12:38:37</created>
		<closed>2019-05-14 14:37:11</closed>
	</bug>
	<bug>
		<id>2810</id>
		<title>No endpoint could be found for: header.Camel-Saga-Compensate</title>
		<body>https://issues.apache.org/jira/browse/CAMEL-13507</body>
		<created>2019-05-13 12:18:12</created>
		<closed>2019-05-29 09:26:47</closed>
	</bug>
	<bug>
		<id>2802</id>
		<title>Spring based deployments no longer work with Camel3</title>
		<body>``` mvn clean install -Dtest=SpringBeanTransformTest  org.apache.camel.RoutesBuilder is an interface, and JAXB can't handle interfaces. this problem is related to the following location: at org.apache.camel.RoutesBuilder at private java.util.List org.apache.camel.core.xml.AbstractCamelContextFactoryBean.builders at org.apache.camel.core.xml.AbstractCamelContextFactoryBean at org.apache.camel.spring.CamelContextFactoryBean ```</body>
		<created>2019-04-30 12:19:12</created>
		<closed>2019-05-13 12:34:17</closed>
	</bug>
	<bug>
		<id>2794</id>
		<title>Wrong versions or missing entries for artifacts from extras[ABC] in licenses.xml</title>
		<body>Caused by the fact that we call the license plugin in feature/pack only. Versions and artifacts managed in extras[A|B|C] are thus missing.   See also https://issues.jboss.org/browse/ENTESB-10002</body>
		<created>2019-04-12 11:46:01</created>
		<closed>2019-04-12 17:33:07</closed>
	</bug>
	<bug>
		<id>2792</id>
		<title>Thread contention in Xalan's XPath.evaluate()</title>
		<body>Cloned from https://issues.jboss.org/browse/ENTESB-10400. Same as https://issues.apache.org/jira/browse/XALANJ-2540 . See also https://issues.jboss.org/browse/ENTESB-10400?focusedCommentId=13720608&amp;page=com.atlassian.jira.plugin.system.issuetabpanels%3Acomment-tabpanel#comment-13720608 </body>
		<created>2019-04-11 07:51:58</created>
		<closed>2019-04-11 09:55:13</closed>
	</bug>
	<bug>
		<id>2790</id>
		<title>org.apache.tika module has missing dependency for org.apache.xerces</title>
		<body>Harmless, but ugly looking exception that appears on each processed exchange:  ``` [0m[31m04:19:08,404 ERROR [stderr] (pool-153-thread-1) java.lang.ClassNotFoundException: org.apache.xerces.util.SecurityManager from [Module "org.apache.tika" from local module loader @ef9296d (finder: local module finder @36c88a32 (roots: /modules/system/layers/fuse,/modules/system/layers/base))] [0m[31m04:19:08,405 ERROR [stderr] (pool-153-thread-1) at org.jboss.modules.ModuleClassLoader.findClass(ModuleClassLoader.java:255) [0m[31m04:19:08,405 ERROR [stderr] (pool-153-thread-1) at org.jboss.modules.ConcurrentClassLoader.performLoadClassUnchecked(ConcurrentClassLoader.java:410) [0m[31m04:19:08,405 ERROR [stderr] (pool-153-thread-1) at org.jboss.modules.ConcurrentClassLoader.performLoadClass(ConcurrentClassLoader.java:398) [0m[31m04:19:08,405 ERROR [stderr] (pool-153-thread-1) at org.jboss.modules.ConcurrentClassLoader.loadClass(ConcurrentClassLoader.java:116) [0m[31m04:19:08,405 ERROR [stderr] (pool-153-thread-1) at java.lang.Class.forName0(Native Method) [0m[31m04:19:08,405 ERROR [stderr] (pool-153-thread-1) at java.lang.Class.forName(Class.java:264) [0m[31m04:19:08,405 ERROR [stderr] (pool-153-thread-1) at org.apache.tika.utils.XMLReaderUtils.trySetXercesSecurityManager(XMLReaderUtils.java:679) [0m[31m04:19:08,405 ERROR [stderr] (pool-153-thread-1) at org.apache.tika.utils.XMLReaderUtils.access$100(XMLReaderUtils.java:62) [0m[31m04:19:08,406 ERROR [stderr] (pool-153-thread-1) at org.apache.tika.utils.XMLReaderUtils$UnrecognizedPoolSAXParser.reset(XMLReaderUtils.java:885) [0m[31m04:19:08,406 ERROR [stderr] (pool-153-thread-1) at org.apache.tika.utils.XMLReaderUtils.releaseParser(XMLReaderUtils.java:574) [0m[31m04:19:08,406 ERROR [stderr] (pool-153-thread-1) at org.apache.tika.utils.XMLReaderUtils.parseSAX(XMLReaderUtils.java:455) [0m[31m04:19:08,406 ERROR [stderr] (pool-153-thread-1) at org.apache.tika.parser.odf.OpenDocumentContentParser.parseInternal(OpenDocumentContentParser.java:599) [0m[31m04:19:08,406 ERROR [stderr] (pool-153-thread-1) at org.apache.tika.parser.odf.OpenDocumentParser.handleZipEntry(OpenDocumentParser.java:220) [0m[31m04:19:08,406 ERROR [stderr] (pool-153-thread-1) at org.apache.tika.parser.odf.OpenDocumentParser.handleZipFile(OpenDocumentParser.java:204) [0m[31m04:19:08,406 ERROR [stderr] (pool-153-thread-1) at org.apache.tika.parser.odf.OpenDocumentParser.parse(OpenDocumentParser.java:157) [0m[31m04:19:08,406 ERROR [stderr] (pool-153-thread-1) at org.apache.tika.parser.CompositeParser.parse(CompositeParser.java:280) [0m[31m04:19:08,406 ERROR [stderr] (pool-153-thread-1) at org.apache.tika.parser.CompositeParser.parse(CompositeParser.java:280) [0m[31m04:19:08,406 ERROR [stderr] (pool-153-thread-1) at org.apache.tika.parser.AutoDetectParser.parse(AutoDetectParser.java:143) [0m[31m04:19:08,407 ERROR [stderr] (pool-153-thread-1) at org.apache.camel.component.tika.TikaProducer.doParse(TikaProducer.java:106) [0m[31m04:19:08,407 ERROR [stderr] (pool-153-thread-1) at org.apache.camel.component.tika.TikaProducer.process(TikaProducer.java:78)  ```</body>
		<created>2019-04-08 10:04:37</created>
		<closed>2019-04-08 11:13:27</closed>
	</bug>
	<bug>
		<id>2786</id>
		<title>camel-script throws NCDFE for org/apache/camel/script/osgi/Activator</title>
		<body>It's a harmless error from a side effect of #2771. But it looks ugly in the logs so it'd be good to avoid it.  ``` WARN  [org.jboss.modules.define] (pool-213-thread-1) Failed to define class org.apache.camel.script.osgi.Activator in Module "org.apache.camel.component.script" version 2.23.1 from local module loader @ef9296d (finder: local module finder @36c88a32 (roots: /mnt/hudson_workspace/workspace/wildfly-camel-stability/itests/standalone/basic/target/wildfly-16.0.0.Final/modules,/mnt/hudson_workspace/workspace/wildfly-camel-stability/itests/standalone/basic/target/wildfly-16.0.0.Final/modules/system/layers/fuse,/mnt/hudson_workspace/workspace/wildfly-camel-stability/itests/standalone/basic/target/wildfly-16.0.0.Final/modules/system/layers/base)): java.lang.NoClassDefFoundError: Failed to link org/apache/camel/script/osgi/Activator (Module "org.apache.camel.component.script" version 2.23.1 from local module loader @ef9296d (finder: local module finder @36c88a32 (roots: /mnt/hudson_workspace/workspace/wildfly-camel-stability/itests/standalone/basic/target/wildfly-16.0.0.Final/modules,/mnt/hudson_workspace/workspace/wildfly-camel-stability/itests/standalone/basic/target/wildfly-16.0.0.Final/modules/system/layers/fuse,/mnt/hudson_workspace/workspace/wildfly-camel-stability/itests/standalone/basic/target/wildfly-16.0.0.Final/modules/system/layers/base))): org/osgi/framework/BundleActivator at java.lang.ClassLoader.defineClass1(Native Method) at java.lang.ClassLoader.defineClass(ClassLoader.java:763) at org.jboss.modules.ModuleClassLoader.doDefineOrLoadClass(ModuleClassLoader.java:423) at org.jboss.modules.ModuleClassLoader.defineClass(ModuleClassLoader.java:555) at org.jboss.modules.ModuleClassLoader.loadClassLocal(ModuleClassLoader.java:339) at org.jboss.modules.ModuleClassLoader$1.loadClassLocal(ModuleClassLoader.java:126) at org.jboss.modules.Module.loadModuleClass(Module.java:731) at org.jboss.modules.ModuleClassLoader.findClass(ModuleClassLoader.java:247) at org.jboss.modules.ConcurrentClassLoader.performLoadClassUnchecked(ConcurrentClassLoader.java:410) at org.jboss.modules.ConcurrentClassLoader.performLoadClass(ConcurrentClassLoader.java:398) at org.jboss.modules.ConcurrentClassLoader.loadClass(ConcurrentClassLoader.java:116) at java.lang.Class.forName0(Native Method) at java.lang.Class.forName(Class.java:264) at org.apache.camel.builder.script.ScriptBuilder.checkForOSGiEngine(ScriptBuilder.java:384) at org.apache.camel.builder.script.ScriptBuilder.tryCreateScriptEngine(ScriptBuilder.java:371) at org.apache.camel.builder.script.ScriptBuilder.createScriptEngine(ScriptBuilder.java:337) at org.apache.camel.builder.script.ScriptBuilder.&lt;init&gt;(ScriptBuilder.java:112) at org.apache.camel.builder.script.ScriptBuilder.&lt;init&gt;(ScriptBuilder.java:81) at org.apache.camel.builder.script.ScriptBuilder.script(ScriptBuilder.java:212) at org.wildfly.camel.test.script.ScriptIntegrationTest$1.configure(ScriptIntegrationTest.java:78) ```</body>
		<created>2019-04-02 06:57:01</created>
		<closed>2019-04-02 07:55:27</closed>
	</bug>
	<bug>
		<id>2783</id>
		<title>No ActiveMQ connection factory with RAR deployment</title>
		<body>The ActiveMQIntegrationTest does not longer work with WildFly17  ``` mvn clean install -Dtest=ActiveMQIntegrationTest ```  ``` 15:57:47,810 INFO  [org.jboss.as.server.deployment] (MSC service thread 1-6) WFLYSRV0027: Starting deployment of "activemq-rar.rar" (runtime-name: "activemq-rar.rar") 15:57:49,071 INFO  [org.jboss.as.connector.deployers.RADeployer] (MSC service thread 1-1) IJ020001: Required license terms for file:/Users/tdiesler/git/wildfly-camel/itests/standalone/basic/target/wildfly-17.0.0.Beta1-SNAPSHOT/standalone/tmp/vfs/temp/temp5533d36a4008de6c/content-5b7c537cc0b48c8f/contents/ 15:57:49,106 WARN  [org.jboss.as.connector.deployers.RADeployer] (MSC service thread 1-1) IJ020017: Invalid archive: file:/Users/tdiesler/git/wildfly-camel/itests/standalone/basic/target/wildfly-17.0.0.Beta1-SNAPSHOT/standalone/tmp/vfs/temp/temp5533d36a4008de6c/content-5b7c537cc0b48c8f/contents/ 15:57:49,109 INFO  [org.jboss.as.connector.deployers.RaXmlDeployer] (MSC service thread 1-8) IJ020001: Required license terms for file:/Users/tdiesler/git/wildfly-camel/itests/standalone/basic/target/wildfly-17.0.0.Beta1-SNAPSHOT/standalone/tmp/vfs/temp/temp5533d36a4008de6c/content-5b7c537cc0b48c8f/contents/ 15:57:49,118 WARN  [org.jboss.as.connector.deployers.RaXmlDeployer] (MSC service thread 1-8) IJ020017: Invalid archive: file:/Users/tdiesler/git/wildfly-camel/itests/standalone/basic/target/wildfly-17.0.0.Beta1-SNAPSHOT/standalone/tmp/vfs/temp/temp5533d36a4008de6c/content-5b7c537cc0b48c8f/contents/ 15:57:49,119 INFO  [org.jboss.as.connector.deployers.RaXmlDeployer] (MSC service thread 1-8) IJ020002: Deployed: file:/Users/tdiesler/git/wildfly-camel/itests/standalone/basic/target/wildfly-17.0.0.Beta1-SNAPSHOT/standalone/tmp/vfs/temp/temp5533d36a4008de6c/content-5b7c537cc0b48c8f/contents/ 15:57:49,134 INFO  [org.jboss.as.server] (management-handler-thread - 1) WFLYSRV0010: Deployed "activemq-rar.rar" (runtime-name : "activemq-rar.rar") ```  CrossRef: https://issues.jboss.org/browse/WFLY-11904</body>
		<created>2019-03-25 15:14:39</created>
		<closed>2019-11-13 14:13:56</closed>
	</bug>
	<bug>
		<id>2782</id>
		<title>Invalid TCCL for CXF webapp deployments</title>
		<body>A user reports ...  ``` ClassLoader cl = Thread.currentThread().getContextClassLoader();     if(cl instanceof ModuleClassLoader) {       ModuleClassLoader mcl = (ModuleClassLoader)cl;       String moduleName = mcl.getModule().getIdentifier().toString();       if(moduleName.startsWith("deployment")) { ```  The problem is that the "moduleName" for Camel applications (at least for Camel-CXF based applications) is always "org.wildfly.extension.camel.cxf.undertow" instead of "deployment.OurApplication.war".  CrossRef: https://issues.jboss.org/browse/ENTESB-10373 </body>
		<created>2019-03-20 07:15:50</created>
		<closed>2019-04-16 08:17:02</closed>
	</bug>
	<bug>
		<id>2763</id>
		<title>ActiveMQ reports wrong number of arguments</title>
		<body>CrossRef: https://issues.apache.org/jira/browse/CAMEL-13145</body>
		<created>2019-02-13 09:16:22</created>
		<closed>2019-02-19 08:14:07</closed>
	</bug>
	<bug>
		<id>2758</id>
		<title>Unable to build docker image</title>
		<body>The s2i-wildfly base image has upgraded to JDK 11. The java command to activate the camel subsystem is failing: ``` [ERROR] DOCKER&gt; Unable to build image [wildflyext/wildfly-camel] : The command '/bin/sh -c java -jar /wildfly/jboss-modules.jar -mp /wildfly/modules org.wildfly.extras.config --configs camel --enable &amp;&amp; chmod g=u -R /wildfly' returned a non-zero code: 1  [The command '/bin/sh -c java -jar /wildfly/jboss-modules.jar -mp /wildfly/modules org.wildfly.extras.config --configs camel --enable &amp;&amp; chmod g=u -R /wildfly' returned a non-zero code: 1 ] ```</body>
		<created>2019-02-06 08:03:30</created>
		<closed>2019-02-06 09:06:24</closed>
	</bug>
	<bug>
		<id>2757</id>
		<title>GPRC DNS name resolution fails</title>
		<body>Happens during server setup (i.e. on the surefire client side) with camel-2.23.1 on eap-7.2 and prevents the GRPCIntegrationTest to run.  ``` 09:59:28,394 INFO  [org.jboss.as.server] (management-handler-thread - 1) WFLYSRV0010: Deployed "camel-grpc-tests.jar" (runtime-name : "camel-grpc-tests.jar") 09:59:28,760 INFO  [org.jboss.arquillian.testenricher.cdi.container.BeanManagerProducer] (pool-8-thread-2) BeanManager not found. 09:59:28,908 INFO  [org.apache.camel.impl.DefaultCamelContext] (pool-8-thread-2) Apache Camel 2.23.1 (CamelContext: camel-1) is starting 09:59:28,910 INFO  [org.apache.camel.management.ManagedManagementStrategy] (pool-8-thread-2) JMX is enabled 09:59:28,977 INFO  [org.wildfly.extension.camel] (pool-8-thread-2) Camel context starting: camel-1 09:59:28,977 INFO  [org.wildfly.extension.camel] (MSC service thread 1-1) Bound camel naming object: java:jboss/camel/context/camel-1 09:59:29,915 INFO  [org.apache.camel.impl.converter.DefaultTypeConverter] (pool-8-thread-2) Type converters loaded (core: 195, classpath: 2786) 09:59:30,014 INFO  [org.apache.camel.impl.DefaultCamelContext] (pool-8-thread-2) StreamCaching is not in use. If using streams then its recommended to enable stream caching. See more details at http://camel.apache.org/stream-caching.html 09:59:30,016 INFO  [org.apache.camel.impl.HeadersMapFactoryResolver] (pool-8-thread-2) Detected and using custom HeadersMapFactory: org.apache.camel.component.headersmap.FastHeadersMapFactory@28a3631b 09:59:30,041 INFO  [org.apache.camel.component.grpc.GrpcProducer] (pool-8-thread-2) Creating channel to the remote gRPC server localhost:1100 09:59:30,173 INFO  [org.apache.camel.impl.DefaultCamelContext] (pool-8-thread-2) Route: route1 started and consuming from: direct://start 09:59:30,174 INFO  [org.apache.camel.impl.DefaultCamelContext] (pool-8-thread-2) Total 1 routes, of which 1 are started 09:59:30,175 INFO  [org.apache.camel.impl.DefaultCamelContext] (pool-8-thread-2) Apache Camel 2.23.1 (CamelContext: camel-1) started in 1.268 seconds 09:59:30,223 ERROR [stderr] (grpc-default-executor-0) Exception in thread "grpc-default-executor-0" java.lang.AssertionError 09:59:30,223 ERROR [stderr] (grpc-default-executor-0) at io.grpc.internal.DnsNameResolver.getResourceResolver(DnsNameResolver.java:529) 09:59:30,223 ERROR [stderr] (grpc-default-executor-0) at io.grpc.internal.DnsNameResolver.access$500(DnsNameResolver.java:59) 09:59:30,223 ERROR [stderr] (grpc-default-executor-0) at io.grpc.internal.DnsNameResolver$1.run(DnsNameResolver.java:206) 09:59:30,224 ERROR [stderr] (grpc-default-executor-0) at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) 09:59:30,224 ERROR [stderr] (grpc-default-executor-0) at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) 09:59:30,224 ERROR [stderr] (grpc-default-executor-0) at java.lang.Thread.run(Thread.java:748) 09:59:35,187 INFO  [org.apache.camel.impl.DefaultCamelContext] (pool-8-thread-2) Apache Camel 2.23.1 (CamelContext: camel-1) is shutting down 09:59:35,210 INFO  [org.apache.camel.impl.DefaultShutdownStrategy] (pool-8-thread-2) Starting to graceful shutdown 1 routes (timeout 300 seconds) 09:59:35,213 INFO  [org.apache.camel.impl.DefaultShutdownStrategy] (Camel (camel-1) thread #2 - ShutdownTask) Waiting as there are still 1 inflight and pending exchanges to complete, timeout in 300 seconds. Inflights per route: [route1 = 1] 09:59:35,216 INFO  [org.apache.camel.impl.DefaultShutdownStrategy] (Camel (camel-1) thread #2 - ShutdownTask) There are 1 inflight exchanges: InflightExchange: [exchangeId=ID-MacBook-1549011568814-0-1, fromRouteId=route1, routeId=route1, nodeId=to1, elapsed=0, duration=5024] 09:59:36,218 INFO  [org.apache.camel.impl.DefaultShutdownStrategy] (Camel (camel-1) thread #2 - ShutdownTask) Waiting as there are still 1 inflight and pending exchanges to complete, timeout in 299 seconds. Inflights per route: [route1 = 1] ```</body>
		<created>2019-02-01 09:02:36</created>
		<closed>2019-02-01 09:34:14</closed>
	</bug>
	<bug>
		<id>2752</id>
		<title>Context MBean not unregistered on startup failure</title>
		<body>https://issues.apache.org/jira/browse/CAMEL-13094</body>
		<created>2019-01-23 12:11:24</created>
		<closed>2019-01-23 13:04:06</closed>
	</bug>
	<bug>
		<id>2744</id>
		<title>Module checker requires wildfly-feature-pack.xml</title>
		<body></body>
		<created>2019-01-16 10:02:15</created>
		<closed>2019-01-16 11:17:38</closed>
	</bug>
	<bug>
		<id>2729</id>
		<title>MALWARE in maven repository stored dependency file during build</title>
		<body>I cloned the project and tried to build it yesterday 19.dec 2018 evening ZULU. It failed at wildfly-camel/feature/pack/pom.xml mvn install  on failed download of dependend file &amp;lt;dependency&amp;gt;             &amp;lt;groupId&amp;gt;org.acplt.remotetea&amp;lt;/groupId&amp;gt;             &amp;lt;artifactId&amp;gt;remotetea-oncrpc&amp;lt;/artifactId&amp;gt;             &amp;lt;version&amp;gt;1.1.2&amp;lt;/version&amp;gt;         &amp;lt;/dependency&amp;gt;  our router blocked the file remotetea-oncrpc-1.1.2.jar  with this messaGE: &lt;*- Network Based Malware From "asa5508sfr" at Wed Dec 19 18:42:28 2018 UTC -*&gt;   Sha256: 5db61815b406f964a691ef5b3c7fae6107d45713c4c32bbbaa1268e5a0624d12 Disposition: Malware Threat name: W32.Auto:5db61815b4.in05.Talos  </body>
		<created>2018-12-20 10:22:07</created>
		<closed>2019-02-28 15:49:01</closed>
	</bug>
	<bug>
		<id>2720</id>
		<title>Module org.dozer.mapper cannot find javax.el implementation</title>
		<body>During the camel-dozer component startup 2 warnings are printed in the log:  &gt; 2018-12-05T22:42:44.076Z WARN [org.dozer.el.ELExpressionFactory] (MSC service thread 1-7) &gt; javax.el is not supported; Failed to resolve ExpressionFactory, com.sun.el.ExpressionFactoryImpl from [Module "org.dozer.mapper" version 6.2.0 from local module loader @37e547da (finder: local module finder @2b6856dd (roots: /wildfly/provided_modules,/wildfly/modules,/wildfly/modules/system/layers/fuse,/wildfly/modules/system/layers/base))] &gt; 2018-12-05T22:42:44.076Z WARN [org.apache.camel.converter.dozer.MapperFactory] (MSC service thread 1-7) &gt; Expressions are not supported by Dozer. Are you missing javax.el dependency?  The missing dependency is forcing dozer to use the NoopELEngine. Adding the **org.glassfish.javax.el** dependency directly to the module.xml is resolving the issue:  ``` &lt;?xml version="1.0" encoding="UTF-8"?&gt; &lt;module name="org.dozer.mapper" xmlns="urn:jboss:module:1.1"&gt;     &lt;properties&gt;         &lt;property name="jboss.api" value="private"/&gt;     &lt;/properties&gt;     &lt;resources&gt;         &lt;resource-root path="dozer-core-6.2.0.jar"/&gt;     &lt;/resources&gt;     &lt;dependencies&gt;         &lt;module name="javax.api"/&gt;         &lt;module name="javax.el.api"/&gt;         &lt;module name="org.glassfish.javax.el"/&gt;         &lt;module name="javax.xml.bind.api"/&gt;         &lt;module name="org.apache.camel.component.dozer"/&gt;         &lt;module name="org.apache.commons.beanutils"/&gt;         &lt;module name="org.apache.commons.io"/&gt;         &lt;module name="org.apache.commons.lang3"/&gt;         &lt;module name="org.objenesis"/&gt;         &lt;module name="org.slf4j"/&gt;     &lt;/dependencies&gt; &lt;/module&gt; ```</body>
		<created>2018-12-05 23:16:47</created>
		<closed>2018-12-06 09:51:40</closed>
	</bug>
	<bug>
		<id>2711</id>
		<title>Unable to build image wildflyext/wildfly-camel</title>
		<body>Docker CI build is failing when attempting to assemble the Docker image:  ``` [ERROR] DOCKER&gt; Unable to build image [wildflyext/wildfly-camel] : The command '/bin/sh -c java -jar /wildfly/jboss-modules.jar -mp /wildfly/modules org.wildfly.extras.config --configs camel --enable &amp;&amp; chmod g=u -R /wildfly' returned a non-zero code: 1  [The command '/bin/sh -c java -jar /wildfly/jboss-modules.jar -mp /wildfly/modules org.wildfly.extras.config --configs camel --enable &amp;&amp; chmod g=u -R /wildfly' returned a non-zero code: 1 ] ```  https://fabric8-ci.fusesource.com/view/wildfly-camel/job/wildfly-camel-docker/1016/console  Assembly output has: ``` [WARNING] Skipping artifact: org.wildfly.camel:wildfly-camel-patch:tar.gz:8.1.0-SNAPSHOT; it does not have an associated file or directory. ``` Seems to have started failing after `maven-assembly-plugin` was upgraded for #2704.</body>
		<created>2018-11-26 07:26:45</created>
		<closed>2018-11-28 11:17:47</closed>
	</bug>
	<bug>
		<id>2670</id>
		<title>BusDeploymentAspect creates CXF DefaultBus using wrong class loader</title>
		<body>`org.jboss.wsf.stack.cxf.deployment.aspect.BusDeploymentAspect.start()` [1] is probably triggered by some WS annotation. It sets a class loader of `org.jboss.ws.jaxws-client` which is then effective for all calls to `org.apache.cxf.bus.extension.ExtensionManagerImpl.getBean[s]OfType()` which in turn returns the jboss-ws implementation of `HttpDestinationFactory` intead of ours. This turns out to be a problem for CXF RS tests using https endpoints. A stack trace like this occurs:  ``` jboss.deployment.unit."CXFRSBasicSecureProducerIntegrationTest.war".WeldStartService: Failed to start service at org.jboss.msc.service.ServiceControllerImpl$StartTask.execute(ServiceControllerImpl.java:1728) at org.jboss.msc.service.ServiceControllerImpl$ControllerTask.run(ServiceControllerImpl.java:1556) at org.jboss.threads.ContextClassLoaderSavingRunnable.run(ContextClassLoaderSavingRunnable.java:35) at org.jboss.threads.EnhancedQueueExecutor.safeRun(EnhancedQueueExecutor.java:1985) at org.jboss.threads.EnhancedQueueExecutor$ThreadBody.doRunTask(EnhancedQueueExecutor.java:1487) at org.jboss.threads.EnhancedQueueExecutor$ThreadBody.run(EnhancedQueueExecutor.java:1378) at java.lang.Thread.run(Thread.java:748) Caused by: org.jboss.weld.exceptions.DeploymentException: Failed to create route route4: Route(route4)[[From[https://localhost:xxxxxx@0x2a0d0a9c]]] because of ServiceConstructionException at org.jboss.weld.bootstrap.events.AbstractDeploymentContainerEvent.fire(AbstractDeploymentContainerEvent.java:38) at org.jboss.weld.bootstrap.events.AfterDeploymentValidationImpl.fire(AfterDeploymentValidationImpl.java:28) at org.jboss.weld.bootstrap.WeldStartup.validateBeans(WeldStartup.java:499) at org.jboss.weld.bootstrap.WeldBootstrap.validateBeans(WeldBootstrap.java:93) at org.jboss.as.weld.WeldStartService.start(WeldStartService.java:98) at org.jboss.msc.service.ServiceControllerImpl$StartTask.startService(ServiceControllerImpl.java:1736) at org.jboss.msc.service.ServiceControllerImpl$StartTask.execute(ServiceControllerImpl.java:1698) ... 6 more Caused by: org.apache.camel.FailedToCreateRouteException: Failed to create route route4: Route(route4)[[From[https://localhost:xxxxxx@0x2a0d0a9c]]] because of ServiceConstructionException at org.apache.camel.impl.RouteService.warmUp(RouteService.java:147) at org.apache.camel.impl.DefaultCamelContext.doWarmUpRoutes(DefaultCamelContext.java:3949) at org.apache.camel.impl.DefaultCamelContext.safelyStartRouteServices(DefaultCamelContext.java:3856) at org.apache.camel.impl.DefaultCamelContext.doStartOrResumeRoutes(DefaultCamelContext.java:3642) at org.apache.camel.impl.DefaultCamelContext.doStartCamel(DefaultCamelContext.java:3494) at org.apache.camel.impl.DefaultCamelContext.access$000(DefaultCamelContext.java:209) at org.apache.camel.impl.DefaultCamelContext$2.call(DefaultCamelContext.java:3253) at org.apache.camel.impl.DefaultCamelContext$2.call(DefaultCamelContext.java:3249) at org.apache.camel.impl.DefaultCamelContext.doWithDefinedClassLoader(DefaultCamelContext.java:3272) at org.apache.camel.impl.DefaultCamelContext.doStart(DefaultCamelContext.java:3249) at org.apache.camel.support.ServiceSupport.start(ServiceSupport.java:61) at org.apache.camel.impl.DefaultCamelContext.start(DefaultCamelContext.java:3165) at org.apache.camel.impl.DefaultCamelContext$Proxy$_$$_WeldClientProxy.start(Unknown Source) at org.apache.camel.cdi.CdiCamelExtension.afterDeploymentValidation(CdiCamelExtension.java:425) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at org.jboss.weld.injection.StaticMethodInjectionPoint.invoke(StaticMethodInjectionPoint.java:95) at org.jboss.weld.injection.MethodInvocationStrategy$SpecialParamPlusBeanManagerStrategy.invoke(MethodInvocationStrategy.java:144) at org.jboss.weld.event.ObserverMethodImpl.sendEvent(ObserverMethodImpl.java:330) at org.jboss.weld.event.ExtensionObserverMethodImpl.sendEvent(ExtensionObserverMethodImpl.java:123) at org.jboss.weld.event.ObserverMethodImpl.sendEvent(ObserverMethodImpl.java:308) at org.jboss.weld.event.ObserverMethodImpl.notify(ObserverMethodImpl.java:286) at javax.enterprise.inject.spi.ObserverMethod.notify(ObserverMethod.java:124) at org.jboss.weld.util.Observers.notify(Observers.java:166) at org.jboss.weld.event.ObserverNotifier.notifySyncObservers(ObserverNotifier.java:285) at org.jboss.weld.event.ObserverNotifier.notify(ObserverNotifier.java:273) at org.jboss.weld.event.ObserverNotifier.fireEvent(ObserverNotifier.java:177) at org.jboss.weld.event.ObserverNotifier.fireEvent(ObserverNotifier.java:171) at org.jboss.weld.bootstrap.events.AbstractContainerEvent.fire(AbstractContainerEvent.java:53) at org.jboss.weld.bootstrap.events.AbstractDeploymentContainerEvent.fire(AbstractDeploymentContainerEvent.java:35) ... 12 more Caused by: org.apache.cxf.service.factory.ServiceConstructionException at org.apache.cxf.jaxrs.JAXRSServerFactoryBean.create(JAXRSServerFactoryBean.java:225) at org.apache.camel.component.cxf.jaxrs.CxfRsConsumer.createServer(CxfRsConsumer.java:62) at org.apache.camel.component.cxf.jaxrs.CxfRsConsumer.&lt;init&gt;(CxfRsConsumer.java:40) at org.apache.camel.component.cxf.jaxrs.CxfRsEndpoint.createConsumer(CxfRsEndpoint.java:191) at org.apache.camel.impl.EventDrivenConsumerRoute.addServices(EventDrivenConsumerRoute.java:69) at org.apache.camel.impl.DefaultRoute.onStartingServices(DefaultRoute.java:107) at org.apache.camel.impl.RouteService.doWarmUp(RouteService.java:172) at org.apache.camel.impl.RouteService.warmUp(RouteService.java:145) ... 43 more Caused by: java.lang.RuntimeException: java.io.IOException: Protocol mismatch for port 8443: engine's protocol is http, the url protocol is https at org.jboss.wsf.stack.cxf.addons.transports.undertow.UndertowServerDestination.finalizeConfig(UndertowServerDestination.java:83) at org.apache.cxf.transport.http.HTTPTransportFactory.getDestination(HTTPTransportFactory.java:288) at org.apache.cxf.endpoint.ServerImpl.initDestination(ServerImpl.java:84) at org.apache.cxf.endpoint.ServerImpl.&lt;init&gt;(ServerImpl.java:63) at org.apache.cxf.jaxrs.JAXRSServerFactoryBean.create(JAXRSServerFactoryBean.java:173) ... 50 more Caused by: java.io.IOException: Protocol mismatch for port 8443: engine's protocol is http, the url protocol is https at org.jboss.wsf.stack.cxf.addons.transports.undertow.UndertowServerEngineFactory.createHttpServerEngine(UndertowServerEngineFactory.java:119) at org.jboss.wsf.stack.cxf.addons.transports.undertow.UndertowServerDestination.finalizeConfig(UndertowServerDestination.java:79) ... 54 more ```  `CXFRSBasicSecureProducerIntegrationTest` from https://github.com/wildfly-extras/wildfly-camel/pull/2661 demonstrates the issue, but only if it is run after e.g. `CXFWSSecureProducerIntegrationTest`  [1] https://github.com/jbossws/jbossws-cxf/blob/ab7866bfe647db4fa114f5eb28ec1217a2817a3d/modules/server/src/main/java/org/jboss/wsf/stack/cxf/deployment/aspect/BusDeploymentAspect.java#L57</body>
		<created>2018-10-05 15:55:13</created>
		<closed>2018-10-18 10:22:19</closed>
	</bug>
	<bug>
		<id>2664</id>
		<title>CDI context creation test fails intermittently</title>
		<body></body>
		<created>2018-10-02 12:59:20</created>
		<closed>2018-10-02 13:34:21</closed>
	</bug>
	<bug>
		<id>2662</id>
		<title>SolrIntegrationTest fails in CI environment</title>
		<body></body>
		<created>2018-09-27 12:25:11</created>
		<closed>2020-02-06 13:03:41</closed>
	</bug>
	<bug>
		<id>2659</id>
		<title>Restore well known extras config module</title>
		<body>Module `org.wildfly.extras.config` used to be provided by fuse-patch. The wildfly-camel related plugin lives in `org.wildfly.extras.config.plugin.camel`  Now that we folded the base functionality from fuse-patch into wfc, we still need to provide the well known config base module. Plugin discovery can work through an alias, which can point to the config base module, which now also contains the plugin.</body>
		<created>2018-09-26 13:54:35</created>
		<closed>2018-09-26 14:31:18</closed>
	</bug>
	<bug>
		<id>2656</id>
		<title>Leaking ServerActivity after a CXF app is undeployed</title>
		<body>Steps to reproduce:  1. build and start WFC  ``` cd wildfly-camel # build a distro in standalone/basic mvn clean install -Dts.all -DskipTests -DskipDockerPull cd itests/standalone/basic # start the distro target/wildfly-14.0.1.Final/bin/standalone.sh -c standalone-full.xml ```  2. Open another console and run `CXFWSConsumerIntegrationTest` 10 times  ``` cd wildfly-camel/itests/standalone/basic for i in {1..10}; do mvn surefire:test -Dtest=CXFWSConsumerIntegrationTest ; done  ```  3. Force GC on the WFC process started above, e.g. using `target/wildfly-14.0.1.Final/bin/jconsole.sh`  4. Get a heap dump of the WFC process started above  5. Open the dump in an analyzer such as Eclipse Memory Analyzer (MAT)  6. Run the following OQL query:  ``` select * from org.apache.camel.spring.SpringCamelContext ```  Expected: no results Actual: 10 results  ![image](https://user-images.githubusercontent.com/1826249/46078814-85919a80-c195-11e8-8698-5470dc3331ac.png) </body>
		<created>2018-09-26 12:07:56</created>
		<closed>2018-10-22 06:29:33</closed>
	</bug>
	<bug>
		<id>2655</id>
		<title>Leaking DeploymentManagerImpl after a CXF app is undeployed</title>
		<body>Reproducible after fixing https://github.com/wildfly-extras/wildfly-camel/issues/2656  Steps to reproduce:  1. build and start WFC  ``` cd wildfly-camel # build a distro in standalone/basic mvn clean install -Dts.all -DskipTests -DskipDockerPull cd itests/standalone/basic # start the distro target/wildfly-14.0.1.Final/bin/standalone.sh -c standalone-full.xml ```  2. Open another console and run `CXFWSConsumerIntegrationTest` 10 times  ``` cd wildfly-camel/itests/standalone/basic for i in {1..10}; do mvn surefire:test -Dtest=CXFWSConsumerIntegrationTest ; done  ```  3. Force GC on the WFC process started above, e.g. using `target/wildfly-14.0.1.Final/bin/jconsole.sh`  4. Get a heap dump of the WFC process started above  5. Open the dump in an analyzer such as Eclipse Memory Analyzer (MAT)  6. Run the following OQL query:  ``` select * from org.apache.camel.spring.SpringCamelContext ```  Expected: no results Actual: 1 result  ![image](https://user-images.githubusercontent.com/1826249/46072167-f8911600-c181-11e8-8046-38578935b7cd.png) </body>
		<created>2018-09-26 09:47:52</created>
		<closed>2018-10-22 06:29:38</closed>
	</bug>
	<bug>
		<id>2644</id>
		<title>CXFEndpointTest Arquillian initialisation fails </title>
		<body>Since the WF 14 upgrade the Docker CI job is failing with:  ``` [INFO] ------------------------------------------------------- [INFO]  T E S T S [INFO] ------------------------------------------------------- [INFO] Running org.wildfly.camel.test.docker.CXFEndpointTest [ERROR] Tests run: 1, Failures: 0, Errors: 1, Skipped: 0, Time elapsed: 0.132 s &lt;&lt;&lt; FAILURE! - in org.wildfly.camel.test.docker.CXFEndpointTest [ERROR] org.wildfly.camel.test.docker.CXFEndpointTest  Time elapsed: 0.132 s  &lt;&lt;&lt; ERROR! java.lang.RuntimeException: Could not create new instance of class org.jboss.arquillian.test.impl.EventTestRunnerAdaptor Caused by: java.lang.reflect.InvocationTargetException Caused by: java.lang.RuntimeException: Could not create new instance of class org.jboss.arquillian.core.impl.ManagerImpl Caused by: java.lang.reflect.InvocationTargetException Caused by: java.lang.RuntimeException: Could not create and process manager Caused by: java.lang.IllegalArgumentException: Attempted to register the same Observer: org.jboss.as.arquillian.container.ServerSetupObserver multiple times, please check classpath for conflicting jar versions  [INFO]  [INFO] Results: [INFO]  [ERROR] Errors:  [ERROR]   CXFEndpointTest.org.wildfly.camel.test.docker.CXFEndpointTest » Runtime Could ... [INFO]  [ERROR] Tests run: 1, Failures: 0, Errors: 1, Skipped: 0 [INFO]  [INFO] ------------------------------------------------------------------------ [INFO] BUILD FAILURE [INFO] ------------------------------------------------------------------------ ``` </body>
		<created>2018-09-07 10:45:55</created>
		<closed>2018-09-07 14:05:19</closed>
	</bug>
	<bug>
		<id>2627</id>
		<title>IllegalStateException on undeploy of Camel CXF applications</title>
		<body>Cloned from https://issues.jboss.org/browse/ENTESB-9314  Whenever a Fuse EAP camel-cxf application is undeployed, it results in the following exception:  ```` java.lang.IllegalStateException at org.jboss.msc.value.InjectedValue.getValue(InjectedValue.java:47) at org.wildfly.extension.camel.service.CamelEndpointDeployerService.undeploy(CamelEndpointDeployerService.java:401) at org.wildfly.extension.camel.service.CamelEndpointDeploymentSchedulerService.unschedule(CamelEndpointDeploymentSchedulerService.java:177) at org.apache.cxf.transport.undertow.wildfly.WildflyHTTPServerEngine.removeServant(WildflyHTTPServerEngine.java:73) at org.apache.cxf.transport.undertow.UndertowHTTPDestination.deactivate(UndertowHTTPDestination.java:158) at org.apache.cxf.transport.AbstractObservable.setMessageObserver(AbstractObservable.java:65) at org.apache.cxf.endpoint.ServerImpl.stop(ServerImpl.java:174) at org.apache.camel.component.cxf.jaxrs.CxfRsConsumer.doStop(CxfRsConsumer.java:111) at org.apache.camel.support.ServiceSupport.stop(ServiceSupport.java:102) at org.apache.camel.util.ServiceHelper.stopService(ServiceHelper.java:142) at org.apache.camel.impl.DefaultShutdownStrategy.shutdownNow(DefaultShutdownStrategy.java:381) at org.apache.camel.impl.DefaultShutdownStrategy$ShutdownTask.run(DefaultShutdownStrategy.java:577) at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) at java.util.concurrent.FutureTask.run(FutureTask.java:266) at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) at java.lang.Thread.run(Thread.java:748) ````  This means that the CXF endpoint deployment is not being fully undeployed. The HTTP endpoint is still active even when the parent WAR has been undeployed.  To see this in action, do the following:  1. Deploy wildfly-camel-examples quickstart camel-cxf-jaxrs ```` mvn install -Pdeploy ````  2. Confirm the CXF REST endpoint works ```` curl -v -L http://127.0.0.1:8080/rest/greet/hello/foo ````  3. Undeploy the quickstart and notice the IllegalStateException in the server logs ```` mvn clean -Pdeploy ````  4. Hit the REST endpoint again and see HTTP 500 response ```` curl -v -L http://127.0.0.1:8080/rest/greet/hello/foo ````  The fact that an HTTP 500 is returned and not 404 indicates that the CXF application is still active.</body>
		<created>2018-08-16 16:31:05</created>
		<closed>2018-09-07 07:53:24</closed>
	</bug>
	<bug>
		<id>2625</id>
		<title>Build hangs on Windows during CLI script execution</title>
		<body>For https://github.com/wildfly-extras/wildfly-camel/commit/023b58187a79392c148cc1e04ab1e836c63516e7 I added some logic to reload the container during one of the test cases. On Windows it gets stuck because  `wildfly-cli.bat ` suspends processing with the `pause` command.  We need to set an environment variable for `NOPAUSE` on the CLI script process to avoid this.  The `WildFlyCli` utility added for the Elytron work will also need modifying.</body>
		<created>2018-08-15 13:40:50</created>
		<closed>2018-08-15 15:40:52</closed>
	</bug>
	<bug>
		<id>2622</id>
		<title>WildFly server reload leads to multiple CamelContextRegistry instances in CamelContextTrackerRegistry</title>
		<body>If you use the `reload` command via the WF CLI, it leads to some very odd behaviour. I tracked it down to `CamelContextRegistryImpl` doing the following in its constructor:   ```CamelContextTrackerRegistry.INSTANCE.addTracker(this)```  Every time `CamelContextRegistryImpl` is created, a new tracker instance is added to the registry.  We should unregister the tracker when the CamelContextRegistryService is stopped.</body>
		<created>2018-08-06 15:52:09</created>
		<closed>2018-08-07 08:12:07</closed>
	</bug>
	<bug>
		<id>2619</id>
		<title>javadoc:javadoc may hang forever</title>
		<body></body>
		<created>2018-08-01 10:03:29</created>
		<closed>2018-08-01 10:26:03</closed>
	</bug>
	<bug>
		<id>2615</id>
		<title>Intermittent failure of EtcdIntegrationTest</title>
		<body>Sometimes Arquillian Cube containers using the 'log' await strategy fail. ``` Caused by: org.apache.http.MalformedChunkCodingException: CRLF expected at end of chunk at org.apache.http.impl.io.ChunkedInputStream.getChunkSize(ChunkedInputStream.java:254) at org.apache.http.impl.io.ChunkedInputStream.nextChunk(ChunkedInputStream.java:226) at org.apache.http.impl.io.ChunkedInputStream.read(ChunkedInputStream.java:185) at org.apache.http.impl.io.ChunkedInputStream.read(ChunkedInputStream.java:214) at org.apache.http.impl.io.ChunkedInputStream.close(ChunkedInputStream.java:317) at org.apache.http.impl.execchain.ResponseEntityProxy.streamClosed(ResponseEntityProxy.java:143) at org.apache.http.conn.EofSensorInputStream.checkClose(EofSensorInputStream.java:228) at org.apache.http.conn.EofSensorInputStream.close(EofSensorInputStream.java:172) at java.io.BufferedInputStream.close(BufferedInputStream.java:483) at java.io.FilterInputStream.close(FilterInputStream.java:181) at org.glassfish.jersey.apache.connector.ApacheConnector$3.close(ApacheConnector.java:644) at java.io.FilterInputStream.close(FilterInputStream.java:181) at org.glassfish.jersey.apache.connector.ApacheConnector$HttpClientResponseInputStream.close(ApacheConnector.java:621) at org.glassfish.jersey.message.internal.EntityInputStream.close(EntityInputStream.java:158) ... 48 more ``` The simple workaround is to use the 'http' await strategy and check the etcd health endpoint.</body>
		<created>2018-07-31 11:56:37</created>
		<closed>2018-07-31 12:30:46</closed>
	</bug>
	<bug>
		<id>2611</id>
		<title>Missing hapi-structures dependencies in module ca.uhn.hapi </title>
		<body>All of the hapi-structures dependencies for camel-hl7 are now optional, which means they never get added to the distro without us adding them into one of our own feature pack POMs.   If you run tests with DEBUG logging, there are a bunch of NCDFEs thrown: ``` 08:21:33,644 DEBUG [org.apache.camel.impl.converter.AnnotationTypeConverterLoader] (pool-8-thread-1) Ignoring converter type: org.apache.camel.component.hl7.HL721Converter as a dependent class could not be found: java.lang.NoClassDefFoundError: ca/uhn/hl7v2/model/v21/message/ACK: java.lang.NoClassDefFoundError: ca/uhn/hl7v2/model/v21/message/ACK at java.lang.Class.getDeclaredMethods0(Native Method) at java.lang.Class.privateGetDeclaredMethods(Class.java:2701) at java.lang.Class.getDeclaredMethods(Class.java:1975) at org.apache.camel.impl.converter.AnnotationTypeConverterLoader.loadConverterMethods(AnnotationTypeConverterLoader.java:262) at org.apache.camel.impl.converter.AnnotationTypeConverterLoader.load(AnnotationTypeConverterLoader.java:130) at org.apache.camel.impl.converter.BaseTypeConverterRegistry.loadTypeConverters(BaseTypeConverterRegistry.java:640) at org.apache.camel.impl.converter.DefaultTypeConverter.doStart(DefaultTypeConverter.java:62) at org.apache.camel.support.ServiceSupport.start(ServiceSupport.java:61)  ```</body>
		<created>2018-07-30 07:57:15</created>
		<closed>2018-09-07 09:05:02</closed>
	</bug>
	<bug>
		<id>2600</id>
		<title>CXF endpoints should be fully exposed before Camel context state == Started</title>
		<body>The planned fix for #2595 alias https://issues.jboss.org/browse/ENTESB-7959 introduces a delay between Camel context start and the point in time when a CXF endpoint is fully exposed.  Thus if I have a route like:  ``` from("timer:foo?period=1s&amp;delay=0") .to("cxfrs://http://foo/bar?resourceClasses=org.foo.bar") ```  the delivery of the first message may fail because the endpoint is not up yet.  Here is an excerpt from a log for a CDI in WAR case:  ``` 2018-07-12 09:05:16,462 INFO  [org.apache.camel.cdi.CdiCamelExtension] (MSC service thread 1-3) Camel CDI is starting Camel context [cxfws-secure-cdi-camel-context] 2018-07-12 09:05:16,466 INFO  [org.apache.camel.impl.DefaultCamelContext] (MSC service thread 1-3) Apache Camel 2.22.1-SNAPSHOT (CamelContext: cxfws-secure-cdi-camel-context) is starting 2018-07-12 09:05:16,467 INFO  [org.apache.camel.management.ManagedManagementStrategy] (MSC service thread 1-3) JMX is enabled 2018-07-12 09:05:16,552 INFO  [org.wildfly.extension.camel] (MSC service thread 1-3) Camel context starting: cxfws-secure-cdi-camel-context 2018-07-12 09:05:16,552 INFO  [org.wildfly.extension.camel] (MSC service thread 1-4) Bound camel naming object: java:jboss/camel/context/cxfws-secure-cdi-camel-context 2018-07-12 09:05:17,547 INFO  [org.apache.cxf.wsdl.service.factory.ReflectionServiceFactoryBean] (MSC service thread 1-3) Creating Service {http://subA.secure.ws.cxf.test.camel.wildfly.org/}GreetingServiceService from class org.wildfly.camel.test.cxf.ws.secure.subA.GreetingService 2018-07-12 09:05:18,101 INFO  [org.apache.cxf.endpoint.ServerImpl] (MSC service thread 1-3) Setting the server's publish address to be https://localhost:8443/webservices/greeting-secure-cdi 2018-07-12 09:05:18,335 INFO  [org.apache.camel.impl.DefaultCamelContext] (MSC service thread 1-3) Route: route1 started and consuming from: direct://start 2018-07-12 09:05:18,339 ERROR [org.wildfly.extension.camel] (MSC service thread 1-3) --- scheduling https://localhost:8443/webservices/greeting-secure-cdi: java.lang.RuntimeException 2018-07-12 09:05:18,370 INFO  [org.apache.camel.impl.DefaultCamelContext] (MSC service thread 1-3) Total 6 routes, of which 6 are started 2018-07-12 09:05:18,371 INFO  [org.apache.camel.impl.DefaultCamelContext] (MSC service thread 1-3) Apache Camel 2.22.1-SNAPSHOT (CamelContext: cxfws-secure-cdi-camel-context) started in 1.906 seconds 2018-07-12 09:05:18,415 ERROR [org.wildfly.extension.camel] (MSC service thread 1-6) --- deploying https://localhost:8443/webservices/greeting-secure-cdi: java.lang.RuntimeException 2018-07-12 09:05:18,467 INFO  [org.wildfly.extension.undertow] (MSC service thread 1-6) WFLYUT0021: Registered web context: '/webservices/greeting-secure-cdi' for server 'default-server' 2018-07-12 09:05:18,468 INFO  [org.wildfly.extension.camel] (MSC service thread 1-6) Add Camel endpoint: http://127.0.0.1:8080/webservices/greeting-secure-cdi ```  Note that the endpoint is exposed at `09:05:18,467` from `MSC service thread 1-6` 96 milliseconds after the camel context started at `09:05:18,371` inside `MSC service thread 1-3`. This is quite a fast machine.</body>
		<created>2018-07-12 09:31:00</created>
		<closed>2020-02-06 13:03:39</closed>
	</bug>
	<bug>
		<id>2580</id>
		<title>NPE in CamelDeploymentSettings when deploying an EAR with two WARs </title>
		<body>``` 14:24:38,489 ERROR [org.jboss.msc.service.fail] (MSC service thread 1-2) MSC000001: Failed to start service jboss.deployment.unit."CXFWSEarBasicSecureProducerIntegrationTest.ear".DEPENDENCIES: org.jboss.msc.service.StartException in service jboss.deployment.unit."CXFWSEarBasicSecureProducerIntegrationTest.ear".DEPENDENCIES: WFLYSRV0153: Failed to process phase DEPENDENCIES of deployment "CXFWSEarBasicSecureProducerIntegrationTest.ear"         at org.jboss.as.server.deployment.DeploymentUnitPhaseService.start(DeploymentUnitPhaseService.java:150)         at org.jboss.msc.service.ServiceControllerImpl$StartTask.startService(ServiceControllerImpl.java:1736)         at org.jboss.msc.service.ServiceControllerImpl$StartTask.execute(ServiceControllerImpl.java:1698)         at org.jboss.msc.service.ServiceControllerImpl$ControllerTask.run(ServiceControllerImpl.java:1556)         at org.jboss.threads.ContextClassLoaderSavingRunnable.run(ContextClassLoaderSavingRunnable.java:35)         at org.jboss.threads.EnhancedQueueExecutor.safeRun(EnhancedQueueExecutor.java:1985)         at org.jboss.threads.EnhancedQueueExecutor$ThreadBody.doRunTask(EnhancedQueueExecutor.java:1487)         at org.jboss.threads.EnhancedQueueExecutor$ThreadBody.run(EnhancedQueueExecutor.java:1378)         at java.lang.Thread.run(Thread.java:748) Caused by: java.lang.NullPointerException         at org.wildfly.extension.camel.deployment.CamelDeploymentSettings.isEnabled(CamelDeploymentSettings.java:60)         at org.wildfly.extension.camel.deployment.CamelIntegrationProcessor.deploy(CamelIntegrationProcessor.java:45)         at org.jboss.as.server.deployment.DeploymentUnitPhaseService.start(DeploymentUnitPhaseService.java:143)         ... 8 more ```  CamelDeploymentSettings.java:60 is `if (childDepSettings.isEnabled()) {` and we do not set `childDepSettings` anywhere except the initializer. Looks like a not completely intialized instance of `CamelDeploymentSettings` is leaking to another thread.</body>
		<created>2018-06-27 12:46:31</created>
		<closed>2018-10-31 15:54:02</closed>
	</bug>
	<bug>
		<id>2577</id>
		<title>wildfly-camel-docker CI build is failing</title>
		<body>Not sure what's going on here because it's working fine for me locally:  https://fabric8-ci.fusesource.com/view/wildfly-camel/job/wildfly-camel-docker/941/console  Seems to have occurred since the WF 13 upgrade.</body>
		<created>2018-06-26 14:22:14</created>
		<closed>2018-08-17 12:36:34</closed>
	</bug>
	<bug>
		<id>2576</id>
		<title>GRPCIntegrationTest fails with camel 2.22.x</title>
		<body>grpc 1.12.0 requires guava 20.0. This was discussed on camel-dev ML.</body>
		<created>2018-06-26 11:58:36</created>
		<closed>2018-07-30 07:28:41</closed>
	</bug>
	<bug>
		<id>2575</id>
		<title>camel-elasticsearch broken after upgrade to lucene 7.2.1 </title>
		<body>After the upgrade of lucene from 5.5.2 to 7.2.1 in Camel 2.22.x (master) the legacy elasticserach does not work anymore:  ``` 2018-06-25 16:26:21,017 SEVERE [org.jboss.arquillian.protocol.jmx.JMXTestRunner] (pool-8-thread-1) Failed: org.wildfly.camel.test.elasticsearch.ElasticsearchIntegrationTest.testIndexContentUsingHeaders: java.lang.RuntimeException: Could not inject members at org.jboss.arquillian.testenricher.cdi.CDIInjectionEnricher.injectClass(CDIInjectionEnricher.java:135) at org.jboss.arquillian.testenricher.cdi.CDIInjectionEnricher.enrich(CDIInjectionEnricher.java:78) at org.jboss.arquillian.test.impl.TestInstanceEnricher.enrich(TestInstanceEnricher.java:52) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at org.jboss.arquillian.core.impl.ObserverImpl.invoke(ObserverImpl.java:94) at org.jboss.arquillian.core.impl.EventContextImpl.invokeObservers(EventContextImpl.java:99) at org.jboss.arquillian.core.impl.EventContextImpl.proceed(EventContextImpl.java:81) at org.jboss.arquillian.test.impl.TestContextHandler.createTestContext(TestContextHandler.java:130) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at org.jboss.arquillian.core.impl.ObserverImpl.invoke(ObserverImpl.java:94) at org.jboss.arquillian.core.impl.EventContextImpl.proceed(EventContextImpl.java:88) at org.jboss.arquillian.test.impl.TestContextHandler.createClassContext(TestContextHandler.java:92) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at org.jboss.arquillian.core.impl.ObserverImpl.invoke(ObserverImpl.java:94) at org.jboss.arquillian.core.impl.EventContextImpl.proceed(EventContextImpl.java:88) at org.jboss.arquillian.test.impl.TestContextHandler.createSuiteContext(TestContextHandler.java:73) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at org.jboss.arquillian.core.impl.ObserverImpl.invoke(ObserverImpl.java:94) at org.jboss.arquillian.core.impl.EventContextImpl.proceed(EventContextImpl.java:88) at org.jboss.arquillian.core.impl.ManagerImpl.fire(ManagerImpl.java:145) at org.jboss.arquillian.core.impl.ManagerImpl.fire(ManagerImpl.java:116) at org.jboss.arquillian.test.impl.EventTestRunnerAdaptor.before(EventTestRunnerAdaptor.java:108) at org.jboss.arquillian.junit.Arquillian$4.evaluate(Arquillian.java:241) at org.jboss.arquillian.junit.Arquillian.multiExecute(Arquillian.java:422) at org.jboss.arquillian.junit.Arquillian.access$200(Arquillian.java:54) at org.jboss.arquillian.junit.Arquillian$5.evaluate(Arquillian.java:259) at org.jboss.arquillian.junit.Arquillian$7$1.invoke(Arquillian.java:315) at org.jboss.arquillian.container.test.impl.execution.BeforeLifecycleEventExecuter.on(BeforeLifecycleEventExecuter.java:35) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at org.jboss.arquillian.core.impl.ObserverImpl.invoke(ObserverImpl.java:94) at org.jboss.arquillian.core.impl.EventContextImpl.invokeObservers(EventContextImpl.java:99) at org.jboss.arquillian.core.impl.EventContextImpl.proceed(EventContextImpl.java:81) at org.jboss.arquillian.test.impl.TestContextHandler.createTestContext(TestContextHandler.java:130) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at org.jboss.arquillian.core.impl.ObserverImpl.invoke(ObserverImpl.java:94) at org.jboss.arquillian.core.impl.EventContextImpl.proceed(EventContextImpl.java:88) at org.jboss.arquillian.test.impl.TestContextHandler.createClassContext(TestContextHandler.java:92) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at org.jboss.arquillian.core.impl.ObserverImpl.invoke(ObserverImpl.java:94) at org.jboss.arquillian.core.impl.EventContextImpl.proceed(EventContextImpl.java:88) at org.jboss.arquillian.test.impl.TestContextHandler.createSuiteContext(TestContextHandler.java:73) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at org.jboss.arquillian.core.impl.ObserverImpl.invoke(ObserverImpl.java:94) at org.jboss.arquillian.core.impl.EventContextImpl.proceed(EventContextImpl.java:88) at org.jboss.arquillian.core.impl.ManagerImpl.fire(ManagerImpl.java:145) at org.jboss.arquillian.core.impl.ManagerImpl.fire(ManagerImpl.java:116) at org.jboss.arquillian.test.impl.EventTestRunnerAdaptor.fireCustomLifecycle(EventTestRunnerAdaptor.java:159) at org.jboss.arquillian.junit.Arquillian$7.evaluate(Arquillian.java:311) at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) at org.jboss.arquillian.junit.Arquillian$2.evaluate(Arquillian.java:204) at org.jboss.arquillian.junit.Arquillian.multiExecute(Arquillian.java:422) at org.jboss.arquillian.junit.Arquillian.access$200(Arquillian.java:54) at org.jboss.arquillian.junit.Arquillian$3.evaluate(Arquillian.java:218) at org.junit.runners.ParentRunner.run(ParentRunner.java:363) at org.jboss.arquillian.junit.Arquillian.run(Arquillian.java:166) at org.junit.runner.JUnitCore.run(JUnitCore.java:137) at org.junit.runner.JUnitCore.run(JUnitCore.java:115) at org.jboss.arquillian.junit.container.JUnitTestRunner.execute(JUnitTestRunner.java:66) at org.jboss.arquillian.protocol.jmx.JMXTestRunner.doRunTestMethod(JMXTestRunner.java:180) at org.jboss.as.arquillian.service.ArquillianService$ExtendedJMXTestRunner.doRunTestMethod(ArquillianService.java:200) at org.jboss.arquillian.protocol.jmx.JMXTestRunner.runTestMethodInternal(JMXTestRunner.java:162) at org.jboss.arquillian.protocol.jmx.JMXTestRunner.runTestMethod(JMXTestRunner.java:141) at org.jboss.as.arquillian.service.ArquillianService$ExtendedJMXTestRunner.runTestMethod(ArquillianService.java:176) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at sun.reflect.misc.Trampoline.invoke(MethodUtil.java:71) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at sun.reflect.misc.MethodUtil.invoke(MethodUtil.java:275) at com.sun.jmx.mbeanserver.StandardMBeanIntrospector.invokeM2(StandardMBeanIntrospector.java:112) at com.sun.jmx.mbeanserver.StandardMBeanIntrospector.invokeM2(StandardMBeanIntrospector.java:46) at com.sun.jmx.mbeanserver.MBeanIntrospector.invokeM(MBeanIntrospector.java:237) at com.sun.jmx.mbeanserver.PerInterface.invoke(PerInterface.java:138) at com.sun.jmx.mbeanserver.MBeanSupport.invoke(MBeanSupport.java:252) at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.invoke(DefaultMBeanServerInterceptor.java:819) at com.sun.jmx.mbeanserver.JmxMBeanServer.invoke(JmxMBeanServer.java:801) at org.jboss.as.jmx.PluggableMBeanServerImpl$TcclMBeanServer.invoke(PluggableMBeanServerImpl.java:1475) at org.jboss.as.jmx.PluggableMBeanServerImpl.invoke(PluggableMBeanServerImpl.java:724) at org.jboss.as.jmx.BlockingNotificationMBeanServer.invoke(BlockingNotificationMBeanServer.java:168) at org.jboss.as.jmx.AuthorizingMBeanServer.invoke(AuthorizingMBeanServer.java:258) at org.jboss.remotingjmx.protocol.v2.ServerProxy$InvokeHandler.handle(ServerProxy.java:950) at org.jboss.remotingjmx.protocol.v2.ServerCommon$MessageReciever$1$1.run(ServerCommon.java:153) at org.jboss.as.jmx.ServerInterceptorFactory$Interceptor$1.run(ServerInterceptorFactory.java:71) at org.jboss.as.jmx.ServerInterceptorFactory$Interceptor$1.run(ServerInterceptorFactory.java:66) at org.wildfly.security.auth.server.SecurityIdentity.runAs(SecurityIdentity.java:287) at org.wildfly.security.auth.server.SecurityIdentity.runAs(SecurityIdentity.java:244) at org.jboss.as.controller.AccessAuditContext.doAs(AccessAuditContext.java:254) at org.jboss.as.controller.AccessAuditContext.doAs(AccessAuditContext.java:225) at org.jboss.as.jmx.ServerInterceptorFactory$Interceptor.handleEvent(ServerInterceptorFactory.java:66) at org.jboss.remotingjmx.protocol.v2.ServerCommon$MessageReciever$1.run(ServerCommon.java:149) at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) at java.lang.Thread.run(Thread.java:748) Caused by: javax.enterprise.inject.CreationException at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) at java.lang.reflect.Constructor.newInstance(Constructor.java:423) at java.lang.Class.newInstance(Class.java:442) at org.jboss.weld.security.NewInstanceAction.run(NewInstanceAction.java:33) at java.security.AccessController.doPrivileged(Native Method) at org.jboss.weld.injection.Exceptions.rethrowException(Exceptions.java:40) at org.jboss.weld.injection.Exceptions.rethrowException(Exceptions.java:78) at org.jboss.weld.injection.StaticMethodInjectionPoint.invoke(StaticMethodInjectionPoint.java:103) at org.jboss.weld.injection.StaticMethodInjectionPoint.invoke(StaticMethodInjectionPoint.java:85) at org.jboss.weld.injection.producer.ProducerMethodProducer.produce(ProducerMethodProducer.java:103) at org.jboss.weld.injection.producer.AbstractMemberProducer.produce(AbstractMemberProducer.java:161) at org.jboss.weld.bean.AbstractProducerBean.create(AbstractProducerBean.java:180) at org.jboss.weld.contexts.AbstractContext.get(AbstractContext.java:96) at org.jboss.weld.bean.ContextualInstanceStrategy$DefaultContextualInstanceStrategy.get(ContextualInstanceStrategy.java:100) at org.jboss.weld.bean.ContextualInstanceStrategy$ApplicationScopedContextualInstanceStrategy.get(ContextualInstanceStrategy.java:140) at org.jboss.weld.bean.ContextualInstance.get(ContextualInstance.java:50) at org.jboss.weld.manager.BeanManagerImpl.getReference(BeanManagerImpl.java:700) at org.jboss.weld.manager.BeanManagerImpl.getInjectableReference(BeanManagerImpl.java:800) at org.jboss.weld.injection.FieldInjectionPoint.inject(FieldInjectionPoint.java:92) at org.jboss.weld.util.Beans.injectBoundFields(Beans.java:336) at org.jboss.weld.util.Beans.injectFieldsAndInitializers(Beans.java:347) at org.jboss.weld.injection.producer.ResourceInjector$1.proceed(ResourceInjector.java:69) at org.jboss.weld.injection.InjectionContextImpl.run(InjectionContextImpl.java:48) at org.jboss.weld.injection.producer.ResourceInjector.inject(ResourceInjector.java:71) at org.jboss.weld.injection.producer.BasicInjectionTarget.inject(BasicInjectionTarget.java:117) at org.jboss.arquillian.testenricher.cdi.CDIInjectionEnricher.injectNonContextualInstance(CDIInjectionEnricher.java:145) at org.jboss.arquillian.testenricher.cdi.CDIInjectionEnricher.injectClass(CDIInjectionEnricher.java:125) ... 127 more Caused by: java.lang.NoSuchFieldError: LUCENE_4_0_0 at org.elasticsearch.Version.&lt;clinit&gt;(Version.java:44) at org.elasticsearch.node.Node.&lt;init&gt;(Node.java:140) at org.elasticsearch.node.NodeBuilder.build(NodeBuilder.java:143) at org.elasticsearch.node.NodeBuilder.node(NodeBuilder.java:150) at org.wildfly.camel.test.elasticsearch.subA.ElasticsearchClientProducer.getClient(ElasticsearchClientProducer.java:54) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at org.jboss.weld.injection.StaticMethodInjectionPoint.invoke(StaticMethodInjectionPoint.java:95) ```</body>
		<created>2018-06-25 16:36:34</created>
		<closed>2018-07-30 06:56:15</closed>
	</bug>
	<bug>
		<id>2564</id>
		<title>BoxIntegrationTest fails with WildFly 13.0.0.Final</title>
		<body>https://ci.fabric8.io/job/wildfly-camel-pullreq/1579/testReport/org.wildfly.camel.test.box/BoxIntegrationTest/testBoxComponent/  ``` org.wildfly.camel.test.box.BoxIntegrationTest.testBoxComponent: java.lang.NoClassDefFoundError: org/w3c/dom/css/CSSRule at java.lang.Class.getDeclaredConstructors0(Native Method) at java.lang.Class.privateGetDeclaredConstructors(Class.java:2671) at java.lang.Class.getDeclaredConstructors(Class.java:2020) at com.gargoylesoftware.htmlunit.javascript.configuration.AbstractJavaScriptConfiguration.process(AbstractJavaScriptConfiguration.java:183) at com.gargoylesoftware.htmlunit.javascript.configuration.AbstractJavaScriptConfiguration.getClassConfiguration(AbstractJavaScriptConfiguration.java:147) at com.gargoylesoftware.htmlunit.javascript.configuration.AbstractJavaScriptConfiguration.buildUsageMap(AbstractJavaScriptConfiguration.java:79) at com.gargoylesoftware.htmlunit.javascript.configuration.AbstractJavaScriptConfiguration.&lt;init&gt;(AbstractJavaScriptConfiguration.java:59) at com.gargoylesoftware.htmlunit.javascript.configuration.JavaScriptConfiguration.&lt;init&gt;(JavaScriptConfiguration.java:597) at com.gargoylesoftware.htmlunit.javascript.configuration.JavaScriptConfiguration.getInstance(JavaScriptConfiguration.java:613) at com.gargoylesoftware.htmlunit.javascript.JavaScriptEngine.&lt;init&gt;(JavaScriptEngine.java:132) at com.gargoylesoftware.htmlunit.WebClient.init(WebClient.java:240) at com.gargoylesoftware.htmlunit.WebClient.&lt;init&gt;(WebClient.java:214) at com.gargoylesoftware.htmlunit.WebClient.&lt;init&gt;(WebClient.java:205) at org.apache.camel.component.box.internal.BoxConnectionHelper.createStandardAuthenticatedConnection(BoxConnectionHelper.java:102) at org.apache.camel.component.box.internal.BoxConnectionHelper.createConnection(BoxConnectionHelper.java:91) at org.apache.camel.component.box.BoxComponent.doStart(BoxComponent.java:85) at org.apache.camel.support.ServiceSupport.start(ServiceSupport.java:61) at org.apache.camel.impl.DefaultCamelContext.startService(DefaultCamelContext.java:3705) at org.apache.camel.impl.DefaultCamelContext.startServices(DefaultCamelContext.java:3711) at org.apache.camel.impl.DefaultCamelContext.doStartCamel(DefaultCamelContext.java:3442) at org.apache.camel.impl.DefaultCamelContext.access$000(DefaultCamelContext.java:209) at org.apache.camel.impl.DefaultCamelContext$2.call(DefaultCamelContext.java:3253) at org.apache.camel.impl.DefaultCamelContext$2.call(DefaultCamelContext.java:3249) at org.apache.camel.impl.DefaultCamelContext.doWithDefinedClassLoader(DefaultCamelContext.java:3272) at org.apache.camel.impl.DefaultCamelContext.doStart(DefaultCamelContext.java:3249) at org.apache.camel.support.ServiceSupport.start(ServiceSupport.java:61) at org.apache.camel.impl.DefaultCamelContext.start(DefaultCamelContext.java:3165) at org.wildfly.camel.test.box.BoxIntegrationTest.testBoxComponent(BoxIntegrationTest.java:93) ```</body>
		<created>2018-06-11 13:23:49</created>
		<closed>2018-06-12 07:23:32</closed>
	</bug>
	<bug>
		<id>2562</id>
		<title>Redundant semicolon for if statement in DMRUtils</title>
		<body>https://github.com/wildfly-extras/wildfly-camel/blob/e501366925a7859f8734bc5591534cf6848906bc/itests/common/src/main/java/org/wildfly/camel/test/common/utils/DMRUtils.java#L63</body>
		<created>2018-06-11 07:21:48</created>
		<closed>2018-06-15 09:56:48</closed>
	</bug>
	<bug>
		<id>2553</id>
		<title>Intermittent failure of YQLIntegrationTest</title>
		<body>YQLIntegrationTest.testBook() fails often when run together with other tests, but I saw it always passing when I run with `-Dtest=YQLIntegrationTest` only.</body>
		<created>2018-05-30 10:29:17</created>
		<closed>2018-05-31 10:48:49</closed>
	</bug>
	<bug>
		<id>2536</id>
		<title>org.apache.camel.script.groovy module cannot access sun.misc.Unsafe</title>
		<body></body>
		<created>2018-05-22 07:34:23</created>
		<closed>2018-05-22 13:44:07</closed>
	</bug>
	<bug>
		<id>2513</id>
		<title>Hl7 component module is missing dependency for org.apache.mina.core</title>
		<body>https://issues.jboss.org/browse/ENTESB-8051</body>
		<created>2018-04-27 14:28:14</created>
		<closed>2018-04-27 16:12:20</closed>
	</bug>
	<bug>
		<id>2512</id>
		<title>Module org.apache.cxf.ext is missing jettison dependency</title>
		<body>https://issues.jboss.org/browse/ENTESB-8050</body>
		<created>2018-04-27 14:27:17</created>
		<closed>2018-04-27 15:18:03</closed>
	</bug>
	<bug>
		<id>2505</id>
		<title>Intermittent failure of PGEventIntegrationTest</title>
		<body>Happens consistently on my laptop. At the same time I see `PGEventIntegrationTest` to pass consistently when run alone via `-Dtest=PGEventIntegrationTest`.   It passes sometimes (when run together with other test classes) when I put Thread.sleep(5000) at the beginning of the actual test method. Maybe container does not report the readiness properly, or the container is a bit busy after startup.</body>
		<created>2018-04-25 08:07:59</created>
		<closed>2018-05-03 06:57:26</closed>
	</bug>
	<bug>
		<id>2498</id>
		<title>camel-salesforce query attributes are not mapped correctly</title>
		<body>CrossRef: https://issues.jboss.org/browse/ENTESB-7903  RelatesTo: #1676</body>
		<created>2018-04-20 08:54:53</created>
		<closed>2018-04-23 13:00:30</closed>
	</bug>
	<bug>
		<id>2497</id>
		<title>Camel subsystem not activated by @ImportResource in EAR</title>
		<body>CrossRef: https://issues.jboss.org/browse/ENTESB-7984  Relates to: #1215</body>
		<created>2018-04-19 15:34:14</created>
		<closed>2018-11-29 11:03:32</closed>
	</bug>
	<bug>
		<id>2486</id>
		<title>MongoDBIntegrationTest fails on Windows</title>
		<body>The embedded server fails to start. See [here](https://github.com/flapdoodle-oss/de.flapdoodle.embed.mongo/issues/232) and [here](https://jira.mongodb.org/browse/SERVER-26028).  ``` 2018-04-10 10:19:05 ERROR [de.flapdoodle.embed.process.runtime.AbstractProcess] (mainjava.io.IOException: Could not start process: &lt;EOF&gt; at de.flapdoodle.embed.mongo.AbstractMongoProcess.onAfterProcessStart(AbstractMongoProcess.java:79) [de.flapdoodle.embed.mongo-2.0.3.jar:na] at de.flapdoodle.embed.process.runtime.AbstractProcess.&lt;init&gt;(AbstractProcess.java:116) ~[de.flapdoodle.embed.process-2.0.2.jar:na] at de.flapdoodle.embed.mongo.AbstractMongoProcess.&lt;init&gt;(AbstractMongoProcess.java:53) [de.flapdoodle.embed.mongo-2.0.3.jar:na] at de.flapdoodle.embed.mongo.MongodProcess.&lt;init&gt;(MongodProcess.java:50) [de.flapdoodle.embed.mongo-2.0.3.jar:na] at de.flapdoodle.embed.mongo.MongodExecutable.start(MongodExecutable.java:44) [de.flapdoodle.embed.mongo-2.0.3.jar:na] at de.flapdoodle.embed.mongo.MongodExecutable.start(MongodExecutable.java:34) [de.flapdoodle.embed.mongo-2.0.3.jar:na] at de.flapdoodle.embed.process.runtime.Executable.start(Executable.java:108) [de.flapdoodle.embed.process-2.0.2.jar:na] at org.wildfly.camel.test.mongodb.EmbeddedMongoServer.start(EmbeddedMongoServer.java:47) [test-classes/:na] at org.wildfly.camel.test.mongodb.MongoDBIntegrationTest.beforeClass(MongoDBIntegrationTest.java:82) [test-classes/:na] ```</body>
		<created>2018-04-11 07:05:34</created>
		<closed>2018-05-01 07:44:31</closed>
	</bug>
	<bug>
		<id>2481</id>
		<title>Release 6.0.0 is missing some downloads</title>
		<body>Release 6.0.0 (https://github.com/wildfly-extras/wildfly-camel/releases/tag/6.0.0) is missing user guide and wildfly patch downloads.</body>
		<created>2018-04-09 14:04:41</created>
		<closed>2018-04-09 14:19:10</closed>
	</bug>
	<bug>
		<id>2476</id>
		<title>Incorrect version for jackson-jr-objects</title>
		<body>It's currently 2.8.10, but should be aligned with the other jackson dependencies at 2.9.4.</body>
		<created>2018-04-05 14:20:55</created>
		<closed>2018-04-05 15:10:12</closed>
	</bug>
	<bug>
		<id>2472</id>
		<title>jboss-cli local authentication does not work on OpenShift</title>
		<body>We need jboss-cli local auth so that our planned jboss-cli based liveness and readiness probes work flawlessly.  This issue is caused by the fact that the root group cannot access `/wildfly/standalone/tmp/auth`.   Inside the pod  ``` ls -l /wildfly/standalone/tmp ... drwxrw---- 2 default    root 4096 Mar  1 06:29 auth ... ```  It needs to be `drwxrwx---`  It is solvable by adding `&lt;run&gt;chmod g=u -R ${server.home}&lt;/run&gt;` to the existing `&lt;runCmds&gt;` element in `wildfly-camel-docker`.  A PR follows.</body>
		<created>2018-04-04 08:05:24</created>
		<closed>2018-04-04 08:44:19</closed>
	</bug>
	<bug>
		<id>2462</id>
		<title>Intermittent failure of CouchDBIntegrationTest</title>
		<body></body>
		<created>2018-03-27 10:11:58</created>
		<closed>2020-02-06 13:01:19</closed>
	</bug>
	<bug>
		<id>2447</id>
		<title>Camel CXF component does not work with AsyncResponse</title>
		<body>When creating a rsServer that uses an asyncResponse, a null pointer exception is thrown  Creating the service: ``` &lt;cxf:rsServer id="cxfTestService"               address="http://localhost:8080/api/"               serviceClass="TestService"&gt;     &lt;cxf:providers&gt;         &lt;ref bean="jacksonProvider"/&gt;     &lt;/cxf:providers&gt;               &lt;/cxf:rsServer&gt; ```  TestService definition: ``` @POST @Path("/validate") public void validate{@Suspended final AsyncResponse asyncResponse) { } ```  Exception when calling the endpoint: ``` 2018-03-20 13:36:48,818 ERROR [io.undertow.request] (default task-52) UT005023: Exception handling request to /api/validate: java.lang.NullPointerException at org.apache.cxf.jaxrs.impl.AsyncResponseImpl.initContinuation(AsyncResponseImpl.java:306) at org.apache.cxf.jaxrs.impl.AsyncResponseImpl.&lt;init&gt;(AsyncResponseImpl.java:68) at org.apache.cxf.jaxrs.utils.JAXRSUtils.processParameter(JAXRSUtils.java:819) at org.apache.cxf.jaxrs.utils.JAXRSUtils.processParameters(JAXRSUtils.java:793) at org.apache.cxf.jaxrs.interceptor.JAXRSInInterceptor.processRequest(JAXRSInInterceptor.java:212) at org.apache.cxf.jaxrs.interceptor.JAXRSInInterceptor.handleMessage(JAXRSInInterceptor.java:77) at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:308) at org.apache.cxf.transport.ChainInitiationObserver.onMessage(ChainInitiationObserver.java:121) at org.apache.cxf.transport.http.AbstractHTTPDestination.invoke(AbstractHTTPDestination.java:263) at org.apache.cxf.transport.undertow.UndertowHTTPDestination.doService(UndertowHTTPDestination.java:187) at org.apache.cxf.transport.undertow.UndertowHTTPDestination.doService(UndertowHTTPDestination.java:173) at org.apache.cxf.transport.undertow.wildfly.WildflyHTTPServerEngine$DefaultServlet.service(WildflyHTTPServerEngine.java:119) at javax.servlet.http.HttpServlet.service(HttpServlet.java:790) at io.undertow.servlet.handlers.ServletHandler.handleRequest(ServletHandler.java:85) at io.undertow.servlet.handlers.security.ServletSecurityRoleHandler.handleRequest(ServletSecurityRoleHandler.java:62) at io.undertow.servlet.handlers.ServletDispatchingHandler.handleRequest(ServletDispatchingHandler.java:36) at io.undertow.servlet.handlers.security.SSLInformationAssociationHandler.handleRequest(SSLInformationAssociationHandler.java:131) at io.undertow.servlet.handlers.security.ServletAuthenticationCallHandler.handleRequest(ServletAuthenticationCallHandler.java:57) at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43) at io.undertow.security.handlers.AbstractConfidentialityHandler.handleRequest(AbstractConfidentialityHandler.java:46) at io.undertow.servlet.handlers.security.ServletConfidentialityConstraintHandler.handleRequest(ServletConfidentialityConstraintHandler.java:64) at io.undertow.security.handlers.AuthenticationMechanismsHandler.handleRequest(AuthenticationMechanismsHandler.java:60) at io.undertow.servlet.handlers.security.CachedAuthenticatedSessionHandler.handleRequest(CachedAuthenticatedSessionHandler.java:77) at io.undertow.security.handlers.AbstractSecurityContextAssociationHandler.handleRequest(AbstractSecurityContextAssociationHandler.java:43) at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43) at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43) at io.undertow.servlet.handlers.ServletInitialHandler.handleFirstRequest(ServletInitialHandler.java:292) at io.undertow.servlet.handlers.ServletInitialHandler.access$100(ServletInitialHandler.java:81) at io.undertow.servlet.handlers.ServletInitialHandler$2.call(ServletInitialHandler.java:138) at io.undertow.servlet.handlers.ServletInitialHandler$2.call(ServletInitialHandler.java:135) at io.undertow.servlet.core.ServletRequestContextThreadSetupAction$1.call(ServletRequestContextThreadSetupAction.java:48) at io.undertow.servlet.core.ContextClassLoaderSetupAction$1.call(ContextClassLoaderSetupAction.java:43) at io.undertow.servlet.handlers.ServletInitialHandler.dispatchRequest(ServletInitialHandler.java:272) at io.undertow.servlet.handlers.ServletInitialHandler.access$000(ServletInitialHandler.java:81) at io.undertow.servlet.handlers.ServletInitialHandler$1.handleRequest(ServletInitialHandler.java:104) at io.undertow.server.Connectors.executeRootHandler(Connectors.java:326) at io.undertow.server.HttpServerExchange$1.run(HttpServerExchange.java:812) at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) at java.lang.Thread.run(Thread.java:745) ``` The call is failing on the method below. Not sure how ContinuationProvider is specified, but is null.  ``` private void initContinuation() {         ContinuationProvider provider = (ContinuationProvider)inMessage.get(ContinuationProvider.class.getName());         cont = provider.getContinuation();         initialSuspend = true; } ```  This may be a usage issue, apologies if it is.  </body>
		<created>2018-03-20 11:49:36</created>
		<closed>2020-02-06 13:01:18</closed>
	</bug>
	<bug>
		<id>2439</id>
		<title>LinkedInIntegrationTest fails with 2.21.0</title>
		<body>https://issues.apache.org/jira/browse/CAMEL-12345</body>
		<created>2018-03-12 12:17:44</created>
		<closed>2018-05-09 12:11:26</closed>
	</bug>
	<bug>
		<id>2435</id>
		<title>JNDI binding race condition for Servlet @Resource injection</title>
		<body>https://issues.jboss.org/browse/ENTESB-7831</body>
		<created>2018-03-08 10:24:01</created>
		<closed>2018-03-08 23:34:03</closed>
	</bug>
	<bug>
		<id>2425</id>
		<title>com.hazelcast module cannot access sun.misc.Unsafe</title>
		<body>There's a warning in the logs which would be good to squash:  ``` WARNING [com.hazelcast.internal.memory.impl.UnsafeUtil] (pool-2-thread-1) Unable to get an instance of Unsafe. Unsafe-based operations will be unavailable ``` </body>
		<created>2018-02-22 13:48:53</created>
		<closed>2018-02-22 14:25:51</closed>
	</bug>
	<bug>
		<id>2422</id>
		<title>JCache component cannot use EhcacheCachingProvider</title>
		<body>``` Caused by: java.lang.ClassNotFoundException: org.ehcache.jsr107.EhcacheCachingProvider from [Module "deployment.camel-jcache-tests" from Service Module Loader] at org.jboss.modules.ModuleClassLoader.findClass(ModuleClassLoader.java:198) at org.jboss.modules.ConcurrentClassLoader.performLoadClassUnchecked(ConcurrentClassLoader.java:412) at org.jboss.modules.ConcurrentClassLoader.performLoadClass(ConcurrentClassLoader.java:400) at org.jboss.modules.ConcurrentClassLoader.loadClass(ConcurrentClassLoader.java:116) at javax.cache.Caching$CachingProviderRegistry.loadCachingProvider(Caching.java:485) ... 166 more ```</body>
		<created>2018-02-22 12:09:03</created>
		<closed>2018-02-22 14:01:03</closed>
	</bug>
	<bug>
		<id>2420</id>
		<title>JCache component cannot use HazelcastCachingProvider</title>
		<body>``` 11:53:13,846 WARN  [org.jboss.modules] (pool-2-thread-1) Failed to define class com.hazelcast.cache.HazelcastCachingProvider in Module "com.hazelcast" from local module loader @44a664f2 java.lang.NoClassDefFoundError: Failed to link com/hazelcast/cache/HazelcastCachingProvider (Module "com.hazelcast" from local module loader at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) at java.lang.reflect.Constructor.newInstance(Constructor.java:423) at org.jboss.modules.ModuleClassLoader.defineClass(ModuleClassLoader.java:446) at org.jboss.modules.ModuleClassLoader.loadClassLocal(ModuleClassLoader.java:274) at org.jboss.modules.ModuleClassLoader$1.loadClassLocal(ModuleClassLoader.java:77) at org.jboss.modules.Module.loadModuleClass(Module.java:713) at org.jboss.modules.ModuleClassLoader.findClass(ModuleClassLoader.java:190) at org.jboss.modules.ConcurrentClassLoader.performLoadClassUnchecked(ConcurrentClassLoader.java:412) at org.jboss.modules.ConcurrentClassLoader.performLoadClass(ConcurrentClassLoader.java:400) at org.jboss.modules.ConcurrentClassLoader.loadClass(ConcurrentClassLoader.java:116) at javax.cache.Caching$CachingProviderRegistry.loadCachingProvider(Caching.java:485) at javax.cache.Caching$CachingProviderRegistry.getCachingProvider(Caching.java:526) at javax.cache.Caching$CachingProviderRegistry.getCachingProvider(Caching.java:466) at javax.cache.Caching.getCachingProvider(Caching.java:217) at org.apache.camel.component.jcache.JCacheManager.doGetCache(JCacheManager.java:112) at org.apache.camel.component.jcache.JCacheManager.getCache(JCacheManager.java:73) at org.apache.camel.component.jcache.JCacheProducer.getCache(JCacheProducer.java:75) at org.apache.camel.component.jcache.JCacheProducer.doStart(JCacheProducer.java:65)  ```</body>
		<created>2018-02-22 11:55:07</created>
		<closed>2018-02-22 12:29:26</closed>
	</bug>
	<bug>
		<id>2407</id>
		<title>Intermittent failure of MongoDBIntegrationTest</title>
		<body>Fails quite often on the stability build. Likely it can be fixed by setting some timeouts on the test assertions.</body>
		<created>2018-01-31 07:40:00</created>
		<closed>2018-02-09 15:12:56</closed>
	</bug>
	<bug>
		<id>2390</id>
		<title>System properties not indented correctly in patched standalone.xml</title>
		<body>Currently the `standalone-*.xml` in the patch look like: ```     &lt;/extensions&gt; &lt;system-properties&gt;        &lt;property name="hawtio.authenticationEnabled" value="true" /&gt;        &lt;property name="hawtio.offline" value="true" /&gt;        &lt;property name="hawtio.realm" value="hawtio-domain" /&gt;     &lt;/system-properties&gt; ```</body>
		<created>2018-01-18 08:03:22</created>
		<closed>2018-01-18 08:37:39</closed>
	</bug>
	<bug>
		<id>2385</id>
		<title>VersionsValidatorTest.testVersions() should list the problems rather than complaining about their number</title>
		<body>We should replace  ``` Assert.assertEquals("Mapping problems", 0, problems.size()); ```  with something like  ``` Assert.assertEquals("Mapping problems", Collections.emptyList(), problems); ```</body>
		<created>2018-01-15 12:50:53</created>
		<closed>2018-01-15 13:42:49</closed>
	</bug>
	<bug>
		<id>2384</id>
		<title>Docker image does not contain hawtio</title>
		<body>Hi,  I run the docker image as follows:      $ docker run --rm -ti -p 9990:9990 -p 8080:8080 -e WILDFLY_MANAGEMENT_USER=admin -e WILDFLY_MANAGEMENT_PASSWORD=admin wildflyext/wildfly-camel  and then trying to access to http://localhost:8080/hawtio/ I get `404 - Not Found`.  Looking into the container using `docker exec` I cannot find `hawtio.war`.  Is it expected or a bug?</body>
		<created>2018-01-15 09:36:22</created>
		<closed>2018-01-15 20:53:19</closed>
	</bug>
	<bug>
		<id>2376</id>
		<title>EtcdIntegrationTest fails with Camel 2.21.0</title>
		<body>Because of this Netty version upgrade in etcd4j:  https://github.com/jurmous/etcd4j/commit/8a3824bfcf21cf575f7b07e2c1cef6af67386f35  WildFly is stuck with Netty 4.1.9 and this does not have `DefaultDnsServerAddressStreamProvider`.</body>
		<created>2018-01-05 12:44:31</created>
		<closed>2018-01-26 10:04:28</closed>
	</bug>
	<bug>
		<id>2375</id>
		<title>CouchDB component module is missing dependency for org.apache.commons.codec</title>
		<body>There is some usage of commons-codec in lightcouch-0.1.8 for Base64 encoding. lightcouch-0.2.0 used by Camel 2.21.0 has even more usage of commons-codec (the integration test actually fails).</body>
		<created>2018-01-05 12:27:40</created>
		<closed>2018-01-05 18:14:55</closed>
	</bug>
	<bug>
		<id>2368</id>
		<title>System contexts are not shut down gracefully</title>
		<body>Below is a sample server log for starting and stopping WildFly where a System context has been defined.  Note the Camel context is started, but on shutdown, there is no `Camel context stopped` log message.   There is no logic in [`CamelContextRegistryService.stop()`](https://github.com/wildfly-extras/wildfly-camel/blob/86723b099ddf0668b189fe6c8e0e92a59156648d/subsystem/core/src/main/java/org/wildfly/extension/camel/service/CamelContextRegistryService.java#L124)  to handle Camel Context shutdown.  `CamelContextRegistryService` is a bit confusing . It's a registry that also has additional behaviour to create and start Camel Contexts. IMO this logic should be extracted elsewhere.  ``` 13:15:33,725 INFO  [org.apache.camel.spring.SpringCamelContext] (MSC service thread 1-8) Apache Camel 2.20.1 (CamelContext: system-context-1) is starting 13:15:33,727 INFO  [org.apache.camel.management.ManagedManagementStrategy] (MSC service thread 1-8) JMX is enabled 13:15:33,769 INFO  [org.wildfly.extension.camel] (MSC service thread 1-8) Camel context starting: system-context-1 13:15:33,942 INFO  [org.apache.camel.impl.converter.DefaultTypeConverter] (MSC service thread 1-8) Type converters loaded (core: 192, classpath: 153) 13:15:33,999 INFO  [org.apache.camel.spring.SpringCamelContext] (MSC service thread 1-8) StreamCaching is not in use. If using streams then its recommended to enable stream caching. See more details at http://camel.apache.org/stream-caching.html 13:15:34,000 INFO  [org.apache.camel.impl.HeadersMapFactoryResolver] (MSC service thread 1-8) Detected and using custom HeadersMapFactory: org.apache.camel.component.headersmap.FastHeadersMapFactory@2906df9e 13:15:34,038 INFO  [org.apache.camel.spring.SpringCamelContext] (MSC service thread 1-8) Route: route1 started and consuming from: direct://start 13:15:34,039 INFO  [org.apache.camel.spring.SpringCamelContext] (MSC service thread 1-8) Total 1 routes, of which 1 are started 13:15:34,039 INFO  [org.apache.camel.spring.SpringCamelContext] (MSC service thread 1-8) Apache Camel 2.20.1 (CamelContext: system-context-1) started in 0.314 seconds 13:15:34,040 INFO  [org.wildfly.extension.camel] (MSC service thread 1-1) Bound camel naming object: java:jboss/camel/CamelContextRegistry 13:15:34,040 INFO  [org.wildfly.extension.camel] (MSC service thread 1-8) Bound camel naming object: java:jboss/camel/context/system-context-1 13:15:34,073 INFO  [org.jboss.as.server] (Controller Boot Thread) WFLYSRV0212: Resuming server 13:15:34,074 INFO  [org.jboss.as] (Controller Boot Thread) WFLYSRV0060: Http management interface listening on http://127.0.0.1:9990/management 13:15:34,075 INFO  [org.jboss.as] (Controller Boot Thread) WFLYSRV0051: Admin console listening on http://127.0.0.1:9990 13:15:34,075 INFO  [org.jboss.as] (Controller Boot Thread) WFLYSRV0025: WildFly Full 11.0.0.Final (WildFly Core 3.0.8.Final) started in 3811ms - Started 343 of 605 services (363 services are lazy, passive or on-demand) ^C13:15:38,178 INFO  [org.jboss.as.server] (Thread-2) WFLYSRV0220: Server shutdown has been requested via an OS signal 13:15:38,194 INFO  [org.wildfly.extension.camel] (MSC service thread 1-7) Unbind camel naming object: java:jboss/camel/context/system-context-1 13:15:38,194 INFO  [org.wildfly.extension.messaging-activemq] (MSC service thread 1-5) WFLYMSGAMQ0006: Unbound messaging object to jndi name java:jboss/DefaultJMSConnectionFactory 13:15:38,195 INFO  [org.jboss.as.connector.subsystems.datasources] (MSC service thread 1-3) WFLYJCA0010: Unbound data source [java:jboss/datasources/ExampleDS] 13:15:38,198 INFO  [org.wildfly.extension.messaging-activemq] (ServerService Thread Pool -- 71) WFLYMSGAMQ0006: Unbound messaging object to jndi name java:jboss/exported/jms/RemoteConnectionFactory 13:15:38,198 INFO  [org.wildfly.extension.undertow] (MSC service thread 1-7) WFLYUT0019: Host default-host stopping 13:15:38,199 INFO  [org.jboss.gravia.runtime] (MSC service thread 1-3) Stopped: Module[gravia-container-wildfly-extension:1.3.1] 13:15:38,200 INFO  [org.jboss.gravia.runtime] (MSC service thread 1-3) Uninstalled: Module[gravia-container-wildfly-extension:1.3.1] 13:15:38,200 INFO  [org.jboss.as.connector.deployment] (MSC service thread 1-7) WFLYJCA0011: Unbound JCA ConnectionFactory [java:/JmsXA] 13:15:38,201 INFO  [org.wildfly.extension.undertow] (MSC service thread 1-4) WFLYUT0008: Undertow HTTPS listener https suspending 13:15:38,202 INFO  [org.wildfly.extension.messaging-activemq] (ServerService Thread Pool -- 17) WFLYMSGAMQ0006: Unbound messaging object to jndi name java:/ConnectionFactory 13:15:38,205 INFO  [org.wildfly.extension.undertow] (MSC service thread 1-4) WFLYUT0007: Undertow HTTPS listener https stopped, was bound to 127.0.0.1:8443 13:15:38,206 INFO  [org.jboss.as.connector.deployers.jdbc] (MSC service thread 1-7) WFLYJCA0019: Stopped Driver service with driver-name = h2 13:15:38,209 INFO  [org.jboss.gravia.runtime] (Thread-94) Stopped: Module[org.apache.felix.configadmin:1.8.8] 13:15:38,210 INFO  [org.jboss.gravia.runtime] (Thread-94) Uninstalled: Module[org.apache.felix.configadmin:1.8.8] 13:15:38,210 INFO  [org.jboss.gravia.runtime] (Thread-94) Stopped: Module[org.apache.felix.scr:1.6.2] 13:15:38,210 INFO  [org.jboss.gravia.runtime] (Thread-94) Uninstalled: Module[org.apache.felix.scr:1.6.2] 13:15:38,211 INFO  [org.jboss.gravia.runtime] (MSC service thread 1-6) Runtime released: org.wildfly.extension.gravia.service.WildFlyRuntime@18aa5e10 13:15:38,217 INFO  [org.apache.activemq.artemis.ra] (ServerService Thread Pool -- 71) AMQ151003: resource adaptor stopped 13:15:38,273 INFO  [org.apache.activemq.artemis.core.server] (ServerService Thread Pool -- 71) AMQ221002: Apache ActiveMQ Artemis Message Broker version 1.5.5.jbossorg-008 [a31e4ad7-e4be-11e7-8bbe-e8b1fc559560] stopped, uptime 5.554 seconds 13:15:38,274 INFO  [org.wildfly.extension.undertow] (MSC service thread 1-1) WFLYUT0008: Undertow HTTP listener default suspending 13:15:38,275 INFO  [org.wildfly.extension.undertow] (MSC service thread 1-1) WFLYUT0007: Undertow HTTP listener default stopped, was bound to 127.0.0.1:8080 13:15:38,275 INFO  [org.wildfly.extension.undertow] (MSC service thread 1-1) WFLYUT0004: Undertow 1.4.18.Final stopping 13:15:38,279 INFO  [org.jboss.as] (MSC service thread 1-4) WFLYSRV0050: WildFly Full 11.0.0.Final (WildFly Core 3.0.8.Final) stopped in 91ms  ```</body>
		<created>2017-12-19 13:26:08</created>
		<closed>2018-02-09 16:06:11</closed>
	</bug>
	<bug>
		<id>2366</id>
		<title>Camel metrics JSON serialization throws ClassNotFoundException</title>
		<body>Camel metrics not working in release 5.0.   ``` 2017-12-14 14:16:23,354 INFO  [org.apache.camel.spring.SpringCamelContext] (MSC service thread 1-2) Apache Camel 2.20.1 (CamelContext: spring-context) is shutdown in 0.007 seconds 2017-12-14 14:16:23,355 ERROR [org.jboss.msc.service.fail] (MSC service thread 1-2) MSC000001: Failed to start service jboss.deployment.unit."avs-ws-client.war".INSTALL: org.jboss.msc.service.StartException in service jboss.deployment.unit."avs-ws-client.war".INSTALL: WFLYSRV0153: Failed to process phase INSTALL of deployment "avs-ws-client.war" at org.jboss.as.server.deployment.DeploymentUnitPhaseService.start(DeploymentUnitPhaseService.java:172) at org.jboss.msc.service.ServiceControllerImpl$StartTask.startService(ServiceControllerImpl.java:2032) at org.jboss.msc.service.ServiceControllerImpl$StartTask.run(ServiceControllerImpl.java:1955) at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) at java.lang.Thread.run(Thread.java:745) Caused by: java.lang.NoClassDefFoundError: com/fasterxml/jackson/core/JsonProcessingException at org.apache.camel.component.metrics.messagehistory.MetricsMessageHistoryFactory.doStart(MetricsMessageHistoryFactory.java:155) at org.apache.camel.support.ServiceSupport.start(ServiceSupport.java:61) at org.apache.camel.util.ServiceHelper.startService(ServiceHelper.java:75) at org.apache.camel.impl.DefaultCamelContext.doAddService(DefaultCamelContext.java:1495) at org.apache.camel.impl.DefaultCamelContext.addService(DefaultCamelContext.java:1455) at org.apache.camel.impl.DefaultCamelContext.doStartCamel(DefaultCamelContext.java:3394) at org.apache.camel.impl.DefaultCamelContext.access$000(DefaultCamelContext.java:208) at org.apache.camel.impl.DefaultCamelContext$2.call(DefaultCamelContext.java:3249) at org.apache.camel.impl.DefaultCamelContext$2.call(DefaultCamelContext.java:3245) at org.apache.camel.impl.DefaultCamelContext.doWithDefinedClassLoader(DefaultCamelContext.java:3268) at org.apache.camel.impl.DefaultCamelContext.doStart(DefaultCamelContext.java:3245) at org.apache.camel.support.ServiceSupport.start(ServiceSupport.java:61) at org.apache.camel.impl.DefaultCamelContext.start(DefaultCamelContext.java:3168) at org.apache.camel.spring.SpringCamelContext.start(SpringCamelContext.java:133) at org.wildfly.extension.camel.deployment.CamelContextActivationProcessor$1.call(CamelContextActivationProcessor.java:61) at org.wildfly.extension.camel.deployment.CamelContextActivationProcessor$1.call(CamelContextActivationProcessor.java:58) at org.wildfly.extension.camel.proxy.ProxyUtils$1.invoke(ProxyUtils.java:51) at com.sun.proxy.$Proxy196.call(Unknown Source) at org.wildfly.extension.camel.proxy.ProxyUtils.invokeProxied(ProxyUtils.java:55) at org.wildfly.extension.camel.deployment.CamelContextActivationProcessor.deploy(CamelContextActivationProcessor.java:58) at org.jboss.as.server.deployment.DeploymentUnitPhaseService.start(DeploymentUnitPhaseService.java:165) ... 5 more Caused by: java.lang.ClassNotFoundException: com.fasterxml.jackson.core.JsonProcessingException from [Module "org.apache.camel.component.metrics" from local module loader @17d99928 (finder: local module finder @3834d63f (roots: C:\jboss\wildfly-11.0.0.Final\modules,C:\jboss\wildfly-11.0.0.Final\modules\system\layers\fuse,C:\jboss\wildfly-11.0.0.Final\modules\system\layers\base))] at org.jboss.modules.ModuleClassLoader.findClass(ModuleClassLoader.java:198) at org.jboss.modules.ConcurrentClassLoader.performLoadClassUnchecked(ConcurrentClassLoader.java:412) at org.jboss.modules.ConcurrentClassLoader.performLoadClass(ConcurrentClassLoader.java:400) at org.jboss.modules.ConcurrentClassLoader.loadClass(ConcurrentClassLoader.java:116) ... 26 more  ```  In order to fix the issue the following files had to be modified.  Added:  &lt;module name="com.fasterxml.jackson.core.jackson-core" /&gt;  To:  modules\system\layers\fuse\io\dropwizard\metrics\main\module.xml modules\system\layers\fuse\org\apache\camel\component\metrics\main\module.xml </body>
		<created>2017-12-15 04:46:00</created>
		<closed>2017-12-15 08:09:04</closed>
	</bug>
	<bug>
		<id>2364</id>
		<title>AzureIntegrationTest account being accessed does not have sufficient permissions</title>
		<body>Failures were blocking PR processing so I renamed the build env vars.  ``` com.microsoft.azure.storage.StorageException: The account being accessed does not have sufficient permissions to execute this operation. at com.microsoft.azure.storage.StorageException.translateException(StorageException.java:89) at com.microsoft.azure.storage.core.StorageRequest.materializeException(StorageRequest.java:305) at com.microsoft.azure.storage.core.ExecutionEngine.executeWithRetry(ExecutionEngine.java:175) at com.microsoft.azure.storage.blob.CloudAppendBlob.createOrReplace(CloudAppendBlob.java:276) at org.apache.camel.component.azure.blob.BlobServiceProducer.doCreateAppendBlob(BlobServiceProducer.java:260) at org.apache.camel.component.azure.blob.BlobServiceProducer.updateAppendBlob(BlobServiceProducer.java:282) at org.apache.camel.component.azure.blob.BlobServiceProducer.process(BlobServiceProducer.java:95) at org.apache.camel.util.AsyncProcessorConverterHelper$ProcessorToAsyncProcessorBridge.process(AsyncProcessorConverterHelper.java:61) at org.apache.camel.processor.SendProcessor.process(SendProcessor.java:148) at org.apache.camel.processor.RedeliveryErrorHandler.process(RedeliveryErrorHandler.java:548) at org.apache.camel.processor.CamelInternalProcessor.process(CamelInternalProcessor.java:201) at org.apache.camel.processor.CamelInternalProcessor.process(CamelInternalProcessor.java:201) at org.apache.camel.component.direct.DirectProducer.process(DirectProducer.java:62) at org.apache.camel.processor.SharedCamelInternalProcessor.process(SharedCamelInternalProcessor.java:186) at org.apache.camel.processor.SharedCamelInternalProcessor.process(SharedCamelInternalProcessor.java:86) at org.apache.camel.impl.ProducerCache$1.doInProducer(ProducerCache.java:541) at org.apache.camel.impl.ProducerCache$1.doInProducer(ProducerCache.java:506) at org.apache.camel.impl.ProducerCache.doInProducer(ProducerCache.java:369) at org.apache.camel.impl.ProducerCache.sendExchange(ProducerCache.java:506) at org.apache.camel.impl.ProducerCache.send(ProducerCache.java:229) at org.apache.camel.impl.DefaultProducerTemplate.send(DefaultProducerTemplate.java:144) at org.apache.camel.impl.DefaultProducerTemplate.sendBody(DefaultProducerTemplate.java:161) at org.apache.camel.impl.DefaultProducerTemplate.sendBody(DefaultProducerTemplate.java:168) at org.wildfly.camel.test.azure.AzureIntegrationTest.testAppendBlob(AzureIntegrationTest.java:90)   ```</body>
		<created>2017-12-14 14:27:29</created>
		<closed>2020-02-06 13:01:17</closed>
	</bug>
	<bug>
		<id>2361</id>
		<title>Unable to use Netty HL7 encoder / decoder</title>
		<body>See also: https://issues.jboss.org/browse/ENTESB-7533  ``` Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.camel.component.hl7.HL7MLLPNettyDecoderFactory]: No default constructor found; nested exception is java.lang.NoClassDefFoundError: io/netty/channel/ChannelHandler -- at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:85) at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateBean(AbstractAutowireCapableBeanFactory.java:1147) ... 24 more Caused by: java.lang.NoClassDefFoundError: io/netty/channel/ChannelHandler at java.lang.Class.getDeclaredConstructors0(Native Method) at java.lang.Class.privateGetDeclaredConstructors(Class.java:2671) at java.lang.Class.getConstructor0(Class.java:3075) at java.lang.Class.getDeclaredConstructor(Class.java:2178) at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:80) ... 25 more Caused by: java.lang.ClassNotFoundException: io.netty.channel.ChannelHandler from [Module "org.apache.camel.component.hl7" from local module loader @7cdbc5d3 (finder: local module finder @3aa9e816 (roots: /home/jbouska/servers/fuse7/30/jboss-eap-7.1/modules,/home/jbouska/servers/fuse7/30/jboss-eap-7.1/modules/system/layers/fuse,/home/jbouska/servers/fuse7/30/jboss-eap-7.1/modules/system/layers/base))] at org.jboss.modules.ModuleClassLoader.findClass(ModuleClassLoader.java:198) at org.jboss.modules.ConcurrentClassLoader.performLoadClassUnchecked(ConcurrentClassLoader.java:412) at org.jboss.modules.ConcurrentClassLoader.performLoadClass(ConcurrentClassLoader.java:400) at org.jboss.modules.ConcurrentClassLoader.loadClass(ConcurrentClassLoader.java:116) ... 30 more ```  </body>
		<created>2017-12-14 09:12:44</created>
		<closed>2017-12-14 14:40:21</closed>
	</bug>
	<bug>
		<id>2357</id>
		<title>Camel Salesforce consumer throws NCDFE for ClientSessionChannel$MessageListener</title>
		<body>See also (issue 2): https://issues.jboss.org/browse/ENTESB-7490  ``` Caused by: java.lang.ClassNotFoundException: org.cometd.bayeux.client.ClientSessionChannel$MessageListener from [Module "org.apache.camel.component.salesforce" from local module loader @546a03af (finder: local module finder @721e0f4f (roots: /home/jbouska/redhat/eap-server/modules,/home/jbouska/redhat/eap-server/modules/system/layers/fuse,/home/jbouska/redhat/eap-server/modules/system/layers/base))] -- at org.jboss.modules.ModuleClassLoader.findClass(ModuleClassLoader.java:198) at org.jboss.modules.ConcurrentClassLoader.performLoadClassUnchecked(ConcurrentClassLoader.java:412) at org.jboss.modules.ConcurrentClassLoader.performLoadClass(ConcurrentClassLoader.java:400) at org.jboss.modules.ConcurrentClassLoader.loadClass(ConcurrentClassLoader.java:116) ... 30 more   12:38:33,509 ERROR [org.jboss.as.controller.management-operation] (management-handler-thread - 1) WFLYCTL0013: Operation ("add") failed - address: ([("deployment" =&gt; "salesforce-reproducer-1.0-SNAPSHOT.jar")]) - failure description: {"WFLYCTL0080: Failed services" =&gt; {"jboss.deployment.unit.\"salesforce-reproducer-1.0-SNAPSHOT.jar\".INSTALL" =&gt; "WFLYSRV0153: Failed to process phase INSTALL of deployment \"salesforce-reproducer-1.0-SNAPSHOT.jar\" Caused by: java.lang.NoClassDefFoundError: org/cometd/bayeux/client/ClientSessionChannel$MessageListener Caused by: java.lang.ClassNotFoundException: org.cometd.bayeux.client.ClientSessionChannel$MessageListener from [Module \"org.apache.camel.component.salesforce\" from local module loader @546a03af (finder: local module finder @721e0f4f (roots: /home/jbouska/redhat/eap-server/modules,/home/jbouska/redhat/eap-server/modules/system/layers/fuse,/home/jbouska/redhat/eap-server/modules/system/layers/base))]"}} 12:38:33,510 ERROR [org.jboss.as.server] (management-handler-thread - 1) WFLYSRV0021: Deploy of deployment "salesforce-reproducer-1.0-SNAPSHOT.jar" was rolled back with the following failure message: {"WFLYCTL0080: Failed services" =&gt; {"jboss.deployment.unit.\"salesforce-reproducer-1.0-SNAPSHOT.jar\".INSTALL" =&gt; "WFLYSRV0153: Failed to process phase INSTALL of deployment \"salesforce-reproducer-1.0-SNAPSHOT.jar\" Caused by: java.lang.NoClassDefFoundError: org/cometd/bayeux/client/ClientSessionChannel$MessageListener Caused by: java.lang.ClassNotFoundException: org.cometd.bayeux.client.ClientSessionChannel$MessageListener from [Module \"org.apache.camel.component.salesforce\" from local module loader @546a03af (finder: local module finder @721e0f4f (roots: /home/jbouska/redhat/eap-server/modules,/home/jbouska/redhat/eap-server/modules/system/layers/fuse,/home/jbouska/redhat/eap-server/modules/system/layers/base))]"}} ``` </body>
		<created>2017-12-06 14:14:41</created>
		<closed>2017-12-07 15:27:21</closed>
	</bug>
	<bug>
		<id>2356</id>
		<title>Camel Salesforce BulkApiProcessor throws NCDFE for javax/xml/transform/Source</title>
		<body>See also: https://issues.jboss.org/browse/ENTESB-7490  ``` Caused by: java.lang.NoClassDefFoundError: javax/xml/transform/Source -- at org.apache.camel.component.salesforce.internal.processor.BulkApiProcessor.&lt;init&gt;(BulkApiProcessor.java:53) at org.apache.camel.component.salesforce.SalesforceProducer.&lt;init&gt;(SalesforceProducer.java:49) at org.apache.camel.component.salesforce.SalesforceEndpoint.createProducer(SalesforceEndpoint.java:72) at org.apache.camel.impl.ProducerCache.doGetProducer(ProducerCache.java:573) ... 58 more Caused by: java.lang.ClassNotFoundException: javax.xml.transform.Source from [Module "org.apache.camel.component.salesforce" from local module loader @546a03af (finder: local module finder @721e0f4f (roots: /home/jbouska/redhat/eap-server/modules,/home/jbouska/redhat/eap-server/modules/system/layers/fuse,/home/jbouska/redhat/eap-server/modules/system/layers/base))] at org.jboss.modules.ModuleClassLoader.findClass(ModuleClassLoader.java:198) at org.jboss.modules.ConcurrentClassLoader.performLoadClassUnchecked(ConcurrentClassLoader.java:412) at org.jboss.modules.ConcurrentClassLoader.performLoadClass(ConcurrentClassLoader.java:400) at org.jboss.modules.ConcurrentClassLoader.loadClass(ConcurrentClassLoader.java:116) ... 62 more  ``` </body>
		<created>2017-12-06 14:06:55</created>
		<closed>2017-12-07 15:27:21</closed>
	</bug>
	<bug>
		<id>2355</id>
		<title>Commons HttpClient throws NCDFE for SSLSocketFactory</title>
		<body>See also: https://issues.jboss.org/browse/ENTESB-7491  ``` Caused by: java.lang.NoClassDefFoundError: javax/net/ssl/SSLSocketFactory -- at org.apache.commons.httpclient.protocol.SSLProtocolSocketFactory.createSocket(SSLProtocolSocketFactory.java:82) at org.apache.commons.httpclient.protocol.SSLProtocolSocketFactory.createSocket(SSLProtocolSocketFactory.java:127) at org.apache.commons.httpclient.HttpConnection.open(HttpConnection.java:707) at org.apache.commons.httpclient.MultiThreadedHttpConnectionManager$HttpConnectionAdapter.open(MultiThreadedHttpConnectionManager.java:1361) at org.apache.commons.httpclient.HttpMethodDirector.executeWithRetry(HttpMethodDirector.java:387) at org.apache.commons.httpclient.HttpMethodDirector.executeMethod(HttpMethodDirector.java:171) at org.apache.commons.httpclient.HttpClient.executeMethod(HttpClient.java:397) at org.apache.commons.httpclient.HttpClient.executeMethod(HttpClient.java:323) at org.apache.camel.component.weather.geolocation.FreeGeoIpGeoLocationProvider.getCurrentGeoLocation(FreeGeoIpGeoLocationProvider.java:42) at org.apache.camel.component.weather.WeatherQuery.getCurrentGeoLocation(WeatherQuery.java:152) at org.apache.camel.component.weather.WeatherQuery.getQuery(WeatherQuery.java:60) at org.apache.camel.component.weather.WeatherQuery.getQuery(WeatherQuery.java:37) at org.apache.camel.component.weather.WeatherConfiguration.getQuery(WeatherConfiguration.java:214) at org.apache.camel.component.weather.WeatherEndpoint.createProducer(WeatherEndpoint.java:53) at org.apache.camel.impl.ProducerCache.doGetProducer(ProducerCache.java:573)   ```</body>
		<created>2017-12-06 13:56:21</created>
		<closed>2017-12-07 15:53:59</closed>
	</bug>
	<bug>
		<id>2354</id>
		<title>ZookeeperMasterIntegrationTest fails with 2.21.0</title>
		<body></body>
		<created>2017-12-05 13:48:38</created>
		<closed>2018-03-22 14:20:17</closed>
	</bug>
	<bug>
		<id>2353</id>
		<title>OpenstackIntegrationTest fails with 2.21.0</title>
		<body></body>
		<created>2017-12-05 13:47:17</created>
		<closed>2018-03-22 14:20:17</closed>
	</bug>
	<bug>
		<id>2349</id>
		<title>Incorrect version for jackson-dataformat-smile</title>
		<body>``` /com/fasterxml/jackson/dataformat/cbor/main/jackson-dataformat-cbor-2.8.9.jar /com/fasterxml/jackson/dataformat/smile/main/jackson-dataformat-smile-2.8.1.jar /com/fasterxml/jackson/dataformat/xml/main/jackson-dataformat-xml-2.8.9.jar /com/fasterxml/jackson/dataformat/yaml/main/jackson-dataformat-yaml-2.8.9.jar /com/fasterxml/jackson/datatype/jackson-datatype-guava/main/jackson-datatype-guava-2.8.9.jar /com/fasterxml/jackson/datatype/joda/main/jackson-datatype-joda-2.8.9.jar /com/fasterxml/jackson/module/afterburner/main/jackson-module-afterburner-2.8.9.jar /com/fasterxml/jackson/module/jsonSchema/main/jackson-module-jsonSchema-2.8.9.jar ```</body>
		<created>2017-12-04 07:50:06</created>
		<closed>2017-12-04 09:57:09</closed>
	</bug>
	<bug>
		<id>2348</id>
		<title>Unable to resource inject CamelContext</title>
		<body>As evidenced in some of the examples, `@Resource` injection of Camel contexts is not working.  Likely that I broke this in https://github.com/wildfly-extras/wildfly-camel/commit/3a3d6413ae40d083d771fde9175948a5509f0a1b. If I revert this, everything seems to work fine.</body>
		<created>2017-12-01 15:53:03</created>
		<closed>2017-12-04 09:23:02</closed>
	</bug>
	<bug>
		<id>2343</id>
		<title>Archetypes should not override BOM managed dependency versions</title>
		<body>there is this kind of warning: ![image](https://user-images.githubusercontent.com/1105127/33425585-6d85bce0-d5bf-11e7-8034-cc01efa2558c.png) </body>
		<created>2017-11-30 10:13:08</created>
		<closed>2017-11-30 15:38:50</closed>
	</bug>
	<bug>
		<id>2320</id>
		<title>Intermittent failure of ReactorIntegrationTest</title>
		<body>A frequent offender on the stability build:  ``` java.lang.AssertionError at org.wildfly.camel.test.reactor.ReactorIntegrationTest.testToFunction(ReactorIntegrationTest.java:405) ``` ``` [0m[0m00:18:14,769 INFO  [org.wildfly.extension.camel.WildFlyCamelContext] (pool-2-thread-4) Route: route702 started and consuming from: reactive-streams://ID-fabric8-slave02-dmz-b-mwc-hst-phx2-redhat-com-1511067149304-383-1 [0m[32m00:18:14,771 DEBUG [org.apache.camel.processor.SendProcessor] (Camel (camel-384) thread #565 - reactive-streams://ID-fabric8-slave02-dmz-b-mwc-hst-phx2-redhat-com-1511067149304-383-1) &gt;&gt;&gt;&gt; bean://hello Exchange[ID-fabric8-slave02-dmz-b-mwc-hst-phx2-redhat-com-1511067149304-383-2] [0m[32m00:18:14,776 DEBUG [org.apache.camel.processor.SendProcessor] (Camel (camel-384) thread #565 - reactive-streams://ID-fabric8-slave02-dmz-b-mwc-hst-phx2-redhat-com-1511067149304-383-1) &gt;&gt;&gt;&gt; bean://hello Exchange[ID-fabric8-slave02-dmz-b-mwc-hst-phx2-redhat-com-1511067149304-383-3] [0m[32m00:18:14,776 DEBUG [org.apache.camel.processor.SendProcessor] (Camel (camel-384) thread #565 - reactive-streams://ID-fabric8-slave02-dmz-b-mwc-hst-phx2-redhat-com-1511067149304-383-1) &gt;&gt;&gt;&gt; bean://hello Exchange[ID-fabric8-slave02-dmz-b-mwc-hst-phx2-redhat-com-1511067149304-383-4] [0m[31m00:18:14,790 ERROR [stderr] (Camel (camel-384) thread #566 - CamelReactiveStreamsWorker) Exception in thread "Camel (camel-384) thread #566 - CamelReactiveStreamsWorker" reactor.core.Exceptions$ErrorCallbackNotImplemented: org.junit.ComparisonFailure: expected:&lt;Hello [1]&gt; but was:&lt;Hello [3]&gt; [0m[31m00:18:14,790 ERROR [stderr] (Camel (camel-384) thread #566 - CamelReactiveStreamsWorker) Caused by: org.junit.ComparisonFailure: expected:&lt;Hello [1]&gt; but was:&lt;Hello [3]&gt; [0m[31m00:18:14,790 ERROR [stderr] (Camel (camel-384) thread #566 - CamelReactiveStreamsWorker) at org.junit.Assert.assertEquals(Assert.java:115) [0m[31m00:18:14,790 ERROR [stderr] (Camel (camel-384) thread #566 - CamelReactiveStreamsWorker) at org.junit.Assert.assertEquals(Assert.java:144) [0m[31m00:18:14,790 ERROR [stderr] (Camel (camel-384) thread #566 - CamelReactiveStreamsWorker) at org.wildfly.camel.test.reactor.ReactorIntegrationTest.lambda$testToFunction$22(ReactorIntegrationTest.java:401) [0m[31m00:18:14,790 ERROR [stderr] (Camel (camel-384) thread #566 - CamelReactiveStreamsWorker) at reactor.core.publisher.FluxPeek$PeekSubscriber.onNext(FluxPeek.java:165) [0m[31m00:18:14,790 ERROR [stderr] (Camel (camel-384) thread #566 - CamelReactiveStreamsWorker) at reactor.core.publisher.FluxFlatMap$FlatMapMain.innerNext(FluxFlatMap.java:778) [0m[31m00:18:14,790 ERROR [stderr] (Camel (camel-384) thread #566 - CamelReactiveStreamsWorker) at reactor.core.publisher.FluxFlatMap$FlatMapInner.onNext(FluxFlatMap.java:919) [0m[31m00:18:14,790 ERROR [stderr] (Camel (camel-384) thread #566 - CamelReactiveStreamsWorker) at org.apache.camel.component.reactive.streams.util.ConvertingPublisher$1.onNext(ConvertingPublisher.java:94) [0m[31m00:18:14,790 ERROR [stderr] (Camel (camel-384) thread #566 - CamelReactiveStreamsWorker) at org.apache.camel.component.reactive.streams.util.ConvertingPublisher$1.onNext(ConvertingPublisher.java:53) [0m[31m00:18:14,790 ERROR [stderr] (Camel (camel-384) thread #566 - CamelReactiveStreamsWorker) at org.apache.camel.component.reactive.streams.engine.DelayedMonoPublisher$MonoSubscription.flush(DelayedMonoPublisher.java:172) [0m[31m00:18:14,790 ERROR [stderr] (Camel (camel-384) thread #566 - CamelReactiveStreamsWorker) at org.apache.camel.component.reactive.streams.engine.DelayedMonoPublisher.lambda$flushCycle$0(DelayedMonoPublisher.java:102) [0m[31m00:18:14,791 ERROR [stderr] (Camel (camel-384) thread #566 - CamelReactiveStreamsWorker) at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [0m[31m00:18:14,791 ERROR [stderr] (Camel (camel-384) thread #566 - CamelReactiveStreamsWorker) at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [0m[31m00:18:14,791 ERROR [stderr] (Camel (camel-384) thread #566 - CamelReactiveStreamsWorker) at java.lang.Thread.run(Thread.java:745) ```</body>
		<created>2017-11-20 07:34:17</created>
		<closed>2017-11-23 08:31:58</closed>
	</bug>
	<bug>
		<id>2318</id>
		<title>Flink requires internals to by visible by TCCL</title>
		<body>CrossRef: https://issues.apache.org/jira/browse/CAMEL-12028</body>
		<created>2017-11-19 06:07:20</created>
		<closed>2017-11-19 07:04:40</closed>
	</bug>
	<bug>
		<id>2293</id>
		<title>Unable to use SOAP 1.2 with SoapJaxbDataFormat</title>
		<body>If you configure the SoapJaxbDataFormat to use SOAP 1.2:  ``` SoapJaxbDataFormat format = new SoapJaxbDataFormat(); format.setVersion("1.2"); ``` You end up with: ``` Caused by: javax.xml.bind.JAXBException: "org.w3._2003._05.soap_envelope" doesn't contain ObjectFactory.class or jaxb.index at com.sun.xml.bind.v2.ContextFactory.createContext(ContextFactory.java:281) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at javax.xml.bind.ContextFinder.newInstance(ContextFinder.java:137) at javax.xml.bind.ContextFinder.find(ContextFinder.java:294) at javax.xml.bind.JAXBContext.newInstance(JAXBContext.java:412) at javax.xml.bind.JAXBContext.newInstance(JAXBContext.java:375) at javax.xml.bind.JAXBContext.newInstance(JAXBContext.java:279) at org.apache.camel.dataformat.soap.SoapJaxbDataFormat.createContext(SoapJaxbDataFormat.java:312) at org.apache.camel.converter.jaxb.JaxbDataFormat.doStart(JaxbDataFormat.java:490) at org.apache.camel.dataformat.soap.SoapJaxbDataFormat.doStart(SoapJaxbDataFormat.java:108) ```  The soap component module has some export restrictions for these `org/w3` packages:  ``` &lt;exports&gt;     &lt;exclude path="org/w3**" /&gt; &lt;/exports&gt; ```</body>
		<created>2017-11-13 10:54:41</created>
		<closed>2017-11-17 11:37:54</closed>
	</bug>
	<bug>
		<id>2292</id>
		<title>APNS server uses hard coded ports</title>
		<body>I've seen this repeatedly with wildfly-12.x and eap-7.1.0.GA-redhat-11  ``` 11:31:19,396 ERROR [stderr] (Thread-226) Caused by: java.net.BindException: Address already in use (Bind failed) 11:31:19,396 ERROR [stderr] (Thread-226) at java.net.PlainSocketImpl.socketBind(Native Method) 11:31:19,396 ERROR [stderr] (Thread-226) at java.net.AbstractPlainSocketImpl.bind(AbstractPlainSocketImpl.java:387) 11:31:19,396 ERROR [stderr] (Thread-226) at java.net.ServerSocket.bind(ServerSocket.java:375) 11:31:19,396 ERROR [stderr] (Thread-226) at java.net.ServerSocket.&lt;init&gt;(ServerSocket.java:237) 11:31:19,396 ERROR [stderr] (Thread-226) at java.net.ServerSocket.&lt;init&gt;(ServerSocket.java:181) 11:31:19,396 ERROR [stderr] (Thread-226) at javax.net.ssl.SSLServerSocket.&lt;init&gt;(SSLServerSocket.java:136) 11:31:19,396 ERROR [stderr] (Thread-226) at sun.security.ssl.SSLServerSocketImpl.&lt;init&gt;(SSLServerSocketImpl.java:113) 11:31:19,396 ERROR [stderr] (Thread-226) at sun.security.ssl.SSLServerSocketFactoryImpl.createServerSocket(SSLServerSocketFactoryImpl.java:79) 11:31:19,396 ERROR [stderr] (Thread-226) at com.notnoop.apns.utils.ApnsServerStub$GatewayRunner.run(ApnsServerStub.java:158) ```  The testsuite hangs for minutes and then continues. Perhaps a timeout on the mock endpoint is also needed  ``` [INFO] Wildfly Camel :: Testsuite :: Standalone :: Basic .. FAILURE [17:38 min] ```</body>
		<created>2017-11-13 10:34:47</created>
		<closed>2017-11-17 15:37:40</closed>
	</bug>
	<bug>
		<id>2290</id>
		<title>DockerIntegrationTest fails when boot2docker is not present</title>
		<body>``` [INFO] Running org.wildfly.camel.test.docker.DockerIntegrationTest Nov 13, 2017 9:20:36 AM org.arquillian.spacelift.Spacelift$SpaceliftInstance &lt;init&gt; INFO: Initialized Spacelift from defaults, workspace: /Users/tdiesler/git/wildfly-camel/itests/standalone/docker, cache: /Users/tdiesler/.spacelift/cache [ERROR] Tests run: 1, Failures: 0, Errors: 1, Skipped: 0, Time elapsed: 2.723 s &lt;&lt;&lt; FAILURE! - in org.wildfly.camel.test.docker.DockerIntegrationTest [ERROR] org.wildfly.camel.test.docker.DockerIntegrationTest  Time elapsed: 2.722 s  &lt;&lt;&lt; ERROR! java.lang.RuntimeException: Could not create new instance of class org.jboss.arquillian.test.impl.EventTestRunnerAdaptor Caused by: java.lang.reflect.InvocationTargetException Caused by: org.arquillian.spacelift.execution.ExecutionException: Execution of a task failed. Execution of a task failed. Unable to execute task SpawnProcessTask Caused by: java.io.IOException: Cannot run program "boot2docker": error=2, No such file or directory Caused by: java.io.IOException: error=2, No such file or directory ```</body>
		<created>2017-11-13 08:26:04</created>
		<closed>2017-11-13 09:15:00</closed>
	</bug>
	<bug>
		<id>2289</id>
		<title>Milo fails with camel-2.21.0</title>
		<body>``` 08:31:22,327 WARNING [io.netty.channel.ChannelInitializer] (ua-netty-event-loop-6) Failed to initialize a channel. Closing: [id: 0x957374cc]: UaException: status=Bad_ConfigurationError, message=no KeyPair configured at org.eclipse.milo.opcua.stack.client.UaTcpStackClient$1.lambda$initChannel$2(UaTcpStackClient.java:406) at java.util.Optional.orElseThrow(Optional.java:290) at org.eclipse.milo.opcua.stack.client.UaTcpStackClient$1.initChannel(UaTcpStackClient.java:405) at org.eclipse.milo.opcua.stack.client.UaTcpStackClient$1.initChannel(UaTcpStackClient.java:372) at io.netty.channel.ChannelInitializer.initChannel(ChannelInitializer.java:113) at io.netty.channel.ChannelInitializer.handlerAdded(ChannelInitializer.java:105) at io.netty.channel.DefaultChannelPipeline.callHandlerAdded0(DefaultChannelPipeline.java:597) at io.netty.channel.DefaultChannelPipeline.access$000(DefaultChannelPipeline.java:44) at io.netty.channel.DefaultChannelPipeline$PendingHandlerAddedTask.execute(DefaultChannelPipeline.java:1387) at io.netty.channel.DefaultChannelPipeline.callHandlerAddedForAllHandlers(DefaultChannelPipeline.java:1122) at io.netty.channel.DefaultChannelPipeline.invokeHandlerAddedIfNeeded(DefaultChannelPipeline.java:647) at io.netty.channel.AbstractChannel$AbstractUnsafe.register0(AbstractChannel.java:506) at io.netty.channel.AbstractChannel$AbstractUnsafe.access$200(AbstractChannel.java:419) at io.netty.channel.AbstractChannel$AbstractUnsafe$1.run(AbstractChannel.java:478) at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163) at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:403) at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:442) at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:858) at java.lang.Thread.run(Thread.java:748) ```</body>
		<created>2017-11-13 07:34:16</created>
		<closed>2018-03-22 14:20:17</closed>
	</bug>
	<bug>
		<id>2286</id>
		<title>Multiple SLF4J bindings in standalone/basic</title>
		<body>``` SLF4J: Class path contains multiple SLF4J bindings. SLF4J: Found binding in [jar:file:/Users/tdiesler/.m2/repository/ch/qos/logback/logback-classic/1.1.3/logback-classic-1.1.3.jar!/org/slf4j/impl/StaticLoggerBinder.class] SLF4J: Found binding in [jar:file:/Users/tdiesler/.m2/repository/org/slf4j/slf4j-log4j12/1.7.22/slf4j-log4j12-1.7.22.jar!/org/slf4j/impl/StaticLoggerBinder.class] SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation. SLF4J: Actual binding is of type [ch.qos.logback.classic.util.ContextSelectorStaticBinder] ```  We cannot remove logback-classic because the RabbitMQ Broker has a direct dependency on the logback impl.  ```         &lt;dependency&gt;             &lt;groupId&gt;org.apache.qpid&lt;/groupId&gt;             &lt;artifactId&gt;qpid-broker&lt;/artifactId&gt;             &lt;version&gt;${version.apache.qpid}&lt;/version&gt;             &lt;exclusions&gt;                 &lt;exclusion&gt;                     &lt;groupId&gt;ch.qos.logback&lt;/groupId&gt;                     &lt;artifactId&gt;logback-classic&lt;/artifactId&gt;                 &lt;/exclusion&gt;             &lt;/exclusions&gt;         &lt;/dependency&gt;  2017-11-29 15:48:06 ERROR [org.jboss.as.arquillian.container.ServerSetupObserver] (main) - Setup failed during setup. Offending class 'org.wildfly.camel.test.rabbitmq.RabbitMQIntegrationTest$QpidSetup@7e8e8651' java.lang.NoClassDefFoundError: ch/qos/logback/classic/Logger at org.apache.qpid.server.Broker$1.run(Broker.java:147) at java.security.AccessController.doPrivileged(Native Method) at javax.security.auth.Subject.doAs(Subject.java:422) at org.apache.qpid.server.Broker.startup(Broker.java:142) at org.wildfly.camel.test.rabbitmq.RabbitMQIntegrationTest$QpidSetup.setup(RabbitMQIntegrationTest.java:79) ```</body>
		<created>2017-11-10 09:34:58</created>
		<closed>2017-11-29 18:46:19</closed>
	</bug>
	<bug>
		<id>2250</id>
		<title>Path filter leaks internals to user classpath</title>
		<body>``` [12:37:50]  &lt;jnetherton&gt;wonder if the exported path pattern matching for 'internal' needs to be a bit more inclusive [12:37:51]  &lt;jnetherton&gt;grep internal exported-paths.txt [12:37:59]  &lt;jnetherton&gt;com/amazonaws/services/sqs/internal/auth [12:37:59]  &lt;jnetherton&gt;org/apache/kafka/clients/consumer/internals [12:37:59]  &lt;jnetherton&gt;org/apache/kafka/clients/producer/internals [12:37:59]  &lt;jnetherton&gt;org/apache/kafka/common/header/internals [12:37:59]  &lt;jnetherton&gt;org/apache/kafka/common/internals ```  Also `**/impl` should probably not be exported</body>
		<created>2017-10-30 08:44:26</created>
		<closed>2017-11-15 08:41:32</closed>
	</bug>
	<bug>
		<id>2245</id>
		<title>CryptoCmsIntegrationTest fails on OpenJDK</title>
		<body>Seems to be ok on OpenJDK 8u141, fails on 8u144:  ``` Caused by: org.apache.camel.component.crypto.cms.exception.CryptoCmsException: Problem during generating the keystore at org.apache.camel.component.crypto.cms.common.DefaultCryptoCmsConfiguration.setKeyStoreParameters(DefaultCryptoCmsConfiguration.java:48) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at org.apache.camel.util.IntrospectionSupport.setProperty(IntrospectionSupport.java:568) at org.apache.camel.util.EndpointHelper.setReferenceProperties(EndpointHelper.java:276) at org.apache.camel.impl.DefaultComponent.setProperties(DefaultComponent.java:308) at org.apache.camel.impl.DefaultComponent.setProperties(DefaultComponent.java:297) at org.apache.camel.component.crypto.cms.CryptoCmsComponent.createEndpoint(CryptoCmsComponent.java:110) at org.apache.camel.impl.DefaultComponent.createEndpoint(DefaultComponent.java:126) at org.apache.camel.impl.DefaultCamelContext.getEndpoint(DefaultCamelContext.java:703) ... 156 more Caused by: java.security.cert.CertificateParsingException: java.io.IOException: Unknown named curve: 1.3.132.0.37 at sun.security.x509.X509CertInfo.&lt;init&gt;(X509CertInfo.java:169) at sun.security.x509.X509CertImpl.parse(X509CertImpl.java:1804) at sun.security.x509.X509CertImpl.&lt;init&gt;(X509CertImpl.java:195) at sun.security.provider.X509Factory.engineGenerateCertificate(X509Factory.java:102) at java.security.cert.CertificateFactory.generateCertificate(CertificateFactory.java:339) at com.sun.crypto.provider.JceKeyStore.engineLoad(JceKeyStore.java:780) at java.security.KeyStore.load(KeyStore.java:1445) at org.apache.camel.util.jsse.KeyStoreParameters.createKeyStore(KeyStoreParameters.java:175) at org.apache.camel.component.crypto.cms.common.DefaultCryptoCmsConfiguration.setKeyStoreParameters(DefaultCryptoCmsConfiguration.java:46) ... 167 more Caused by: java.io.IOException: Unknown named curve: 1.3.132.0.37 at sun.security.ec.ECParameters.engineInit(ECParameters.java:143) at java.security.AlgorithmParameters.init(AlgorithmParameters.java:293) at sun.security.x509.AlgorithmId.decodeParams(AlgorithmId.java:132) at sun.security.x509.AlgorithmId.&lt;init&gt;(AlgorithmId.java:114) at sun.security.x509.AlgorithmId.parse(AlgorithmId.java:372) at sun.security.x509.X509Key.parse(X509Key.java:168) at sun.security.x509.CertificateX509Key.&lt;init&gt;(CertificateX509Key.java:75) at sun.security.x509.X509CertInfo.parse(X509CertInfo.java:667) at sun.security.x509.X509CertInfo.&lt;init&gt;(X509CertInfo.java:167) ... 175 more ```</body>
		<created>2017-10-27 09:12:11</created>
		<closed>2020-02-06 13:01:16</closed>
	</bug>
	<bug>
		<id>2243</id>
		<title>Inconsistent jar versions with apache curator </title>
		<body>``` /org/apache/zookeeper/main/curator-client-2.7.1.jar /org/apache/zookeeper/main/curator-framework-2.12.0.jar /org/apache/zookeeper/main/curator-recipes-2.12.0.jar /org/apache/zookeeper/main/curator-x-discovery-2.12.0.jar ```  CrossRef: https://issues.apache.org/jira/browse/CAMEL-11950</body>
		<created>2017-10-26 15:08:54</created>
		<closed>2017-10-27 12:24:10</closed>
	</bug>
	<bug>
		<id>2239</id>
		<title>Datasource/jndi dependency race condition</title>
		<body>CrossRef: https://issues.jboss.org/browse/ENTESB-6842</body>
		<created>2017-10-26 09:10:14</created>
		<closed>2018-02-09 14:48:10</closed>
	</bug>
	<bug>
		<id>2236</id>
		<title>Possible race condition in iec60870 producer</title>
		<body>https://issues.apache.org/jira/browse/CAMEL-11947</body>
		<created>2017-10-26 06:49:27</created>
		<closed>2020-02-06 13:01:16</closed>
	</bug>
	<bug>
		<id>2209</id>
		<title>GoogleCalendarIntegrationTest assertion failure</title>
		<body>``` GoogleCalendarIntegrationTest.events:167 expected:&lt;[Feed the C]amel later&gt; but was:&lt;[GoogleCalendarIntegrationTest.events feed the c]amel later&gt; ```</body>
		<created>2017-10-19 07:46:36</created>
		<closed>2017-10-19 08:56:42</closed>
	</bug>
	<bug>
		<id>2198</id>
		<title>Unable to implement Spring JMS MessageConverter</title>
		<body>See:  https://issues.jboss.org/browse/ENTESB-7384  You get an NCDFE if you attempt something like:  ``` public class BlobMessageConverter implements MessageConverter { ... } ``` These instances of `MessageConverter` can be configured on camel-jms endpoints, but this currently fails: ``` 12:38:46,353 WARN  [org.jboss.modules] (Weld Thread Pool -- 4) Failed to define class org.wildfly.camel.examples.activemq.BlobMessageConverter in Module "deployment.example-camel-activemq.war:main" from Service Module Loader: java.lang.NoClassDefFoundError: Failed to link org/wildfly/camel/examples/activemq/BlobMessageConverter (Module "deployment.example-camel-activemq.war:main" from Service Module Loader): org/springframework/jms/support/converter/MessageConverter ```</body>
		<created>2017-10-17 13:11:14</created>
		<closed>2017-10-23 09:53:58</closed>
	</bug>
	<bug>
		<id>2173</id>
		<title>Remove support for camel-couchbase</title>
		<body>A strange issue with Arquillian Cube not detecting that the Couchbase Docker container has started.  Tough to reproduce locally as it happens infrequently (for me at least).  CrossRef: https://issues.redhat.com/browse/ENTESB-12412 </body>
		<created>2017-10-13 14:18:37</created>
		<closed>2020-02-06 13:01:15</closed>
	</bug>
	<bug>
		<id>2150</id>
		<title>Kie assumes that the TCCL can load its services</title>
		<body>CrossRef: https://issues.apache.org/jira/browse/CAMEL-11889</body>
		<created>2017-10-10 06:19:30</created>
		<closed>2017-11-23 14:11:29</closed>
	</bug>
	<bug>
		<id>2140</id>
		<title>Cannot build feature pack with --also-make</title>
		<body>``` mvn clean install -pl feature/pack -am  ```</body>
		<created>2017-10-06 06:10:18</created>
		<closed>2017-10-06 07:12:45</closed>
	</bug>
	<bug>
		<id>2127</id>
		<title>Failed to define class HBaseZeroCopyByteString</title>
		<body>``` mvn clean install -Dtest=HBaseIntegrationTest ```  ``` 11:14:10,720 WARN  [org.jboss.modules] (hconnection-0x666cd0ed-metaLookup-shared--pool1-t1) Failed to define class com.google.protobuf.HBaseZeroCopyByteString in Module "org.apache.hbase:main" from local module loader @32cf48b7 (finder: local module finder @679b62af (roots: /Users/tdiesler/git/wildfly-camel/itests/standalone/extra/target/wildfly-10.1.0.Final/modules,/Users/tdiesler/git/wildfly-camel/itests/standalone/extra/target/wildfly-10.1.0.Final/modules/system/layers/fuse,/Users/tdiesler/git/wildfly-camel/itests/standalone/extra/target/wildfly-10.1.0.Final/modules/system/layers/base)): java.lang.IllegalAccessError: Failed to link com/google/protobuf/HBaseZeroCopyByteString (Module "org.apache.hbase:main" from local module loader @32cf48b7 (finder: local module finder @679b62af (roots: /Users/tdiesler/git/wildfly-camel/itests/standalone/extra/target/wildfly-10.1.0.Final/modules,/Users/tdiesler/git/wildfly-camel/itests/standalone/extra/target/wildfly-10.1.0.Final/modules/system/layers/fuse,/Users/tdiesler/git/wildfly-camel/itests/standalone/extra/target/wildfly-10.1.0.Final/modules/system/layers/base))): class com.google.protobuf.HBaseZeroCopyByteString cannot access its superclass com.google.protobuf.LiteralByteString at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) at java.lang.reflect.Constructor.newInstance(Constructor.java:423) at org.jboss.modules.ModuleClassLoader.defineClass(ModuleClassLoader.java:446) at org.jboss.modules.ModuleClassLoader.loadClassLocal(ModuleClassLoader.java:274) at org.jboss.modules.ModuleClassLoader$1.loadClassLocal(ModuleClassLoader.java:78) at org.jboss.modules.Module.loadModuleClass(Module.java:606) at org.jboss.modules.ModuleClassLoader.findClass(ModuleClassLoader.java:190) at org.jboss.modules.ConcurrentClassLoader.performLoadClassUnchecked(ConcurrentClassLoader.java:363) at org.jboss.modules.ConcurrentClassLoader.performLoadClass(ConcurrentClassLoader.java:351) at org.jboss.modules.ConcurrentClassLoader.loadClass(ConcurrentClassLoader.java:93) at org.apache.hadoop.hbase.util.ByteStringer.&lt;clinit&gt;(ByteStringer.java:44) at org.apache.hadoop.hbase.protobuf.RequestConverter.buildRegionSpecifier(RequestConverter.java:1037) at org.apache.hadoop.hbase.protobuf.RequestConverter.buildScanRequest(RequestConverter.java:488) at org.apache.hadoop.hbase.client.ClientSmallScanner$SmallScannerCallable.call(ClientSmallScanner.java:194) at org.apache.hadoop.hbase.client.ClientSmallScanner$SmallScannerCallable.call(ClientSmallScanner.java:180) at org.apache.hadoop.hbase.client.RpcRetryingCaller.callWithoutRetries(RpcRetryingCaller.java:200) at org.apache.hadoop.hbase.client.ScannerCallableWithReplicas$RetryingRPC.call(ScannerCallableWithReplicas.java:360) at org.apache.hadoop.hbase.client.ScannerCallableWithReplicas$RetryingRPC.call(ScannerCallableWithReplicas.java:334) at org.apache.hadoop.hbase.client.RpcRetryingCaller.callWithRetries(RpcRetryingCaller.java:126) at org.apache.hadoop.hbase.client.ResultBoundedCompletionService$QueueingFuture.run(ResultBoundedCompletionService.java:65) at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) at java.lang.Thread.run(Thread.java:745) ```  caused by   ``` com.google.protobuf.HBaseZeroCopyByteString cannot access its superclass  com.google.protobuf.LiteralByteString ```</body>
		<created>2017-09-29 09:17:55</created>
		<closed>2017-12-01 09:01:26</closed>
	</bug>
	<bug>
		<id>2113</id>
		<title>Connection refused with PubSubIntegrationTest</title>
		<body>``` 13:36:29,212 SEVERE [org.jboss.arquillian.protocol.jmx.JMXTestRunner] (pool-3-thread-1) Failed: org.wildfly.camel.test.google.PubSubIntegrationTest.testGooglePubSubComponent: java.net.ConnectException: Connection refused (Connection refused) at java.net.PlainSocketImpl.socketConnect(Native Method) at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350) at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206) at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188) at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) at java.net.Socket.connect(Socket.java:589) at sun.net.NetworkClient.doConnect(NetworkClient.java:175) at sun.net.www.http.HttpClient.openServer(HttpClient.java:432) at sun.net.www.http.HttpClient.openServer(HttpClient.java:527) at sun.net.www.http.HttpClient.&lt;init&gt;(HttpClient.java:211) at sun.net.www.http.HttpClient.New(HttpClient.java:308) at sun.net.www.http.HttpClient.New(HttpClient.java:326) at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1202) at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1138) at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1032) at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:966) at sun.net.www.protocol.http.HttpURLConnection.getOutputStream0(HttpURLConnection.java:1316) at sun.net.www.protocol.http.HttpURLConnection.getOutputStream(HttpURLConnection.java:1291) at com.google.api.client.http.javanet.NetHttpRequest.execute(NetHttpRequest.java:77) at com.google.api.client.http.HttpRequest.execute(HttpRequest.java:981) at com.google.api.client.googleapis.services.AbstractGoogleClientRequest.executeUnparsed(AbstractGoogleClientRequest.java:419) at com.google.api.client.googleapis.services.AbstractGoogleClientRequest.executeUnparsed(AbstractGoogleClientRequest.java:352) at com.google.api.client.googleapis.services.AbstractGoogleClientRequest.execute(AbstractGoogleClientRequest.java:469) at org.wildfly.camel.test.google.PubSubIntegrationTest.testGooglePubSubComponent(PubSubIntegrationTest.java:98) ```</body>
		<created>2017-09-26 11:43:21</created>
		<closed>2017-09-27 06:34:20</closed>
	</bug>
	<bug>
		<id>2111</id>
		<title>BOM not included in reactor with --also-make</title>
		<body></body>
		<created>2017-09-26 09:51:18</created>
		<closed>2017-09-26 10:05:22</closed>
	</bug>
	<bug>
		<id>2107</id>
		<title>Intermittent failure of GeocoderIntegrationTest</title>
		<body>Seems the Geocoder service is a bit flaky.  Maybe we can tweak the endpoint URL and just consume a stubbed JSON response from a local endpoint.  ``` [0m[32m23:53:28,225 DEBUG [org.apache.commons.httpclient.HttpConnection] (pool-3-thread-1) Open connection to maps.googleapis.com:80 [0m[32m23:53:28,367 DEBUG [httpclient.wire.header] (pool-3-thread-1) &gt;&gt; "GET /maps/api/geocode/json?sensor=false&amp;address=London%2C+England&amp;language=en HTTP/1.1[\r][\n]" [0m[32m23:53:28,367 DEBUG [org.apache.commons.httpclient.HttpMethodBase] (pool-3-thread-1) Adding Host request header [0m[32m23:53:28,376 DEBUG [httpclient.wire.header] (pool-3-thread-1) &gt;&gt; "User-Agent: Jakarta Commons-HttpClient/3.1[\r][\n]" [0m[32m23:53:28,376 DEBUG [httpclient.wire.header] (pool-3-thread-1) &gt;&gt; "Host: maps.googleapis.com[\r][\n]" [0m[32m23:53:28,376 DEBUG [httpclient.wire.header] (pool-3-thread-1) &gt;&gt; "[\r][\n]" [0m[32m23:53:30,486 DEBUG [httpclient.wire.header] (pool-3-thread-1) &lt;&lt; "HTTP/1.1 500 Internal Server Error[\r][\n]" [0m[32m23:53:30,486 DEBUG [httpclient.wire.header] (pool-3-thread-1) &lt;&lt; "HTTP/1.1 500 Internal Server Error[\r][\n]" [0m[32m23:53:30,487 DEBUG [httpclient.wire.header] (pool-3-thread-1) &lt;&lt; "Content-Type: application/json; charset=UTF-8[\r][\n]" [0m[32m23:53:30,487 DEBUG [httpclient.wire.header] (pool-3-thread-1) &lt;&lt; "Date: Mon, 25 Sep 2017 03:53:35 GMT[\r][\n]" [0m[32m23:53:30,487 DEBUG [httpclient.wire.header] (pool-3-thread-1) &lt;&lt; "Pragma: no-cache[\r][\n]" [0m[32m23:53:30,487 DEBUG [httpclient.wire.header] (pool-3-thread-1) &lt;&lt; "Expires: Fri, 01 Jan 1990 00:00:00 GMT[\r][\n]" [0m[32m23:53:30,487 DEBUG [httpclient.wire.header] (pool-3-thread-1) &lt;&lt; "Cache-Control: no-cache, must-revalidate[\r][\n]" [0m[32m23:53:30,488 DEBUG [httpclient.wire.header] (pool-3-thread-1) &lt;&lt; "Access-Control-Allow-Origin: *[\r][\n]" [0m[32m23:53:30,488 DEBUG [httpclient.wire.header] (pool-3-thread-1) &lt;&lt; "Server: mafe[\r][\n]" [0m[32m23:53:30,488 DEBUG [httpclient.wire.header] (pool-3-thread-1) &lt;&lt; "X-XSS-Protection: 1; mode=block[\r][\n]" [0m[32m23:53:30,488 DEBUG [httpclient.wire.header] (pool-3-thread-1) &lt;&lt; "X-Frame-Options: SAMEORIGIN[\r][\n]" [0m[32m23:53:30,488 DEBUG [httpclient.wire.header] (pool-3-thread-1) &lt;&lt; "Accept-Ranges: none[\r][\n]" [0m[32m23:53:30,488 DEBUG [httpclient.wire.header] (pool-3-thread-1) &lt;&lt; "Vary: Accept-Encoding[\r][\n]" [0m[32m23:53:30,488 DEBUG [httpclient.wire.header] (pool-3-thread-1) &lt;&lt; "Transfer-Encoding: chunked[\r][\n]" [0m[32m23:53:30,488 DEBUG [httpclient.wire.header] (pool-3-thread-1) &lt;&lt; "[\r][\n]" [0m[32m23:53:30,491 DEBUG [httpclient.wire.content] (pool-3-thread-1) &lt;&lt; "3" [0m[32m23:53:30,491 DEBUG [httpclient.wire.content] (pool-3-thread-1) &lt;&lt; "5" [0m[32m23:53:30,491 DEBUG [httpclient.wire.content] (pool-3-thread-1) &lt;&lt; "[\r]" [0m[32m23:53:30,491 DEBUG [httpclient.wire.content] (pool-3-thread-1) &lt;&lt; "[\n]" [0m[32m23:53:30,491 DEBUG [httpclient.wire.content] (pool-3-thread-1) &lt;&lt; "{[\n]" [0m[32m23:53:30,491 DEBUG [httpclient.wire.content] (pool-3-thread-1) &lt;&lt; "   "results" : [],[\n]" [0m[32m23:53:30,491 DEBUG [httpclient.wire.content] (pool-3-thread-1) &lt;&lt; "   "status" : "UNKNOWN_ERROR"[\n]" [0m[32m23:53:30,491 DEBUG [httpclient.wire.content] (pool-3-thread-1) &lt;&lt; "}[\n]" [0m[32m23:53:30,497 DEBUG [httpclient.wire.content] (pool-3-thread-1) &lt;&lt; "[\r]" [0m[32m23:53:30,498 DEBUG [httpclient.wire.content] (pool-3-thread-1) &lt;&lt; "[\n]" [0m[32m23:53:30,498 DEBUG [httpclient.wire.content] (pool-3-thread-1) &lt;&lt; "0" [0m[32m23:53:30,498 DEBUG [httpclient.wire.content] (pool-3-thread-1) &lt;&lt; "[\r]" [0m[32m23:53:30,498 DEBUG [httpclient.wire.content] (pool-3-thread-1) &lt;&lt; "[\n]" [0m[32m23:53:30,498 DEBUG [httpclient.wire.content] (pool-3-thread-1) &lt;&lt; "[\r]" [0m[32m23:53:30,498 DEBUG [httpclient.wire.content] (pool-3-thread-1) &lt;&lt; "[\n]" [0m[32m23:53:30,498 DEBUG [httpclient.wire.header] (pool-3-thread-1) &lt;&lt; "[\r][\n]" [0m[32m23:53:30,498 DEBUG [org.apache.commons.httpclient.HttpMethodBase] (pool-3-thread-1)  ```</body>
		<created>2017-09-25 06:22:39</created>
		<closed>2017-09-25 07:54:36</closed>
	</bug>
	<bug>
		<id>2104</id>
		<title>Dependency version for arquillian-cube-docker missing</title>
		<body></body>
		<created>2017-09-22 10:14:12</created>
		<closed>2017-09-22 12:13:23</closed>
	</bug>
	<bug>
		<id>2093</id>
		<title>Conflicting AWS objects with concurrent test suites</title>
		<body></body>
		<created>2017-09-19 18:32:44</created>
		<closed>2017-09-20 08:31:18</closed>
	</bug>
	<bug>
		<id>2086</id>
		<title>DynamoDB table already exists</title>
		<body></body>
		<created>2017-09-19 07:08:07</created>
		<closed>2017-09-19 08:36:52</closed>
	</bug>
	<bug>
		<id>2078</id>
		<title>ClassNotFoundException when turning on metrics gathering</title>
		<body>After turning on metrics gathering I've got ClassNotFoundException like:  ``` Caused by: java.lang.ClassNotFoundException: com.fasterxml.jackson.core.JsonProcessingException  from [Module \"org.apache.camel.component.metrics:main\" from local module loader @1c2c22f3 (finder:  local module finder @18e8568 (roots: /home/lechique/prog/wildfly-10.1.0.Final-camel/modules, /home/lechique/prog/wildfly-10.1.0.Final-camel/modules/system/layers/fuse,/home/lechique/prog/wildfly- 10.1.0.Final-camel/modules/system/layers/base)) ```  Metrics gathering turned on with:  ```java getContext().addRoutePolicyFactory(new MetricsRoutePolicyFactory()); ```  My project has following dependencies in POM.xml ```xml &lt;dependency&gt;     &lt;groupId&gt;org.apache.camel&lt;/groupId&gt;     &lt;artifactId&gt;camel-cdi&lt;/artifactId&gt;     &lt;scope&gt;provided&lt;/scope&gt;     &lt;version&gt;2.19.1&lt;/version&gt; &lt;/dependency&gt; &lt;dependency&gt;     &lt;groupId&gt;org.apache.camel&lt;/groupId&gt;     &lt;artifactId&gt;camel-metrics&lt;/artifactId&gt;     &lt;version&gt;2.19.1&lt;/version&gt;     &lt;scope&gt;provided&lt;/scope&gt; &lt;/dependency&gt; ``` </body>
		<created>2017-09-17 19:49:18</created>
		<closed>2017-09-19 09:54:10</closed>
	</bug>
	<bug>
		<id>2073</id>
		<title>SalesforceIntegrationTest fails with Camel 2.19.3</title>
		<body>``` java.lang.NoClassDefFoundError: com/fasterxml/jackson/module/jsonSchema/types/SimpleTypeSchema at org.jboss.modules.ModuleClassLoader.findClass(ModuleClassLoader.java:198) at org.jboss.modules.ConcurrentClassLoader.performLoadClassUnchecked(ConcurrentClassLoader.java:363) at org.jboss.modules.ConcurrentClassLoader.performLoadClass(ConcurrentClassLoader.java:351) at org.jboss.modules.ConcurrentClassLoader.loadClass(ConcurrentClassLoader.java:93) at org.apache.camel.component.salesforce.internal.SalesforceSession.&lt;init&gt;(SalesforceSession.java:103) at org.apache.camel.component.salesforce.SalesforceComponent.doStart(SalesforceComponent.java:357) at org.apache.camel.support.ServiceSupport.start(ServiceSupport.java:61) at org.apache.camel.impl.DefaultCamelContext.startService(DefaultCamelContext.java:3514) at org.apache.camel.impl.DefaultCamelContext.startServices(DefaultCamelContext.java:3520) at org.apache.camel.impl.DefaultCamelContext.doStartCamel(DefaultCamelContext.java:3268) at org.apache.camel.impl.DefaultCamelContext.access$000(DefaultCamelContext.java:202) at org.apache.camel.impl.DefaultCamelContext$2.call(DefaultCamelContext.java:3089) at org.apache.camel.impl.DefaultCamelContext$2.call(DefaultCamelContext.java:3085) at org.apache.camel.impl.DefaultCamelContext.doWithDefinedClassLoader(DefaultCamelContext.java:3108) at org.apache.camel.impl.DefaultCamelContext.doStart(DefaultCamelContext.java:3085) at org.apache.camel.support.ServiceSupport.start(ServiceSupport.java:61) at org.apache.camel.impl.DefaultCamelContext.start(DefaultCamelContext.java:3022) at org.wildfly.camel.test.salesforce.SalesforceIntegrationTest.testSalesforceQuery(SalesforceIntegrationTest.java:88) ```</body>
		<created>2017-09-15 09:49:42</created>
		<closed>2017-09-15 10:27:11</closed>
	</bug>
	<bug>
		<id>1961</id>
		<title>Hdfs2IntegrationTest fails on Windows</title>
		<body></body>
		<created>2017-08-23 13:37:53</created>
		<closed>2020-02-06 13:01:13</closed>
	</bug>
	<bug>
		<id>1958</id>
		<title>Unable to load custom HBase configuration files  </title>
		<body>https://issues.apache.org/jira/browse/CAMEL-11692</body>
		<created>2017-08-22 15:20:30</created>
		<closed>2017-11-14 17:43:13</closed>
	</bug>
	<bug>
		<id>1954</id>
		<title>LinkedIn component is missing module dependency org.apache.commons.lang3</title>
		<body>``` [0m[31m06:12:07,385 ERROR [stderr] (pool-3-thread-1) SLF4J: Failed toString() invocation on an object of type [org.apache.camel.component.linkedin.LinkedInConfiguration] [0m[31m06:12:07,385 ERROR [stderr] (pool-3-thread-1) java.lang.NoClassDefFoundError: org/apache/commons/lang3/builder/HashCodeBuilder [0m[31m06:12:07,386 ERROR [stderr] (pool-3-thread-1) at org.apache.camel.component.linkedin.LinkedInConfiguration.hashCode(LinkedInConfiguration.java:214) [0m[31m06:12:07,386 ERROR [stderr] (pool-3-thread-1) at java.lang.Object.toString(Object.java:236) [0m[31m06:12:07,386 ERROR [stderr] (pool-3-thread-1) at org.slf4j.helpers.MessageFormatter.safeObjectAppend(MessageFormatter.java:305) [0m[31m06:12:07,386 ERROR [stderr] (pool-3-thread-1) at org.slf4j.helpers.MessageFormatter.deeplyAppendParameter(MessageFormatter.java:277) [0m[31m06:12:07,386 ERROR [stderr] (pool-3-thread-1) at org.slf4j.helpers.MessageFormatter.arrayFormat(MessageFormatter.java:231) [0m[31m06:12:07,386 ERROR [stderr] (pool-3-thread-1) at org.slf4j.impl.Slf4jLogger.debug(Slf4jLogger.java:158) [0m[31m06:12:07,386 ERROR [stderr] (pool-3-thread-1) at org.apache.camel.util.IntrospectionSupport.setProperty(IntrospectionSupport.java:570) [0m[31m06:12:07,387 ERROR [stderr] (pool-3-thread-1) at org.apache.camel.util.IntrospectionSupport.setProperty(IntrospectionSupport.java:640) [0m[31m06:12:07,387 ERROR [stderr] (pool-3-thread-1) at org.apache.camel.util.IntrospectionSupport.setProperties(IntrospectionSupport.java:497) [0m[31m06:12:07,387 ERROR [stderr] (pool-3-thread-1) at org.apache.camel.util.IntrospectionSupport.setProperties(IntrospectionSupport.java:507) [0m[31m06:12:07,387 ERROR [stderr] (pool-3-thread-1) at org.apache.camel.util.IntrospectionSupport.setProperties(IntrospectionSupport.java:511) [0m[31m06:12:07,387 ERROR [stderr] (pool-3-thread-1) at org.wildfly.camel.test.linkedin.LinkedInIntegrationTest.testSearchCompanies(LinkedInIntegrationTest.java:71) ``` </body>
		<created>2017-08-17 10:20:51</created>
		<closed>2017-08-17 12:24:59</closed>
	</bug>
	<bug>
		<id>1953</id>
		<title>SalesforceIntegrationTest fails with Camel 2.20.x</title>
		<body>``` java.lang.NoClassDefFoundError: com/fasterxml/jackson/module/jsonSchema/types/SimpleTypeSchema at org.jboss.modules.ModuleClassLoader.findClass(ModuleClassLoader.java:198) at org.jboss.modules.ConcurrentClassLoader.performLoadClassUnchecked(ConcurrentClassLoader.java:412) at org.jboss.modules.ConcurrentClassLoader.performLoadClass(ConcurrentClassLoader.java:400) at org.jboss.modules.ConcurrentClassLoader.loadClass(ConcurrentClassLoader.java:116) at org.apache.camel.component.salesforce.internal.SalesforceSession.&lt;init&gt;(SalesforceSession.java:104) at org.apache.camel.component.salesforce.SalesforceComponent.doStart(SalesforceComponent.java:365) at org.apache.camel.support.ServiceSupport.start(ServiceSupport.java:61) at org.apache.camel.impl.DefaultCamelContext.startService(DefaultCamelContext.java:3683) at org.apache.camel.impl.DefaultCamelContext.startServices(DefaultCamelContext.java:3689) at org.apache.camel.impl.DefaultCamelContext.doStartCamel(DefaultCamelContext.java:3420) at org.apache.camel.impl.DefaultCamelContext.access$000(DefaultCamelContext.java:207) at org.apache.camel.impl.DefaultCamelContext$2.call(DefaultCamelContext.java:3231) at org.apache.camel.impl.DefaultCamelContext$2.call(DefaultCamelContext.java:3227) at org.apache.camel.impl.DefaultCamelContext.doWithDefinedClassLoader(DefaultCamelContext.java:3250) at org.apache.camel.impl.DefaultCamelContext.doStart(DefaultCamelContext.java:3227) at org.apache.camel.support.ServiceSupport.start(ServiceSupport.java:61) at org.apache.camel.impl.DefaultCamelContext.start(DefaultCamelContext.java:3150) at org.wildfly.camel.test.salesforce.SalesforceIntegrationTest.testSalesforceQuery(SalesforceIntegrationTest.java:88) ```</body>
		<created>2017-08-17 08:17:31</created>
		<closed>2017-08-17 08:44:07</closed>
	</bug>
	<bug>
		<id>1952</id>
		<title>InfluxDBIntegrationTest fails with Camel 2.20.x</title>
		<body>``` Caused by: java.lang.ClassNotFoundException: com.squareup.moshi.Moshi$Builder from [Module "org.apache.camel.component.influxdb:main" from local module loader @1ee807c6 (finder: local module finder @76a4d6c (roots: /home/james/Projects/git/master/wildfly-camel/itests/standalone/docker/target/wildfly-10.1.0.Final/modules,/home/james/Projects/git/master/wildfly-camel/itests/standalone/docker/target/wildfly-10.1.0.Final/modules/system/layers/fuse,/home/james/Projects/git/master/wildfly-camel/itests/standalone/docker/target/wildfly-10.1.0.Final/modules/system/layers/base))] at org.jboss.modules.ModuleClassLoader.findClass(ModuleClassLoader.java:198) at org.jboss.modules.ConcurrentClassLoader.performLoadClassUnchecked(ConcurrentClassLoader.java:363) at org.jboss.modules.ConcurrentClassLoader.performLoadClass(ConcurrentClassLoader.java:351) at org.jboss.modules.ConcurrentClassLoader.loadClass(ConcurrentClassLoader.java:93) ... 131 more ```</body>
		<created>2017-08-17 08:15:33</created>
		<closed>2017-08-17 08:44:18</closed>
	</bug>
	<bug>
		<id>1945</id>
		<title>Module org.wildfly.extension.camel.cxf.undertow misses dependency org.picketbox</title>
		<body>Hi,  I tried to write an example that uses Java-DSL and CxfEndpoints together with JAASAuthentication. See: https://github.com/jochenr/wildfly-camel-examples/tree/master/camel-cxf-jaxws-security-cdi  To make the example work, I had to extend the module.xml of module "org.wildfly.extension.camel.cxf.undertow" by adding this line: `&lt;module name="org.picketbox" /&gt;`   Otherwise you get this Exception (you have to put a breakpoint in the catch block of the handleMessage(..) method of the JAASLoginInterceptor to find it): ```javax.security.auth.login.LoginException: LoginModule-Klasse kann nicht gefunden werden: org.jboss.security.auth.spi.BaseCertLoginModule from [Module "org.wildfly.extension.camel.cxf.undertow:main" from local module loader @4b53f538 (finder: local module finder @134593bf (roots: C:\daten\wildfly-camel-10.1.0.Final\modules,C:\daten\wildfly-camel-10.1.0.Final\modules\system\layers\fuse,C:\daten\wildfly-camel-10.1.0.Final\modules\system\layers\base))]```     Additionally the module "org.apache.cxf" is missing and I have to add this "jboss-deployment-structure.xml" file ``` &lt;jboss-deployment-structure xmlns="urn:jboss:deployment-structure:1.2"&gt;   &lt;deployment&gt;     &lt;dependencies&gt;       &lt;module name="org.apache.cxf" export="true" /&gt;     &lt;/dependencies&gt;   &lt;/deployment&gt; &lt;/jboss-deployment-structure&gt; ```    to my deployment to not get:  ``` 10:01:54,364 ERROR [io.undertow.request] (default task-6) UT005023: Exception handling request to /webservices/greeting-cdi: java.lang.NoClassDefFoundError: org/apache/cxf/security/transport/TLSSessionInfo at org.wildfly.camel.examples.cxf.jaxws.JBossCallbackHandlerTlsCert.create(JBossCallbackHandlerTlsCert.java:51)  ```  I think &lt;module name="org.apache.cxf"...&gt; should be found out of the box when camel-cxf compoenent is used. Or perhaps it won't be necessary after such a feature is already build in: https://github.com/wildfly-extras/wildfly-camel/issues/1944    Best regards, Jochen </body>
		<created>2017-08-03 09:30:47</created>
		<closed>2017-08-25 10:13:46</closed>
	</bug>
	<bug>
		<id>1940</id>
		<title>Unable to use https URL scheme in CXF consumer</title>
		<body>Hello,   If I try to configure a CxfEndpoint (consumer) with protocol "https", I get this Exception:  Caused by: java.lang.IllegalArgumentException: Unsupported protocol: https at org.apache.cxf.transport.undertow.AbstractHTTPServerEngineFactory.getHTTPServerEngine(AbstractHTTPServerEngineFactory.java:38)   IMHO "https" should be allowed in org.apache.cxf.transport.undertow.AbstractHTTPServerEngineFactory  I want to explicitely have an endpoint that uses https, because iI want to use SSL mutual authentication /client-certificate authentication for it. See: [https://github.com/jochenr/wildfly-camel-examples/blob/master/camel-cxf-jaxws-security-cdi/src/main/java/org/wildfly/camel/examples/cxf/jaxws/JavaDSLRouteBuilder.java](https://github.com/jochenr/wildfly-camel-examples/blob/master/camel-cxf-jaxws-security-cdi/src/main/java/org/wildfly/camel/examples/cxf/jaxws/JavaDSLRouteBuilder.java)   Actually it should even prevent the use of http, if I have https specified.    To reproduce it, you can just use the "camel-cxf-jaxws" example and change the file "cxfws-camel-context.xml" to use https  ``` &lt;cxf:cxfEndpoint id="cxfConsumer"                      address="https://localhost:8443/webservices/greeting"                      serviceClass="org.wildfly.camel.examples.cxf.jaxws.GreetingService" /&gt;  ```  Best regards, Jochen   </body>
		<created>2017-08-03 07:24:50</created>
		<closed>2017-08-07 18:05:25</closed>
	</bug>
	<bug>
		<id>1933</id>
		<title>NameNotFoundException: infinispan/container/server</title>
		<body>``` Tests in error:    InfinispanIntegrationTest.setUp:67 » NameNotFound infinispan/container/server   InfinispanIntegrationTest.setUp:67 » NameNotFound infinispan/container/server   InfinispanIntegrationTest.setUp:67 » NameNotFound infinispan/container/server   InfinispanIntegrationTest.setUp:67 » NameNotFound infinispan/container/server   InfinispanIntegrationTest.setUp:67 » NameNotFound infinispan/container/server   InfinispanIntegrationTest.setUp:67 » NameNotFound infinispan/container/server   InfinispanIntegrationTest.setUp:67 » NameNotFound infinispan/container/server ```</body>
		<created>2017-07-31 11:32:49</created>
		<closed>2017-09-15 08:42:50</closed>
	</bug>
	<bug>
		<id>1919</id>
		<title>Custom log profiles do not work with spring contexts</title>
		<body>CrossRef: https://issues.jboss.org/browse/ENTESB-7117</body>
		<created>2017-07-12 10:20:15</created>
		<closed>2017-09-12 09:30:26</closed>
	</bug>
	<bug>
		<id>1909</id>
		<title>JMS MDB example shuts down with inflight exchanges</title>
		<body>Sometimes there are inflight exchanges left dangling when the JMS MDB example is undeployed. There's a tedious wait for Camel to time out waiting and shut down properly. </body>
		<created>2017-06-27 16:30:01</created>
		<closed>2017-07-05 07:25:37</closed>
	</bug>
	<bug>
		<id>1908</id>
		<title>IRCIntegrationTest fails with Camel 2.20.x</title>
		<body>https://issues.apache.org/jira/browse/CAMEL-11465</body>
		<created>2017-06-27 16:01:23</created>
		<closed>2017-07-06 10:43:36</closed>
	</bug>
	<bug>
		<id>1897</id>
		<title>Cannot locate org.apache.cxf.transport.http.spring.NamespaceHandler</title>
		<body>Need access to namespace handlers in `cxf-rt-transports-http` in order to configure HTTP conduits in Spring XML for SSL etc.</body>
		<created>2017-05-30 13:16:36</created>
		<closed>2017-10-25 14:47:51</closed>
	</bug>
	<bug>
		<id>1885</id>
		<title>Module io.netty:4.1 contains incorrect Netty versions</title>
		<body>``` modules/system/layers/fuse/io/netty/4.1/netty-common-4.0.45.Final.jar modules/system/layers/fuse/io/netty/4.1/netty-resolver-4.1.8.Final.jar modules/system/layers/fuse/io/netty/4.1/netty-codec-dns-4.1.8.Final.jar modules/system/layers/fuse/io/netty/4.1/netty-codec-http2-4.1.8.Final.jar modules/system/layers/fuse/io/netty/4.1/netty-handler-4.0.45.Final.jar modules/system/layers/fuse/io/netty/4.1/netty-3.10.6.Final.jar modules/system/layers/fuse/io/netty/4.1/netty-transport-4.0.45.Final.jar modules/system/layers/fuse/io/netty/4.1/netty-codec-4.0.45.Final.jar modules/system/layers/fuse/io/netty/4.1/netty-codec-socks-4.1.8.Final.jar modules/system/layers/fuse/io/netty/4.1/netty-buffer-4.0.45.Final.jar modules/system/layers/fuse/io/netty/4.1/netty-handler-proxy-4.1.8.Final.jar modules/system/layers/fuse/io/netty/4.1/netty-codec-http-4.0.45.Final.jar modules/system/layers/fuse/io/netty/4.1/netty-resolver-dns-4.1.8.Final.jar ```</body>
		<created>2017-05-26 12:29:24</created>
		<closed>2017-05-26 14:05:50</closed>
	</bug>
	<bug>
		<id>1863</id>
		<title>AWS EC3 test uses hardcoded subnet Id</title>
		<body></body>
		<created>2017-05-17 11:26:07</created>
		<closed>2017-05-17 11:55:41</closed>
	</bug>
	<bug>
		<id>1860</id>
		<title>Opentracing component missing from roadmap </title>
		<body>https://github.com/apache/camel/blob/master/components/camel-opentracing/src/main/docs/opentracing.adoc</body>
		<created>2017-05-16 09:22:58</created>
		<closed>2017-05-26 12:11:40</closed>
	</bug>
	<bug>
		<id>1855</id>
		<title>WAR deployment HttpHandler can overwrite handlers created by camel-undertow </title>
		<body>Let's say I choose to deploy my webapp on a context root of `/foo` and I'd like my camel-undertow REST resources to also exist under this path:  ``` restConfiguration()     .bindingMode(RestBindingMode.json)     .component("undertow")     .contextPath("foo")     .host("localhost")     .port(8080) ```  When the REST endpoints get created, they are added into an `HttpHandler` which gets registered on Undertow to `/foo`.  Unfortunately, when the webapp deploys, it ends up overwriting the `HttpHandler` created by camel with it's own handler to serve content from the application.  The hacky workaround would be to deploy a JAR instead of a WAR.</body>
		<created>2017-05-11 14:50:52</created>
		<closed>2017-09-01 12:42:04</closed>
	</bug>
	<bug>
		<id>1797</id>
		<title>Intermittent failure of SMPPIntegrationTest</title>
		<body>Sometimes this test throws an exception when the `CamelContext` is shut down:  ``` 09:08:00 [0m[0m06:18:35,377 INFO  [org.apache.camel.component.mock.MockEndpoint] (pool-3-thread-1) Asserting: mock://result is satisfied 09:08:10 [0m[0m06:18:45,379 INFO  [org.apache.camel.impl.DefaultCamelContext] (pool-3-thread-1) Apache Camel 2.18.3 (CamelContext: camel-5) is shutting down 09:08:10 [0m[0m06:18:45,379 INFO  [org.apache.camel.impl.DefaultShutdownStrategy] (pool-3-thread-1) Starting to graceful shutdown 2 routes (timeout 300 seconds) 09:08:10 [0m[31m06:18:45,400 ERROR [org.jsmpp.session.state.SMPPSessionBoundRX] (pool-13-thread-2) Failed processing deliver_sm: org.jsmpp.extra.ProcessRequestException 09:08:10 at org.apache.camel.component.smpp.MessageReceiverListenerImpl.onAcceptDeliverSm(MessageReceiverListenerImpl.java:85) 09:08:10 at org.jsmpp.session.SMPPSession.fireAcceptDeliverSm(SMPPSession.java:461) 09:08:10 at org.jsmpp.session.SMPPSession.access$300(SMPPSession.java:94) 09:08:10 at org.jsmpp.session.SMPPSession$ResponseHandlerImpl.processDeliverSm(SMPPSession.java:480) 09:08:10 at org.jsmpp.session.state.SMPPSessionBoundRX.processDeliverSm0(SMPPSessionBoundRX.java:109) 09:08:10 at org.jsmpp.session.state.SMPPSessionBoundRX.processDeliverSm(SMPPSessionBoundRX.java:51) 09:08:10 at org.jsmpp.session.PDUProcessTask.run(PDUProcessTask.java:91) 09:08:10 at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) 09:08:10 at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) 09:08:10 at java.lang.Thread.run(Thread.java:745) 09:08:10 Caused by: java.util.concurrent.RejectedExecutionException 09:08:10 at org.apache.camel.processor.RedeliveryErrorHandler.process(RedeliveryErrorHandler.java:429) 09:08:10 at org.apache.camel.processor.CamelInternalProcessor.process(CamelInternalProcessor.java:197) 09:08:10 at org.apache.camel.processor.Pipeline.process(Pipeline.java:120) 09:08:10 at org.apache.camel.processor.Pipeline.process(Pipeline.java:83) 09:08:10 at org.apache.camel.processor.CamelInternalProcessor.process(CamelInternalProcessor.java:197) 09:08:10 at org.apache.camel.processor.DelegateAsyncProcessor.process(DelegateAsyncProcessor.java:97) 09:08:10 at org.apache.camel.component.smpp.MessageReceiverListenerImpl.onAcceptDeliverSm(MessageReceiverListenerImpl.java:77) 09:08:10 ... 9 more 09:08:10  09:08:11 [0m[33m06:18:46,386 WARN  [org.jsmpp.session.SMPPSession] (PDUReaderWorker: org.jsmpp.session.SMPPSession@46bab57a) IOException while reading: null 09:08:11 [0m[0m06:18:46,390 INFO  [org.jsmpp.session.SMPPSession] (PDUReaderWorker: org.jsmpp.session.SMPPSession@46bab57a) PDUReaderWorker stop 09:09:11 [0m[31m06:19:46,382 ERROR [org.jsmpp.session.AbstractSession] (Camel (camel-5) thread #6 - ShutdownTask) Timeout waiting unbind response:  ``` </body>
		<created>2017-05-04 13:13:05</created>
		<closed>2017-05-05 16:30:41</closed>
	</bug>
	<bug>
		<id>1790</id>
		<title>DelegatingHttpHandler should return HTTP 405 when no matching handler is found</title>
		<body>If you configure the REST DSL like:  ``` rest().get("/foo").route().setBody(constant("Hello World")).endRest(); ```  And then try to hit the endpoint using an HTTP verb that is not valid:  `curl -X POST http://localhost:8080/foo`  You get:  ``` 08:42:00,370 ERROR [io.undertow.request] (default I/O-1) UT005071: Undertow request failed HttpServerExchange{ POST /foo request {Accept=[*/*], User-Agent=[curl/7.51.0], Host=[localhost:8080]} response {X-Powered-By=[Undertow/1], Server=[WildFly/10]}}: java.lang.IllegalStateException: Cannot obtain handler for method: POST at org.jboss.gravia.utils.IllegalStateAssertion.assertNotNull(IllegalStateAssertion.java:50) at org.wildfly.extension.camel.undertow.CamelUndertowHostService$DelegatingHttpHandler.handleRequest(CamelUndertowHostService.java:232) at io.undertow.server.handlers.PathHandler.handleRequest(PathHandler.java:94) at org.wildfly.extension.undertow.Host$OptionsHandler.handleRequest(Host.java:295) ```  I think it'd better to log a warning and return an HTTP 405 with the list of HTTP verbs that are allowed (which is actually what the WildFly JAX-RS subsystem does). </body>
		<created>2017-05-03 08:03:41</created>
		<closed>2017-05-10 09:10:06</closed>
	</bug>
	<bug>
		<id>1789</id>
		<title>Unable to configure multiple paths for the same HTTP verb in camel REST DSL</title>
		<body>This should be perfectly acceptable:  ```java rest("/customers")   .get("/").to("direct:foo")   .get("/{id}").to("direct:bar") ```  But it results in:  ``` java.lang.IllegalStateException: Handler for GET already registered at org.jboss.gravia.utils.IllegalStateAssertion.assertNull(IllegalStateAssertion.java:40) at org.wildfly.extension.camel.undertow.CamelUndertowHostService$DelegatingHttpHandler.checkedPut(CamelUndertowHostService.java:222) at org.wildfly.extension.camel.undertow.CamelUndertowHostService$DelegatingHttpHandler.addDelegate(CamelUndertowHostService.java:213) at org.wildfly.extension.camel.undertow.CamelUndertowHostService$WildFlyUndertowHost.registerHandler(CamelUndertowHostService.java:190) at org.apache.camel.component.undertow.UndertowConsumer.doStart(UndertowConsumer.java:73) at org.wildfly.extension.camel.undertow.WildFlyUndertowComponent$WildFlyUndertowUndertowConsumer.doStart(WildFlyUndertowComponent.java:90)  ```</body>
		<created>2017-04-28 12:48:07</created>
		<closed>2017-05-10 09:08:46</closed>
	</bug>
	<bug>
		<id>1787</id>
		<title>AWS test fail when respective clients cannot be initialized</title>
		<body></body>
		<created>2017-04-28 10:15:05</created>
		<closed>2017-04-28 11:09:50</closed>
	</bug>
	<bug>
		<id>1775</id>
		<title>wildflyext/s2i-wildfly-camel uses outdated domain namespace </title>
		<body>Currently we can't get rid of `urn:jboss:domain:4.0` because of  ``` mvn clean install -Ddocker -am -pl docker ... [INFO] DOCKER&gt; [wildflyext/s2i-wildfly-camel:latest]: Created docker-build.tar in 9 seconds  [ERROR] DOCKER&gt; Unable to build image [wildflyext/s2i-wildfly-camel] : The command '/bin/sh -c /wildfly/bin/fuseconfig.sh --configs camel --enable' returned a non-zero code: 1  [The command '/bin/sh -c /wildfly/bin/fuseconfig.sh --configs camel --enable' returned a non-zero code: 1 ] ```</body>
		<created>2017-04-26 15:46:47</created>
		<closed>2017-04-28 06:45:34</closed>
	</bug>
	<bug>
		<id>1769</id>
		<title>Unable to configure CXF interceptors</title>
		<body>``` 13:17:43,263 WARN  [org.jboss.modules] (MSC service thread 1-3) Failed to define class org.wildfly.camel.test.cxf.ws.subA.ResponseInterceptor in Module "deployment.cxf-ws-consumer-tests:main" from Service Module Loader: java.lang.NoClassDefFoundError: Failed to link org/wildfly/camel/test/cxf/ws/subA/ResponseInterceptor (Module "deployment.cxf-ws-consumer-tests:main" from Service Module Loader): org/apache/cxf/phase/AbstractPhaseInterceptor at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) at java.lang.reflect.Constructor.newInstance(Constructor.java:423) at org.jboss.modules.ModuleClassLoader.defineClass(ModuleClassLoader.java:446) at org.jboss.modules.ModuleClassLoader.loadClassLocal(ModuleClassLoader.java:274) at org.jboss.modules.ModuleClassLoader$1.loadClassLocal(ModuleClassLoader.java:78) at org.jboss.modules.Module.loadModuleClass(Module.java:606) at org.jboss.modules.ModuleClassLoader.findClass(ModuleClassLoader.java:190) at org.jboss.modules.ConcurrentClassLoader.performLoadClassUnchecked(ConcurrentClassLoader.java:363) at org.jboss.modules.ConcurrentClassLoader.performLoadClass(ConcurrentClassLoader.java:351) at org.jboss.modules.ConcurrentClassLoader.loadClass(ConcurrentClassLoader.java:93) at org.springframework.util.ClassUtils.forName(ClassUtils.java:250) ```</body>
		<created>2017-04-26 12:39:07</created>
		<closed>2017-04-26 14:20:06</closed>
	</bug>
	<bug>
		<id>1765</id>
		<title>CXF examples use incorrect form action URL</title>
		<body>It should be "example-camel-cxfrs" and "example-camel-cxfws", respectively, instead of "/example-camel-cxf/cxf".</body>
		<created>2017-04-25 12:51:20</created>
		<closed>2017-04-25 13:14:48</closed>
	</bug>
	<bug>
		<id>1755</id>
		<title>SoapJaxbDataFormat throws NCDFE for javax/jws/WebMethod</title>
		<body>Noted from and confirmed when deploying [this example](https://github.com/sundarmr/eapquickstarts/tree/master/fuseeapspringdsl/fuse-eap-soap).  ``` Caused by: java.lang.NoClassDefFoundError: javax/jws/WebMethod at org.apache.camel.dataformat.soap.name.ServiceInterfaceStrategy.analyzeMethod(ServiceInterfaceStrategy.java:148) at org.apache.camel.dataformat.soap.name.ServiceInterfaceStrategy.analyzeServiceInterface(ServiceInterfaceStrategy.java:157) at org.apache.camel.dataformat.soap.name.ServiceInterfaceStrategy.&lt;init&gt;(ServiceInterfaceStrategy.java:61) at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) at java.lang.reflect.Constructor.newInstance(Constructor.java:423) at org.springframework.beans.BeanUtils.instantiateClass(BeanUtils.java:142) ... 22 more Caused by: java.lang.ClassNotFoundException: javax.jws.WebMethod from [Module "org.apache.camel.component.soap:main" from local module loader @1c2c22f3 (finder: local module finder @18e8568 (roots: /home/james/Applications/wildfly-10.1.0.Final/modules,/home/james/Applications/wildfly-10.1.0.Final/modules/system/layers/fuse,/home/james/Applications/wildfly-10.1.0.Final/modules/system/layers/base))] at org.jboss.modules.ModuleClassLoader.findClass(ModuleClassLoader.java:198) at org.jboss.modules.ConcurrentClassLoader.performLoadClassUnchecked(ConcurrentClassLoader.java:363) at org.jboss.modules.ConcurrentClassLoader.performLoadClass(ConcurrentClassLoader.java:351) at org.jboss.modules.ConcurrentClassLoader.loadClass(ConcurrentClassLoader.java:93) ... 30 more  ```</body>
		<created>2017-04-21 14:27:55</created>
		<closed>2017-04-24 08:41:55</closed>
	</bug>
	<bug>
		<id>1747</id>
		<title>Unable to load region information for S3 client</title>
		<body></body>
		<created>2017-04-14 10:18:01</created>
		<closed>2017-04-14 11:09:04</closed>
	</bug>
	<bug>
		<id>1741</id>
		<title>Error while loading AWS partitions file</title>
		<body>When the client is built like this  ```         AmazonEC2 client = AmazonEC2ClientBuilder.standard()                 .withCredentials(new StaticCredentialsProvider(new BasicAWSCredentials(accessId, secretKey)))                 .withRegion("eu-west-1")                 .build(); ```  we get   ``` com.amazonaws.AmazonClientException: Error while loading partitions file from com/amazonaws/partitions/endpoints.json at com.fasterxml.jackson.databind.JsonMappingException.from(JsonMappingException.java:255) at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.deserializeFromObjectUsingNonDefault(BeanDeserializerBase.java:1130) at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserializeFromObject(BeanDeserializer.java:298) at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:133) at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:3807) at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:2867) at com.amazonaws.partitions.PartitionsLoader.loadPartitionFromStream(PartitionsLoader.java:92) at com.amazonaws.partitions.PartitionsLoader.build(PartitionsLoader.java:84) at com.amazonaws.regions.RegionMetadataFactory.create(RegionMetadataFactory.java:30) at com.amazonaws.regions.RegionUtils.initialize(RegionUtils.java:66) at com.amazonaws.regions.RegionUtils.getRegionMetadata(RegionUtils.java:54) at com.amazonaws.regions.RegionUtils.getRegion(RegionUtils.java:107) at com.amazonaws.client.builder.AwsClientBuilder.withRegion(AwsClientBuilder.java:233) at org.wildfly.camel.test.aws.ec2.AWSEC2IntegrationTest.testCreateInstance(AWSEC2IntegrationTest.java:79) ```  ``` Caused by: com.fasterxml.jackson.databind.JsonMappingException: No suitable constructor found for type [simple type, class com.amazonaws.partitions.model.Partitions]: can not instantiate from JSON object (missing default constructor or creator, or perhaps need to add/enable type information?)  at [Source: UNKNOWN; line: 2, column: 3] at com.fasterxml.jackson.databind.JsonMappingException.from(JsonMappingException.java:255) at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.deserializeFromObjectUsingNonDefault(BeanDeserializerBase.java:1130) at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserializeFromObject(BeanDeserializer.java:298) at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:133) at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:3807) at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:2867) at com.amazonaws.partitions.PartitionsLoader.loadPartitionFromStream(PartitionsLoader.java:92) ```</body>
		<created>2017-04-13 11:05:32</created>
		<closed>2017-04-13 16:32:09</closed>
	</bug>
	<bug>
		<id>1738</id>
		<title>spring-aop cannot access org.w3c.dom.Element</title>
		<body>The spring-aop module can under circumstances fail due to a missing dependency on javax.api.  I am not sure this is a full example (I am not at liberty to provide a full example), but loading this file: [db-settings.xml](https://github.com/wildfly-extras/wildfly-camel/files/912301/db-settings.xml.txt)  Yields an exception that's roughly: ``` Caused by: java.lang.NoClassDefFoundError: org/w3c/dom/Element       at org.springframework.aop.config.AopNamespaceUtils.useClassProxyingIfNecessary(AopNamespaceUtils.java:84)       at org.springframework.aop.config.AopNamespaceUtils.registerAutoProxyCreatorIfNecessary(AopNamespaceUtils.java:60)  ``` Adding a module dependency to spring-aop on javax.api fixes this: ``` &lt;?xml version="1.0" encoding="UTF-8"?&gt; &lt;module xmlns="urn:jboss:module:1.1" name="org.springframework.aop"&gt;   &lt;properties&gt;     &lt;property name="jboss.api" value="private" /&gt;   &lt;/properties&gt;   &lt;resources&gt;     &lt;resource-root path="spring-aop-4.3.7.RELEASE.jar"/&gt;   &lt;/resources&gt;   &lt;dependencies&gt;     **&lt;module name="javax.api" /&gt;**     &lt;module name="org.apache.commons.logging" /&gt;     &lt;module name="org.springframework.beans" /&gt;     &lt;module name="org.springframework.core" /&gt;   &lt;/dependencies&gt; &lt;/module&gt; ```  </body>
		<created>2017-04-11 06:34:22</created>
		<closed>2017-04-11 07:18:08</closed>
	</bug>
	<bug>
		<id>1725</id>
		<title>RequiresDocker annotated tests fail on Windows</title>
		<body>Seems to be trying to launch a process that may not be installed:  ``` Caused by: java.io.IOException: Cannot run program "boot2docker": CreateProcess error=2, The system cannot find the file specified at java.lang.ProcessBuilder.start(ProcessBuilder.java:1048) at org.arquillian.spacelift.task.os.SpawnProcessTask.process(SpawnProcessTask.java:107) at org.arquillian.spacelift.task.os.SpawnProcessTask.process(SpawnProcessTask.java:34) at org.arquillian.spacelift.task.Task.run(Task.java:98) at org.arquillian.spacelift.task.Task$1.call(Task.java:70) at java.util.concurrent.FutureTask.run(FutureTask.java:266) at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) at java.lang.Thread.run(Thread.java:745) Caused by: java.io.IOException: CreateProcess error=2, The system cannot find the file specified at java.lang.ProcessImpl.create(Native Method) at java.lang.ProcessImpl.&lt;init&gt;(ProcessImpl.java:386) at java.lang.ProcessImpl.start(ProcessImpl.java:137) at java.lang.ProcessBuilder.start(ProcessBuilder.java:1029) at org.arquillian.spacelift.task.os.SpawnProcessTask.process(SpawnProcessTask.java:107) at org.arquillian.spacelift.task.os.SpawnProcessTask.process(SpawnProcessTask.java:34) at org.arquillian.spacelift.task.Task.run(Task.java:98) at org.arquillian.spacelift.task.Task$1.call(Task.java:70) at java.util.concurrent.FutureTask.run(FutureTask.java:266) at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) at java.lang.Thread.run(Thread.java:745)  ```</body>
		<created>2017-04-03 16:06:50</created>
		<closed>2017-04-05 10:28:15</closed>
	</bug>
	<bug>
		<id>1717</id>
		<title>Route not started when deployed in WAR sub module</title>
		<body>Hello,  I am trying to a hello world using wildfly camel and following examples on following links [Example 1](http://www.mastertheboss.com/jboss-server/wildfly-8/using-camel-with-wildfly-part-2) [Example 2](http://blog.eisele.net/2015/07/using-camel-routes-in-java-ee-components.html)  And I am using wildfly-10.1.0.Final with wildfly-camel-patch-4.5.0. If I deploy my application as war file then it starts the camel context and route is started too. However when i deploy the same war as module in a EAR file it doesn't start the route, however context gets created, couldn't find anything wrong in war.  Can someone let me know, if I missing something or this a known bug and we have workaround or i have encountered a bug.</body>
		<created>2017-03-25 16:27:04</created>
		<closed>2017-03-28 11:51:09</closed>
	</bug>
	<bug>
		<id>1707</id>
		<title>SJMSBatchIntegrationTest fails on AIX</title>
		<body></body>
		<created>2017-03-22 10:29:34</created>
		<closed>2017-08-25 06:14:46</closed>
	</bug>
	<bug>
		<id>1705</id>
		<title>wildflyext/wildfly-camel fails on OpenShift</title>
		<body>``` =========================================================================    JBoss Bootstrap Environment    JBOSS_HOME: /opt/jboss/wildfly    JAVA: /usr/lib/jvm/java/bin/java    JAVA_OPTS:  -server -Xms64m -Xmx512m -XX:MetaspaceSize=96M -XX:MaxMetaspaceSize=256m -Djava.net.preferIPv4Stack=true -Djboss.modules.system.pkgs=org.jboss.byteman -Djava.awt.headless=true  =========================================================================  java.lang.IllegalArgumentException: Failed to instantiate class "org.jboss.logmanager.handlers.PeriodicRotatingFileHandler" for handler "FILE" at org.jboss.logmanager.config.AbstractPropertyConfiguration$ConstructAction.validate(AbstractPropertyConfiguration.java:116) at org.jboss.logmanager.config.LogContextConfigurationImpl.doPrepare(LogContextConfigurationImpl.java:335) at org.jboss.logmanager.config.LogContextConfigurationImpl.prepare(LogContextConfigurationImpl.java:288) at org.jboss.logmanager.config.LogContextConfigurationImpl.commit(LogContextConfigurationImpl.java:297) at org.jboss.logmanager.PropertyConfigurator.configure(PropertyConfigurator.java:546) at org.jboss.logmanager.PropertyConfigurator.configure(PropertyConfigurator.java:97) at org.jboss.logmanager.LogManager.readConfiguration(LogManager.java:514) at org.jboss.logmanager.LogManager.readConfiguration(LogManager.java:476) at java.util.logging.LogManager$3.run(LogManager.java:399) at java.util.logging.LogManager$3.run(LogManager.java:396) at java.security.AccessController.doPrivileged(Native Method) at java.util.logging.LogManager.readPrimordialConfiguration(LogManager.java:396) at java.util.logging.LogManager.access$800(LogManager.java:145) at java.util.logging.LogManager$2.run(LogManager.java:345) at java.security.AccessController.doPrivileged(Native Method) at java.util.logging.LogManager.ensureLogManagerInitialized(LogManager.java:338) at java.util.logging.LogManager.getLogManager(LogManager.java:378) at org.jboss.modules.Main.main(Main.java:482) Caused by: java.lang.reflect.InvocationTargetException at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) at java.lang.reflect.Constructor.newInstance(Constructor.java:423) at org.jboss.logmanager.config.AbstractPropertyConfiguration$ConstructAction.validate(AbstractPropertyConfiguration.java:114) ... 17 more Caused by: java.io.FileNotFoundException: /opt/jboss/wildfly/standalone/log/server.log (No such file or directory) at java.io.FileOutputStream.open0(Native Method) at java.io.FileOutputStream.open(FileOutputStream.java:270) at java.io.FileOutputStream.&lt;init&gt;(FileOutputStream.java:213) at org.jboss.logmanager.handlers.FileHandler.setFile(FileHandler.java:151) at org.jboss.logmanager.handlers.PeriodicRotatingFileHandler.setFile(PeriodicRotatingFileHandler.java:102) at org.jboss.logmanager.handlers.FileHandler.setFileName(FileHandler.java:189) at org.jboss.logmanager.handlers.FileHandler.&lt;init&gt;(FileHandler.java:119) at org.jboss.logmanager.handlers.PeriodicRotatingFileHandler.&lt;init&gt;(PeriodicRotatingFileHandler.java:70) ... 22 more java.lang.IllegalStateException: WFLYSRV0124: Could not create server data directory: /opt/jboss/wildfly/standalone/data at org.jboss.as.server.ServerEnvironment.&lt;init&gt;(ServerEnvironment.java:473) at org.jboss.as.server.Main.determineEnvironment(Main.java:297) at org.jboss.as.server.Main.main(Main.java:94) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at org.jboss.modules.Module.run(Module.java:329) at org.jboss.modules.Main.main(Main.java:507) ```</body>
		<created>2017-03-21 11:14:50</created>
		<closed>2017-03-21 15:52:17</closed>
	</bug>
	<bug>
		<id>1701</id>
		<title>Cannot start Redis server on Windows</title>
		<body>``` 2017-03-17 19:09:19 ERROR [org.jboss.as.arquillian.container.ServerSetupObserver] (main) - Setup task failed during setup. Offending class 'org.wildfly.camel.test.spring.redis.SpringRedisIntegrationTest$RedisServerSetupTask@307cf964' java.lang.RuntimeException: Can't start redis server. Check logs for details. at redis.embedded.AbstractRedisInstance.awaitRedisServerReady(AbstractRedisInstance.java:61) at redis.embedded.AbstractRedisInstance.start(AbstractRedisInstance.java:39) at redis.embedded.RedisServer.start(RedisServer.java:9) at org.wildfly.camel.test.spring.redis.SpringRedisIntegrationTest$RedisServerSetupTask.setup(SpringRedisIntegrationTest.java:68) ```  CrossRef: https://github.com/kstyrc/embedded-redis/issues/80</body>
		<created>2017-03-20 08:21:21</created>
		<closed>2018-05-21 14:43:43</closed>
	</bug>
	<bug>
		<id>1684</id>
		<title>NatsIntegrationTest fails on AIX </title>
		<body>https://10.8.63.16/job/wildfly-camel-master-aix/lastCompletedBuild/testReport/org.wildfly.camel.test.nats/ </body>
		<created>2017-03-07 15:04:57</created>
		<closed>2017-03-07 16:01:08</closed>
	</bug>
	<bug>
		<id>1666</id>
		<title>AtomIntegrationTest fails intermittently</title>
		<body>https://10.8.63.16/view/wildfly-camel/job/wildfly-camel-master-windows/lastCompletedBuild/testReport/org.wildfly.camel.test.atom/AtomIntegrationTest/testConsumeAtomFeed/  ``` 15:38:56,388 INFO  [org.jboss.resteasy.resteasy_jaxrs.i18n] (ServerService Thread Pool -- 31) RESTEASY002225: Deploying javax.ws.rs.core.Application: class org.wildfly.camel.test.atom.feed.AtomApplication$Proxy$_$$_WeldClientProxy 15:38:56,399 INFO  [org.jboss.resteasy.resteasy_jaxrs.i18n] (ServerService Thread Pool -- 31) RESTEASY002200: Adding class resource org.wildfly.camel.test.atom.feed.AtomFeed from Application class org.wildfly.camel.test.atom.feed.AtomApplication$Proxy$_$$_WeldClientProxy 15:38:56,457 INFO  [org.wildfly.extension.undertow] (ServerService Thread Pool -- 31) WFLYUT0021: Registered web context: /atom-test 15:38:56,457 INFO  [org.wildfly.extension.camel] (ServerService Thread Pool -- 31) Add Camel endpoint: http://127.0.0.1:8080/atom-test 15:38:56,479 INFO  [org.jboss.as.server] (management-handler-thread - 3) WFLYSRV0010: Deployed "atom-test.war" (runtime-name : "atom-test.war") 15:38:56,559 INFO  [org.apache.camel.impl.converter.DefaultTypeConverter] (pool-3-thread-1) Loaded 304 type converters 15:38:56,560 INFO  [org.apache.camel.impl.DefaultCamelContext] (pool-3-thread-1) Apache Camel 2.18.2 (CamelContext: camel-3) is starting 15:38:56,560 INFO  [org.apache.camel.management.ManagedManagementStrategy] (pool-3-thread-1) JMX is enabled 15:38:56,580 INFO  [org.wildfly.extension.camel] (pool-3-thread-1) Camel context starting: camel-3 15:38:56,580 INFO  [org.wildfly.extension.camel] (MSC service thread 1-8) Bound camel naming object: java:jboss/camel/context/camel-3 15:38:56,592 INFO  [org.apache.camel.impl.DefaultRuntimeEndpointRegistry] (pool-3-thread-1) Runtime endpoint registry is in extended mode gathering usage statistics of all incoming and outgoing endpoints (cache limit: 1000) 15:38:56,626 INFO  [org.apache.camel.impl.DefaultCamelContext] (pool-3-thread-1) StreamCaching is not in use. If using streams then its recommended to enable stream caching. See more details at http://camel.apache.org/stream-caching.html 15:38:56,634 INFO  [org.apache.camel.component.seda.SedaEndpoint] (pool-3-thread-1) Endpoint seda://end is using shared queue: seda://end with size: 2147483647 15:38:56,660 INFO  [org.apache.camel.impl.DefaultCamelContext] (pool-3-thread-1) Route: route3 started and consuming from: atom://http://localhost:8080/atom-test/atom/feed?splitEntries=true 15:38:56,660 INFO  [org.apache.camel.impl.DefaultCamelContext] (pool-3-thread-1) Total 1 routes, of which 1 are started. 15:38:56,660 INFO  [org.apache.camel.impl.DefaultCamelContext] (pool-3-thread-1) Apache Camel 2.18.2 (CamelContext: camel-3) started in 0.100 seconds 15:38:59,491 WARN  [org.apache.axiom.util.stax.dialect.StAXDialectDetector] (Camel (camel-3) thread #4 - atom://http://localhost:8080/atom-test/atom/feed) Unable to determine dialect of the StAX implementation at jar:file:/E:/jenkins/workspace/wildfly-camel-master-windows/itests/standalone/basic/target/wildfly-10.1.0.Final/jboss-modules.jar!/ 15:38:59,661 INFO  [org.apache.camel.impl.DefaultCamelContext] (pool-3-thread-1) Apache Camel 2.18.2 (CamelContext: camel-3) is shutting down 15:38:59,662 INFO  [org.apache.camel.impl.DefaultShutdownStrategy] (pool-3-thread-1) Starting to graceful shutdown 1 routes (timeout 300 seconds) 15:38:59,669 INFO  [org.apache.camel.impl.DefaultShutdownStrategy] (Camel (camel-3) thread #5 - ShutdownTask) Waiting as there are still 1 inflight and pending exchanges to complete, timeout in 300 seconds. Inflights per route: [route3 = 1] 15:39:00,679 INFO  [org.apache.camel.impl.DefaultShutdownStrategy] (Camel (camel-3) thread #5 - ShutdownTask) Route: route3 shutdown complete, was consuming from: atom://http://localhost:8080/atom-test/atom/feed?splitEntries=true 15:39:00,681 INFO  [org.apache.camel.impl.DefaultShutdownStrategy] (pool-3-thread-1) Graceful shutdown of 1 routes completed in 1 seconds 15:39:00,698 INFO  [org.wildfly.extension.camel] (pool-3-thread-1) Camel context stopped: camel-3 15:39:00,702 INFO  [org.wildfly.extension.camel] (MSC service thread 1-1) Unbind camel naming object: java:jboss/camel/context/camel-3 15:39:00,711 INFO  [org.apache.camel.impl.DefaultCamelContext] (pool-3-thread-1) Apache Camel 2.18.2 (CamelContext: camel-3) uptime 4.151 seconds 15:39:00,712 INFO  [org.apache.camel.impl.DefaultCamelContext] (pool-3-thread-1) Apache Camel 2.18.2 (CamelContext: camel-3) is shutdown in 1.050 seconds 15:39:00,726 SEVERE [org.jboss.arquillian.protocol.jmx.JMXTestRunner] (pool-3-thread-1) Failed: org.wildfly.camel.test.atom.AtomIntegrationTest.testConsumeAtomFeed: java.lang.NullPointerException at org.wildfly.camel.test.atom.AtomIntegrationTest.testConsumeAtomFeed(AtomIntegrationTest.java:69) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) ```</body>
		<created>2017-03-06 08:54:03</created>
		<closed>2017-03-06 12:44:15</closed>
	</bug>
	<bug>
		<id>1660</id>
		<title>Memory leak in CamelCoreSubsystemExtension</title>
		<body>[`CamelCoreSubsystemExtension.removeCamelContext()`](https://github.com/wildfly-extras/wildfly-camel/blob/13d20643668649fa73c19736f7669320be90d5e8/subsystem/core/src/main/java/org/wildfly/extension/camel/CamelCoreSubsystemExtension.java#L74-L82) does not actually do what its name implies.   The `CamelContext` is never removed from the `contexts` `HashMap` so it grows exponentially with each deploy / undeploy.  The basic test suite ends with 187 `CamelContext` instances left lingering. </body>
		<created>2017-02-27 09:33:39</created>
		<closed>2017-02-27 11:11:24</closed>
	</bug>
	<bug>
		<id>1658</id>
		<title>IllegalStateException when reloading WildFly from the CLI</title>
		<body>It's possible to reload the container via the CLI. E.g `jboss-cli.sh -c --command="reload"`. When a Camel application is deployed it results in an `IllegalStateException`. However, the camel context does end up being started ok, so I'm not sure how much of an issue this is.  The exception is repeated per number of times the `reload` command is run.  ``` 13:23:42,062 WARN  [org.apache.camel.util.EventHelper] (MSC service thread 1-7) Error notifying event Starting CamelContext: spring-jee. This exception will be ignored. : java.lang.IllegalStateException: Service target is no longer valid at org.jboss.msc.service.ServiceControllerImpl$ChildServiceTarget.install(ServiceControllerImpl.java:2399) at org.jboss.msc.service.ServiceBuilderImpl.install(ServiceBuilderImpl.java:317) at org.wildfly.extension.camel.service.CamelContextBindingService.addService(CamelContextBindingService.java:65) at org.wildfly.extension.camel.CamelCoreSubsystemExtension.addCamelContext(CamelCoreSubsystemExtension.java:67) at org.wildfly.extension.camel.service.CamelContextRegistryService$CamelContextRegistryImpl$2.accept(CamelContextRegistryService.java:255) at org.wildfly.extension.camel.service.CamelContextRegistryService$CamelContextRegistryImpl$2.accept(CamelContextRegistryService.java:252) at java.util.ArrayList$Itr.forEachRemaining(ArrayList.java:891) at org.wildfly.extension.camel.parser.SubsystemState.processExtensions(SubsystemState.java:95) at org.wildfly.extension.camel.service.CamelContextRegistryService$CamelContextRegistryImpl.addCamelContext(CamelContextRegistryService.java:252) at org.wildfly.extension.camel.service.CamelContextRegistryService$CamelContextRegistryImpl$1.notify(CamelContextRegistryService.java:228) at org.apache.camel.util.EventHelper.doNotifyEvent(EventHelper.java:805) at org.apache.camel.util.EventHelper.notifyCamelContextStarting(EventHelper.java:70) at org.apache.camel.impl.DefaultCamelContext.doStartCamel(DefaultCamelContext.java:3088) at org.apache.camel.impl.DefaultCamelContext.access$000(DefaultCamelContext.java:183) at org.apache.camel.impl.DefaultCamelContext$2.call(DefaultCamelContext.java:2961) at org.apache.camel.impl.DefaultCamelContext$2.call(DefaultCamelContext.java:2957) at org.apache.camel.impl.DefaultCamelContext.doWithDefinedClassLoader(DefaultCamelContext.java:2980) at org.apache.camel.impl.DefaultCamelContext.doStart(DefaultCamelContext.java:2957) at org.apache.camel.support.ServiceSupport.start(ServiceSupport.java:61) at org.apache.camel.impl.DefaultCamelContext.start(DefaultCamelContext.java:2924) at org.wildfly.extension.camel.deployment.CamelContextActivationProcessor.deploy(CamelContextActivationProcessor.java:52) at org.jboss.as.server.deployment.DeploymentUnitPhaseService.start(DeploymentUnitPhaseService.java:147) at org.jboss.msc.service.ServiceControllerImpl$StartTask.startService(ServiceControllerImpl.java:1948) at org.jboss.msc.service.ServiceControllerImpl$StartTask.run(ServiceControllerImpl.java:1881) at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) at java.lang.Thread.run(Thread.java:745)  ```  </body>
		<created>2017-02-24 13:30:13</created>
		<closed>2018-08-07 08:13:15</closed>
	</bug>
	<bug>
		<id>1653</id>
		<title>BraintreeIntegrationTest fails on AIX</title>
		<body>https://issues.jboss.org/browse/ENTESB-6598</body>
		<created>2017-02-22 11:30:39</created>
		<closed>2017-02-28 14:23:36</closed>
	</bug>
	<bug>
		<id>1651</id>
		<title>SSHIntegrationTest fails on AIX</title>
		<body>https://issues.jboss.org/browse/ENTESB-6595</body>
		<created>2017-02-22 11:27:04</created>
		<closed>2017-02-23 15:37:59</closed>
	</bug>
	<bug>
		<id>1650</id>
		<title>SJMSIntegrationTest fails on AIX</title>
		<body>https://issues.jboss.org/browse/ENTESB-6594</body>
		<created>2017-02-22 11:24:39</created>
		<closed>2017-08-25 06:14:46</closed>
	</bug>
	<bug>
		<id>1649</id>
		<title>ProtobufIntegrationTest fails on AIX</title>
		<body>https://issues.jboss.org/browse/ENTESB-6593</body>
		<created>2017-02-22 11:23:53</created>
		<closed>2017-02-28 15:32:31</closed>
	</bug>
	<bug>
		<id>1648</id>
		<title>PahoIntegrationTest fails on AIX</title>
		<body>https://issues.jboss.org/browse/ENTESB-6592</body>
		<created>2017-02-22 11:23:04</created>
		<closed>2017-08-25 06:14:46</closed>
	</bug>
	<bug>
		<id>1647</id>
		<title>OptaPlannerIntegrationTest fails on AIX</title>
		<body>https://issues.jboss.org/browse/ENTESB-6591</body>
		<created>2017-02-22 11:20:13</created>
		<closed>2017-08-25 06:14:46</closed>
	</bug>
	<bug>
		<id>1645</id>
		<title>JschIntegrationTest fails on AIX</title>
		<body>https://issues.jboss.org/browse/ENTESB-6589</body>
		<created>2017-02-22 11:17:37</created>
		<closed>2017-02-23 15:37:59</closed>
	</bug>
	<bug>
		<id>1644</id>
		<title>SftpIntegrationTest fails on AIX</title>
		<body>https://issues.jboss.org/browse/ENTESB-6588</body>
		<created>2017-02-22 11:14:13</created>
		<closed>2017-02-23 15:37:59</closed>
	</bug>
	<bug>
		<id>1643</id>
		<title>DOMRegistryTest fails on AIX</title>
		<body>https://issues.jboss.org/browse/ENTESB-6587</body>
		<created>2017-02-22 11:13:00</created>
		<closed>2017-02-24 10:11:47</closed>
	</bug>
	<bug>
		<id>1642</id>
		<title>CastorIntegrationTest fails on AIX</title>
		<body>https://issues.jboss.org/browse/ENTESB-6586</body>
		<created>2017-02-22 11:11:18</created>
		<closed>2017-02-27 14:23:48</closed>
	</bug>
	<bug>
		<id>1637</id>
		<title>Module checker misses duplicate dependency ecj</title>
		<body>``` [INFO] --- groovy-maven-plugin:2.0:execute (modules-check) @ fuse-eap-itests-standalone ---  MODULE DEPENDENCY ERRORS DETECTED!!  Duplicate dependency ecj modules/system/layers/fuse/org/eclipse/jdt/compiler/main/ecj-4.6.1.jar modules/system/layers/base/org/eclipse/jdt/ecj/main/ecj-4.6.1.jar  ```</body>
		<created>2017-02-21 08:54:42</created>
		<closed>2017-02-21 09:35:08</closed>
	</bug>
	<bug>
		<id>1632</id>
		<title>SegmentationError with elasticsearch on AIX</title>
		<body></body>
		<created>2017-02-17 08:06:19</created>
		<closed>2017-08-25 06:14:45</closed>
	</bug>
	<bug>
		<id>1629</id>
		<title>SchematronIntegrationTest fails on Windows</title>
		<body>https://10.8.63.16/view/wildfly-camel/job/wildfly-camel-master-windows/7/testReport/junit/org.wildfly.camel.test.schematron/SchematronIntegrationTest/testSchematronValidation/  ``` org.apache.camel.FailedToCreateRouteException: Failed to create route route157: Route(route157)[[From[direct:start]] -&gt; [To[schematron://sch... because of javax.xml.transform.TransformerConfigurationException: net.sf.saxon.s9api.SaxonApiException: I/O error reported by XML parser processing null: null at net.sf.saxon.s9api.XsltCompiler.compile(XsltCompiler.java:862) at net.sf.saxon.jaxp.SaxonTransformerFactory.newTemplates(SaxonTransformerFactory.java:154) at net.sf.saxon.jaxp.SaxonTransformerFactory.newTransformer(SaxonTransformerFactory.java:110) at org.apache.camel.component.schematron.processor.TemplatesFactory.getTemplates(TemplatesFactory.java:74) at org.apache.camel.component.schematron.SchematronEndpoint.doStart(SchematronEndpoint.java:147) ```</body>
		<created>2017-02-17 07:03:58</created>
		<closed>2017-05-05 14:50:19</closed>
	</bug>
	<bug>
		<id>1628</id>
		<title>ExecIntegrationTest fails on Windows</title>
		<body>https://10.8.63.16/view/wildfly-camel/job/wildfly-camel-master-windows/7/testReport/junit/org.wildfly.camel.test.exec/ExecIntegrationTest/testExecProducer/  ``` org.apache.camel.FailedToCreateRouteException: Failed to create route route68 at: &gt;&gt;&gt; To[exec:cmd.exe?args=/C echo Hello Kermit ] &lt;&lt;&lt; in route: Route(route68)[[From[direct:start]] -&gt; [To[exec:cmd.exe?args... because of Failed to resolve endpoint: exec:cmd.exe?args=/C echo Hello Kermit  due to: Illegal character in opaque part at index 44: exec:cmd.exe?args=/C%20echo%20Hello%20Kermit  at java.net.URI$Parser.fail(URI.java:2848) at java.net.URI$Parser.checkChars(URI.java:3021) at java.net.URI$Parser.parse(URI.java:3058) at java.net.URI.&lt;init&gt;(URI.java:588) at org.apache.camel.util.URISupport.normalizeUri(URISupport.java:534) at org.apache.camel.impl.DefaultCamelContext.normalizeEndpointUri(DefaultCamelContext.java:694) at org.apache.camel.impl.DefaultCamelContext.getEndpoint(DefaultCamelContext.java:578) at org.apache.camel.util.CamelContextHelper.getMandatoryEndpoint(CamelContextHelper.java:79) at org.apache.camel.model.RouteDefinition.resolveEndpoint(RouteDefinition.java:211) at org.apache.camel.impl.DefaultRouteContext.resolveEndpoint(DefaultRouteContext.java:108) at org.apache.camel.impl.DefaultRouteContext.resolveEndpoint(DefaultRouteContext.java:114) at org.apache.camel.model.SendDefinition.resolveEndpoint(SendDefinition.java:62) at org.apache.camel.model.SendDefinition.createProcessor(SendDefinition.java:56) at org.apache.camel.model.ProcessorDefinition.makeProcessorImpl(ProcessorDefinition.java:545) at org.apache.camel.model.ProcessorDefinition.makeProcessor(ProcessorDefinition.java:506) at org.apache.camel.model.ProcessorDefinition.addRoutes(ProcessorDefinition.java:222) at org.apache.camel.model.RouteDefinition.addRoutes(RouteDefinition.java:1068) at org.apache.camel.model.RouteDefinition.addRoutes(RouteDefinition.java:196) at org.apache.camel.impl.DefaultCamelContext.startRoute(DefaultCamelContext.java:984) at org.apache.camel.impl.DefaultCamelContext.startRouteDefinitions(DefaultCamelContext.java:3401) at org.apache.camel.impl.DefaultCamelContext.doStartCamel(DefaultCamelContext.java:3132) at org.apache.camel.impl.DefaultCamelContext.access$000(DefaultCamelContext.java:183) at org.apache.camel.impl.DefaultCamelContext$2.call(DefaultCamelContext.java:2961) at org.apache.camel.impl.DefaultCamelContext$2.call(DefaultCamelContext.java:2957) at org.apache.camel.impl.DefaultCamelContext.doWithDefinedClassLoader(DefaultCamelContext.java:2980) at org.apache.camel.impl.DefaultCamelContext.doStart(DefaultCamelContext.java:2957) at org.apache.camel.support.ServiceSupport.start(ServiceSupport.java:61) at org.apache.camel.impl.DefaultCamelContext.start(DefaultCamelContext.java:2924) at org.wildfly.camel.test.exec.ExecIntegrationTest.testExecProducer(ExecIntegrationTest.java:66) ```</body>
		<created>2017-02-17 06:56:26</created>
		<closed>2017-02-17 07:54:43</closed>
	</bug>
	<bug>
		<id>1623</id>
		<title>Cannot build component catalog on Windows</title>
		<body>``` java.lang.AssertionError: null at org.junit.Assert.fail(Assert.java:86) at org.junit.Assert.assertTrue(Assert.java:41) at org.junit.Assert.assertNotNull(Assert.java:712) at org.junit.Assert.assertNotNull(Assert.java:722) at org.wildfly.camel.test.catalog.WildFlyRuntimeProviderTest.testComponentArtifactId(WildFlyRuntimeProviderTest.java:99) ```</body>
		<created>2017-02-15 15:08:21</created>
		<closed>2017-02-16 10:33:44</closed>
	</bug>
	<bug>
		<id>1616</id>
		<title>Catalog reports unsupported items</title>
		<body></body>
		<created>2017-02-14 08:21:09</created>
		<closed>2017-02-14 09:06:18</closed>
	</bug>
	<bug>
		<id>1613</id>
		<title>WildFly-Camel image stream name is invalid</title>
		<body>``` $ oc apply -f wildfly-camel-imagestream.json The ImageStream "WildFly-Camel" is invalid: metadata.name: Invalid value: "WildFly-Camel": must match "[a-z0-9]+(?:[._-][a-z0-9]+)*" ```</body>
		<created>2017-02-08 17:14:43</created>
		<closed>2017-02-08 17:44:31</closed>
	</bug>
	<bug>
		<id>1609</id>
		<title>Embedded Cassandra Cluster is not shut down properly</title>
		<body>Run the test suite with logging at `DEBUG` level and you'll see lots of these interleaved within unrelated tests:  ``` [32m05:37:59,867 DEBUG [com.datastax.driver.core.Connection] (cluster1-nio-worker-1) Connection[localhost/127.0.0.1:9042-2, inFlight=0, closed=false] was inactive for 30 seconds, sending heartbeat ```</body>
		<created>2017-02-02 10:59:22</created>
		<closed>2017-05-05 15:23:10</closed>
	</bug>
	<bug>
		<id>1604</id>
		<title>Docker upload script does not work on OS X</title>
		<body>After entering the image numbers, I get presented with the start screen on return.</body>
		<created>2017-02-01 11:08:30</created>
		<closed>2017-02-02 08:01:04</closed>
	</bug>
	<bug>
		<id>1599</id>
		<title>MllpTcpServerConsumerTest: Address already in use</title>
		<body>I've seen this a few times since the 2.18.2 upgrade:  https://fabric8-ci.fusesource.com/view/wildfly-camel/job/wildfly-camel-stability/lastCompletedBuild/testReport/org.wildfly.camel.test.mllp/MllpTcpServerConsumerTest/testReceiveSingleMessage/  ``` java.net.BindException: Address already in use (Bind failed) at java.net.PlainSocketImpl.socketBind(Native Method) at java.net.AbstractPlainSocketImpl.bind(AbstractPlainSocketImpl.java:387) at java.net.ServerSocket.bind(ServerSocket.java:375) at org.apache.camel.component.mllp.MllpTcpServerConsumer.doStart(MllpTcpServerConsumer.java:118) at org.apache.camel.support.ServiceSupport.start(ServiceSupport.java:61) at org.apache.camel.impl.DefaultCamelContext.startService(DefaultCamelContext.java:3375) at org.apache.camel.impl.DefaultCamelContext.doStartOrResumeRouteConsumers(DefaultCamelContext.java:3692) at org.apache.camel.impl.DefaultCamelContext.doStartRouteConsumers(DefaultCamelContext.java:3628) at org.apache.camel.impl.DefaultCamelContext.safelyStartRouteServices(DefaultCamelContext.java:3548) at org.apache.camel.impl.DefaultCamelContext.doStartOrResumeRoutes(DefaultCamelContext.java:3312) at org.apache.camel.impl.DefaultCamelContext.doStartCamel(DefaultCamelContext.java:3166) at org.apache.camel.impl.DefaultCamelContext.access$000(DefaultCamelContext.java:183) at org.apache.camel.impl.DefaultCamelContext$2.call(DefaultCamelContext.java:2961) at org.apache.camel.impl.DefaultCamelContext$2.call(DefaultCamelContext.java:2957) at org.apache.camel.impl.DefaultCamelContext.doWithDefinedClassLoader(DefaultCamelContext.java:2980) at org.apache.camel.impl.DefaultCamelContext.doStart(DefaultCamelContext.java:2957) at org.apache.camel.support.ServiceSupport.start(ServiceSupport.java:61) at org.apache.camel.impl.DefaultCamelContext.start(DefaultCamelContext.java:2924) at org.wildfly.camel.test.mllp.MllpTcpServerConsumerTest.testReceiveSingleMessage(MllpTcpServerConsumerTest.java:80) ```</body>
		<created>2017-01-31 13:12:00</created>
		<closed>2017-01-31 15:56:56</closed>
	</bug>
	<bug>
		<id>1596</id>
		<title>camel-servicenow throws NCDFE for HTTPClientPolicy</title>
		<body>https://ci.fabric8.io/view/wildfly-camel/job/wildfly-camel/922/testReport/junit/org.wildfly.camel.test.servicenow/ServiceNowIntegrationTest/testSearchIncidents/ ``` java.lang.NoClassDefFoundError: org/apache/cxf/transports/http/configuration/HTTPClientPolicy at org.jboss.modules.ModuleClassLoader.findClass(ModuleClassLoader.java:198) at org.jboss.modules.ConcurrentClassLoader.performLoadClassUnchecked(ConcurrentClassLoader.java:363) at org.jboss.modules.ConcurrentClassLoader.performLoadClass(ConcurrentClassLoader.java:351) at org.jboss.modules.ConcurrentClassLoader.loadClass(ConcurrentClassLoader.java:93) at java.lang.Class.getDeclaredMethods0(Native Method) at java.lang.Class.privateGetDeclaredMethods(Class.java:2701) at java.lang.Class.privateGetPublicMethods(Class.java:2902) at java.lang.Class.getMethods(Class.java:1615) at org.apache.camel.util.IntrospectionSupport.findSetterMethods(IntrospectionSupport.java:663) at org.apache.camel.util.IntrospectionSupport.findSetterMethods(IntrospectionSupport.java:683) at org.apache.camel.util.IntrospectionSupport.setProperty(IntrospectionSupport.java:510) at org.apache.camel.util.IntrospectionSupport.setProperty(IntrospectionSupport.java:616) at org.apache.camel.util.IntrospectionSupport.setProperties(IntrospectionSupport.java:473) at org.apache.camel.util.IntrospectionSupport.setProperties(IntrospectionSupport.java:483) at org.apache.camel.util.EndpointHelper.setProperties(EndpointHelper.java:260) at org.apache.camel.impl.DefaultComponent.setProperties(DefaultComponent.java:267) at org.apache.camel.impl.DefaultComponent.setProperties(DefaultComponent.java:255) at org.apache.camel.component.servicenow.ServiceNowComponent.createEndpoint(ServiceNowComponent.java:66) at org.apache.camel.impl.DefaultComponent.createEndpoint(DefaultComponent.java:112) at org.apache.camel.impl.DefaultCamelContext.getEndpoint(DefaultCamelContext.java:603) at org.apache.camel.util.CamelContextHelper.getMandatoryEndpoint(CamelContextHelper.java:79) at org.apache.camel.model.RouteDefinition.resolveEndpoint(RouteDefinition.java:211) at org.apache.camel.impl.DefaultRouteContext.resolveEndpoint(DefaultRouteContext.java:108) at org.apache.camel.impl.DefaultRouteContext.resolveEndpoint(DefaultRouteContext.java:114) at org.apache.camel.model.SendDefinition.resolveEndpoint(SendDefinition.java:62) at org.apache.camel.model.SendDefinition.createProcessor(SendDefinition.java:56) at org.apache.camel.model.ProcessorDefinition.makeProcessorImpl(ProcessorDefinition.java:545) at org.apache.camel.model.ProcessorDefinition.makeProcessor(ProcessorDefinition.java:506) at org.apache.camel.model.ProcessorDefinition.addRoutes(ProcessorDefinition.java:222) at org.apache.camel.model.RouteDefinition.addRoutes(RouteDefinition.java:1068) at org.apache.camel.model.RouteDefinition.addRoutes(RouteDefinition.java:196) at org.apache.camel.impl.DefaultCamelContext.startRoute(DefaultCamelContext.java:984) at org.apache.camel.impl.DefaultCamelContext.startRouteDefinitions(DefaultCamelContext.java:3401) at org.apache.camel.impl.DefaultCamelContext.doStartCamel(DefaultCamelContext.java:3132) at org.apache.camel.impl.DefaultCamelContext.access$000(DefaultCamelContext.java:183) at org.apache.camel.impl.DefaultCamelContext$2.call(DefaultCamelContext.java:2961) at org.apache.camel.impl.DefaultCamelContext$2.call(DefaultCamelContext.java:2957) at org.apache.camel.impl.DefaultCamelContext.doWithDefinedClassLoader(DefaultCamelContext.java:2980) at org.apache.camel.impl.DefaultCamelContext.doStart(DefaultCamelContext.java:2957) at org.apache.camel.support.ServiceSupport.start(ServiceSupport.java:61) at org.apache.camel.impl.DefaultCamelContext.start(DefaultCamelContext.java:2924) at org.wildfly.camel.test.servicenow.ServiceNowIntegrationTest.testSearchIncidents(ServiceNowIntegrationTest.java:93) ```</body>
		<created>2017-01-31 08:49:56</created>
		<closed>2017-01-31 09:19:57</closed>
	</bug>
	<bug>
		<id>1591</id>
		<title>camel-rss does not export rometools</title>
		<body>It's likely that once a feed has been consumed, folks will want to do some manipulation on the data returned. Thus access to the relevant rome types will be required.</body>
		<created>2017-01-30 12:12:52</created>
		<closed>2017-01-30 13:49:19</closed>
	</bug>
	<bug>
		<id>1590</id>
		<title>SAPNetweaverIntegrationTest receieves HTTP 404 from SAP gateway</title>
		<body>Not sure what's changed in the last few days, but the SAP Netweaver test is [failing](https://fabric8-ci.fusesource.com/view/wildfly-camel/job/wildfly-camel/lastCompletedBuild/testReport/org.wildfly.camel.test.sap.netweaver/SAPNetweaverIntegrationTest/testSAPNetweaverEndpoint/) with a HTTP 404 response from the SAP gateway.</body>
		<created>2017-01-30 11:07:45</created>
		<closed>2017-01-30 13:38:13</closed>
	</bug>
	<bug>
		<id>1581</id>
		<title>ElasticSearchIntegrationTest does not close test node</title>
		<body>The test node is created but never destroyed. Hence when running the test suite with debugging enabled, you see the following intermingled with non-related test output:  `[org.elasticsearch.indices.memory] (elasticsearch[Nekra][scheduler][T#1]) [Nekra] recalculating shard indexing buffer`</body>
		<created>2017-01-15 15:07:38</created>
		<closed>2017-01-30 16:44:11</closed>
	</bug>
	<bug>
		<id>1568</id>
		<title>SSH test cases should use a custom known_hosts file</title>
		<body>Else `$HOME/.ssh/known_hosts` becomes polluted with pointless entries.</body>
		<created>2017-01-06 16:24:47</created>
		<closed>2017-01-06 17:25:21</closed>
	</bug>
	<bug>
		<id>1564</id>
		<title>SSH producer test frequently swallows the output</title>
		<body>``` Failed tests:    SSHIntegrationTest.testSSHProducer:94 expected:&lt;[Hello Kermit ]&gt; but was:&lt;[]&gt; ```</body>
		<created>2017-01-05 13:36:40</created>
		<closed>2017-08-21 10:56:01</closed>
	</bug>
	<bug>
		<id>1562</id>
		<title>Camel CDI context creation tests case failures</title>
		<body>The build has been unstable since yesterday. I can no longer perform a successful local build of WFC because of these test failures:  ``` CDIContextCreationTest.testCDIContextCreation:76 expected:&lt;0&gt; but was:&lt;1&gt; CDIContextCreationTest.testManualComponentConfig:97 expected:&lt;1&gt; but was:&lt;2&gt; CDIEarIntegrationTest.testEjbJarDeployment:65 expected:&lt;1&gt; but was:&lt;2&gt; NoCDIContextCreationTest.testDeployment:57 No contexts deployed  ```</body>
		<created>2017-01-05 08:14:13</created>
		<closed>2017-01-05 11:06:50</closed>
	</bug>
	<bug>
		<id>1554</id>
		<title>Missing org.jboss.as.security dependency for module org.wildfly.extension.camel.cxf.undertow</title>
		<body>Hi,  I forked the "Camel CXF JAX-WS Example" to add cxf based authentication and authorization. First I added security to the original, spring-based example. See here: [https://github.com/jochenr/wildfly-camel-examples/tree/master/camel-cxf-jaxws-security](https://github.com/jochenr/wildfly-camel-examples/tree/master/camel-cxf-jaxws-security) That works fine.  Then I tried to replace the "cxfws-camel-context.xml" by a CDI Java DSL route builder ("org.wildfly.camel.examples.cxf.jaxws.JavaDSLRouteBuilder.java"). See this example: [https://github.com/jochenr/wildfly-camel-examples/tree/master/camel-cxf-jaxws-cdi](https://github.com/jochenr/wildfly-camel-examples/tree/master/camel-cxf-jaxws-cdi)  This does not work because the LoginModule classes configured in the wildfly security domain cannot be found (more details in the README.md in the linked project). Deactivating security (deleting JAASLoginInterceptor from the CxfEndpoint) the example works fine....  I'm not sure if this is a bug or if I didn't find the corrct module to add to "jboss-deployment-structure.xml" and/or "jboss-all.xml"....  Best regards, Jochen </body>
		<created>2016-12-23 07:49:06</created>
		<closed>2017-01-16 07:39:15</closed>
	</bug>
	<bug>
		<id>1532</id>
		<title>ServiceNowIntegrationTest throws CamelExecutionException</title>
		<body>``` Caused by: failure: Requested URI does not represent any resource: /now/table at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) at java.lang.reflect.Constructor.newInstance(Constructor.java:423) at com.fasterxml.jackson.databind.introspect.AnnotatedConstructor.call(AnnotatedConstructor.java:114) at com.fasterxml.jackson.databind.deser.std.StdValueInstantiator.createFromObjectWith(StdValueInstantiator.java:256) at com.fasterxml.jackson.databind.deser.impl.PropertyBasedCreator.build(PropertyBasedCreator.java:135) at com.fasterxml.jackson.databind.deser.BeanDeserializer._deserializeUsingPropertyBased(BeanDeserializer.java:385) at com.fasterxml.jackson.databind.deser.std.ThrowableDeserializer.deserializeFromObject(ThrowableDeserializer.java:66) at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:133) at com.fasterxml.jackson.databind.ObjectReader._bind(ObjectReader.java:1535) at com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:944) at com.fasterxml.jackson.jaxrs.base.ProviderBase.readFrom(ProviderBase.java:811) at org.apache.cxf.jaxrs.utils.JAXRSUtils.readFromMessageBodyReader(JAXRSUtils.java:1366) at org.apache.cxf.jaxrs.impl.ResponseImpl.doReadEntity(ResponseImpl.java:370) at org.apache.cxf.jaxrs.impl.ResponseImpl.readEntity(ResponseImpl.java:320) at org.apache.cxf.jaxrs.impl.ResponseImpl.readEntity(ResponseImpl.java:310) at org.apache.camel.component.servicenow.ServiceNowClient.invoke(ServiceNowClient.java:126) at org.apache.camel.component.servicenow.ServiceNowClient.invoke(ServiceNowClient.java:104) at org.apache.camel.component.servicenow.releases.helsinki.HelsinkiServiceNowTableProcessor.retrieveRecord(HelsinkiServiceNowTableProcessor.java:74) at org.apache.camel.component.servicenow.ServiceNowDispatcher.process(ServiceNowDispatcher.java:40) at org.apache.camel.component.servicenow.AbstractServiceNowProcessor.process(AbstractServiceNowProcessor.java:72) at org.apache.camel.impl.BaseSelectorProducer.process(BaseSelectorProducer.java:35) at org.apache.camel.util.AsyncProcessorConverterHelper$ProcessorToAsyncProcessorBridge.process(AsyncProcessorConverterHelper.java:61) at org.apache.camel.processor.SendProcessor.process(SendProcessor.java:145) at org.apache.camel.management.InstrumentationProcessor.process(InstrumentationProcessor.java:77) at org.apache.camel.processor.RedeliveryErrorHandler.process(RedeliveryErrorHandler.java:542) at org.apache.camel.processor.CamelInternalProcessor.process(CamelInternalProcessor.java:197) at org.apache.camel.processor.CamelInternalProcessor.process(CamelInternalProcessor.java:197) at org.apache.camel.component.direct.DirectProducer.process(DirectProducer.java:62) at org.apache.camel.processor.Pipeline.process(Pipeline.java:120) at org.apache.camel.processor.Pipeline.process(Pipeline.java:83) at org.apache.camel.processor.CamelInternalProcessor.process(CamelInternalProcessor.java:197) at org.apache.camel.processor.DelegateAsyncProcessor.process(DelegateAsyncProcessor.java:97) at org.apache.camel.impl.ProducerCache$1.doInProducer(ProducerCache.java:529) at org.apache.camel.impl.ProducerCache$1.doInProducer(ProducerCache.java:497) at org.apache.camel.impl.ProducerCache.doInProducer(ProducerCache.java:365) at org.apache.camel.impl.ProducerCache.sendExchange(ProducerCache.java:497) at org.apache.camel.impl.ProducerCache.send(ProducerCache.java:260) at org.apache.camel.impl.DefaultProducerTemplate.requestBodyAndHeaders(DefaultProducerTemplate.java:355)  ```</body>
		<created>2016-12-12 13:21:23</created>
		<closed>2016-12-15 17:14:10</closed>
	</bug>
	<bug>
		<id>1530</id>
		<title>yaml dataformat cannot find constructor any more</title>
		<body>``` 09:50:43,219 ERROR [org.apache.camel.processor.DefaultErrorHandler] (pool-3-thread-1) Failed delivery for (MessageId: ID-localhost-51732-1481532642259-0-1 on ExchangeId: ID-localhost-51732-1481532642259-0-2). Exhausted after delivery attempt: 1 caught: could not determine a constructor for the tag tag:yaml.org,2002:org.wildfly.camel.test.common.types.Customer  in 'reader', line 1, column 1:     !!org.wildfly.camel.test.common. ...      ^   Message History --------------------------------------------------------------------------------------------------------------------------------------- RouteId              ProcessorId          Processor                                                                        Elapsed (ms) [route1            ] [route1            ] [direct://start                                                                ] [        60] [route1            ] [unmarshal1        ] [unmarshal[org.apache.camel.model.dataformat.YAMLDataFormat@bfe2df8]           ] [        54]  Stacktrace ---------------------------------------------------------------------------------------------------------------------------------------: could not determine a constructor for the tag tag:yaml.org,2002:org.wildfly.camel.test.common.types.Customer  in 'reader', line 1, column 1:     !!org.wildfly.camel.test.common. ...      ^  at org.yaml.snakeyaml.constructor.SafeConstructor$ConstructUndefined.construct(SafeConstructor.java:505) at org.yaml.snakeyaml.constructor.BaseConstructor.constructObject(BaseConstructor.java:182) at org.yaml.snakeyaml.constructor.BaseConstructor.constructDocument(BaseConstructor.java:141) at org.yaml.snakeyaml.constructor.BaseConstructor.getSingleData(BaseConstructor.java:127) at org.yaml.snakeyaml.Yaml.loadFromReader(Yaml.java:450) at org.yaml.snakeyaml.Yaml.loadAs(Yaml.java:410) at org.apache.camel.component.snakeyaml.SnakeYAMLDataFormat.unmarshal(SnakeYAMLDataFormat.java:102) at org.apache.camel.processor.UnmarshalProcessor.process(UnmarshalProcessor.java:69) at org.apache.camel.management.InstrumentationProcessor.process(InstrumentationProcessor.java:77) at org.apache.camel.processor.RedeliveryErrorHandler.process(RedeliveryErrorHandler.java:541) at org.apache.camel.processor.CamelInternalProcessor.process(CamelInternalProcessor.java:202) at org.apache.camel.processor.CamelInternalProcessor.process(CamelInternalProcessor.java:202) at org.apache.camel.component.direct.DirectProducer.process(DirectProducer.java:62) at org.apache.camel.processor.Pipeline.process(Pipeline.java:120) at org.apache.camel.processor.Pipeline.process(Pipeline.java:83) at org.apache.camel.processor.CamelInternalProcessor.process(CamelInternalProcessor.java:202) at org.apache.camel.processor.DelegateAsyncProcessor.process(DelegateAsyncProcessor.java:97) at org.apache.camel.impl.ProducerCache$1.doInProducer(ProducerCache.java:529) at org.apache.camel.impl.ProducerCache$1.doInProducer(ProducerCache.java:497) at org.apache.camel.impl.ProducerCache.doInProducer(ProducerCache.java:365) at org.apache.camel.impl.ProducerCache.sendExchange(ProducerCache.java:497) at org.apache.camel.impl.ProducerCache.send(ProducerCache.java:260) at org.apache.camel.impl.DefaultProducerTemplate.requestBody(DefaultProducerTemplate.java:337) at org.wildfly.camel.test.yaml.YamlDataFormatIntegrationTest.testUnmarshalYaml(YamlDataFormatIntegrationTest.java:84) ```  CrossRef: https://issues.apache.org/jira/browse/CAMEL-10575</body>
		<created>2016-12-12 09:03:10</created>
		<closed>2017-01-31 07:07:26</closed>
	</bug>
	<bug>
		<id>1523</id>
		<title>OpenShift S2I cannot push image on EC2</title>
		<body>``` [INFO] ------------------------------------------------------------------------ [INFO] BUILD SUCCESS [INFO] ------------------------------------------------------------------------ [INFO] Total time: 20.492 s [INFO] Finished at: 2016-12-07T15:39:09+00:00 [INFO] Final Memory: 31M/267M [INFO] ------------------------------------------------------------------------ [WARNING] The requested profile "openshift" could not be activated because it does not exist. Copying built war files into /wildfly/standalone/deployments for later deployment... Copying all war artifacts from /opt/app-root/src/target directory into /wildfly/standalone/deployments for later deployment... '/opt/app-root/src/target/example-camel-cdi-4.4.0.war' -&gt; '/wildfly/standalone/deployments/example-camel-cdi-4.4.0.war' Copying all ear artifacts from /opt/app-root/src/target directory into /wildfly/standalone/deployments for later deployment... Copying all rar artifacts from /opt/app-root/src/target directory into /wildfly/standalone/deployments for later deployment... Copying all jar artifacts from /opt/app-root/src/target directory into /wildfly/standalone/deployments for later deployment... ...done   Pushing image 172.30.183.73:5000/wildfly-camel/camel-cdi:latest ... Registry server Address:  Registry server User Name: serviceaccount Registry server Email: serviceaccount@example.org Registry server Password: &lt;&lt;non-empty&gt;&gt; error: build error: Failed to push image: Get https://172.30.183.73:5000/v1/_ping: http: server gave HTTP response to HTTPS client ```</body>
		<created>2016-12-07 15:42:57</created>
		<closed>2016-12-08 15:44:41</closed>
	</bug>
	<bug>
		<id>1510</id>
		<title>S2I templates use hardcoded version 4.4.0</title>
		<body></body>
		<created>2016-12-02 15:00:23</created>
		<closed>2017-02-01 14:23:36</closed>
	</bug>
	<bug>
		<id>1506</id>
		<title>NPE thrown from ZookeeperConsumerIntegrationTest</title>
		<body>This happens periodically on the CI infra:  ``` java.lang.NullPointerException: null at org.wildfly.camel.test.zookeeper.ZookeeperConsumerIntegrationTest.testZookeeperConsumer(ZookeeperConsumerIntegrationTest.java:93) ```</body>
		<created>2016-12-01 18:47:28</created>
		<closed>2017-03-17 17:55:43</closed>
	</bug>
	<bug>
		<id>1505</id>
		<title>NullPointerException thrown from JschIntegrationTest</title>
		<body>This happens periodically on the CI infra: ``` java.lang.NullPointerException: null at org.apache.sshd.common.util.CloseableUtils.parallel(CloseableUtils.java:157) at org.apache.sshd.common.io.nio2.Nio2Session.doCloseGracefully(Nio2Session.java:137) at org.apache.sshd.common.util.CloseableUtils$AbstractCloseable.close(CloseableUtils.java:190) at org.apache.sshd.common.io.nio2.Nio2Service.close(Nio2Service.java:71) at org.apache.sshd.common.io.nio2.Nio2Acceptor.close(Nio2Acceptor.java:95) at org.apache.sshd.common.util.CloseableUtils$4$1.operationComplete(CloseableUtils.java:125) at org.apache.sshd.common.util.CloseableUtils$4$1.operationComplete(CloseableUtils.java:121) at org.apache.sshd.common.util.CloseableUtils$4.close(CloseableUtils.java:132) at org.apache.sshd.SshServer.close(SshServer.java:375) at org.apache.sshd.SshServer.stop(SshServer.java:364) at org.apache.sshd.SshServer.stop(SshServer.java:360) at org.wildfly.camel.test.common.ssh.EmbeddedSSHServer.stop(EmbeddedSSHServer.java:64) at org.wildfly.camel.test.jsch.JschIntegrationTest.tearDown(JschIntegrationTest.java:85) ```</body>
		<created>2016-12-01 18:45:23</created>
		<closed>2016-12-16 08:35:57</closed>
	</bug>
	<bug>
		<id>1501</id>
		<title>Docker image does not run OpenShift</title>
		<body>``` =========================================================================    JBoss Bootstrap Environment    JBOSS_HOME: /opt/jboss/wildfly    JAVA: /usr/lib/jvm/java/bin/java    JAVA_OPTS:  -server -Xms64m -Xmx512m -XX:MetaspaceSize=96M -XX:MaxMetaspaceSize=256m -Djava.net.preferIPv4Stack=true -Djboss.modules.system.pkgs=org.jboss.byteman -Djava.awt.headless=true  =========================================================================  java.lang.IllegalArgumentException: Failed to instantiate class "org.jboss.logmanager.handlers.PeriodicRotatingFileHandler" for handler "FILE" ... java.lang.IllegalStateException: WFLYSRV0124: Could not create server data directory: /opt/jboss/wildfly/standalone/data at org.jboss.as.server.ServerEnvironment.&lt;init&gt;(ServerEnvironment.java:473) at org.jboss.as.server.Main.determineEnvironment(Main.java:297) at org.jboss.as.server.Main.main(Main.java:94) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at org.jboss.modules.Module.run(Module.java:329) at org.jboss.modules.Main.main(Main.java:507) ```  Root cause: https://github.com/jboss-dockerfiles/wildfly/issues/47  https://docs.openshift.org/latest/creating_images/guidelines.html#openshift-origin-specific-guidelines</body>
		<created>2016-11-30 13:47:04</created>
		<closed>2016-12-02 13:21:48</closed>
	</bug>
	<bug>
		<id>1483</id>
		<title>Roadmap does not show supported dataformat hl7</title>
		<body></body>
		<created>2016-11-24 16:02:38</created>
		<closed>2016-12-13 17:39:26</closed>
	</bug>
	<bug>
		<id>1361</id>
		<title>CDI may not detect an implicit bean archive WAR</title>
		<body>Can be reproduced by removing [WEB-INF/beans.xml](https://github.com/wildfly-extras/wildfly-camel-examples/tree/master/camel-activemq/src/main/webapp/WEB-INF). The camel context from the annotated route builder is not created in this case. </body>
		<created>2016-10-07 12:53:57</created>
		<closed>2017-01-30 10:59:00</closed>
	</bug>
	<bug>
		<id>1358</id>
		<title>javax/net/ssl/SSLSocket missed for camel-smpp</title>
		<body>Hi! I'm running wildfly-10 with wildfly-camel-patch 4.2.0. When  I tried to define a route with camel-smpp component I got NoClassDefFoundError exception:  ``` .... org.apache.camel.cdi.CdiCamelExtension.afterDeploymentValidation(CdiCamelExtension.java:376)     at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)     at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)     at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)     at java.lang.reflect.Method.invoke(Method.java:498)     at org.jboss.weld.injection.StaticMethodInjectionPoint.invoke(StaticMethodInjectionPoint.java:88)     ... 20 more Caused by: java.lang.ClassNotFoundException: javax.net.ssl.SSLSocket from [Module \"org.apache.camel.component.smpp:main\" from local module loader @282ba1e (finder: local module finder @13b6d03 (roots: /home/siniy/distr/wildfly-10.0.0.Final/modules,/home/siniy/distr/wildfly-10.0.0.Final/modules/system/layers/fuse,/home/siniy/distr/wildfly-10.0.0.Final/modules/system/layers/base))]     at org.jboss.modules.ModuleClassLoader.findClass(ModuleClassLoader.java:198)     at org.jboss.modules.ConcurrentClassLoader.performLoadClassUnchecked(ConcurrentClassLoader.java:363)     at org.jboss.modules.ConcurrentClassLoader.performLoadClass(ConcurrentClassLoader.java:351)     at org.jboss.modules.ConcurrentClassLoader.loadClass(ConcurrentClassLoader.java:93)     ... 77 more "}} ```  My code raised error:  ``` @Startup @ApplicationScoped @ContextName("camel-smpp-client") public class SMPPClientBuilder extends RouteBuilder {      public final static String SMPP_ENDPOINT = "smpp://guest@localhost:999";      @Override     public void configure() throws Exception {         from("direct:send").to(SMPP_ENDPOINT);             } } ```  I found that this may be fixed by adding the dependency from javax.api to the smpp component module.  So, when I added a line `&lt;module name="javax.api"/&gt;` to the dependencies section in file `modules/system/layers/fuse/org/apache/camel/component/smpp/main/module.xml` the problem had gone.  </body>
		<created>2016-10-05 13:02:41</created>
		<closed>2016-10-05 18:16:55</closed>
	</bug>
	<bug>
		<id>1354</id>
		<title>Camel context shut down with inflight exchanges</title>
		<body>Take a browse through some of the stability build logs and search for the word 'inflight':  https://fabric8-ci.fusesource.com/view/wildfly-camel/job/wildfly-camel-stability/  Some of the tests finish with inflight exchanges still pending. It seems random (per build) for the tests this happens to. Sometimes it happens to the NettyIntegrationTest and blocks processing for at least 10 - 15 seconds. </body>
		<created>2016-09-29 15:27:36</created>
		<closed>2016-12-07 16:38:11</closed>
	</bug>
	<bug>
		<id>1346</id>
		<title>Cannot locate field HttpClientBuilder.dnsResolver</title>
		<body>LinkedIn integration test fails on the 2.18.x branch:  ``` Caused by: org.apache.camel.RuntimeCamelException: Error invoking searchCompanies with {keywords=linkedin, fields=}: java.lang.IllegalArgumentException: Cannot locate declared field class org.apache.http.impl.client.HttpClientBuilder.dnsResolver     at org.apache.camel.util.component.ApiMethodHelper.invokeMethod(ApiMethodHelper.java:514)     at org.apache.camel.util.component.AbstractApiProducer.doInvokeMethod(AbstractApiProducer.java:120)     at org.apache.camel.component.linkedin.LinkedInProducer.doInvokeMethod(LinkedInProducer.java:43)     at org.apache.camel.util.component.AbstractApiProducer$1.run(AbstractApiProducer.java:86)     at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)     at java.util.concurrent.FutureTask.run(FutureTask.java:266)     at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)     at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)     at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)     at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)     at java.lang.Thread.run(Thread.java:745) Caused by: javax.ws.rs.ProcessingException: java.lang.IllegalArgumentException: Cannot locate declared field class org.apache.http.impl.client.HttpClientBuilder.dnsResolver     at org.apache.cxf.jaxrs.client.AbstractClient.checkClientException(AbstractClient.java:596)     at org.apache.cxf.jaxrs.client.AbstractClient.preProcessResult(AbstractClient.java:578)     at org.apache.cxf.jaxrs.client.ClientProxyImpl.doChainedInvocation(ClientProxyImpl.java:746)     at org.apache.cxf.jaxrs.client.ClientProxyImpl.invoke(ClientProxyImpl.java:231)     at com.sun.proxy.$Proxy63.searchCompanies(Unknown Source)     at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)     at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)     at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)     at java.lang.reflect.Method.invoke(Method.java:498)     at org.apache.camel.util.component.ApiMethodHelper.invokeMethod(ApiMethodHelper.java:506)     at org.apache.camel.util.component.AbstractApiProducer.doInvokeMethod(AbstractApiProducer.java:120)     at org.apache.camel.component.linkedin.LinkedInProducer.doInvokeMethod(LinkedInProducer.java:43)     at org.apache.camel.util.component.AbstractApiProducer$1.run(AbstractApiProducer.java:86)     at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)     at java.util.concurrent.FutureTask.run(FutureTask.java:266)     at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)     at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)     at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)     at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)     at java.lang.Thread.run(Thread.java:745) Caused by: java.lang.IllegalArgumentException: Cannot locate declared field class org.apache.http.impl.client.HttpClientBuilder.dnsResolver     at org.apache.commons.lang3.Validate.isTrue(Validate.java:155)     at org.apache.commons.lang3.reflect.FieldUtils.readDeclaredField(FieldUtils.java:512)     at com.gargoylesoftware.htmlunit.HttpWebConnection.getField(HttpWebConnection.java:1036)     at com.gargoylesoftware.htmlunit.HttpWebConnection.createConnectionManager(HttpWebConnection.java:959)     at com.gargoylesoftware.htmlunit.HttpWebConnection.getResponse(HttpWebConnection.java:165)     at com.gargoylesoftware.htmlunit.util.WebConnectionWrapper.getResponse(WebConnectionWrapper.java:70)     at org.apache.camel.component.linkedin.api.LinkedInOAuthRequestFilter$1.getResponse(LinkedInOAuthRequestFilter.java:119)     at com.gargoylesoftware.htmlunit.WebClient.loadWebResponseFromWebConnection(WebClient.java:1351)     at com.gargoylesoftware.htmlunit.WebClient.loadWebResponse(WebClient.java:1268)     at com.gargoylesoftware.htmlunit.WebClient.getPage(WebClient.java:381)     at com.gargoylesoftware.htmlunit.WebClient.getPage(WebClient.java:303)     at com.gargoylesoftware.htmlunit.WebClient.getPage(WebClient.java:450)     at com.gargoylesoftware.htmlunit.WebClient.getPage(WebClient.java:435)     at org.apache.camel.component.linkedin.api.LinkedInOAuthRequestFilter.getRefreshToken(LinkedInOAuthRequestFilter.java:163)     at org.apache.camel.component.linkedin.api.LinkedInOAuthRequestFilter.updateOAuthToken(LinkedInOAuthRequestFilter.java:297)     at org.apache.camel.component.linkedin.api.LinkedInOAuthRequestFilter.filter(LinkedInOAuthRequestFilter.java:258)     at org.apache.cxf.jaxrs.client.spec.ClientRequestFilterInterceptor.handleMessage(ClientRequestFilterInterceptor.java:60)     at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:308)     at org.apache.cxf.jaxrs.client.AbstractClient.doRunInterceptorChain(AbstractClient.java:666)     at org.apache.cxf.jaxrs.client.ClientProxyImpl.doChainedInvocation(ClientProxyImpl.java:744)     at org.apache.cxf.jaxrs.client.ClientProxyImpl.invoke(ClientProxyImpl.java:231)     at com.sun.proxy.$Proxy63.searchCompanies(Unknown Source)     at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)     at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)     at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)     at java.lang.reflect.Method.invoke(Method.java:498)     at org.apache.camel.util.component.ApiMethodHelper.invokeMethod(ApiMethodHelper.java:506)     at org.apache.camel.util.component.AbstractApiProducer.doInvokeMethod(AbstractApiProducer.java:120)     at org.apache.camel.component.linkedin.LinkedInProducer.doInvokeMethod(LinkedInProducer.java:43)     at org.apache.camel.util.component.AbstractApiProducer$1.run(AbstractApiProducer.java:86)     at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)     at java.util.concurrent.FutureTask.run(FutureTask.java:266)     at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)     at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)     at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)     at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)     at java.lang.Thread.run(Thread.java:745) ``` </body>
		<created>2016-09-27 10:28:51</created>
		<closed>2016-10-05 09:36:08</closed>
	</bug>
	<bug>
		<id>1343</id>
		<title>Netty cannot access proprietary API</title>
		<body>Seen on jdk9-ea137  ``` Caused by: java.lang.reflect.InaccessibleObjectException: Unable to make member of class sun.nio.ch.SelectorImpl accessible:  module java.base does not export sun.nio.ch to unnamed module @4655c8d3     at jdk.internal.reflect.Reflection.throwInaccessibleObjectException(java.base@9-ea/Reflection.java:414)     at java.lang.reflect.AccessibleObject.checkCanSetAccessible(java.base@9-ea/AccessibleObject.java:174)     at java.lang.reflect.Field.checkCanSetAccessible(java.base@9-ea/Field.java:171)     at java.lang.reflect.Field.setAccessible(java.base@9-ea/Field.java:165)     at io.netty.channel.nio.NioEventLoop$5.run(NioEventLoop.java:201)     at java.security.AccessController.doPrivileged(java.base@9-ea/Native Method)     at io.netty.channel.nio.NioEventLoop.openSelector(NioEventLoop.java:194)     at io.netty.channel.nio.NioEventLoop.&lt;init&gt;(NioEventLoop.java:148)     at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:126)     at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:36)     at io.netty.util.concurrent.MultithreadEventExecutorGroup.&lt;init&gt;(MultithreadEventExecutorGroup.java:84) ``` </body>
		<created>2016-09-26 11:45:27</created>
		<closed>2020-02-06 13:01:12</closed>
	</bug>
	<bug>
		<id>1321</id>
		<title>Camel contexts not unbound from JNDI</title>
		<body>I noticed on a WildFly heap dump that there were lots of `ServiceControllerImpl` / `ServiceRegistrationImpl` instances lingering after applications had been undeployed. Many of them seem to link to the `CamelContextBindingService`.  A quick browse at the admin console JNDI view reveals:  ![jndi](https://cloud.githubusercontent.com/assets/4721408/18488245/86eabc20-79f0-11e6-87bc-6c9bdfe0318b.png)  I guess the entries are all marked as '?' because the Camel contexts have all been destroyed after undeployment. </body>
		<created>2016-09-13 19:34:25</created>
		<closed>2016-09-21 12:40:46</closed>
	</bug>
	<bug>
		<id>1319</id>
		<title>ClassLoader leaks in ContextCreateHandlerRegistry</title>
		<body>We have a problem with the `PackageScanResolverProcessor`. It [registers](https://github.com/wildfly-extras/wildfly-camel/blob/master/subsystem/core/src/main/java/org/wildfly/extension/camel/deployment/PackageScanResolverProcessor.java#L55) a `ContextCreateHandler` and then [deregisters](https://github.com/wildfly-extras/wildfly-camel/blob/master/subsystem/core/src/main/java/org/wildfly/extension/camel/deployment/PackageScanResolverProcessor.java#L63) it on undeploy.  However, the ClassLoader key in [handlerMapping](https://github.com/wildfly-extras/wildfly-camel/blob/master/subsystem/core/src/main/java/org/wildfly/extension/camel/service/ContextCreateHandlerRegistryService.java#L88) is still retained and will grow exponentially with each deploy / undeploy.  We should invoke [removeContextCreateHandlers](https://github.com/wildfly-extras/wildfly-camel/blob/master/subsystem/core/src/main/java/org/wildfly/extension/camel/service/ContextCreateHandlerRegistryService.java#L144) somewhere to ensure the map is cleaned up. </body>
		<created>2016-09-13 16:11:13</created>
		<closed>2016-09-13 19:43:30</closed>
	</bug>
	<bug>
		<id>1267</id>
		<title>Spring CXF context cannot see javax/annotation/Resource</title>
		<body>``` Caused by: java.lang.ClassNotFoundException: javax.annotation.Resource from [Module "org.springframework.context:main" from local module loader @6b67034 (finder: local module finder @16267862 (roots: /Users/tdiesler/git/wildfly-camel/itests/standalone/basic/target/wildfly-10.0.0.Final/modules,/Users/tdiesler/git/wildfly-camel/itests/standalone/basic/target/wildfly-10.0.0.Final/modules/system/layers/fuse,/Users/tdiesler/git/wildfly-camel/itests/standalone/basic/target/wildfly-10.0.0.Final/modules/system/layers/base))]     at org.jboss.modules.ModuleClassLoader.findClass(ModuleClassLoader.java:198)     at org.jboss.modules.ConcurrentClassLoader.performLoadClassUnchecked(ConcurrentClassLoader.java:363)     at org.jboss.modules.ConcurrentClassLoader.performLoadClass(ConcurrentClassLoader.java:351)     at org.jboss.modules.ConcurrentClassLoader.loadClass(ConcurrentClassLoader.java:93)     ... 51 more ``` </body>
		<created>2016-08-01 08:20:00</created>
		<closed>2016-08-02 13:16:50</closed>
	</bug>
	<bug>
		<id>1266</id>
		<title>Cannot build archetypes on Windows</title>
		<body>CrossRef: https://issues.apache.org/jira/browse/MNG-6072  ``` [INFO] --- maven-archetype-plugin:2.2:integration-test (default-integration-test) @ wildfly-camel-archetype-cdi --- [INFO] Processing Archetype IT project: test-archetype-cdi [INFO] ---------------------------------------------------------------------------- [INFO] Using following parameters for creating project from Archetype: wildfly-camel-archetype-cdi:4.2.0-SNAPSHOT [INFO] ---------------------------------------------------------------------------- [INFO] Parameter: groupId, Value: org.wildfly.camel.archetype.test [INFO] Parameter: artifactId, Value: wildfly-camel-archetype-cdi-test [INFO] Parameter: version, Value: 1.0 [INFO] Parameter: package, Value: org.wildfly.camel.archetype.test [INFO] Parameter: packageInPathFormat, Value: org/wildfly/camel/archetype/test [INFO] Parameter: version-wildfly-arquillian, Value: 1.0.2.Final [INFO] Parameter: version-jboss-arquillian, Value: 1.1.10.Final [INFO] Parameter: version-wildfly, Value: 10.0.0.Final [INFO] Parameter: groupId, Value: org.wildfly.camel.archetype.test [INFO] Parameter: version-junit, Value: 4.11 [INFO] Parameter: version, Value: 1.0 [INFO] Parameter: version-maven-war-plugin, Value: 2.5 [INFO] Parameter: version-apache-camel, Value: 2.17.2 [INFO] Parameter: package, Value: org.wildfly.camel.archetype.test [INFO] Parameter: version-wildfly-maven-plugin, Value: 1.1.0.Alpha7 [INFO] Parameter: version-maven-compiler-plugin, Value: 3.1 [INFO] Parameter: artifactId, Value: wildfly-camel-archetype-cdi-test [INFO] Parameter: version-wildfly-camel, Value: 4.2.0-SNAPSHOT [INFO] Parameter: version-maven-surefire-plugin, Value: 2.18.1 [INFO] project created from Archetype in dir: C:\Users\Administrator\git\wildfly-camel\archetypes\archetype-cdi\target\t est-classes\projects\test-archetype-cdi\project\wildfly-camel-archetype-cdi-test [INFO] Invoking post-archetype-generation goals: verify -Parq-managed -Djboss.home=C:\\Users\\Administrator\\git\\wildfl y-camel\\archetypes\\archetype-cdi\\target\\wildfly-10.0.0.Final -Dserver.config=standalone.xml  [INFO] ------------------------------------------------------------------------ [INFO] BUILD FAILURE [INFO] ------------------------------------------------------------------------ [INFO] Total time: 10.142 s [INFO] Finished at: 2016-07-29T11:30:52+02:00 [INFO] Final Memory: 65M/762M [INFO] ------------------------------------------------------------------------ [ERROR] Failed to execute goal org.apache.maven.plugins:maven-archetype-plugin:2.2:integration-test (default-integration -test) on project wildfly-camel-archetype-cdi: [ERROR] Archetype IT 'test-archetype-cdi' failed: Cannot run additions goals. [ERROR] -&gt; [Help 1] org.apache.maven.lifecycle.LifecycleExecutionException: Failed to execute goal org.apache.maven.plugins:maven-archetype- plugin:2.2:integration-test (default-integration-test) on project wildfly-camel-archetype-cdi: Archetype IT 'test-archetype-cdi' failed: Cannot run additions goals.         at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:212)         at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:153)         at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:145)         at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:116)         at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:80)         at org.apache.maven.lifecycle.internal.builder.singlethreaded.SingleThreadedBuilder.build(SingleThreadedBuilder. java:51)         at org.apache.maven.lifecycle.internal.LifecycleStarter.execute(LifecycleStarter.java:128)         at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:307)         at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:193)         at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:106)         at org.apache.maven.cli.MavenCli.execute(MavenCli.java:863)         at org.apache.maven.cli.MavenCli.doMain(MavenCli.java:288)         at org.apache.maven.cli.MavenCli.main(MavenCli.java:199)         at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)         at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)         at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)         at java.lang.reflect.Method.invoke(Method.java:498)         at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:289)         at org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:229)         at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:415)         at org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:356) Caused by: org.apache.maven.plugin.MojoExecutionException: Archetype IT 'test-archetype-cdi' failed: Cannot run additions goals.         at org.apache.maven.archetype.mojos.IntegrationTestMojo.execute(IntegrationTestMojo.java:268)         at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:134)         at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:207)         ... 20 more [ERROR] [ERROR] [ERROR] For more information about the errors and possible solutions, please read the following articles: [ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoExecutionException PS C:\Users\Administrator\git\wildfly-camel\archetypes\archetype-cdi&gt; ``` </body>
		<created>2016-07-29 07:46:54</created>
		<closed>2016-12-07 18:19:27</closed>
	</bug>
	<bug>
		<id>1264</id>
		<title>Failed instantiate InitialContextFactory com.sun.jndi.ldap.LdapCtxFactory</title>
		<body>``` Tests run: 1, Failures: 0, Errors: 1, Skipped: 0, Time elapsed: 21.444 sec &lt;&lt;&lt; FAILURE! - in org.wildfly.camel.test.ldap.LDAPIntegrationTest testLdapRouteStandard(org.wildfly.camel.test.ldap.LDAPIntegrationTest)  Time elapsed: 0.453 sec  &lt;&lt;&lt; ERROR! javax.naming.NamingException: WFLYNAM0027: Failed instantiate InitialContextFactory com.sun.jndi.ldap.LdapCtxFactory from classloader jdk.internal.loader.ClassLoaders$AppClassLoader@4b6995df     at jdk.internal.reflect.Reflection.throwIllegalAccessException(java.base@9-ea/Reflection.java:405)     at jdk.internal.reflect.Reflection.throwIllegalAccessException(java.base@9-ea/Reflection.java:396)     at jdk.internal.reflect.Reflection.ensureMemberAccess(java.base@9-ea/Reflection.java:98)     at java.lang.Class.newInstance(java.base@9-ea/Class.java:564)     at org.jboss.as.naming.InitialContext.getDefaultInitCtx(InitialContext.java:114)     at org.jboss.as.naming.InitialContext.init(InitialContext.java:99)     at javax.naming.ldap.InitialLdapContext.&lt;init&gt;(java.naming@9-ea/InitialLdapContext.java:154)     at org.jboss.as.naming.InitialContext.&lt;init&gt;(InitialContext.java:89)     at org.jboss.as.naming.InitialContextFactory.getInitialContext(InitialContextFactory.java:43)     at javax.naming.spi.NamingManager.getInitialContext(java.naming@9-ea/NamingManager.java:730)     at javax.naming.InitialContext.getDefaultInitCtx(java.naming@9-ea/InitialContext.java:305)     at javax.naming.InitialContext.init(java.naming@9-ea/InitialContext.java:236)     at javax.naming.ldap.InitialLdapContext.&lt;init&gt;(java.naming@9-ea/InitialLdapContext.java:154)     at org.wildfly.camel.test.ldap.LDAPIntegrationTest.getWiredContext(LDAPIntegrationTest.java:180)     at org.wildfly.camel.test.ldap.LDAPIntegrationTest.testLdapRouteStandard(LDAPIntegrationTest.java:123) ``` </body>
		<created>2016-07-28 13:30:57</created>
		<closed>2020-02-06 13:01:12</closed>
	</bug>
	<bug>
		<id>1263</id>
		<title>InaccessibleObjectException in RubyToJavaInvoker</title>
		<body>``` java version "9-ea" Java(TM) SE Runtime Environment (build 9-ea+128) Java HotSpot(TM) 64-Bit Server VM (build 9-ea+128, mixed mode) ```  ``` Caused by: java.lang.reflect.InaccessibleObjectException: Cannot make a non-public member of class java.lang.reflect.AccessibleObject accessible     at jdk.internal.reflect.Reflection.throwInaccessibleObjectException(java.base@9-ea/Reflection.java:414)     at java.lang.reflect.AccessibleObject.checkCanSetAccessible(java.base@9-ea/AccessibleObject.java:190)     at java.lang.reflect.Method.checkCanSetAccessible(java.base@9-ea/Method.java:191)     at java.lang.reflect.AccessibleObject.setAccessible(java.base@9-ea/AccessibleObject.java:110)     at org.jruby.java.invokers.RubyToJavaInvoker.trySetAccessible(RubyToJavaInvoker.java:184)     at org.jruby.java.invokers.MethodInvoker.&lt;init&gt;(MethodInvoker.java:14)     at org.jruby.java.invokers.StaticMethodInvoker.&lt;init&gt;(StaticMethodInvoker.java:17) ```  CrossRef: https://issues.apache.org/jira/browse/CAMEL-10188 </body>
		<created>2016-07-27 11:21:36</created>
		<closed>2020-02-06 13:01:12</closed>
	</bug>
	<bug>
		<id>1260</id>
		<title>camel-restlet throws NCDFE for URLEncodedUtils</title>
		<body>Cross Ref: https://issues.jboss.org/browse/ENTESB-5838  ``` Caused by: java.lang.NoClassDefFoundError: org/apache/http/client/utils/URLEncodedUtils     at org.apache.camel.component.restlet.DefaultRestletBinding.populateRestletRequestFromExchange(DefaultRestletBinding.java:190) [camel-restlet-2.17.0.redhat-630133.jar:2.17.0.redhat-630133]     at org.apache.camel.component.restlet.RestletProducer.process(RestletProducer.java:113) [camel-restlet-2.17.0.redhat-630133.jar:2.17.0.redhat-630133]     ... 162 more ``` </body>
		<created>2016-07-26 16:42:24</created>
		<closed>2016-07-26 18:17:36</closed>
	</bug>
	<bug>
		<id>1256</id>
		<title>Use of '${body.replaceAll()}' leads to logger warning</title>
		<body>``` 12:14:03,761 INFO  [org.apache.camel.spring.SpringCamelContext] (pool-3-thread-1) Total 1 routes, of which 1 are started. 12:14:03,762 INFO  [org.apache.camel.spring.SpringCamelContext] (pool-3-thread-1) Apache Camel 2.17.2 (CamelContext: transform5) started in 0.386 seconds 12:14:03,878 WARN  [org.wildfly.extension.camel] (pool-3-thread-1) Cannot load 'Hello' from module: deployment.camel-spring-tests:main 12:14:03,879 WARN  [org.wildfly.extension.camel] (pool-3-thread-1) Cannot load 'Hello' from module: deployment.camel-spring-tests:main 12:14:03,881 WARN  [org.wildfly.extension.camel] (pool-3-thread-1) Cannot load 'Goodby' from module: deployment.camel-spring-tests:main 12:14:03,882 WARN  [org.wildfly.extension.camel] (pool-3-thread-1) Cannot load 'Goodby' from module: deployment.camel-spring-tests:main ```  CrossRef: https://issues.jboss.org/browse/ENTESB-5867 </body>
		<created>2016-07-19 10:15:57</created>
		<closed>2016-07-19 10:57:40</closed>
	</bug>
	<bug>
		<id>1246</id>
		<title>Multiple verbs for same resource not working in camel-undertow</title>
		<body>CrossRef: https://issues.apache.org/jira/browse/CAMEL-10139 </body>
		<created>2016-07-14 10:23:02</created>
		<closed>2016-07-15 13:13:16</closed>
	</bug>
	<bug>
		<id>1243</id>
		<title>Possible race condition with undertow port binding</title>
		<body>``` 2016-07-05 11:27:55,321 ERROR [stderr] (main) Caused by: java.lang.IllegalStateException: Cannot bind to specific port: http://localhost:8080/rest/hello/%7Bname%7D 2016-07-05 11:27:55,321 ERROR [stderr] (main)   at org.jboss.gravia.utils.IllegalStateAssertion.assertTrue(IllegalStateAssertion.java:59) 2016-07-05 11:27:55,322 ERROR [stderr] (main)   at org.wildfly.extension.camel.undertow.CamelUndertowHostService$WildFlyUndertowHost.validateEndpointURI(CamelUndertowHostService.java:177) 2016-07-05 11:27:55,322 ERROR [stderr] (main)   at org.apache.camel.component.undertow.UndertowConsumer.doStart(UndertowConsumer.java:72) 2016-07-05 11:27:55,322 ERROR [stderr] (main)   at org.wildfly.extension.camel.undertow.WildFlyUndertowComponent$WildFlyUndertowUndertowConsumer.doStart(WildFlyUndertowComponent.java:91) 2016-07-05 11:27:55,322 ERROR [stderr] (main)   at org.apache.camel.support.ServiceSupport.start(ServiceSupport.java:61) 2016-07-05 11:27:55,322 ERROR [stderr] (main)   at org.apache.camel.impl.DefaultCamelContext.startService(DefaultCamelContext.java:3275) 2016-07-05 11:27:55,322 ERROR [stderr] (main)   at org.apache.camel.impl.DefaultCamelContext.doStartOrResumeRouteConsumers(DefaultCamelContext.java:3569) 2016-07-05 11:27:55,322 ERROR [stderr] (main)   at org.apache.camel.impl.DefaultCamelContext.doStartRouteConsumers(DefaultCamelContext.java:3505) 2016-07-05 11:27:55,322 ERROR [stderr] (main)   at org.apache.camel.impl.DefaultCamelContext.safelyStartRouteServices(DefaultCamelContext.java:3435) 2016-07-05 11:27:55,323 ERROR [stderr] (main)   at org.apache.camel.impl.DefaultCamelContext.doStartOrResumeRoutes(DefaultCamelContext.java:3203) 2016-07-05 11:27:55,323 ERROR [stderr] (main)   at org.apache.camel.impl.DefaultCamelContext.doStartCamel(DefaultCamelContext.java:3059) 2016-07-05 11:27:55,323 ERROR [stderr] (main)   at org.apache.camel.impl.DefaultCamelContext.access$000(DefaultCamelContext.java:175) 2016-07-05 11:27:55,323 ERROR [stderr] (main)   at org.apache.camel.impl.DefaultCamelContext$2.call(DefaultCamelContext.java:2854) 2016-07-05 11:27:55,323 ERROR [stderr] (main)   at org.apache.camel.impl.DefaultCamelContext$2.call(DefaultCamelContext.java:2850) 2016-07-05 11:27:55,323 ERROR [stderr] (main)   at org.apache.camel.impl.DefaultCamelContext.doWithDefinedClassLoader(DefaultCamelContext.java:2873) 2016-07-05 11:27:55,323 ERROR [stderr] (main)   at org.apache.camel.impl.DefaultCamelContext.doStart(DefaultCamelContext.java:2850) 2016-07-05 11:27:55,323 ERROR [stderr] (main)   at org.apache.camel.support.ServiceSupport.start(ServiceSupport.java:61) 2016-07-05 11:27:55,324 ERROR [stderr] (main)   at org.apache.camel.impl.DefaultCamelContext.start(DefaultCamelContext.java:2819) 2016-07-05 11:27:55,324 ERROR [stderr] (main)   at org.wildfly.swarm.camel.core.runtime.CamelCoreConfiguration$BootstrapCamelContextService.start(Ca ``` </body>
		<created>2016-07-05 09:28:17</created>
		<closed>2016-07-08 09:08:17</closed>
	</bug>
	<bug>
		<id>1238</id>
		<title>WildFly-Camel patch not included with the 4.1.0 release </title>
		<body>The wildfly-patch-camel-patch-4.0.1.tar.gz file is not included within the release 4.0.1  ![screenshot 2016-07-01 08 49 04](https://cloud.githubusercontent.com/assets/463790/16513926/cde5f54e-3f68-11e6-842c-8c408f109e1f.png) </body>
		<created>2016-07-01 06:50:49</created>
		<closed>2016-07-01 09:22:46</closed>
	</bug>
	<bug>
		<id>1224</id>
		<title>Spring schema file may not resolve when offline</title>
		<body>``` 19:25:43,362 WARN  [org.wildfly.extension.camel.SpringCamelContextFactory$1] (MSC service thread 1-8) Ignored XML validation warning: org.xml.sax.SAXParseException; lineNumber: 10; columnNumber: 84; schema_reference.4: Failed to read schema document 'http://www.springframework.org/schema/jee/spring-jee.xsd', because 1) could not find the document; 2) the document could not be read; 3) the root element of the document is not &lt;xsd:schema&gt;.     at org.apache.xerces.util.ErrorHandlerWrapper.createSAXParseException(ErrorHandlerWrapper.java:196)     at org.apache.xerces.util.ErrorHandlerWrapper.warning(ErrorHandlerWrapper.java:97)     at org.apache.xerces.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:386)     at org.apache.xerces.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:322)     at org.apache.xerces.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:281)     at org.apache.xerces.impl.xs.traversers.XSDHandler.reportSchemaWarning(XSDHandler.java:2529)     at org.apache.xerces.impl.xs.traversers.XSDHandler.getSchemaDocument(XSDHandler.java:1834)     at org.apache.xerces.impl.xs.traversers.XSDHandler.parseSchema(XSDHandler.java:521)     at org.apache.xerces.impl.xs.XMLSchemaLoader.loadSchema(XMLSchemaLoader.java:554)     at org.apache.xerces.impl.xs.XMLSchemaValidator.findSchemaGrammar(XMLSchemaValidator.java:2526)     at org.apache.xerces.impl.xs.XMLSchemaValidator.handleStartElement(XMLSchemaValidator.java:1813)     at org.apache.xerces.impl.xs.XMLSchemaValidator.emptyElement(XMLSchemaValidator.java:744)     at org.apache.xerces.impl.XMLNSDocumentScannerImpl.scanStartElement(XMLNSDocumentScannerImpl.java:275)     at org.apache.xerces.impl.XMLDocumentFragmentScannerImpl$FragmentContentDispatcher.dispatch(XMLDocumentFragmentScannerImpl.java:1653)     at org.apache.xerces.impl.XMLDocumentFragmentScannerImpl.scanDocument(XMLDocumentFragmentScannerImpl.java:324)     at org.apache.xerces.parsers.XML11Configuration.parse(XML11Configuration.java:845)     at org.apache.xerces.parsers.XML11Configuration.parse(XML11Configuration.java:768)     at org.apache.xerces.parsers.XMLParser.parse(XMLParser.java:108)     at org.apache.xerces.parsers.DOMParser.parse(DOMParser.java:230)     at org.apache.xerces.jaxp.DocumentBuilderImpl.parse(DocumentBuilderImpl.java:285)     at org.springframework.beans.factory.xml.DefaultDocumentLoader.loadDocument(DefaultDocumentLoader.java:76)     at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadDocument(XmlBeanDefinitionReader.java:429)     at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:391)     at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:336)     at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:304)     at org.wildfly.extension.camel.SpringCamelContextFactory.createCamelContextList(SpringCamelContextFactory.java:112) [wildfly-camel-subsystem-2.3.0.redhat-621107.jar:]     at org.wildfly.extension.camel.SpringCamelContextFactory.createCamelContextList(SpringCamelContextFactory.java:74) [wildfly-camel-subsystem-2.3.0.redhat-621107.jar:]     at org.wildfly.extension.camel.deployment.CamelContextCreateProcessor.deploy(CamelContextCreateProcessor.java:59)     at org.jboss.as.server.deployment.DeploymentUnitPhaseService.start(DeploymentUnitPhaseService.java:159)     at org.jboss.msc.service.ServiceControllerImpl$StartTask.startService(ServiceControllerImpl.java:1980)     at org.jboss.msc.service.ServiceControllerImpl$StartTask.run(ServiceControllerImpl.java:1913)     at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [rt.jar:1.8.0_91]     at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [rt.jar:1.8.0_91]     at java.lang.Thread.run(Thread.java:745) [rt.jar:1.8.0_91]  19:25:43,383 ERROR [org.jboss.msc.service.fail] (MSC service thread 1-8) MSC000001: Failed to start service jboss.deployment.unit."whatever.war".POST_MODULE: org.jboss.msc.service.StartException in service jboss.deployment.unit."whatever.war".POST_MODULE: JBAS018733: Failed to process phase POST_MODULE of deployment "whatever.war"     at org.jboss.as.server.deployment.DeploymentUnitPhaseService.start(DeploymentUnitPhaseService.java:166) [jboss-as-server-7.5.0.Final-redhat-21.jar:7.5.0.Final-redhat-21]     at org.jboss.msc.service.ServiceControllerImpl$StartTask.startService(ServiceControllerImpl.java:1980) [jboss-msc-1.1.5.Final-redhat-1.jar:1.1.5.Final-redhat-1]     at org.jboss.msc.service.ServiceControllerImpl$StartTask.run(ServiceControllerImpl.java:1913) [jboss-msc-1.1.5.Final-redhat-1.jar:1.1.5.Final-redhat-1]     at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [rt.jar:1.8.0_91]     at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [rt.jar:1.8.0_91]     at java.lang.Thread.run(Thread.java:745) [rt.jar:1.8.0_91] Caused by: java.lang.IllegalStateException: Cannot create camel context: whatever.war     at org.wildfly.extension.camel.deployment.CamelContextCreateProcessor.deploy(CamelContextCreateProcessor.java:63)     at org.jboss.as.server.deployment.DeploymentUnitPhaseService.start(DeploymentUnitPhaseService.java:159) [jboss-as-server-7.5.0.Final-redhat-21.jar:7.5.0.Final-redhat-21]     ... 5 more Caused by: org.springframework.beans.factory.xml.XmlBeanDefinitionStoreException: Line 10 in XML document from URL [vfs:/content/whatever.war/WEB-INF/classes/main-camel-context.xml] is invalid; nested exception is org.xml.sax.SAXParseException; lineNumber: 10; columnNumber: 84; cvc-complex-type.2.4.c: The matching wildcard is strict, but no declaration can be found for element 'jee:jndi-lookup'.     at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:399)     at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:336)     at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:304)     at org.wildfly.extension.camel.SpringCamelContextFactory.createCamelContextList(SpringCamelContextFactory.java:112)     at org.wildfly.extension.camel.SpringCamelContextFactory.createCamelContextList(SpringCamelContextFactory.java:74)     at org.wildfly.extension.camel.deployment.CamelContextCreateProcessor.deploy(CamelContextCreateProcessor.java:59)     ... 6 more Caused by: org.xml.sax.SAXParseException; lineNumber: 10; columnNumber: 84; cvc-complex-type.2.4.c: The matching wildcard is strict, but no declaration can be found for element 'jee:jndi-lookup'.     at org.apache.xerces.util.ErrorHandlerWrapper.createSAXParseException(ErrorHandlerWrapper.java:196)     at org.apache.xerces.util.ErrorHandlerWrapper.error(ErrorHandlerWrapper.java:132)     at org.apache.xerces.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:390)     at org.apache.xerces.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:322)     at org.apache.xerces.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:281)     at org.apache.xerces.impl.xs.XMLSchemaValidator$XSIErrorReporter.reportError(XMLSchemaValidator.java:446)     at org.apache.xerces.impl.xs.XMLSchemaValidator.reportSchemaError(XMLSchemaValidator.java:3271)     at org.apache.xerces.impl.xs.XMLSchemaValidator.handleStartElement(XMLSchemaValidator.java:1993)     at org.apache.xerces.impl.xs.XMLSchemaValidator.emptyElement(XMLSchemaValidator.java:744)     at org.apache.xerces.impl.XMLNSDocumentScannerImpl.scanStartElement(XMLNSDocumentScannerImpl.java:275)     at org.apache.xerces.impl.XMLDocumentFragmentScannerImpl$FragmentContentDispatcher.dispatch(XMLDocumentFragmentScannerImpl.java:1653)     at org.apache.xerces.impl.XMLDocumentFragmentScannerImpl.scanDocument(XMLDocumentFragmentScannerImpl.java:324)     at org.apache.xerces.parsers.XML11Configuration.parse(XML11Configuration.java:845)     at org.apache.xerces.parsers.XML11Configuration.parse(XML11Configuration.java:768)     at org.apache.xerces.parsers.XMLParser.parse(XMLParser.java:108)     at org.apache.xerces.parsers.DOMParser.parse(DOMParser.java:230)     at org.apache.xerces.jaxp.DocumentBuilderImpl.parse(DocumentBuilderImpl.java:285)     at org.springframework.beans.factory.xml.DefaultDocumentLoader.loadDocument(DefaultDocumentLoader.java:76)     at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadDocument(XmlBeanDefinitionReader.java:429)     at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:391)     ... 11 more ``` </body>
		<created>2016-06-15 09:21:33</created>
		<closed>2016-06-17 13:50:33</closed>
	</bug>
	<bug>
		<id>1220</id>
		<title>braintree module does not export com.braintreegateway </title>
		<body>Cross ref: https://issues.jboss.org/browse/ENTESB-5667 </body>
		<created>2016-06-09 16:43:02</created>
		<closed>2016-06-11 08:27:57</closed>
	</bug>
	<bug>
		<id>1213</id>
		<title>Deployment ModuleClassLoader cannot access Jackson annotations</title>
		<body>Relates to: https://issues.jboss.org/browse/ENTESB-5511 </body>
		<created>2016-05-23 10:12:27</created>
		<closed>2016-09-20 08:49:32</closed>
	</bug>
	<bug>
		<id>1201</id>
		<title>SftpIntegrationTest fails on IBM JDK</title>
		<body>Connecting to the embedded sshd test server fails with:  ``` Caused by: org.apache.camel.component.file.GenericFileOperationFailedException: Cannot connect to sftp://admin@localhost:21000     at org.apache.camel.component.file.remote.SftpOperations.connect(SftpOperations.java:146)     at org.apache.camel.component.file.remote.RemoteFileProducer.connectIfNecessary(RemoteFileProducer.java:209)     at org.apache.camel.component.file.remote.RemoteFileProducer.recoverableConnectIfNecessary(RemoteFileProducer.java:201)     at org.apache.camel.component.file.remote.RemoteFileProducer.preWriteCheck(RemoteFileProducer.java:133)     at org.apache.camel.component.file.GenericFileProducer.processExchange(GenericFileProducer.java:113)     at org.apache.camel.component.file.remote.RemoteFileProducer.process(RemoteFileProducer.java:58)     at org.apache.camel.util.AsyncProcessorConverterHelper$ProcessorToAsyncProcessorBridge.process(AsyncProcessorConverterHelper.java:61)     at org.apache.camel.processor.CamelInternalProcessor.process(CamelInternalProcessor.java:190)     at org.apache.camel.util.AsyncProcessorHelper.process(AsyncProcessorHelper.java:109)     at org.apache.camel.processor.UnitOfWorkProducer.process(UnitOfWorkProducer.java:68)     at org.apache.camel.impl.ProducerCache$2.doInProducer(ProducerCache.java:412)     at org.apache.camel.impl.ProducerCache$2.doInProducer(ProducerCache.java:380)     at org.apache.camel.impl.ProducerCache.doInProducer(ProducerCache.java:270)     at org.apache.camel.impl.ProducerCache.sendExchange(ProducerCache.java:380)     at org.apache.camel.impl.ProducerCache.send(ProducerCache.java:221)     at org.apache.camel.impl.DefaultProducerTemplate.send(DefaultProducerTemplate.java:124)     at org.apache.camel.impl.DefaultProducerTemplate.sendBodyAndHeader(DefaultProducerTemplate.java:163)     ... 144 more Caused by: com.jcraft.jsch.JSchException: verify: false     at com.jcraft.jsch.Session.connect(Session.java:330)     at org.apache.camel.component.file.remote.SftpOperations.connect(SftpOperations.java:118)     ... 160 more ``` </body>
		<created>2016-05-13 13:20:03</created>
		<closed>2016-05-16 08:49:48</closed>
	</bug>
	<bug>
		<id>1195</id>
		<title>WeatherIntegrationTest fails with 401 Unauthorized</title>
		<body>This may be a betamax issue - shows on branch [2.18.x](https://github.com/wildfly-extras/wildfly-camel/tree/2.18.x)  ``` Caused by: java.lang.IllegalStateException: Got the invalid http status value 'HTTP/1.1 401 Unauthorized' as the result of the query 'http://api.openweathermap.org/data/2.5/forecast/daily?q=Madrid,Spain&amp;lang=en&amp;cnt=7'     at org.apache.camel.component.weather.WeatherProducer.process(WeatherProducer.java:54)     at org.apache.camel.util.AsyncProcessorConverterHelper$ProcessorToAsyncProcessorBridge.process(AsyncProcessorConverterHelper.java:61)     at org.apache.camel.processor.CamelInternalProcessor.process(CamelInternalProcessor.java:190)     at org.apache.camel.util.AsyncProcessorHelper.process(AsyncProcessorHelper.java:109)     at org.apache.camel.processor.DelegateAsyncProcessor.process(DelegateAsyncProcessor.java:87)     at org.apache.camel.impl.ProducerCache$2.doInProducer(ProducerCache.java:447)     at org.apache.camel.impl.ProducerCache$2.doInProducer(ProducerCache.java:401)     at org.apache.camel.impl.ProducerCache.doInProducer(ProducerCache.java:291)     at org.apache.camel.impl.ProducerCache.sendExchange(ProducerCache.java:401)     at org.apache.camel.impl.ProducerCache.send(ProducerCache.java:241)     at org.apache.camel.impl.DefaultProducerTemplate.send(DefaultProducerTemplate.java:135)     at org.apache.camel.impl.DefaultProducerTemplate.sendBody(DefaultProducerTemplate.java:143) ``` </body>
		<created>2016-05-10 12:42:17</created>
		<closed>2016-05-16 06:45:06</closed>
	</bug>
	<bug>
		<id>1190</id>
		<title>Braintree cannot access JUL to SLF4J bridge</title>
		<body>``` 03:31:43 Caused by: java.lang.ClassNotFoundException: org.slf4j.bridge.SLF4JBridgeHandler from [Module "org.apache.camel.component.braintree:main" from local module loader @2df32bf7 (finder: local module finder @530612ba (roots: /mnt/hudson_workspace/workspace/wildfly-camel-pullreq/itests/standalone/extra/target/wildfly-10.0.0.Final/modules,/mnt/hudson_workspace/workspace/wildfly-camel-pullreq/itests/standalone/extra/target/wildfly-10.0.0.Final/modules/system/layers/fuse,/mnt/hudson_workspace/workspace/wildfly-camel-pullreq/itests/standalone/extra/target/wildfly-10.0.0.Final/modules/system/layers/base))] 03:31:43    at org.jboss.modules.ModuleClassLoader.findClass(ModuleClassLoader.java:198) 03:31:43    at org.jboss.modules.ConcurrentClassLoader.performLoadClassUnchecked(ConcurrentClassLoader.java:363) 03:31:43    at org.jboss.modules.ConcurrentClassLoader.performLoadClass(ConcurrentClassLoader.java:351) 03:31:43    at org.jboss.modules.ConcurrentClassLoader.loadClass(ConcurrentClassLoader.java:93) ``` </body>
		<created>2016-05-09 08:16:14</created>
		<closed>2016-05-09 08:29:47</closed>
	</bug>
	<bug>
		<id>1177</id>
		<title>Additional CDI camel context always created</title>
		<body>This is likely a bug. Even for deployments that are just @CamelAware there is a CamelContext created. It seems that CamelContext creation is too eager and triggers even if there are no Camel related CDI beans involved.   https://issues.jboss.org/browse/ENTESB-5220 </body>
		<created>2016-04-06 08:43:15</created>
		<closed>2016-05-09 08:29:47</closed>
	</bug>
	<bug>
		<id>1171</id>
		<title>Intermittent failure of Kafka integration tests </title>
		<body>This seems to be popping up on Jenkins with increasing frequency...  ``` Mar 31, 2016 11:28:40 AM org.jboss.arquillian.protocol.jmx.JMXMethodExecutor invoke SEVERE: Failed: org.wildfly.camel.test.kafka.KafkaProducerIntegrationTest.producedStringMessageIsReceivedByKafka java.util.ConcurrentModificationException: KafkaConsumer is not safe for multi-threaded access     at org.apache.kafka.clients.consumer.KafkaConsumer.acquire(KafkaConsumer.java:1324)     at org.apache.kafka.clients.consumer.KafkaConsumer.close(KafkaConsumer.java:1255)     at org.wildfly.camel.test.kafka.KafkaProducerIntegrationTest.producedStringMessageIsReceivedByKafka(KafkaProducerIntegrationTest.java:140)     at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)     at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)     at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)     at java.lang.reflect.Method.invoke(Method.java:483)     at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)     at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)     at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)     at org.jboss.arquillian.junit.Arquillian$8$1.invoke(Arquillian.java:370)     at org.jboss.arquillian.container.test.impl.execution.LocalTestExecuter.execute(LocalTestExecuter.java:60)     at sun.reflect.GeneratedMethodAccessor54.invoke(Unknown Source)     at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)     at java.lang.reflect.Method.invoke(Method.java:483)     at org.jboss.arquillian.core.impl.ObserverImpl.invoke(ObserverImpl.java:94)     at org.jboss.arquillian.core.impl.EventContextImpl.invokeObservers(EventContextImpl.java:99)     at org.jboss.arquillian.core.impl.EventContextImpl.proceed(EventContextImpl.java:81)     at org.jboss.arquillian.core.impl.ManagerImpl.fire(ManagerImpl.java:145)     at org.jboss.arquillian.core.impl.ManagerImpl.fire(ManagerImpl.java:116)     at org.jboss.arquillian.core.impl.EventImpl.fire(EventImpl.java:67)     at org.jboss.arquillian.container.test.impl.execution.ContainerTestExecuter.execute(ContainerTestExecuter.java:38)     at sun.reflect.GeneratedMethodAccessor53.invoke(Unknown Source)     at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)     at java.lang.reflect.Method.invoke(Method.java:483)     at org.jboss.arquillian.core.impl.ObserverImpl.invoke(ObserverImpl.java:94)     at org.jboss.arquillian.core.impl.EventContextImpl.invokeObservers(EventContextImpl.java:99)     at org.jboss.arquillian.core.impl.EventContextImpl.proceed(EventContextImpl.java:81)     at org.jboss.arquillian.test.impl.TestContextHandler.createTestContext(TestContextHandler.java:130)     at sun.reflect.GeneratedMethodAccessor12.invoke(Unknown Source)     at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)     at java.lang.reflect.Method.invoke(Method.java:483)     at org.jboss.arquillian.core.impl.ObserverImpl.invoke(ObserverImpl.java:94)     at org.jboss.arquillian.core.impl.EventContextImpl.proceed(EventContextImpl.java:88)     at org.jboss.arquillian.test.impl.TestContextHandler.createClassContext(TestContextHandler.java:92)     at sun.reflect.GeneratedMethodAccessor5.invoke(Unknown Source)     at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)     at java.lang.reflect.Method.invoke(Method.java:483)     at org.jboss.arquillian.core.impl.ObserverImpl.invoke(ObserverImpl.java:94)     at org.jboss.arquillian.core.impl.EventContextImpl.proceed(EventContextImpl.java:88)     at org.jboss.arquillian.test.impl.TestContextHandler.createSuiteContext(TestContextHandler.java:73)     at sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)     at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)     at java.lang.reflect.Method.invoke(Method.java:483)     at org.jboss.arquillian.core.impl.ObserverImpl.invoke(ObserverImpl.java:94)     at org.jboss.arquillian.core.impl.EventContextImpl.proceed(EventContextImpl.java:88)     at org.jboss.arquillian.core.impl.ManagerImpl.fire(ManagerImpl.java:145)     at org.jboss.arquillian.test.impl.EventTestRunnerAdaptor.test(EventTestRunnerAdaptor.java:136)     at org.jboss.arquillian.junit.Arquillian$8.evaluate(Arquillian.java:363)     at org.jboss.arquillian.junit.Arquillian$4.evaluate(Arquillian.java:245)     at org.jboss.arquillian.junit.Arquillian.multiExecute(Arquillian.java:422)     at org.jboss.arquillian.junit.Arquillian.access$200(Arquillian.java:54)     at org.jboss.arquillian.junit.Arquillian$5.evaluate(Arquillian.java:259)     at org.jboss.arquillian.junit.Arquillian$7$1.invoke(Arquillian.java:315)     at org.jboss.arquillian.container.test.impl.execution.BeforeLifecycleEventExecuter.on(BeforeLifecycleEventExecuter.java:35)     at sun.reflect.GeneratedMethodAccessor29.invoke(Unknown Source)     at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)     at java.lang.reflect.Method.invoke(Method.java:483)     at org.jboss.arquillian.core.impl.ObserverImpl.invoke(ObserverImpl.java:94)     at org.jboss.arquillian.core.impl.EventContextImpl.invokeObservers(EventContextImpl.java:99)     at org.jboss.arquillian.core.impl.EventContextImpl.proceed(EventContextImpl.java:81)     at org.jboss.arquillian.test.impl.TestContextHandler.createTestContext(TestContextHandler.java:130)     at sun.reflect.GeneratedMethodAccessor12.invoke(Unknown Source)     at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)     at java.lang.reflect.Method.invoke(Method.java:483)     at org.jboss.arquillian.core.impl.ObserverImpl.invoke(ObserverImpl.java:94)     at org.jboss.arquillian.core.impl.EventContextImpl.proceed(EventContextImpl.java:88)     at org.jboss.arquillian.test.impl.TestContextHandler.createClassContext(TestContextHandler.java:92)     at sun.reflect.GeneratedMethodAccessor5.invoke(Unknown Source)     at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)     at java.lang.reflect.Method.invoke(Method.java:483)     at org.jboss.arquillian.core.impl.ObserverImpl.invoke(ObserverImpl.java:94)     at org.jboss.arquillian.core.impl.EventContextImpl.proceed(EventContextImpl.java:88)     at org.jboss.arquillian.test.impl.TestContextHandler.createSuiteContext(TestContextHandler.java:73)     at sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)     at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)     at java.lang.reflect.Method.invoke(Method.java:483)     at org.jboss.arquillian.core.impl.ObserverImpl.invoke(ObserverImpl.java:94)     at org.jboss.arquillian.core.impl.EventContextImpl.proceed(EventContextImpl.java:88)     at org.jboss.arquillian.core.impl.ManagerImpl.fire(ManagerImpl.java:145)     at org.jboss.arquillian.core.impl.ManagerImpl.fire(ManagerImpl.java:116)     at org.jboss.arquillian.test.impl.EventTestRunnerAdaptor.fireCustomLifecycle(EventTestRunnerAdaptor.java:159)     at org.jboss.arquillian.junit.Arquillian$7.evaluate(Arquillian.java:311)     at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)     at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)     at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)     at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)     at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)     at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)     at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)     at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)     at org.jboss.arquillian.junit.Arquillian$2.evaluate(Arquillian.java:204)     at org.jboss.arquillian.junit.Arquillian.multiExecute(Arquillian.java:422)     at org.jboss.arquillian.junit.Arquillian.access$200(Arquillian.java:54)     at org.jboss.arquillian.junit.Arquillian$3.evaluate(Arquillian.java:218)     at org.junit.runners.ParentRunner.run(ParentRunner.java:309)     at org.jboss.arquillian.junit.Arquillian.run(Arquillian.java:166)     at org.junit.runner.JUnitCore.run(JUnitCore.java:160)     at org.junit.runner.JUnitCore.run(JUnitCore.java:138)     at org.jboss.arquillian.junit.container.JUnitTestRunner.execute(JUnitTestRunner.java:66)     at org.jboss.arquillian.protocol.jmx.JMXTestRunner.doRunTestMethod(JMXTestRunner.java:180)     at org.jboss.as.arquillian.service.ArquillianService$ExtendedJMXTestRunner.doRunTestMethod(ArquillianService.java:247)     at org.jboss.arquillian.protocol.jmx.JMXTestRunner.runTestMethodInternal(JMXTestRunner.java:162)     at org.jboss.arquillian.protocol.jmx.JMXTestRunner.runTestMethod(JMXTestRunner.java:141)     at org.jboss.as.arquillian.service.ArquillianService$ExtendedJMXTestRunner.runTestMethod(ArquillianService.java:223)     at sun.reflect.GeneratedMethodAccessor45.invoke(Unknown Source)     at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)     at java.lang.reflect.Method.invoke(Method.java:483)     at sun.reflect.misc.Trampoline.invoke(MethodUtil.java:71)     at sun.reflect.GeneratedMethodAccessor27.invoke(Unknown Source)     at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)     at java.lang.reflect.Method.invoke(Method.java:483)     at sun.reflect.misc.MethodUtil.invoke(MethodUtil.java:275)     at com.sun.jmx.mbeanserver.StandardMBeanIntrospector.invokeM2(StandardMBeanIntrospector.java:112)     at com.sun.jmx.mbeanserver.StandardMBeanIntrospector.invokeM2(StandardMBeanIntrospector.java:46)     at com.sun.jmx.mbeanserver.MBeanIntrospector.invokeM(MBeanIntrospector.java:237)     at com.sun.jmx.mbeanserver.PerInterface.invoke(PerInterface.java:138)     at com.sun.jmx.mbeanserver.MBeanSupport.invoke(MBeanSupport.java:252)     at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.invoke(DefaultMBeanServerInterceptor.java:819)     at com.sun.jmx.mbeanserver.JmxMBeanServer.invoke(JmxMBeanServer.java:801)     at org.jboss.as.jmx.PluggableMBeanServerImpl$TcclMBeanServer.invoke(PluggableMBeanServerImpl.java:1503)     at org.jboss.as.jmx.PluggableMBeanServerImpl.invoke(PluggableMBeanServerImpl.java:724)     at org.jboss.as.jmx.BlockingNotificationMBeanServer.invoke(BlockingNotificationMBeanServer.java:168)     at org.jboss.remotingjmx.protocol.v2.ServerProxy$InvokeHandler.handle(ServerProxy.java:950)     at org.jboss.remotingjmx.protocol.v2.ServerCommon$MessageReciever$1$1.run(ServerCommon.java:153)     at org.jboss.as.jmx.ServerInterceptorFactory$Interceptor$1.run(ServerInterceptorFactory.java:75)     at org.jboss.as.jmx.ServerInterceptorFactory$Interceptor$1.run(ServerInterceptorFactory.java:70)     at java.security.AccessController.doPrivileged(Native Method)     at javax.security.auth.Subject.doAs(Subject.java:422)     at org.jboss.as.controller.AccessAuditContext.doAs(AccessAuditContext.java:92)     at org.jboss.as.jmx.ServerInterceptorFactory$Interceptor.handleEvent(ServerInterceptorFactory.java:70)     at org.jboss.remotingjmx.protocol.v2.ServerCommon$MessageReciever$1.run(ServerCommon.java:149)     at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)     at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)     at java.lang.Thread.run(Thread.java:745) ``` </body>
		<created>2016-03-31 15:41:26</created>
		<closed>2016-04-01 07:04:27</closed>
	</bug>
	<bug>
		<id>1167</id>
		<title>Camel modules missing org.slf4j dependency</title>
		<body>org.apache.camel.core.xml org.apache.camel.component.lucene </body>
		<created>2016-03-30 06:24:21</created>
		<closed>2016-03-30 15:40:58</closed>
	</bug>
	<bug>
		<id>1160</id>
		<title>Required jackson dataformat modules should not be skipped</title>
		<body>Flagging modules as 'skipped' whilst later choosing to refer to and include the skipped artifacts is invalid IMO.   **Skipped modules:**  ``` xml &lt;module name="com.fasterxml.jackson.dataformat.cbor" skip="true"&gt;     &lt;include artifact=":jackson-dataformat-cbor" /&gt; &lt;/module&gt;  &lt;module name="com.fasterxml.jackson.dataformat.smile" skip="true"&gt;     &lt;include artifact=":jackson-dataformat-smile" /&gt; &lt;/module&gt; ```  **Included modules:**  ``` xml &lt;module name="com.fasterxml.jackson.dataformat.cbor" inherit-slot="false" slot="2.7"&gt;     &lt;properties&gt;         &lt;property name="jboss.api" value="private"/&gt;     &lt;/properties&gt;     &lt;include artifact=":jackson-dataformat-cbor" /&gt; &lt;/module&gt;  &lt;module name="com.fasterxml.jackson.dataformat.smile" inherit-slot="false" slot="2.7"&gt;     &lt;properties&gt;         &lt;property name="jboss.api" value="private"/&gt;     &lt;/properties&gt;     &lt;include artifact=":jackson-dataformat-smile" /&gt;     &lt;dependencies&gt;         &lt;module name="com.fasterxml.jackson.core.jackson-core"  slot="2.7"/&gt;     &lt;/dependencies&gt; &lt;/module&gt; ```  Possibly some further work on the smartics plugin could be done to avoid this in future.  </body>
		<created>2016-03-29 08:35:04</created>
		<closed>2016-03-29 08:54:40</closed>
	</bug>
	<bug>
		<id>1147</id>
		<title>SpringCamelContextFactory should not start camel contexts</title>
		<body></body>
		<created>2016-03-18 10:37:55</created>
		<closed>2016-03-18 10:50:16</closed>
	</bug>
	<bug>
		<id>1137</id>
		<title>Infinispan component incompatible with wildfly</title>
		<body>camel-2.17 comes with infinispan-8.2 wildfly-10.0 comes with  infinispan-8.1  CrossRef: https://issues.jboss.org/browse/WFLY-6363 </body>
		<created>2016-03-14 08:38:31</created>
		<closed>2016-03-15 12:33:07</closed>
	</bug>
	<bug>
		<id>1133</id>
		<title>Camel references incompatible version of lucene</title>
		<body>camel-2.16.2 comes with lucene-4.10, wildfly comes with lucene-5.3 </body>
		<created>2016-03-11 09:05:55</created>
		<closed>2016-03-11 09:19:16</closed>
	</bug>
	<bug>
		<id>1128</id>
		<title>DuplicateServiceException thrown from Spring Camel Context startup</title>
		<body>A number of the Spring context tests throw warnings on startup like the following.  ``` [0m[33m04:18:38,216 WARN  [org.apache.camel.util.EventHelper] (MSC service thread 1-3) Error notifying event Starting CamelContext: contextScan. This exception will be ignored. : org.jboss.msc.service.DuplicateServiceException: Service jboss.naming.context.java.jboss.camel.context.contextScan is already registered     at org.jboss.msc.service.ServiceRegistrationImpl.setInstance(ServiceRegistrationImpl.java:158)     at org.jboss.msc.service.ServiceControllerImpl.startInstallation(ServiceControllerImpl.java:235)     at org.jboss.msc.service.ServiceContainerImpl.install(ServiceContainerImpl.java:768)     at org.jboss.msc.service.ServiceTargetImpl.install(ServiceTargetImpl.java:223)     at org.jboss.msc.service.ServiceControllerImpl$ChildServiceTarget.install(ServiceControllerImpl.java:2401)     at org.jboss.msc.service.ServiceBuilderImpl.install(ServiceBuilderImpl.java:317)     at org.wildfly.extension.camel.ee.CamelContextBindingService.addService(CamelContextBindingService.java:65)     at org.wildfly.extension.camel.ee.EESubsystemExtension.addCamelContext(EESubsystemExtension.java:65)     at org.wildfly.extension.camel.service.CamelContextRegistryService$CamelContextRegistryImpl$2.accept(CamelContextRegistryService.java:237)     at org.wildfly.extension.camel.service.CamelContextRegistryService$CamelContextRegistryImpl$2.accept(CamelContextRegistryService.java:234)     at java.util.Iterator.forEachRemaining(Iterator.java:116)     at org.wildfly.extension.camel.parser.CamelSubsystemAdd.processExtensions(CamelSubsystemAdd.java:128)     at org.wildfly.extension.camel.service.CamelContextRegistryService$CamelContextRegistryImpl.addCamelContext(CamelContextRegistryService.java:234)     at org.wildfly.extension.camel.service.CamelContextRegistryService$CamelContextRegistryImpl.access$000(CamelContextRegistryService.java:146)     at org.wildfly.extension.camel.service.CamelContextRegistryService$CamelContextRegistryImpl$1.notify(CamelContextRegistryService.java:211)     at org.apache.camel.util.EventHelper.doNotifyEvent(EventHelper.java:805)     at org.apache.camel.util.EventHelper.notifyCamelContextStarting(EventHelper.java:70)     at org.apache.camel.impl.DefaultCamelContext.doStartCamel(DefaultCamelContext.java:2939)     at org.apache.camel.impl.DefaultCamelContext.access$000(DefaultCamelContext.java:175)     at org.apache.camel.impl.DefaultCamelContext$2.call(DefaultCamelContext.java:2812)     at org.apache.camel.impl.DefaultCamelContext$2.call(DefaultCamelContext.java:2808)     at org.apache.camel.impl.DefaultCamelContext.doWithDefinedClassLoader(DefaultCamelContext.java:2831)     at org.apache.camel.impl.DefaultCamelContext.doStart(DefaultCamelContext.java:2808)     at org.apache.camel.support.ServiceSupport.start(ServiceSupport.java:61)     at org.apache.camel.impl.DefaultCamelContext.start(DefaultCamelContext.java:2777)     at org.apache.camel.spring.SpringCamelContext.maybeStart(SpringCamelContext.java:270)     at org.apache.camel.spring.SpringCamelContext.onApplicationEvent(SpringCamelContext.java:136)     at org.apache.camel.spring.CamelContextFactoryBean.onApplicationEvent(CamelContextFactoryBean.java:340)     at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:151)     at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:128)     at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:331)     at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:778)     at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:483)     at org.wildfly.extension.camel.SpringCamelContextFactory.createCamelContextList(SpringCamelContextFactory.java:113)     at org.wildfly.extension.camel.SpringCamelContextFactory.createCamelContextList(SpringCamelContextFactory.java:74)     at org.wildfly.extension.camel.deployment.CamelContextCreateProcessor.deploy(CamelContextCreateProcessor.java:58)     at org.jboss.as.server.deployment.DeploymentUnitPhaseService.start(DeploymentUnitPhaseService.java:147)     at org.jboss.msc.service.ServiceControllerImpl$StartTask.startService(ServiceControllerImpl.java:1948)     at org.jboss.msc.service.ServiceControllerImpl$StartTask.run(ServiceControllerImpl.java:1881)     at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)     at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)     at java.lang.Thread.run(Thread.java:745) ``` </body>
		<created>2016-03-09 12:02:30</created>
		<closed>2016-03-18 09:33:13</closed>
	</bug>
	<bug>
		<id>1121</id>
		<title>CamelContextDescriptorsProcessor deployment validity check is incorrect</title>
		<body>Not sure what I was thinking at the time I wrote [this](https://github.com/wildfly-extras/wildfly-camel/blob/master/subsystem/core/src/main/java/org/wildfly/extension/camel/deployment/CamelContextDescriptorsProcessor.java#L52). But the logic should be...  ``` Return if ---- Camel is disabled in jboss-all.xml OR ---- The deployment is not valid for camel OR ---- The deployment has a parent ``` </body>
		<created>2016-03-04 15:06:23</created>
		<closed>2016-03-04 15:50:56</closed>
	</bug>
	<bug>
		<id>1114</id>
		<title>Cannot resolve cxf://bean:cxfProducer due to CNFE</title>
		<body>``` org.wildfly.camel.test.camel.cxf.CXFWebServiceConsumerTest  Time elapsed: 1.962 sec  &lt;&lt;&lt; ERROR! org.apache.camel.RuntimeCamelException: org.apache.camel.FailedToCreateRouteException: Failed to create route producerRoute at: &gt;&gt;&gt; To[cxf:bean:cxfProducer] &lt;&lt;&lt; in route: Route(producerRoute)[[From[direct:start]] -&gt; [To[cxf:bean:cx... because of Failed to resolve endpoint: cxf://bean:cxfProducer due to: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'cxfProducer': Instantiation of bean failed; nested exception is java.lang.NoClassDefFoundError: org/apache/cxf/frontend/ServerFactoryBean     at java.net.URLClassLoader.findClass(URLClassLoader.java:381)     at java.lang.ClassLoader.loadClass(ClassLoader.java:424)     at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:331)     at java.lang.ClassLoader.loadClass(ClassLoader.java:357)     at java.lang.Class.getDeclaredConstructors0(Native Method)     at java.lang.Class.privateGetDeclaredConstructors(Class.java:2671)     at java.lang.Class.getConstructor0(Class.java:3075)     at java.lang.Class.getDeclaredConstructor(Class.java:2178)     at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:80)     at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateBean(AbstractAutowireCapableBeanFactory.java:1098)     at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1050)     at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:510)     at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)     at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:325)     at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)     at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1060)     at org.apache.camel.spring.spi.ApplicationContextRegistry.lookupByNameAndType(ApplicationContextRegistry.java:47)     at org.apache.camel.impl.PropertyPlaceholderDelegateRegistry.lookupByNameAndType(PropertyPlaceholderDelegateRegistry.java:63)     at org.apache.camel.util.CamelContextHelper.lookup(CamelContextHelper.java:137)     at org.apache.camel.util.CamelContextHelper.mandatoryLookup(CamelContextHelper.java:157)     at org.apache.camel.component.cxf.CxfComponent.createCxfSpringEndpoint(CxfComponent.java:120)     at org.apache.camel.component.cxf.CxfComponent.createEndpoint(CxfComponent.java:89)     at org.apache.camel.impl.DefaultComponent.createEndpoint(DefaultComponent.java:114)     at org.apache.camel.impl.DefaultCamelContext.getEndpoint(DefaultCamelContext.java:568) ``` </body>
		<created>2016-03-02 12:26:08</created>
		<closed>2016-03-17 13:23:07</closed>
	</bug>
	<bug>
		<id>1108</id>
		<title>Expose HttpOperationFailedException from org.apache.camel.component.http4</title>
		<body>Relates to: https://issues.jboss.org/browse/ENTESB-5006 </body>
		<created>2016-02-29 19:46:31</created>
		<closed>2016-02-29 20:02:10</closed>
	</bug>
	<bug>
		<id>1107</id>
		<title>Subsystem handling of Camel CDI context creation events is flawed</title>
		<body>There are some issues with how the subsystem deals with CDI camel contexts.  The [CamelContextRegistryImpl](https://github.com/wildfly-extras/wildfly-camel/blob/3b03f8871242281c0331c1cc483fb60ee1c90d84/subsystem/core/src/main/java/org/wildfly/extension/camel/service/CamelContextRegistryService.java#L146) does a number of bootstrapping tasks when a camel context is created. Unfortunately, whenever `@Inject` is used to inject a camel context into a bean, a proxy is created which ends up passing through the `contextCreated` method. In effect, we end up needlessly bootstraping a context that will never be started.   The unfortunate side effect to this is that these contexts are not 'unmanaged' and never have their associated `ContextCreateHandlers` cleaned up.  The other nasty side effect is that CDI proxies invoke the default constructor on their proxied bean. This usually results in [this code](https://github.com/apache/camel/blob/master/camel-core/src/main/java/org/apache/camel/impl/DefaultCamelContext.java#L300) being executed. Since the context stop() method is never invoked on the CDI proxy, [this static map](https://github.com/apache/camel/blob/master/camel-core/src/main/java/org/apache/camel/spi/Container.java#L51) is filled with camel contexts that cannot be removed throughout the lifecycle of the container.  The result of these issues are potential classloader leaks and the inevitable `OutOfMemoryError` that follows.  </body>
		<created>2016-02-29 14:27:22</created>
		<closed>2016-03-29 09:32:50</closed>
	</bug>
	<bug>
		<id>1102</id>
		<title>No SLF4J logging with camel core fraction</title>
		<body>``` INFO: WFLYSRV0027: Starting deployment of "6955fdab-9e1f-48c0-92ac-fdc0c92d9199.jar" (runtime-name: "6955fdab-9e1f-48c0-92ac-fdc0c92d9199.jar") Feb 25, 2016 2:13:40 PM org.wildfly.swarm.arquillian.daemon.server.Server start INFO: Arquillian Daemon server started on localhost:12345 Feb 25, 2016 2:13:40 PM org.jboss.as.server.deployment.DeploymentHandlerUtil$1$2 handleResult INFO: WFLYSRV0010: Deployed "6955fdab-9e1f-48c0-92ac-fdc0c92d9199.jar" (runtime-name : "6955fdab-9e1f-48c0-92ac-fdc0c92d9199.jar") SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder". SLF4J: Defaulting to no-operation (NOP) logger implementation SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details. Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 11.984 sec - in org.wildfly.camel.swarm.core.SimpleTransformTest ``` </body>
		<created>2016-02-25 13:15:12</created>
		<closed>2016-02-25 14:01:27</closed>
	</bug>
	<bug>
		<id>1100</id>
		<title>PackageScanResolverProcessor may not unregister associated ContextCreateHandler</title>
		<body>I think we have a flaw in the way in which a `ContextCreateHandler` associated with a `PackageScanResolverProcessor` is [unregistered](https://github.com/wildfly-extras/wildfly-camel/blob/master/subsystem/core/src/main/java/org/wildfly/extension/camel/deployment/PackageScanResolverProcessor.java#L60-L64).  DUPs are singletons. Therefore, any instance variables set during deployment processing are liable to be overwritten each time something is deployed to the container. For the `PackageScanResolverProcessor`, this is problematic because the unregistering of the `ContextCreateHandler` depends on the correct instance being available.   This wont be the case in the following scenario: 1. Deploy Application A 2. Deploy Application B 3. Undeploy Application A 4. Undeploy Application B   A simple test case proves this (E.g Application A tries to unregister the wrong handler):  ``` (MSC service thread 1-13) APPLICATION_A.jar :: deploy() - Created ContextCreateHandler: org.wildfly.extension.camel.handler.PackageScanClassResolverAssociationHandler@20277dd6 (MSC service thread 1-5)  APPLICATION_B.jar :: deploy() - Created ContextCreateHandler: org.wildfly.extension.camel.handler.PackageScanClassResolverAssociationHandler@5c06ddae (MSC service thread 1-11) APPLICATION_A.jar :: undeploy() - Trying to unregister ContextCreateHandler: org.wildfly.extension.camel.handler.PackageScanClassResolverAssociationHandler@5c06ddae (MSC service thread 1-10) APPLICATION_B.jar :: undeploy() - Trying to unregister ContextCreateHandler: org.wildfly.extension.camel.handler.PackageScanClassResolverAssociationHandler@5c06ddae ``` </body>
		<created>2016-02-25 10:41:30</created>
		<closed>2016-02-25 13:47:14</closed>
	</bug>
	<bug>
		<id>1088</id>
		<title>Swarm integration test causes stability issues</title>
		<body>``` org.apache.camel.TypeConversionException: Error during type conversion from type: java.lang.String to the required type: byte[] with value [Body is file based: GenericFile[/tmp/org.wildfly.camel.swarm.core.subA.RouteBuilderA/fileA]] due java.io.FileNotFoundException: /tmp/org.wildfly.camel.swarm.core.subA.RouteBuilderA/fileA (No such file or directory)     at java.io.FileInputStream.open(Native Method)     at java.io.FileInputStream.&lt;init&gt;(FileInputStream.java:138)     at org.apache.camel.converter.IOConverter.toInputStream(IOConverter.java:78)     at org.apache.camel.converter.IOConverter.toByteArray(IOConverter.java:266)     at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)     at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)     at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)     at java.lang.reflect.Method.invoke(Method.java:483)     at org.apache.camel.util.ObjectHelper.invokeMethod(ObjectHelper.java:1243)     at org.apache.camel.impl.converter.StaticMethodTypeConverter.convertTo(StaticMethodTypeConverter.java:59)     at org.apache.camel.component.file.GenericFileConverter.convertTo(GenericFileConverter.java:97)     at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)     at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)     at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)     at java.lang.reflect.Method.invoke(Method.java:483)     at org.apache.camel.util.ObjectHelper.invokeMethod(ObjectHelper.java:1243)     at org.apache.camel.impl.converter.StaticMethodFallbackTypeConverter.convertTo(StaticMethodFallbackTypeConverter.java:62)     at org.apache.camel.impl.converter.BaseTypeConverterRegistry.doConvertTo(BaseTypeConverterRegistry.java:333)     at org.apache.camel.impl.converter.BaseTypeConverterRegistry.mandatoryConvertTo(BaseTypeConverterRegistry.java:168)     at org.apache.camel.component.file.FileBinding.loadContent(FileBinding.java:57)     at org.apache.camel.component.file.GenericFileConverter.genericFileToString(GenericFileConverter.java:140)     at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)     at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)     at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)     at java.lang.reflect.Method.invoke(Method.java:483)     at org.apache.camel.util.ObjectHelper.invokeMethod(ObjectHelper.java:1243)     at org.apache.camel.impl.converter.StaticMethodTypeConverter.convertTo(StaticMethodTypeConverter.java:59)     at org.apache.camel.impl.converter.BaseTypeConverterRegistry.doConvertTo(BaseTypeConverterRegistry.java:293)     at org.apache.camel.impl.converter.BaseTypeConverterRegistry.convertTo(BaseTypeConverterRegistry.java:120)     at org.apache.camel.impl.DefaultConsumerTemplate.receiveBody(DefaultConsumerTemplate.java:158)     at org.wildfly.camel.swarm.core.SimpleTransformTest.testSimpleTransform(SimpleTransformTest.java:71) ``` </body>
		<created>2016-02-23 07:11:34</created>
		<closed>2016-02-23 10:45:41</closed>
	</bug>
	<bug>
		<id>1087</id>
		<title>wildfly-camel DeploymentUnitProcessors should not impact on non-camel deployments</title>
		<body>At present, not all of the wildfly-camel DUPs have checks for whether camel is enabled / disabled before proceeding to apply their associated deploy() logic.  We should only be wiring up dependencies or adding ContextCreateHandlers where we really need to. </body>
		<created>2016-02-22 14:13:55</created>
		<closed>2016-02-24 09:49:58</closed>
	</bug>
	<bug>
		<id>1039</id>
		<title>Dozer cannot find org.apache.el.ExpressionFactory</title>
		<body>``` javax.el.ELException: Provider com.sun.el.ExpressionFactoryImpl not found     at javax.el.FactoryFinder.newInstance(FactoryFinder.java:102)     at javax.el.FactoryFinder.find(FactoryFinder.java:186)     at javax.el.ExpressionFactory.newInstance(ExpressionFactory.java:197)     at javax.el.ExpressionFactory.newInstance(ExpressionFactory.java:168)     at org.wildfly.camel.test.dozer.ELIntegrationTest.testStatelessSessionBean(ELIntegrationTest.java:48) ``` </body>
		<created>2016-02-02 13:30:33</created>
		<closed>2016-03-02 08:52:55</closed>
	</bug>
	<bug>
		<id>1038</id>
		<title>CamelUndertowHostService cannot handle IPV6 addresses</title>
		<body>I think we agreed that [this logic](https://github.com/wildfly-extras/wildfly-camel/blob/916dc52e832a69e20c5d0e0316cba2886dca3a35/subsystem/src/main/java/org/wildfly/extension/camel/service/CamelUndertowHostService.java#L99-L131) would probably be revised at some point.  I get a `MalformedURLException` when IPV6 is enabled. This might be quite simple to fix. The spec suggests that the IPV6 address should be enclosed in '[' and ']'.  https://docs.oracle.com/javase/7/docs/api/java/net/URL.html  http://www.ietf.org/rfc/rfc2732.txt </body>
		<created>2016-02-01 16:15:59</created>
		<closed>2016-03-09 11:59:21</closed>
	</bug>
	<bug>
		<id>1035</id>
		<title>Dozer classloading may fail with spring based context</title>
		<body>``` Caused by: org.dozer.MappingException: java.lang.ClassNotFoundException: generated.ABCOrder from [Module "net.sf.dozer:main" from local module loader @64b8f8f4 (finder: local module finder @2db0f6b2 (roots: /Users/tdiesler/git/wildfly-camel/itests/standalone/smoke/target/wildfly-9.0.2.Final/modules,/Users/tdiesler/git/wildfly-camel/itests/standalone/smoke/target/wildfly-9.0.2.Final/modules/system/layers/fuse,/Users/tdiesler/git/wildfly-camel/itests/standalone/smoke/target/wildfly-9.0.2.Final/modules/system/layers/base))]     at org.dozer.util.MappingUtils.throwMappingException(MappingUtils.java:82)     at org.dozer.util.DefaultClassLoader.loadClass(DefaultClassLoader.java:43)     at org.dozer.util.MappingUtils.loadClass(MappingUtils.java:224)     at org.dozer.loader.DozerBuilder$MappingBuilder.classA(DozerBuilder.java:129)     at org.dozer.loader.xml.XMLParser.parseMapping(XMLParser.java:190)     at org.dozer.loader.xml.XMLParser.read(XMLParser.java:137)     at org.dozer.loader.xml.XMLParser.read(XMLParser.java:43)     at org.dozer.loader.xml.MappingStreamReader.read(MappingStreamReader.java:51)     at org.dozer.DozerBeanMapper.addMapping(DozerBeanMapper.java:247)     at org.apache.camel.component.dozer.DozerEndpoint.createDozerBeanMapper(DozerEndpoint.java:130)     at org.apache.camel.component.dozer.DozerEndpoint.doStart(DozerEndpoint.java:111)     at org.apache.camel.support.ServiceSupport.start(ServiceSupport.java:61)     at org.apache.camel.impl.DefaultCamelContext.startService(DefaultCamelContext.java:3232)     at org.apache.camel.impl.DefaultCamelContext.doAddService(DefaultCamelContext.java:1212)     at org.apache.camel.impl.DefaultCamelContext.addService(DefaultCamelContext.java:1173)     at org.apache.camel.impl.DefaultCamelContext.addService(DefaultCamelContext.java:1169)     at org.apache.camel.impl.DefaultCamelContext.getEndpoint(DefaultCamelContext.java:586)     ... 47 more Caused by: java.lang.ClassNotFoundException: generated.ABCOrder from [Module "net.sf.dozer:main" from local module loader @64b8f8f4 (finder: local module finder @2db0f6b2 (roots: /Users/tdiesler/git/wildfly-camel/itests/standalone/smoke/target/wildfly-9.0.2.Final/modules,/Users/tdiesler/git/wildfly-camel/itests/standalone/smoke/target/wildfly-9.0.2.Final/modules/system/layers/fuse,/Users/tdiesler/git/wildfly-camel/itests/standalone/smoke/target/wildfly-9.0.2.Final/modules/system/layers/base))]     at org.jboss.modules.ModuleClassLoader.findClass(ModuleClassLoader.java:205)     at org.jboss.modules.ConcurrentClassLoader.performLoadClassUnchecked(ConcurrentClassLoader.java:455)     at org.jboss.modules.ConcurrentClassLoader.performLoadClassChecked(ConcurrentClassLoader.java:404)     at org.jboss.modules.ConcurrentClassLoader.performLoadClass(ConcurrentClassLoader.java:385)     at org.jboss.modules.ConcurrentClassLoader.loadClass(ConcurrentClassLoader.java:130)     at java.lang.Class.forName0(Native Method)     at java.lang.Class.forName(Class.java:344)     at org.apache.commons.lang3.ClassUtils.getClass(ClassUtils.java:909)     at org.apache.commons.lang3.ClassUtils.getClass(ClassUtils.java:943)     at org.dozer.util.DefaultClassLoader.loadClass(DefaultClassLoader.java:41)     ... 62 more ```  CrossRef: https://issues.jboss.org/browse/ENTESB-4618 </body>
		<created>2016-01-27 12:20:41</created>
		<closed>2016-03-11 07:16:33</closed>
	</bug>
	<bug>
		<id>1031</id>
		<title>SpringJdbcNamespaceTest expected message count assertion can fail sporadically</title>
		<body>I think this unit test is passing through good fortune...  The  test [asserts that one message was received](https://github.com/wildfly-extras/wildfly-camel/blob/3c55b6f75d459f53aa4a48e2579c483e19d678f6/itests/standalone/basic/src/main/java/org/wildfly/camel/test/spring/SpringJdbcNamespaceTest.java) at the mock:result endpoint.  However, the SQL endpoint polling consumer may have executed multiple times, meaning that the assertion will fail.  </body>
		<created>2016-01-24 18:42:53</created>
		<closed>2016-01-25 08:15:54</closed>
	</bug>
	<bug>
		<id>1028</id>
		<title>CDI fails with multiple named route builders</title>
		<body>``` 15:19:04,139 ERROR [org.jboss.msc.service.fail] (MSC service thread 1-1) MSC000001: Failed to start service jboss.deployment.unit."camel-cdi-tests.jar".WeldStartService: org.jboss.msc.service.StartException in service jboss.deployment.unit."camel-cdi-tests.jar".WeldStartService: Failed to start service     at org.jboss.msc.service.ServiceControllerImpl$StartTask.run(ServiceControllerImpl.java:1904)     at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)     at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)     at java.lang.Thread.run(Thread.java:745) Caused by: org.jboss.weld.exceptions.DeploymentException: WELD-001408: Unsatisfied dependencies for type RouteBuilderD with qualifiers @Default   at injection point [BackedAnnotatedField] @Inject org.wildfly.camel.test.cdi.CDIIntegrationTest.routesD   at org.wildfly.camel.test.cdi.CDIIntegrationTest.routesD(CDIIntegrationTest.java:0) WELD-001475: The following beans match by type, but none have matching qualifiers:   - Managed Bean [class org.wildfly.camel.test.cdi.subA.RouteBuilderD] with qualifiers [@ContextName @Any] ``` </body>
		<created>2016-01-19 14:23:59</created>
		<closed>2016-03-11 07:16:05</closed>
	</bug>
	<bug>
		<id>1026</id>
		<title>CDI Integration fails with latest camel-2.17</title>
		<body>With   ```     @Inject     @ContextName("cdi-context")     private CamelContext camelContext; ```  I see   ``` [INFO] Caused by: java.lang.Exception: {"WFLYCTL0080: Failed services" =&gt; {"jboss.deployment.unit.\"camel-tests.war\".WeldStartService" =&gt; "org.jboss.msc.service.StartException in service jboss.deployment.unit.\"camel-tests.war\".WeldStartService: Failed to start service [INFO]     Caused by: org.jboss.weld.exceptions.DeploymentException: WELD-001408: Unsatisfied dependencies for type CamelContext with qualifiers @ContextName [INFO]   at injection point [BackedAnnotatedField] @Inject @ContextName private org.wildfly.camel.archetype.test.MyServlet.camelContext [INFO]   at org.wildfly.camel.archetype.test.MyServlet.camelContext(MyServlet.java:0) [INFO] WELD-001475: The following beans match by type, but none have matching qualifiers: [INFO]   - Default CDI Camel Context [INFO] "}} [INFO]  at org.jboss.as.controller.client.helpers.standalone.impl.ServerDeploymentPlanResultFuture.getActionResult(ServerDeploymentPlanResultFuture.java:134) [INFO]  at org.jboss.as.controller.client.helpers.standalone.impl.ServerDeploymentPlanResultFuture.getResultFromNode(ServerDeploymentPlanResultFuture.java:123) [INFO]  at org.jboss.as.controller.client.helpers.standalone.impl.ServerDeploymentPlanResultFuture.get(ServerDeploymentPlanResultFuture.java:85) [INFO]  at org.jboss.as.controller.client.helpers.standalone.impl.ServerDeploymentPlanResultFuture.get(ServerDeploymentPlanResultFuture.java:42) [INFO]  at org.jboss.as.controller.client.helpers.standalone.ServerDeploymentHelper.deploy(ServerDeploymentHelper.java:55) [INFO]  at org.jboss.as.arquillian.container.ArchiveDeployer.deployInternal(ArchiveDeployer.java:77) ``` </body>
		<created>2016-01-18 14:01:09</created>
		<closed>2016-01-19 14:34:40</closed>
	</bug>
	<bug>
		<id>1025</id>
		<title>Hawtio not connected</title>
		<body>When I start WildFly I don't see anything in Hawtio:  ![clipboard01](https://cloud.githubusercontent.com/assets/593352/12387438/ce6728e4-bdcc-11e5-8992-b9e191de2d03.png) </body>
		<created>2016-01-18 09:18:58</created>
		<closed>2016-05-20 12:41:23</closed>
	</bug>
	<bug>
		<id>1015</id>
		<title>EmbeddedZookeeperServer fails to delete temporary directories on Windows</title>
		<body>This causes any tests using this class to fail.  ``` java.nio.file.FileSystemException: C:\tmp\zktemp3495834950\log\version-2\log.1: The process cannot access the file because it is being used by another process.      at sun.nio.fs.WindowsException.translateToIOException(WindowsException.java:86)     at sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:97)     at sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:102)     at sun.nio.fs.WindowsFileSystemProvider.implDelete(WindowsFileSystemProvider.java:269)     at sun.nio.fs.AbstractFileSystemProvider.delete(AbstractFileSystemProvider.java:103)     at java.nio.file.Files.delete(Files.java:1126)     at org.wildfly.camel.test.common.zookeeper.EmbeddedZookeeperServer$2.visitFile(EmbeddedZookeeperServer.java:168)     at org.wildfly.camel.test.common.zookeeper.EmbeddedZookeeperServer$2.visitFile(EmbeddedZookeeperServer.java:165)     at java.nio.file.Files.walkFileTree(Files.java:2670)     at java.nio.file.Files.walkFileTree(Files.java:2742)     at org.wildfly.camel.test.common.zookeeper.EmbeddedZookeeperServer.cleanZookeeperDir(EmbeddedZookeeperServer.java:165)     at org.wildfly.camel.test.common.zookeeper.EmbeddedZookeeperServer.shutdown(EmbeddedZookeeperServer.java:102)     at org.wildfly.camel.test.zookeeper.ZookeeperConsumerIntegrationTest.after(ZookeeperConsumerIntegrationTest.java:65) ``` </body>
		<created>2015-12-15 16:22:11</created>
		<closed>2015-12-16 08:30:44</closed>
	</bug>
	<bug>
		<id>1013</id>
		<title>GroovyShellFactoryTest does not exercise CustomGroovyShellFactory class</title>
		<body>The test works against an [inlined  Groovy script](https://github.com/wildfly-extras/wildfly-camel/blob/master/itests/standalone/basic/src/main/resources/script/groovy-transform-camel-context.xml#L34-L42). This is a Spring idiom, not a Camel one. Hence the CustomGroovyShellFactory is never invoked. </body>
		<created>2015-12-15 10:29:59</created>
		<closed>2015-12-15 11:41:13</closed>
	</bug>
	<bug>
		<id>1011</id>
		<title>Camel mail example itest should verify that test emails reach the target address</title>
		<body>Relates to: https://issues.jboss.org/browse/ENTESB-4520  The itest only verifies that a message was sent. It does not verify whether it arrived at the target destination. </body>
		<created>2015-12-11 13:58:00</created>
		<closed>2015-12-14 12:05:19</closed>
	</bug>
	<bug>
		<id>1006</id>
		<title>ElasticSearch integration fails with path.home is not configured</title>
		<body>``` Caused by: java.lang.IllegalStateException: path.home is not configured     at org.elasticsearch.env.Environment.&lt;init&gt;(Environment.java:99)     at org.elasticsearch.node.internal.InternalSettingsPreparer.prepareEnvironment(InternalSettingsPreparer.java:82)     at org.elasticsearch.node.Node.&lt;init&gt;(Node.java:128)     at org.elasticsearch.node.NodeBuilder.build(NodeBuilder.java:145)     at org.elasticsearch.node.NodeBuilder.node(NodeBuilder.java:152)     at org.apache.camel.component.elasticsearch.ElasticsearchEndpoint.doStart(ElasticsearchEndpoint.java:103) ``` </body>
		<created>2015-12-07 10:22:12</created>
		<closed>2016-03-15 16:28:38</closed>
	</bug>
	<bug>
		<id>1002</id>
		<title>Failed to add resource root org.apache.felix.configadmin-1.8.8.jar</title>
		<body>I am currently experiencing this when the tar.gz patch is deployed. It's also been failing consistently on the stability build for some time.  ``` Caused by: org.jboss.modules.xml.XmlPullParserException: Failed to add resource root 'org.apache.felix.configadmin-1.8.8.jar' at path 'org.apache.felix.configadmin-1.8.8.jar' (position: END_TAG seen ...&lt;/filter&gt;\n        &lt;/resource-root&gt;... @36:25) caused by: java.io.FileNotFoundException: /mnt/hudson_workspace/workspace/wildfly-camel-stability/examples/itests/target/wildfly-9.0.2.Final/modules/system/layers/fuse/org/jboss/gravia/main/org.apache.felix.configadmin-1.8.8.jar (No such file or directory)     at org.jboss.modules.ModuleXmlParser.parseResourceRoot(ModuleXmlParser.java:802) [jboss-modules.jar:1.4.3.Final]     at org.jboss.modules.ModuleXmlParser.parseResources(ModuleXmlParser.java:646) [jboss-modules.jar:1.4.3.Final]     at org.jboss.modules.ModuleXmlParser.parseModuleContents(ModuleXmlParser.java:446) [jboss-modules.jar:1.4.3.Final]     at org.jboss.modules.ModuleXmlParser.parseDocument(ModuleXmlParser.java:261) [jboss-modules.jar:1.4.3.Final]     at org.jboss.modules.ModuleXmlParser.parseModuleXml(ModuleXmlParser.java:148) [jboss-modules.jar:1.4.3.Final]     ... 21 more ``` </body>
		<created>2015-11-26 08:00:54</created>
		<closed>2015-11-26 10:43:13</closed>
	</bug>
	<bug>
		<id>989</id>
		<title>NCDFE starting gravia subsystem</title>
		<body>Deploying the latest wfc snapshot produces the following on server startup:  ``` [INFO] [0m[31m09:44:06,371 ERROR [org.jboss.msc.service.fail] (MSC service thread 1-3) MSC000001: Failed to start service jboss.wildfly.gravia.Subsystem: org.jboss.msc.service.StartException in service jboss.wildfly.gravia.Subsystem: Failed to start service [INFO]  at org.jboss.msc.service.ServiceControllerImpl$StartTask.run(ServiceControllerImpl.java:1904) [INFO]  at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [INFO]  at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [INFO]  at java.lang.Thread.run(Thread.java:745) [INFO] Caused by: java.lang.NoClassDefFoundError: org/jboss/gravia/resolver/Resolver [INFO]  at org.wildfly.extension.gravia.service.GraviaBootstrapService.resolverTracker(GraviaBootstrapService.java:155) [INFO]  at org.wildfly.extension.gravia.service.GraviaBootstrapService.installGraviaServices(GraviaBootstrapService.java:140) [INFO]  at org.wildfly.extension.gravia.service.GraviaBootstrapService.start(GraviaBootstrapService.java:82) [INFO]  at org.jboss.msc.service.ServiceControllerImpl$StartTask.startService(ServiceControllerImpl.java:1948) [INFO]  at org.jboss.msc.service.ServiceControllerImpl$StartTask.run(ServiceControllerImpl.java:1881) [INFO]  ... 3 more [INFO] Caused by: java.lang.ClassNotFoundException: org.jboss.gravia.resolver.Resolver from [Module "org.wildfly.extension.camel:main" from local module loader @7a7b0070 (finder: local module finder @39a054a5 (roots: /mnt/hudson_workspace/workspace/wildfly-camel-pullreq/archetypes/archetype-cdi/target/wildfly-9.0.2.Final/modules,/mnt/hudson_workspace/workspace/wildfly-camel-pullreq/archetypes/archetype-cdi/target/wildfly-9.0.2.Final/modules/system/layers/fuse,/mnt/hudson_workspace/workspace/wildfly-camel-pullreq/archetypes/archetype-cdi/target/wildfly-9.0.2.Final/modules/system/layers/base))] [INFO]  at org.jboss.modules.ModuleClassLoader.findClass(ModuleClassLoader.java:205) [INFO]  at org.jboss.modules.ConcurrentClassLoader.performLoadClassUnchecked(ConcurrentClassLoader.java:455) [INFO]  at org.jboss.modules.ConcurrentClassLoader.performLoadClassChecked(ConcurrentClassLoader.java:404) [INFO]  at org.jboss.modules.ConcurrentClassLoader.performLoadClass(ConcurrentClassLoader.java:385) [INFO]  at org.jboss.modules.ConcurrentClassLoader.loadClass(ConcurrentClassLoader.java:130) [INFO]  ... 8 more ``` </body>
		<created>2015-11-20 08:08:34</created>
		<closed>2015-11-20 10:51:29</closed>
	</bug>
	<bug>
		<id>981</id>
		<title>JNDI integration incompatible with camel-2.17</title>
		<body></body>
		<created>2015-11-16 12:32:30</created>
		<closed>2016-03-17 13:25:21</closed>
	</bug>
	<bug>
		<id>979</id>
		<title>XStream unmarshalling requires explicit type permissions</title>
		<body>Starting with camel-2.16.1 xstream unmashalling code requires explicit type permissions  ``` Caused by: com.thoughtworks.xstream.security.ForbiddenClassException: org.wildfly.camel.test.common.types.Customer     at com.thoughtworks.xstream.security.NoPermission.allows(NoPermission.java:35)     at com.thoughtworks.xstream.mapper.SecurityMapper.realClass(SecurityMapper.java:74)     at com.thoughtworks.xstream.mapper.MapperWrapper.realClass(MapperWrapper.java:30)     at com.thoughtworks.xstream.mapper.MapperWrapper.realClass(MapperWrapper.java:30)     at com.thoughtworks.xstream.mapper.CachingMapper.realClass(CachingMapper.java:47)     at com.thoughtworks.xstream.core.util.HierarchicalStreams.readClassType(HierarchicalStreams.java:29)     at com.thoughtworks.xstream.core.TreeUnmarshaller.start(TreeUnmarshaller.java:133)     at com.thoughtworks.xstream.core.AbstractTreeMarshallingStrategy.unmarshal(AbstractTreeMarshallingStrategy.java:32)     at com.thoughtworks.xstream.XStream.unmarshal(XStream.java:1206)     at com.thoughtworks.xstream.XStream.unmarshal(XStream.java:1178)     at org.apache.camel.dataformat.xstream.AbstractXStreamWrapper.unmarshal(AbstractXStreamWrapper.java:343) ``` </body>
		<created>2015-11-13 11:07:10</created>
		<closed>2015-11-23 08:52:01</closed>
	</bug>
	<bug>
		<id>978</id>
		<title>Camel CDI does not work if the application is deployed from an EAR sub-module</title>
		<body>I have an application where I am heavily utilizing Named beans from Camel routes, these beans are a mix of POJO's, Stateless and Statefull Session Beans. The application is packaged as an ear containing ejb jar and war.  After upgrading from Wildfly 8.2.0 / Wildfly-Camel 2.2.0 to Wildfly 9.0.1 / Wildfly-Camel 3.1.0 I noticed that the Camel routes in many, but not all, cases are not able to find the named beans.  Cases which doesn't work: - file filter (file://target/cdifilefilter/?recursive=true&amp;filter=#cdiFileFilter) - bean reference ( .bean("namedBean"), since .beanRef is deprecated) - poll strategy for FTP consumer  Cases which does work: - refering to a bean in .to instead of .bean ( .to("bean:namedBean") )  I then attempted to use the camel-cdi implementation from https://github.com/astefanutti/camel-cdi but it gives the same problem.  After setting up Arquillian for my project I could narrow down on the issue, specifically on the file filter example. I then found that if I package the testcase as a .jar or .war then it works but not when I do the exact same thing and package it as a .ear.  I have created testcases to demonstrate the issue on Wildfly-Camel test projects, first an variant of org.wildfly.camel.test.cdi.CDIIntegrationTest which creates a EnterpriseArchive deployment but then it will not be able to find the seda component.  Then two testcases for file and filter where one deploys as jar and the other as ear, this is exacly the same as the testcase I made in my project. The testcase deployed as ear will fail with the following message:  org.apache.camel.FailedToCreateRouteException: Failed to create route route1: Route(route1)[[From[file://target/cdifilefilter/?recursive=t... because of Failed to resolve endpoint: file://target/cdifilefilter/?filter=%23cdiFileFilter&amp;recursive=true due to: Could not find a suitable setter for property: filter as there isn't a setter method with same type: java.lang.String nor type conversion possible: No type converter available to convert from type: java.lang.String to the required type: org.apache.camel.component.file.GenericFileFilter with value #cdiFileFilter  Patch to add these testcases attached [cdi-ear-tests.txt](https://github.com/wildfly-extras/wildfly-camel/files/32143/cdi-ear-tests.txt) </body>
		<created>2015-11-11 18:27:04</created>
		<closed>2015-12-10 08:45:33</closed>
	</bug>
	<bug>
		<id>969</id>
		<title>ContextCreateHandler executed on non camel enabled deployments</title>
		<body>Currently, we execute the ContextCreateHandlers even when the deployment is not camel enabled   This code is insufficient   ``` java             // Prevent CameContext hooks for switchyard deployments             ModuleClassLoader moduleClassLoader = ModuleClassLoaderAssociationHandler.getModuleClassLoader(camelctx);             boolean isdeployment = moduleClassLoader.getModule().getIdentifier().getName().startsWith("deployment.");             URL switchyardMarkerURL = moduleClassLoader.getResource(CamelConstants.SWITCHYARD_MARKER_FILE);             if (isdeployment &amp;&amp; switchyardMarkerURL != null)                 return; ```  and not in line what we have in the CamelEnablementProcessor.  CrossRef: https://issues.jboss.org/browse/ENTESB-4385 </body>
		<created>2015-11-09 09:56:10</created>
		<closed>2015-11-09 10:33:24</closed>
	</bug>
	<bug>
		<id>949</id>
		<title>HL7 on NETTY4 transport layer fails to define class</title>
		<body>CrossRef: https://issues.jboss.org/browse/ENTESB-4302 </body>
		<created>2015-10-29 13:22:02</created>
		<closed>2015-10-29 13:57:47</closed>
	</bug>
	<bug>
		<id>938</id>
		<title>Fuse patch support missing from wildfly-camel distribution</title>
		<body>We tell users that they can run fuseconfig.sh to enable the camel subsystem in their existing WildFly config files:  https://wildflyext.gitbooks.io/wildfly-camel/content/start/index.html  We can pull in the missing content from the fuse-patch distro bin directory. </body>
		<created>2015-10-26 15:32:37</created>
		<closed>2015-10-27 10:55:46</closed>
	</bug>
	<bug>
		<id>923</id>
		<title>Error with swagger - RestModelConverters</title>
		<body>Hi  I recently upgraded to Camel 2.16, and when I try to call the swagger documentation for my camel rest service in wildfly 9.1, I get the following error:  22:19:53,900 ERROR [io.undertow.request](default task-29) UT005023: Exception handling request to /indicator-service/api-docs: java.lang.NoClassDefFoundError: Could not initialize class org.apache.camel.swagger.RestModelConverters  I am using latest stable of wildfly-camel. Wildfly 9.0.1 with Camel 2.16, with camel-swagger-java.  Any suggestions on how to fix this? </body>
		<created>2015-10-20 11:22:41</created>
		<closed>2015-10-21 10:25:50</closed>
	</bug>
	<bug>
		<id>915</id>
		<title>Unable to configure Infinispan idempotent consumers</title>
		<body>Attempting to use a Infinispan idempotent consumer results in:  ``` Caused by: java.lang.ClassNotFoundException: org.infinispan.commons.api.BasicCacheContainer from [Module "deployment.camel-infinispan-test.jar:main" from Service Module Loader]         at org.jboss.modules.ModuleClassLoader.findClass(ModuleClassLoader.java:205)         at org.jboss.modules.ConcurrentClassLoader.performLoadClassUnchecked(ConcurrentClassLoader.java:455)         at org.jboss.modules.ConcurrentClassLoader.performLoadClassChecked(ConcurrentClassLoader.java:404)         at org.jboss.modules.ConcurrentClassLoader.performLoadClass(ConcurrentClassLoader.java:385)         at org.jboss.modules.ConcurrentClassLoader.loadClass(ConcurrentClassLoader.java:130)         ... 15 more  ``` </body>
		<created>2015-10-19 15:14:31</created>
		<closed>2015-10-19 16:23:02</closed>
	</bug>
	<bug>
		<id>914</id>
		<title>Unable to configure JPA idempotent consumers</title>
		<body>Depending on how things are configured you either get a warning or fatal exception caused by the following:   ``` Caused by: java.lang.NoClassDefFoundError: org/hibernate/proxy/HibernateProxy         at java.lang.ClassLoader.defineClass1(Native Method)         at java.lang.ClassLoader.defineClass(ClassLoader.java:760)         at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)         at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)         at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)         at java.lang.reflect.Method.invoke(Method.java:497)         at javassist.util.proxy.FactoryHelper.toClass2(FactoryHelper.java:182)         at javassist.util.proxy.FactoryHelper.toClass(FactoryHelper.java:164)         ... 39 more Caused by: java.lang.ClassNotFoundException: org.hibernate.proxy.HibernateProxy from [Module "org.apache.camel.component.jpa:main" from local module loader @704d6e83 (finder: local module finder @43a0cee9] ``` </body>
		<created>2015-10-19 15:10:18</created>
		<closed>2015-10-19 16:01:04</closed>
	</bug>
	<bug>
		<id>913</id>
		<title>Infinispan integration fails on WildFly10</title>
		<body>``` Caused by: java.lang.Exception: {"WFLYCTL0288: One or more services were unable to start due to one or more indirect dependencies not being available." =&gt; {     "Services that were unable to start:" =&gt; [         "jboss.deployment.unit.\"camel-infinispan-test.jar\".CdiValidatorFactoryService",         "jboss.deployment.unit.\"camel-infinispan-test.jar\".WeldStartService",         "jboss.deployment.unit.\"camel-infinispan-test.jar\".component.InfinispanIntegrationTest.JndiBindingsService",         "jboss.deployment.unit.\"camel-infinispan-test.jar\".component.InfinispanIntegrationTest.START",         "jboss.deployment.unit.\"camel-infinispan-test.jar\".component.InfinispanIntegrationTest.WeldInstantiator",         "jboss.deployment.unit.\"camel-infinispan-test.jar\".component.InfinispanIntegrationTest.WeldInterceptorBindingsService",         "jboss.deployment.unit.\"camel-infinispan-test.jar\".deploymentCompleteService",         "jboss.deployment.unit.\"camel-infinispan-test.jar\".jndiDependencyService",         "jboss.deployment.unit.\"camel-infinispan-test.jar\".moduleDeploymentRuntimeInformationStart",         "jboss.naming.context.java.comp.camel-infinispan-test.camel-infinispan-test.InfinispanIntegrationTest.env.\"org.wildfly.camel.test.infinispan.InfinispanIntegrationTest\".cacheContainer"     ],     "Services that may be the cause:" =&gt; [         "jboss.infinispan.test.config.thread-pool.async-operations",         "jboss.infinispan.test.config.thread-pool.expiration",         "jboss.infinispan.test.config.thread-pool.listener",         "jboss.infinispan.test.config.thread-pool.persistence",         "jboss.infinispan.test.config.thread-pool.remote-command",         "jboss.infinispan.test.config.thread-pool.state-transfer",         "jboss.infinispan.test.config.thread-pool.transport",         "jboss.infinispan.test.config.transport"     ] }} ``` </body>
		<created>2015-10-19 11:41:18</created>
		<closed>2015-11-09 10:13:59</closed>
	</bug>
	<bug>
		<id>908</id>
		<title>Unable to configure JDBC idempotent consumers</title>
		<body>If I try to do:  ``` xml     &lt;jee:jndi-lookup id="dataSource" jndi-name="java:jboss/datasources/ExampleDS" /&gt;      &lt;spring:bean id="messageIdRepository" class="org.apache.camel.processor.idempotent.jdbc.JdbcMessageIdRepository"&gt;         &lt;spring:constructor-arg ref="dataSource" /&gt;     &lt;/spring:bean&gt; ```  I get:  ``` Caused by: java.lang.NoClassDefFoundError: org/springframework/transaction/PlatformTransactionManager         at java.lang.Class.getDeclaredConstructors0(Native Method)         at java.lang.Class.privateGetDeclaredConstructors(Class.java:2671)         at java.lang.Class.getDeclaredConstructors(Class.java:2020)         at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:149)         ... 20 more Caused by: java.lang.ClassNotFoundException: org.springframework.transaction.PlatformTransactionManager from [Module "org.apache.camel.component.sql:main" from local module loader @704d6e83 (finder: local module finder @43a0cee9  ``` </body>
		<created>2015-10-19 08:21:02</created>
		<closed>2015-10-19 10:34:43</closed>
	</bug>
	<bug>
		<id>905</id>
		<title>Cannot use maven release plugin </title>
		<body>With the 3.1.0 release we had various issues using the release:prepare + release:perform combination. Artefacts did not get installed in the local mvn repo. Profiles did not get activated by the release target.  Please verify that what we [document in the wiki](https://github.com/wildfly-extras/wildfly-camel/wiki/Release-Procedure#release-the-binaries) actually works.  If these issues are caused by recent mvn versions, please find the last version that works and report these issues in the mvn jira. </body>
		<created>2015-10-15 07:00:20</created>
		<closed>2015-10-22 14:57:11</closed>
	</bug>
	<bug>
		<id>904</id>
		<title>Cannot create ElasticsearchEndpoint</title>
		<body>``` java.lang.NoClassDefFoundError: Could not initialize class org.elasticsearch.Version     at org.elasticsearch.node.internal.InternalNode.&lt;init&gt;(InternalNode.java:140)     at org.elasticsearch.node.NodeBuilder.build(NodeBuilder.java:159)     at org.elasticsearch.node.NodeBuilder.node(NodeBuilder.java:166)     at org.apache.camel.component.elasticsearch.ElasticsearchEndpoint.doStart(ElasticsearchEndpoint.java:97)     at org.apache.camel.support.ServiceSupport.start(ServiceSupport.java:61) ``` </body>
		<created>2015-10-14 13:16:58</created>
		<closed>2015-10-15 13:23:00</closed>
	</bug>
	<bug>
		<id>897</id>
		<title>camel-rest example RestProducerRouteBuilder sometimes produces HTTP 404 errors </title>
		<body>We have a route:  ``` from("timer://outputCustomers?period=30000")         .log("Updating customers.json")         .to("restlet://http://localhost:8080/example-camel-rest/rest/customer") ```  Depending on the speed of things starting up, sometimes we have a situation where the REST endpoint is not yet available when the route starts producing messages. </body>
		<created>2015-10-09 11:01:21</created>
		<closed>2015-10-14 07:25:57</closed>
	</bug>
	<bug>
		<id>872</id>
		<title>JpaTransactionManager test throws NCDFE for ResourceTransactionManager</title>
		<body>This seems to manifest itself when the tests are run in a particular order, thus it's not simple to replicate.  ``` Caused by: java.lang.NoClassDefFoundError: org/springframework/transaction/support/ResourceTransactionManager ``` </body>
		<created>2015-09-17 07:44:50</created>
		<closed>2015-09-21 15:32:11</closed>
	</bug>
	<bug>
		<id>870</id>
		<title>Path org.springframework.orm.jpa not exported from org.springframework.orm module</title>
		<body>This path should be exported for the JpaTransactionManager.   Currently we would require users to add manifest dependencies which is not ideal. </body>
		<created>2015-09-16 13:25:28</created>
		<closed>2015-09-16 14:00:59</closed>
	</bug>
	<bug>
		<id>853</id>
		<title>Add feature-pack dependency to archetypes module to ensure correct build order</title>
		<body>This is a result of the duff advice I gave on IRC (sorry Thomas!):  ``` &lt;tdiesler&gt; jnetherton, is it true that archetypes have no deps on any other wfc module? &lt;jnetherton&gt; tdiesler, yes correct ```  This is actually not the case. The archetype unit tests depend on the subsystem having been built and packaged beforehand.  Best to put this module back into it's previous place before the itest module. </body>
		<created>2015-09-09 15:32:35</created>
		<closed>2015-09-10 08:57:25</closed>
	</bug>
	<bug>
		<id>848</id>
		<title>Skip wiring of Camel modules for resource adapter deployments</title>
		<body></body>
		<created>2015-09-09 10:28:29</created>
		<closed>2015-09-09 14:22:01</closed>
	</bug>
	<bug>
		<id>844</id>
		<title>Cannot resolve beanmapping XML Schema</title>
		<body>``` 16:47:51,946 INFO  [org.apache.camel.impl.converter.DefaultTypeConverter] (pool-3-thread-2) Loaded 253 type converters 16:47:51,955 ERROR [org.dozer.loader.xml.DozerResolver] (pool-3-thread-2) Could not resolve beanmapping XML Schema [http://dozer.sourceforge.net/schema/beanmapping.xsd]: not found in classpath: java.lang.NullPointerException     at org.dozer.loader.xml.DozerResolver.resolveEntity(DozerResolver.java:50)     at org.apache.xerces.util.EntityResolverWrapper.resolveEntity(EntityResolverWrapper.java:107)     at org.apache.xerces.impl.XMLEntityManager.resolveEntity(XMLEntityManager.java:695)     at org.apache.xerces.impl.xs.XMLSchemaLoader.resolveDocument(XMLSchemaLoader.java:624)     at org.apache.xerces.impl.xs.XMLSchemaValidator.findSchemaGrammar(XMLSchemaValidator.java:2699)     at org.apache.xerces.impl.xs.XMLSchemaValidator.handleStartElement(XMLSchemaValidator.java:2079)     at org.apache.xerces.impl.xs.XMLSchemaValidator.startElement(XMLSchemaValidator.java:788)     at org.apache.xerces.impl.XMLNSDocumentScannerImpl.scanStartElement(XMLNSDocumentScannerImpl.java:283)     at org.apache.xerces.impl.XMLNSDocumentScannerImpl$NSContentDispatcher.scanRootElementHook(XMLNSDocumentScannerImpl.java:733)     at org.apache.xerces.impl.XMLDocumentFragmentScannerImpl$FragmentContentDispatcher.dispatch(XMLDocumentFragmentScannerImpl.java:1754)     at org.apache.xerces.impl.XMLDocumentFragmentScannerImpl.scanDocument(XMLDocumentFragmentScannerImpl.java:324)     at org.apache.xerces.parsers.XML11Configuration.parse(XML11Configuration.java:875)     at org.apache.xerces.parsers.XML11Configuration.parse(XML11Configuration.java:798)     at org.apache.xerces.parsers.XMLParser.parse(XMLParser.java:108)     at org.apache.xerces.parsers.DOMParser.parse(DOMParser.java:230)     at org.apache.xerces.jaxp.DocumentBuilderImpl.parse(DocumentBuilderImpl.java:298)     at javax.xml.parsers.DocumentBuilder.parse(DocumentBuilder.java:121)     at org.dozer.loader.xml.MappingStreamReader.read(MappingStreamReader.java:50)     at org.dozer.loader.xml.MappingFileReader.read(MappingFileReader.java:58)     at org.apache.camel.converter.dozer.DozerTypeConverterLoader.loadMappings(DozerTypeConverterLoader.java:313)     at org.apache.camel.converter.dozer.DozerTypeConverterLoader.init(DozerTypeConverterLoader.java:226)     at org.apache.camel.converter.dozer.DozerTypeConverterLoader.doStart(DozerTypeConverterLoader.java:390)     at org.apache.camel.support.ServiceSupport.start(ServiceSupport.java:61)     at org.apache.camel.impl.DefaultCamelContext.startService(DefaultCamelContext.java:3059)     at org.apache.camel.impl.DefaultCamelContext.doAddService(DefaultCamelContext.java:1209)     at org.apache.camel.impl.DefaultCamelContext.addService(DefaultCamelContext.java:1170)     at org.apache.camel.impl.DefaultCamelContext.addService(DefaultCamelContext.java:1166)     at org.apache.camel.converter.dozer.DozerTypeConverterLoader.&lt;init&gt;(DozerTypeConverterLoader.java:126)     at org.wildfly.camel.test.csv.CSVIntegrationTest.testMarshalViaDozer(CSVIntegrationTest.java:94) ```  CrossRef: https://issues.apache.org/jira/browse/CAMEL-9167 </body>
		<created>2015-09-07 14:49:48</created>
		<closed>2015-10-09 06:55:37</closed>
	</bug>
	<bug>
		<id>841</id>
		<title>Multiple contexts not undeployed properly</title>
		<body>...  when spring descriptor contains multiple definitions  CrossRef: https://issues.jboss.org/browse/ENTESB-3951 </body>
		<created>2015-09-07 09:08:17</created>
		<closed>2015-09-07 10:53:06</closed>
	</bug>
	<bug>
		<id>819</id>
		<title>Unable to load custom Kafka Serializer or Partition classes </title>
		<body>Attempting to use custom Kafka serializer or partition classes with 0.8.2.0 passes through this Scala code:  ``` scala val klass = Class.forName(className).asInstanceOf[Class[T]] ```  This results in `org.apache.kafka:main` ModuleClassLoader being used. Custom classes wont be available to this module so we end up with a CNFE.  [KAFKA-2295](https://issues.apache.org/jira/browse/KAFKA-2295) is proposing to fix this in 0.9.0. The patch provided attempts to use the TCCL. This will probably work for WildFly but maybe they should allow clients to specify what CL should be used.  @tdiesler thoughts on this?  </body>
		<created>2015-08-17 16:06:08</created>
		<closed>2016-03-16 15:10:06</closed>
	</bug>
	<bug>
		<id>815</id>
		<title>Missing javax.activation.api dependency for org.apache.abdera.core</title>
		<body>Cross ref: https://issues.jboss.org/browse/ENTESB-3739  Looks like the Abdera modules are in need of some TLC. We appear to have a circular dependency between abdera.core and abdera.parser. </body>
		<created>2015-08-13 16:04:17</created>
		<closed>2015-08-14 06:41:57</closed>
	</bug>
	<bug>
		<id>796</id>
		<title>Docker maven module versions not updated</title>
		<body>Some modules are still at 3.0.0-SNAPSHOT....  docker itests/docker itests/docker/domain  We can tweak things so that in future, we can still release the modules without having to run the docker build steps. </body>
		<created>2015-08-04 14:45:36</created>
		<closed>2015-08-05 06:51:24</closed>
	</bug>
	<bug>
		<id>794</id>
		<title>camel-rest example integration tests throw FileSystemNotFoundException</title>
		<body>If the Surefire plugin is configured for `dependenciesToScan` with the `wildfly-camel-itests-standalone-examples` artifact. The camel-rest integration tests fail with a `FileSystemNotFoundException`. </body>
		<created>2015-08-04 14:11:23</created>
		<closed>2015-08-04 14:47:35</closed>
	</bug>
	<bug>
		<id>785</id>
		<title>Config tool generates files with incorrect line endings</title>
		<body>After running integration tests and viewing the resulting generated WildFly configuration files, they seem to have Windows style line endings.  ``` &lt;?xml version="1.0" encoding="UTF-8"?&gt;^M &lt;server xmlns="urn:jboss:domain:1.7"&gt;^M     &lt;extensions&gt;^M         &lt;extension module="org.jboss.as.clustering.infinispan" /&gt;^M         &lt;extension module="org.jboss.as.clustering.jgroups" /&gt;^M         &lt;extension module="org.jboss.as.connector" /&gt;^M         &lt;extension module="org.jboss.as.deployment-scanner" /&gt;^M ... ``` </body>
		<created>2015-07-28 16:06:00</created>
		<closed>2015-07-28 17:01:47</closed>
	</bug>
	<bug>
		<id>780</id>
		<title>Many modules have duplicated dependency declarations</title>
		<body>I noticed some of the modules had duplicate entries in the `&lt;dependencies&gt;` section, so I ran a script to detect where the problems are.  It seems that the smartics plugin creates a dependency for something that has already been defined in the module descriptor. This results in some dependencies occurring twice in the generated module.xml file.  ``` Module org.springframework.beans has duplicate dependencies declared:     org.springframework.core  Module org.springframework.context has duplicate dependencies declared:     org.springframework.core  Module org.apache.ws.commons.axiom.axiom-api has duplicate dependencies declared:     org.apache.commons.logging  Module org.apache.ws.commons.axiom.axiom-impl has duplicate dependencies declared:     org.apache.commons.logging  Module org.apache.camel.component.jmx has duplicate dependencies declared:     javax.xml.bind.api  Module org.apache.camel.component.cdi has duplicate dependencies declared:     javax.enterprise.api     javax.xml.bind.api     org.apache.deltaspike.cdictrl.api     org.apache.deltaspike.core.api     org.apache.deltaspike.core.impl  Module org.apache.camel.component.dozer has duplicate dependencies declared:     org.slf4j  Module org.apache.camel.component.hl7 has duplicate dependencies declared:     org.slf4j  Module org.apache.camel.component.flatpack has duplicate dependencies declared:     org.slf4j  Module org.apache.camel.component.xstream has duplicate dependencies declared:     javax.xml.stream.api     org.codehaus.jettison  Module org.apache.camel.component.restlet has duplicate dependencies declared:     org.restlet  Module org.apache.camel.component.quartz2 has duplicate dependencies declared:     org.slf4j  Module org.apache.camel.component.ognl has duplicate dependencies declared:     ognl  Module org.apache.camel.component.http4 has duplicate dependencies declared:     org.apache.httpcomponents  Module org.apache.camel.component has duplicate dependencies declared:     org.apache.camel.component.ejb ``` </body>
		<created>2015-07-23 15:06:46</created>
		<closed>2015-09-18 06:18:05</closed>
	</bug>
	<bug>
		<id>773</id>
		<title>Logging.properties is not loaded for all module test suites on Windows</title>
		<body>``` log4j:ERROR Could not read configuration file from URL [file://C:/Users/james/projects/wildfly-camel/itests/standalone/src/test/resources/logging.properties]. java.net.UnknownHostException: C ```  Modules where this fails: - wildfly-camel-itests-camel - All examples sub-modules </body>
		<created>2015-07-21 09:33:09</created>
		<closed>2015-07-21 11:39:37</closed>
	</bug>
	<bug>
		<id>738</id>
		<title>Kafka module cannot access JMX API</title>
		<body>1) Installed the newest wildfly 9.0.0.final release 2) Build the latest source code of camel-kafka 3) Installed it into the wildfly server. 4) Started the server. 5) Deployed my project, which contains nothing else than this camel-context.xml  camel-context:  ``` "&lt;?xml version="1.0" encoding="UTF-8"?&gt; &lt;beans xmlns="http://www.springframework.org/schema/beans"        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"        xmlns:camel="http://camel.apache.org/schema/spring"        xsi:schemaLocation="        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd        http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd"&gt;     &lt;camel:camelContext trace="false" xmlns="http://camel.apache.org/schema/spring"&gt;         &lt;route id="test"&gt;             &lt;from uri="kafka:dkclusters02:9092?topic=test-rep-three&amp;amp;zookeeperHost=10.39.65.121&amp;amp;zookeeperPort=2181&amp;amp;groupId=1" /&gt;             &lt;to uri="myBean" /&gt;         &lt;/route&gt;                 &lt;/camel:camelContext&gt;        &lt;bean id="myBean" class="our.package.WriterCamel"/&gt;  &lt;/beans&gt;"   Error:  08:20:25,824 ERROR [org.jboss.msc.service.fail] (MSC service thread 1-4) MSC000001: Failed to start service jboss.deployment.unit."projectname-kafka-spark-ear-1.0-SNAPSHOT.ear".POST_MODULE: org.jboss.msc.service.StartException in service jboss.depl         at org.jboss.as.server.deployment.DeploymentUnitPhaseService.start(DeploymentUnitPhaseService.java:163)         at org.jboss.msc.service.ServiceControllerImpl$StartTask.startService(ServiceControllerImpl.java:1948)         at org.jboss.msc.service.ServiceControllerImpl$StartTask.run(ServiceControllerImpl.java:1881)         at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)         at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)         at java.lang.Thread.run(Thread.java:745) Caused by: java.lang.NoClassDefFoundError: javax/management/ObjectName         at kafka.utils.Utils$.registerMBean(Utils.scala:260)         at kafka.utils.Log4jController$.&lt;init&gt;(Log4jController.scala:29)         at kafka.utils.Log4jController$.&lt;clinit&gt;(Log4jController.scala)         at kafka.utils.Logging$class.$init$(Logging.scala:29)         at kafka.utils.VerifiableProperties.&lt;init&gt;(VerifiableProperties.scala:26)         at kafka.consumer.ConsumerConfig.&lt;init&gt;(ConsumerConfig.scala:94)         at org.apache.camel.component.kafka.KafkaConsumer.doStart(KafkaConsumer.java:79)         at org.apache.camel.support.ServiceSupport.start(ServiceSupport.java:61)         at org.apache.camel.impl.DefaultCamelContext.startService(DefaultCamelContext.java:2869)         at org.apache.camel.impl.DefaultCamelContext.doStartOrResumeRouteConsumers(DefaultCamelContext.java:3163)         at org.apache.camel.impl.DefaultCamelContext.doStartRouteConsumers(DefaultCamelContext.java:3099)         at org.apache.camel.impl.DefaultCamelContext.safelyStartRouteServices(DefaultCamelContext.java:3029)         at org.apache.camel.impl.DefaultCamelContext.doStartOrResumeRoutes(DefaultCamelContext.java:2797)         at org.apache.camel.impl.DefaultCamelContext.doStartCamel(DefaultCamelContext.java:2653)         at org.apache.camel.impl.DefaultCamelContext.access$000(DefaultCamelContext.java:167)         at org.apache.camel.impl.DefaultCamelContext$2.call(DefaultCamelContext.java:2467)         at org.apache.camel.impl.DefaultCamelContext$2.call(DefaultCamelContext.java:2463)         at org.apache.camel.impl.DefaultCamelContext.doWithDefinedClassLoader(DefaultCamelContext.java:2486)         at org.apache.camel.impl.DefaultCamelContext.doStart(DefaultCamelContext.java:2463)         at org.apache.camel.support.ServiceSupport.start(ServiceSupport.java:61)         at org.apache.camel.impl.DefaultCamelContext.start(DefaultCamelContext.java:2432)         at org.apache.camel.spring.SpringCamelContext.maybeStart(SpringCamelContext.java:255)         at org.apache.camel.spring.SpringCamelContext.onApplicationEvent(SpringCamelContext.java:121)         at org.apache.camel.spring.CamelContextFactoryBean.onApplicationEvent(CamelContextFactoryBean.java:332)         at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:151)         at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:128)         at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:331)         at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:773)         at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:483)         at org.wildfly.extension.camel.SpringCamelContextFactory.createSpringCamelContext(SpringCamelContextFactory.java:99)         at org.wildfly.extension.camel.SpringCamelContextFactory.createSpringCamelContext(SpringCamelContextFactory.java:60)         at org.wildfly.extension.camel.deployment.CamelContextCreateProcessor.deploy(CamelContextCreateProcessor.java:83)         at org.jboss.as.server.deployment.DeploymentUnitPhaseService.start(DeploymentUnitPhaseService.java:156)         ... 5 more Caused by: java.lang.ClassNotFoundException: javax.management.ObjectName from [Module "org.apache.kafka:main" from local module loader @7f7052 (finder: local module finder @1028347 (roots: D:\servers\wildfly-camel\wildfly-9.0.0.Final\modules,D:\se         at org.jboss.modules.ModuleClassLoader.findClass(ModuleClassLoader.java:205)         at org.jboss.modules.ConcurrentClassLoader.performLoadClassUnchecked(ConcurrentClassLoader.java:455)         at org.jboss.modules.ConcurrentClassLoader.performLoadClassChecked(ConcurrentClassLoader.java:404)         at org.jboss.modules.ConcurrentClassLoader.performLoadClass(ConcurrentClassLoader.java:385)         at org.jboss.modules.ConcurrentClassLoader.loadClass(ConcurrentClassLoader.java:130)         ... 38 more  08:20:25,967 ERROR [org.jboss.as.controller.management-operation] (XNIO-1 task-3) WFLYCTL0013: Operation ("add") failed - address: ([{"deployment" =&gt; "projectname-kafka-spark-ear-1.0-SNAPSHOT.ear"}]) - failure description: {"WFLYCTL0080: Failed ser     Caused by: java.lang.NoClassDefFoundError: javax/management/ObjectName     Caused by: java.lang.ClassNotFoundException: javax.management.ObjectName from [Module \"org.apache.kafka:main\" from local module loader @7f7052 (finder: local module finder @1028347 (roots: D:\\servers\\wildfly-camel\\wildfly-9.0.0.Final\\mod 08:20:25,977 ERROR [org.jboss.as.server] (XNIO-1 task-3) WFLYSRV0021: Deploy of deployment "projectname-kafka-spark-ear-1.0-SNAPSHOT.ear" was rolled back with the following failure message: {"WFLYCTL0080: Failed services" =&gt; {"jboss.deployment.unit.\"projectname-kafka-spark-ear-1.0-SNAPSHOT.ear\".POST_MODULE" =&gt; "org.jboss.msc.service.StartException in service jboss.deployment.unit.\"projectname-kafka-spark-ear-1.0-SNAPSHOT.ear\".POST_     Caused by: java.lang.NoClassDefFoundError: javax/management/ObjectName     Caused by: java.lang.ClassNotFoundException: javax.management.ObjectName from [Module \"org.apache.kafka:main\" from local module loader @7f7052 (finder: local module finder @1028347 (roots: D:\\servers\\wildfly-camel\\wildfly-9.0.0.Final\\mod 08:20:25,985 INFO  [org.jboss.as.server.deployment] (MSC service thread 1-5) WFLYSRV0208: Stopped subdeployment (runtime-name: projectname-kafka-spark-ejb-1.0-SNAPSHOT.jar) in 8ms 08:20:26,046 INFO  [org.jboss.as.server.deployment] (MSC service thread 1-6) WFLYSRV0028: Stopped deployment projectname-kafka-spark-ear-1.0-SNAPSHOT.ear (runtime-name: projectname-kafka-spark-ear-1.0-SNAPSHOT.ear) in 69ms 08:20:26,048 INFO  [org.jboss.as.controller] (XNIO-1 task-3) WFLYCTL0183: Service status report WFLYCTL0186:   Services which failed to start:      service jboss.deployment.unit."projectname-kafka-spark-ear-1.0-SNAPSHOT.ear".POST_MODULE ``` </body>
		<created>2015-07-08 06:33:24</created>
		<closed>2015-07-08 15:07:43</closed>
	</bug>
	<bug>
		<id>717</id>
		<title>NoSuchFileException in ActiveMQExampleTest.testFileToActiveMQRoute</title>
		<body>Running the examples in quickstarts/camel gives  ``` Tests run: 1, Failures: 0, Errors: 1, Skipped: 0, Time elapsed: 0.912 sec &lt;&lt;&lt; FAILURE! - in org.wildfly.camel.examples.activemq.ActiveMQExampleTest testFileToActiveMQRoute(org.wildfly.camel.examples.activemq.ActiveMQExampleTest)  Time elapsed: 0.122 sec  &lt;&lt;&lt; ERROR! java.nio.file.NoSuchFileException: /Users/tdiesler/git/fuse-eap/itests/standalone/target/jboss-eap-6.4/quickstarts/camel/camel-activemq/target/jboss-eap-6.4/standalone/data/orders/test-order.xml     at sun.nio.fs.UnixException.translateToIOException(UnixException.java:86)     at sun.nio.fs.UnixException.rethrowAsIOException(UnixException.java:102)     at sun.nio.fs.UnixException.rethrowAsIOException(UnixException.java:107)     at sun.nio.fs.UnixFileSystemProvider.newByteChannel(UnixFileSystemProvider.java:214)     at java.nio.file.spi.FileSystemProvider.newOutputStream(FileSystemProvider.java:434)     at java.nio.file.Files.newOutputStream(Files.java:216)     at java.nio.file.Files.copy(Files.java:3016)     at org.wildfly.camel.examples.activemq.ActiveMQExampleTest.testFileToActiveMQRoute(ActiveMQExampleTest.java:81) ``` </body>
		<created>2015-07-01 07:39:09</created>
		<closed>2015-07-01 09:01:39</closed>
	</bug>
	<bug>
		<id>710</id>
		<title>XSLT transform route cannot load net.sf.saxon</title>
		<body>A route .to("xslt:myTransformation.xsl?saxon=true") throws ClassNotFoundException: net.sf.saxon.TransformerFactoryImpl as org.apache.camel.core doesn't have a dependency on net.sf.saxon  CrossRef: https://issues.jboss.org/browse/ENTESB-3491 </body>
		<created>2015-06-24 12:12:07</created>
		<closed>2015-07-01 21:20:21</closed>
	</bug>
	<bug>
		<id>703</id>
		<title>Permission denied on bin/fuseconfig.sh  access</title>
		<body></body>
		<created>2015-06-11 18:20:50</created>
		<closed>2015-06-11 18:29:02</closed>
	</bug>
	<bug>
		<id>701</id>
		<title>Unable to load camel type converters from package locations specified in TypeConverter manifest</title>
		<body>To support Spring package scanning (see #366), we added a [custom PackageScanResolverClass](https://github.com/wildfly-extras/wildfly-camel/blob/master/subsystem/src/main/java/org/wildfly/extension/camel/handler/PackageScanClassResolverAssociationHandler.java#L55).   Camel loads type converters by looking at the META-INF/services/org/apache/camel/TypeConverter manifest within each component jar. Within this manifest you can list paths to concrete classes or specify the location to a package which contains type converter classes.   The SAP component specifies a package location. This results in invocation of the custom PackageScanClassResolverImpl find() method. The problem is that it never sees the correct ClassLoader for the SAP component type converters. It only sees:  ``` ModuleClassLoader for Module "org.apache.camel.core:main"  ModuleClassLoader for Module "deployment.camel-sap-tests.war:main" ```  Where as the SAP type converters are located in:  ``` ModuleClassLoader for Module "org.fusesource.camel.component.sap:main" ``` </body>
		<created>2015-06-11 11:09:12</created>
		<closed>2015-07-06 14:15:11</closed>
	</bug>
	<bug>
		<id>692</id>
		<title>The build should fail if execution of ConfigMain utility is not successful</title>
		<body>Since the antrun plugin configuration does not have `failonerror=true`, the build proceeds to tar up unpatched configuration files.   The build should fail if config file patching was not successful. </body>
		<created>2015-06-05 12:43:39</created>
		<closed>2015-06-05 13:32:51</closed>
	</bug>
	<bug>
		<id>686</id>
		<title>Docs maven module version not updated</title>
		<body>The docs module/profile must be enabled explicitly, which may cause it to be excluded from release:prepare </body>
		<created>2015-06-03 07:16:23</created>
		<closed>2015-06-03 08:28:05</closed>
	</bug>
	<bug>
		<id>684</id>
		<title>Replace joda-time module dependency in org.json4s with the WildFly version</title>
		<body></body>
		<created>2015-06-02 14:53:42</created>
		<closed>2015-06-02 15:07:39</closed>
	</bug>
	<bug>
		<id>677</id>
		<title>Publish docker images script cannot be exited with ctrl+c</title>
		<body></body>
		<created>2015-06-01 12:26:26</created>
		<closed>2015-06-01 13:57:23</closed>
	</bug>
	<bug>
		<id>668</id>
		<title>Build fails on OpenJDK</title>
		<body></body>
		<created>2015-05-29 14:11:39</created>
		<closed>2015-05-29 14:37:11</closed>
	</bug>
	<bug>
		<id>666</id>
		<title>Password must have at least 1 non-alphanumeric symbol</title>
		<body></body>
		<created>2015-05-29 12:32:19</created>
		<closed>2015-05-29 13:18:13</closed>
	</bug>
	<bug>
		<id>664</id>
		<title>Generated domain.xml does not work in testsuite</title>
		<body>``` domain-slave&gt; [Server:server-one] 08:47:15,155 ERROR [org.jboss.as.controller.management-operation] (ServerService Thread Pool -- 57) JBAS014613: Operation ("deploy") failed - address: ([("deployment" =&gt; "domain-endpoint.war")]) - failure description: {"JBAS014879: One or more services were unable to start due to one or more indirect dependencies not being available." =&gt; { domain-slave&gt; [Server:server-one]     "Services that were unable to start:" =&gt; ["jboss.naming.context.java.module.domain-endpoint.domain-endpoint.ORB"], domain-slave&gt; [Server:server-one]     "Services that may be the cause:" =&gt; ["jboss.network.unsecure"] domain-slave&gt; [Server:server-one] }} domain-slave&gt; [Server:server-one] 08:47:15,158 ERROR [org.jboss.as.server] (ServerService Thread Pool -- 57) JBAS015870: Deploy of deployment "domain-endpoint.war" was rolled back with the following failure message:  domain-slave&gt; [Server:server-one] {"JBAS014879: One or more services were unable to start due to one or more indirect dependencies not being available." =&gt; { domain-slave&gt; [Server:server-one]     "Services that were unable to start:" =&gt; ["jboss.naming.context.java.module.domain-endpoint.domain-endpoint.ORB"], domain-slave&gt; [Server:server-one]     "Services that may be the cause:" =&gt; ["jboss.network.unsecure"] domain-slave&gt; [Server:server-one] }} domain-slave&gt; [Server:server-one] 08:47:15,169 INFO  [org.wildfly.extension.undertow] (MSC service thread 1-3) JBAS017535: Unregistered web context: /domain-endpoint domain-slave&gt; [Server:server-one] 08:47:15,203 INFO  [org.hibernate.validator.internal.util.Version] (MSC service thread 1-2) HV000001: Hibernate Validator 5.1.3.Final domain-slave&gt; [Server:server-one] 08:47:15,265 INFO  [org.jboss.as.server.deployment] (MSC service thread 1-1) JBAS015877: Stopped deployment domain-endpoint.war (runtime-name: domain-endpoint.war) in 106ms domain-slave&gt; [Server:server-one] 08:47:15,266 INFO  [org.jboss.as.controller] (ServerService Thread Pool -- 57) JBAS014774: Service status report domain-slave&gt; [Server:server-one] JBAS014775:    New missing/unsatisfied dependencies: domain-slave&gt; [Server:server-one]       service jboss.naming.context.java.module.domain-endpoint.domain-endpoint (missing) dependents: [service jboss.naming.context.java.module.domain-endpoint.domain-endpoint.ORB]  domain-slave&gt; [Server:server-one]  ``` </body>
		<created>2015-05-29 08:50:38</created>
		<closed>2015-05-29 10:36:34</closed>
	</bug>
	<bug>
		<id>643</id>
		<title>Cannot add schemaorg_apache_xmlbeans when sourced from jar</title>
		<body></body>
		<created>2015-05-19 13:23:25</created>
		<closed>2015-05-19 14:10:10</closed>
	</bug>
	<bug>
		<id>642</id>
		<title>Betamax tapeRoot property should be a relative path </title>
		<body></body>
		<created>2015-05-19 13:19:03</created>
		<closed>2015-05-19 13:59:32</closed>
	</bug>
	<bug>
		<id>639</id>
		<title>JAXBIntegrationTest may fail with shrinkwrap resolver issue</title>
		<body></body>
		<created>2015-05-19 08:55:47</created>
		<closed>2015-05-19 09:09:09</closed>
	</bug>
	<bug>
		<id>625</id>
		<title>JMS Example cannot find OrdersQueue</title>
		<body>This shows on branch 3.0  ``` 14:04:26,938 INFO  [org.jboss.as.server] (management-handler-thread - 1) WFLYSRV0010: Deployed "example-camel-jms-3.0.0-SNAPSHOT.war" (runtime-name : "example-camel-jms-3.0.0-SNAPSHOT.war") WARN: can't find jboss-cli.xml. Using default configuration values. May 15, 2015 2:04:26 PM org.jboss.as.cli.impl.CommandContextImpl printLine INFO: The batch executed successfully The batch executed successfully [INFO]  [INFO] --- maven-surefire-plugin:2.18.1:test (default) @ example-camel-jms --- 14:04:26,986 WARN  [org.apache.camel.component.jms.DefaultJmsMessageListenerContainer] (Camel (jms-cdi-context) thread #1 - JmsConsumer[OrdersQueue]) Setup of JMS message listener invoker failed for destination 'OrdersQueue' - trying to recover. Cause: HQ119017: Consumer is closed 14:04:26,989 INFO  [org.apache.camel.component.jms.DefaultJmsMessageListenerContainer] (Camel (jms-cdi-context) thread #1 - JmsConsumer[OrdersQueue]) Successfully refreshed JMS Connection [INFO] Surefire report directory: /Users/tdiesler/git/wildfly-camel/examples/projects/camel-jms/target/surefire-reports  -------------------------------------------------------  T E S T S ------------------------------------------------------- Running org.wildfly.camel.examples.jms.JMSExampleTest 14:04:28,746 ERROR [org.apache.camel.processor.DefaultErrorHandler] (Camel (jms-cdi-context) thread #0 - file:///Users/tdiesler/git/wildfly-camel/examples/projects/camel-jms/target/wildfly-9.0.0.CR1/standalone/data/orders) Failed delivery for (MessageId: ID-localhost-49344-1431691466040-1-1 on ExchangeId: ID-localhost-49344-1431691466040-1-2). Exhausted after delivery attempt: 1 caught: org.springframework.jms.UncategorizedJmsException: Uncategorized exception occured during JMS processing; nested exception is javax.jms.JMSException: There is no queue with name OrdersQueue  Message History --------------------------------------------------------------------------------------------------------------------------------------- RouteId              ProcessorId          Processor                                                                        Elapsed (ms) [route1            ] [route1            ] [file:///Users/tdiesler/git/wildfly-camel/examples/projects/camel-jms/target/wi] [        12] [route1            ] [convertBodyTo1    ] [convertBodyTo[java.lang.String]                                               ] [         3] [route1            ] [removeHeaders1    ] [removeHeaders[*]                                                              ] [         0] [route1            ] [to1               ] [jms:queue:OrdersQueue                                                         ] [         5]  Exchange --------------------------------------------------------------------------------------------------------------------------------------- Exchange[     Id                  ID-localhost-49344-1431691466040-1-2     ExchangePattern     InOnly     Headers             {CamelRedelivered=false, CamelRedeliveryCounter=0}     BodyType            String     Body                &lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;order&gt;    &lt;customer id="B0002"&gt;        &lt;name&gt;UK Customer&lt;/name&gt;        &lt;city&gt;Test&lt;/city&gt;        &lt;country&gt;UK&lt;/country&gt;    &lt;/customer&gt;    &lt;orderlines&gt;        &lt;orderline&gt;            &lt;item id="001"&gt;                &lt;description&gt;Test&lt;/description&gt;            &lt;/item&gt;        &lt;/orderline&gt;    &lt;/orderlines&gt;&lt;/order&gt; ]  Stacktrace ---------------------------------------------------------------------------------------------------------------------------------------: org.springframework.jms.UncategorizedJmsException: Uncategorized exception occured during JMS processing; nested exception is javax.jms.JMSException: There is no queue with name OrdersQueue     at org.springframework.jms.support.JmsUtils.convertJmsAccessException(JmsUtils.java:316)     at org.springframework.jms.support.JmsAccessor.convertJmsAccessException(JmsAccessor.java:169)     at org.springframework.jms.core.JmsTemplate.execute(JmsTemplate.java:496)     at org.apache.camel.component.jms.JmsConfiguration$CamelJmsTemplate.send(JmsConfiguration.java:235)     at org.apache.camel.component.jms.JmsProducer.doSend(JmsProducer.java:413)     at org.apache.camel.component.jms.JmsProducer.processInOnly(JmsProducer.java:367)     at org.apache.camel.component.jms.JmsProducer.process(JmsProducer.java:153) ``` </body>
		<created>2015-05-15 12:11:22</created>
		<closed>2015-05-18 10:24:25</closed>
	</bug>
	<bug>
		<id>622</id>
		<title>Path to exported-paths.txt in ExportedPathsTest should be configurable</title>
		<body>Now that the itests are used by other projects, we should not assume that paths exist such as ../../modules. </body>
		<created>2015-05-14 11:01:33</created>
		<closed>2015-05-14 18:13:59</closed>
	</bug>
	<bug>
		<id>608</id>
		<title>Operations on ManagedCamelContext may fail with JAXB error</title>
		<body>``` Caused by: java.lang.NoClassDefFoundError: Could not initialize class com.sun.xml.bind.v2.model.impl.RuntimeBuiltinLeafInfoImpl     at com.sun.xml.bind.v2.model.impl.RuntimeTypeInfoSetImpl.&lt;init&gt;(RuntimeTypeInfoSetImpl.java:65)     at com.sun.xml.bind.v2.model.impl.RuntimeModelBuilder.createTypeInfoSet(RuntimeModelBuilder.java:133)     at com.sun.xml.bind.v2.model.impl.RuntimeModelBuilder.createTypeInfoSet(RuntimeModelBuilder.java:85)     at com.sun.xml.bind.v2.model.impl.ModelBuilder.&lt;init&gt;(ModelBuilder.java:156)     at com.sun.xml.bind.v2.model.impl.RuntimeModelBuilder.&lt;init&gt;(RuntimeModelBuilder.java:93)     at com.sun.xml.bind.v2.runtime.JAXBContextImpl.getTypeInfoSet(JAXBContextImpl.java:450)     at com.sun.xml.bind.v2.runtime.JAXBContextImpl.&lt;init&gt;(JAXBContextImpl.java:298)     at com.sun.xml.bind.v2.runtime.JAXBContextImpl.&lt;init&gt;(JAXBContextImpl.java:141)     at com.sun.xml.bind.v2.runtime.JAXBContextImpl$JAXBContextBuilder.build(JAXBContextImpl.java:1163)     at com.sun.xml.bind.v2.ContextFactory.createContext(ContextFactory.java:145)     at com.sun.xml.bind.v2.ContextFactory.createContext(ContextFactory.java:236)     at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)     at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)     at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)     at java.lang.reflect.Method.invoke(Method.java:606)     at javax.xml.bind.ContextFinder.newInstance(ContextFinder.java:137)     at javax.xml.bind.ContextFinder.find(ContextFinder.java:294)     at javax.xml.bind.JAXBContext.newInstance(JAXBContext.java:412)     at javax.xml.bind.JAXBContext.newInstance(JAXBContext.java:375)     at org.apache.camel.impl.DefaultModelJAXBContextFactory.newJAXBContext(DefaultModelJAXBContextFactory.java:31)     at org.apache.camel.model.ModelHelper.dumpModelAsXml(ModelHelper.java:53)     at org.apache.camel.management.mbean.ManagedCamelContext.dumpRoutesAsXml(ManagedCamelContext.java:349)  ``` </body>
		<created>2015-05-08 11:07:41</created>
		<closed>2015-05-11 08:52:39</closed>
	</bug>
	<bug>
		<id>607</id>
		<title>Config generator drops CDATA section</title>
		<body>The generated standalone-camel-examples.xml looks like this  ```         &lt;subsystem xmlns="urn:jboss:domain:camel:1.0"&gt;             &lt;camelContext id="system-context-1"&gt;                                &amp;lt;route&gt;                                &amp;lt;from uri="direct:start"/&gt;                                &amp;lt;transform&gt;                                  &amp;lt;simple&gt;Hello #{body}&amp;lt;/simple&gt;                                &amp;lt;/transform&gt;                              &amp;lt;/route&gt;               &lt;/camelContext&gt;         &lt;/subsystem&gt; ```  It should however look like this  ```         &lt;subsystem xmlns="urn:jboss:domain:camel:1.0"&gt;            &lt;camelContext id="system-context-1"&gt;              &lt;![CDATA[              &lt;route&gt;                &lt;from uri="direct:start"/&gt;                &lt;transform&gt;                  &lt;simple&gt;Hello #{body}&lt;/simple&gt;                &lt;/transform&gt;              &lt;/route&gt;              ]]&gt;            &lt;/camelContext&gt;         &lt;/subsystem&gt; ```  It makes me wonder how this is supposed to work. One possibility is that the example template already contains a camel subsystem and the tool does not touch it. Another possibility is that the tool supports system camel context input - more generally, the tool should support the subsystem's config options. </body>
		<created>2015-05-08 10:27:38</created>
		<closed>2015-05-14 10:58:39</closed>
	</bug>
	<bug>
		<id>600</id>
		<title>Documentation references incorrect paths for examples</title>
		<body>Now that the examples have moved to a different directory structure. The GitBook documentation and project README files should reflect this. </body>
		<created>2015-05-08 05:45:35</created>
		<closed>2015-05-08 08:38:48</closed>
	</bug>
	<bug>
		<id>594</id>
		<title>Examples depend on distro which is not available in remote mvn repo</title>
		<body></body>
		<created>2015-05-07 03:28:52</created>
		<closed>2015-05-07 04:50:26</closed>
	</bug>
	<bug>
		<id>591</id>
		<title>JMS Session not accessible from route</title>
		<body>On a JMS message consumer route, we support  ``` jms:...&amp;acknowledgementModeName=CLIENT_ACKNOWLEDGE ```  The pattern is that a client may chose to process a batch of msgs before it acks. If batch processing succeeds the client calls Message.acknowledge(). If it fails, the client may choose to recover the msgs in the batch with Session.recover()  The Session is however not exposed to the client, which makes it impossible to call Session.recover(). CLIENT_ACKNOWLEDGE has IMHO currently limited use because of this.  CrossRef: https://issues.apache.org/jira/browse/CAMEL-8711 </body>
		<created>2015-05-06 13:16:59</created>
		<closed>2015-10-09 06:55:37</closed>
	</bug>
	<bug>
		<id>589</id>
		<title>Module checker script does not catch duplicate module resources in all cases</title>
		<body>Relates to [ENTESB-3158](https://issues.jboss.org/browse/ENTESB-3158). The module checker script should have caught this given that the asm dependency group / artifact id was identical between the CXF module and WildFly's own asm module. </body>
		<created>2015-05-06 12:38:57</created>
		<closed>2015-05-07 09:11:24</closed>
	</bug>
	<bug>
		<id>587</id>
		<title>Lucene uses slot 4.6 for version 4.10.x</title>
		<body></body>
		<created>2015-05-06 12:12:19</created>
		<closed>2015-05-06 12:25:05</closed>
	</bug>
	<bug>
		<id>580</id>
		<title>JMSIntegrationTest depends on message ordering</title>
		<body></body>
		<created>2015-05-05 06:29:19</created>
		<closed>2015-05-05 08:30:47</closed>
	</bug>
	<bug>
		<id>571</id>
		<title>Hawtio login does not work</title>
		<body>The hawtio login is expected to work the same as the console login - no special role should be required. Currently, the login does not seem to work at all. </body>
		<created>2015-04-28 13:41:19</created>
		<closed>2015-04-28 19:32:27</closed>
	</bug>
	<bug>
		<id>566</id>
		<title>REST example no longer works as expected for Openshift demo</title>
		<body>My bad. I totally refactored the camel-rest example for the last release to make it a bit more 'real world'. Now that the application behaviour has changed, the 'Adding a Service' instructions within the Openshift docs don't produce the expected result.  It's trivial to add the required functionality to the existing example, or we could move it out into it's own module so that we avoid this sort of thing in future. </body>
		<created>2015-04-24 14:04:21</created>
		<closed>2015-04-27 10:44:04</closed>
	</bug>
	<bug>
		<id>557</id>
		<title>Adding context XML in EAR cause duplicate context creation</title>
		<body>added sample-camel-context.xml under the META-INF directory in EJB jar file. When deployed, a duplicate context was created.   ``` 13:28:18,375 INFO  [org.wildfly.extension.camel] (MSC service thread 1-9) Bound camel naming object: java:jboss/camel/context/memput-context 13:28:18,393 INFO  [org.apache.camel.impl.converter.DefaultTypeConverter] (MSC service thread 1-1) Loaded 255 type converters 13:28:18,412 INFO  [org.apache.camel.spring.SpringCamelContext] (MSC service thread 1-1) AllowUseOriginalMessage is enabled. If access to the original message is not needed, then its recommended to turn this option off as it may improve performance. 13:28:18,412 INFO  [org.apache.camel.spring.SpringCamelContext] (MSC service thread 1-1) StreamCaching is not in use. If using streams then its recommended to enable stream caching. See more details at http://camel.apache.org/stream-caching.html 13:28:18,420 INFO  [org.apache.camel.spring.SpringCamelContext] (MSC service thread 1-1) Route: basicRoute started and consuming from: Endpoint[direct://start] 13:28:18,420 INFO  [org.apache.camel.spring.SpringCamelContext] (MSC service thread 1-1) Total 1 routes, of which 1 is started. 13:28:18,420 INFO  [org.apache.camel.spring.SpringCamelContext] (MSC service thread 1-1) Apache Camel 2.15.1 (CamelContext: memput-context) started in 0.719 seconds 13:28:18,423 INFO  [org.jboss.weld.deployer] (MSC service thread 1-4) JBAS016002: Processing weld deployment camel-ahs-ejb-1.0.0-SNAPSHOT.jar 13:28:18,424 INFO  [org.jboss.as.ejb3.deployment.processors.EjbJndiBindingsDeploymentUnitProcessor] (MSC service thread 1-4) JNDI bindings for session bean named SimpleEJB in deployment unit subdeployment "camel-ahs-ejb-1.0.0-SNAPSHOT.jar" of deployment "camel-ahs-ear.ear" are as follows:      java:global/camel-ahs-ear/camel-ahs-ejb-1.0.0-SNAPSHOT/SimpleEJB!ca.imt.ejb.SimpleEJB     java:app/camel-ahs-ejb-1.0.0-SNAPSHOT/SimpleEJB!ca.imt.ejb.SimpleEJB     java:module/SimpleEJB!ca.imt.ejb.SimpleEJB     java:global/camel-ahs-ear/camel-ahs-ejb-1.0.0-SNAPSHOT/SimpleEJB     java:app/camel-ahs-ejb-1.0.0-SNAPSHOT/SimpleEJB     java:module/SimpleEJB  13:28:18,427 INFO  [org.wildfly.extension.camel.SpringCamelContextFactory$1] (MSC service thread 1-4) Loading XML bean definitions from URL [vfs:/Users/chris/development/servers/camel-2.3.0_subsystem/wildfly-8.2.0.Final/standalone/deployments/camel-ahs-ear.ear/camel-ahs-ejb-1.0.0-SNAPSHOT.jar/META-INF/jboss-camel-context.xml] 13:28:18,571 INFO  [org.springframework.beans.factory.support.DefaultListableBeanFactory] (MSC service thread 1-4) Overriding bean definition for bean 'start': replacing [Generic bean: class [org.apache.camel.spring.CamelEndpointFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Generic bean: class [org.apache.camel.spring.CamelEndpointFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] 13:28:18,572 INFO  [org.springframework.context.support.GenericApplicationContext] (MSC service thread 1-4) Refreshing org.springframework.context.support.GenericApplicationContext@e36bc11: startup date [Mon Apr 20 13:28:18 MDT 2015]; root of context hierarchy 13:28:18,578 INFO  [org.apache.camel.core.xml.AbstractCamelContextFactoryBean] (MSC service thread 1-4) Using custom RoutePolicyFactory with id: metricsRoutePolicyFactory and implementation: org.apache.camel.component.metrics.routepolicy.MetricsRoutePolicyFactory@6ae9e95c 13:28:18,582 INFO  [org.apache.camel.spring.SpringCamelContext] (MSC service thread 1-4) Apache Camel 2.15.1 (CamelContext: memput-context) is starting 13:28:18,582 INFO  [org.apache.camel.management.ManagedManagementStrategy] (MSC service thread 1-4) JMX is enabled 13:28:18,585 WARN  [org.apache.camel.management.DefaultManagementLifecycleStrategy] (MSC service thread 1-4) This CamelContext(memput-context) will be registered using the name: memput-context-3 due to clash with an existing name already registered in MBeanServer. 13:28:18,589 WARN  [org.apache.camel.util.EventHelper] (MSC service thread 1-4) Error notifying event Starting CamelContext: memput-context. This exception will be ignored. : org.jboss.msc.service.DuplicateServiceException: Service jboss.naming.context.java.jboss.camel.context.memput-context is already registered     at org.jboss.msc.service.ServiceRegistrationImpl.setInstance(ServiceRegistrationImpl.java:158)     at org.jboss.msc.service.ServiceControllerImpl.startInstallation(ServiceControllerImpl.java:235)     at org.jboss.msc.service.ServiceContainerImpl.install(ServiceContainerImpl.java:767)     at org.jboss.msc.service.ServiceTargetImpl.install(ServiceTargetImpl.java:223)     at org.jboss.msc.service.ServiceControllerImpl$ChildServiceTarget.install(ServiceControllerImpl.java:2401)     at org.jboss.msc.service.ServiceBuilderImpl.install(ServiceBuilderImpl.java:317)     at org.wildfly.extension.camel.service.CamelContextBindingService.addService(CamelContextBindingService.java:65)     at org.wildfly.extension.camel.service.CamelContextRegistryService$CamelContextRegistryImpl.addContext(CamelContextRegistryService.java:223)     at org.wildfly.extension.camel.service.CamelContextRegistryService$CamelContextRegistryImpl.access$000(CamelContextRegistryService.java:140)     at org.wildfly.extension.camel.service.CamelContextRegistryService$CamelContextRegistryImpl$1.notify(CamelContextRegistryService.java:200)     at org.apache.camel.util.EventHelper.doNotifyEvent(EventHelper.java:771) [camel-core-2.15.1.jar:2.15.1]     at org.apache.camel.util.EventHelper.notifyCamelContextStarting(EventHelper.java:70) [camel-core-2.15.1.jar:2.15.1]     at org.apache.camel.impl.DefaultCamelContext.doStartCamel(DefaultCamelContext.java:2577) [camel-core-2.15.1.jar:2.15.1]     at org.apache.camel.impl.DefaultCamelContext.access$000(DefaultCamelContext.java:167) [camel-core-2.15.1.jar:2.15.1]     at org.apache.camel.impl.DefaultCamelContext$2.call(DefaultCamelContext.java:2467) [camel-core-2.15.1.jar:2.15.1]     at org.apache.camel.impl.DefaultCamelContext$2.call(DefaultCamelContext.java:2463) [camel-core-2.15.1.jar:2.15.1]     at org.apache.camel.impl.DefaultCamelContext.doWithDefinedClassLoader(DefaultCamelContext.java:2486) [camel-core-2.15.1.jar:2.15.1]     at org.apache.camel.impl.DefaultCamelContext.doStart(DefaultCamelContext.java:2463) [camel-core-2.15.1.jar:2.15.1]     at org.apache.camel.support.ServiceSupport.start(ServiceSupport.java:61) [camel-core-2.15.1.jar:2.15.1]     at org.apache.camel.impl.DefaultCamelContext.start(DefaultCamelContext.java:2432) [camel-core-2.15.1.jar:2.15.1]     at org.apache.camel.spring.SpringCamelContext.maybeStart(SpringCamelContext.java:255) [camel-spring-2.15.1.jar ``` </body>
		<created>2015-04-20 20:42:18</created>
		<closed>2015-04-21 11:51:36</closed>
	</bug>
	<bug>
		<id>544</id>
		<title>Examples fail with ClassNotFoundException</title>
		<body>``` Caused by: java.lang.ClassNotFoundException: org.w3c.dom.ElementTraversal     at java.net.URLClassLoader$1.run(URLClassLoader.java:372)     at java.net.URLClassLoader$1.run(URLClassLoader.java:361)     at java.security.AccessController.doPrivileged(Native Method)     at java.net.URLClassLoader.findClass(URLClassLoader.java:360)     at java.lang.ClassLoader.loadClass(ClassLoader.java:424)     at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:308)     at java.lang.ClassLoader.loadClass(ClassLoader.java:357)     at java.lang.ClassLoader.defineClass1(Native Method)     at java.lang.ClassLoader.defineClass(ClassLoader.java:760)     at java.security.SecureClassLoader.defineClass(SecureClassLoader.java:142)     at java.net.URLClassLoader.defineClass(URLClassLoader.java:455)     at java.net.URLClassLoader.access$100(URLClassLoader.java:73)     at java.net.URLClassLoader$1.run(URLClassLoader.java:367)     at java.net.URLClassLoader$1.run(URLClassLoader.java:361)     at java.security.AccessController.doPrivileged(Native Method)     at java.net.URLClassLoader.findClass(URLClassLoader.java:360)     at java.lang.ClassLoader.loadClass(ClassLoader.java:424)     at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:308)     at java.lang.ClassLoader.loadClass(ClassLoader.java:357)     at org.apache.xerces.jaxp.DocumentBuilderImpl.newDocument(Unknown Source) ```  CrosRef: https://issues.jboss.org/browse/WFLY-4538 </body>
		<created>2015-04-15 12:58:34</created>
		<closed>2015-05-28 06:20:22</closed>
	</bug>
	<bug>
		<id>540</id>
		<title>jboss-modules does not respect path excludes</title>
		<body>We have a module definition like this   ``` xml &lt;module xmlns="urn:jboss:module:1.1" name="org.apache.camel.spring"&gt;   &lt;resources&gt;     &lt;resource-root path="camel-spring-2.15.1.jar" /&gt;   &lt;/resources&gt;   &lt;dependencies&gt;     &lt;module name="javax.api" /&gt;     &lt;module name="javax.xml.bind.api" /&gt;     &lt;module name="org.apache.camel.core" /&gt;     &lt;module name="org.springframework.beans" export="true"&gt;       &lt;exports&gt;         &lt;exclude path="org/springframework/beans/annotation**" /&gt;         &lt;exclude path="org/springframework/beans/propertyeditors**" /&gt;         &lt;exclude path="org/springframework/beans/support**" /&gt;         &lt;exclude path="org/springframework/beans/factory/**" /&gt;       &lt;/exports&gt;     &lt;/module&gt;     &lt;module name="org.springframework.context" /&gt;     &lt;module name="org.springframework.core" /&gt;     &lt;module name="org.springframework.tx" export="true"&gt;       &lt;exports&gt;         &lt;exclude path="org/springframework/dao**" /&gt;         &lt;exclude path="org/springframework/jca**" /&gt;       &lt;/exports&gt;     &lt;/module&gt;     &lt;module name="org.slf4j" /&gt;   &lt;/dependencies&gt;   &lt;exports&gt;     &lt;exclude path="org/apache/camel/component/event**" /&gt;     &lt;exclude path="org/apache/camel/core**" /&gt;     &lt;exclude path="org/apache/camel/language/spel**" /&gt;     &lt;exclude path="org/apache/camel/osgi**" /&gt;   &lt;/exports&gt; &lt;/module&gt; ```  The expected behaviour is that a client of this module can load `org.apache.camel.spring.SpringCamelContext` but not `org.apache.camel.osgi.OsgiSpringCamelContext`  It seems that export excludes are generally ignored.  CrossRef: https://issues.jboss.org/browse/WFLY-4524 </body>
		<created>2015-04-15 11:18:35</created>
		<closed>2015-05-06 08:13:35</closed>
	</bug>
	<bug>
		<id>538</id>
		<title>Generated CXF module definition has duplicate spring dependencies</title>
		<body></body>
		<created>2015-04-15 11:05:46</created>
		<closed>2015-04-15 11:19:55</closed>
	</bug>
	<bug>
		<id>534</id>
		<title>CXF cannot access springframework beans module</title>
		<body>``` Tests in error:    CXFSpringContextTest.org.wildfly.camel.test.cxf.CXFSpringContextTest » Deployment  Tests run: 1, Failures: 0, Errors: 1, Skipped: 0 ```  ``` Caused by: java.lang.ClassNotFoundException: org.springframework.beans.BeansException from [Module "org.apache.cxf:main" from local module loader @2a70a3d8 (finder: local module finder @289d1c02 (roots: /Users/tdiesler/git/wildfly-camel/itests/standalone/target/wildfly-9.0.0.CR1-SNAPSHOT/modules,/Users/tdiesler/git/wildfly-camel/itests/standalone/target/wildfly-9.0.0.CR1-SNAPSHOT/modules/system/layers/fuse,/Users/tdiesler/git/wildfly-camel/itests/standalone/target/wildfly-9.0.0.CR1-SNAPSHOT/modules/system/layers/base))]     at org.jboss.modules.ModuleClassLoader.findClass(ModuleClassLoader.java:205) [jboss-modules.jar:1.4.2.Final]     at org.jboss.modules.ConcurrentClassLoader.performLoadClassUnchecked(ConcurrentClassLoader.java:455) [jboss-modules.jar:1.4.2.Final]     at org.jboss.modules.ConcurrentClassLoader.performLoadClassChecked(ConcurrentClassLoader.java:404) [jboss-modules.jar:1.4.2.Final]     at org.jboss.modules.ConcurrentClassLoader.performLoadClass(ConcurrentClassLoader.java:385) [jboss-modules.jar:1.4.2.Final]     at org.jboss.modules.ConcurrentClassLoader.loadClass(ConcurrentClassLoader.java:130) [jboss-modules.jar:1.4.2.Final]     ... 69 more ``` </body>
		<created>2015-04-15 08:18:17</created>
		<closed>2015-04-16 13:04:28</closed>
	</bug>
	<bug>
		<id>525</id>
		<title>org.apache.camel.script.jruby module does not provide specified bsf dependency</title>
		<body></body>
		<created>2015-04-09 16:39:08</created>
		<closed>2015-04-10 10:12:21</closed>
	</bug>
	<bug>
		<id>522</id>
		<title>Global dependency exclude for org.osgi.core needed</title>
		<body>We explicitly exclude org.osgi.core in the smartics config, as well as in wildfly-modules.xml </body>
		<created>2015-04-01 09:38:39</created>
		<closed>2015-04-15 11:04:39</closed>
	</bug>
	<bug>
		<id>507</id>
		<title>Generated module definitions depend on maven/jdk version</title>
		<body>On my EC2 instance I have these versions  ``` [ec2-user@ip-172-30-0-142 wildfly-camel]$ mvn -versions Apache Maven 3.2.3 (33f8c3e1027c3ddde99d3cdebad2656a31e8fdf4; 2014-08-11T20:58:10+00:00) Maven home: /home/ec2-user/apache-maven-3.2.3 Java version: 1.7.0_75, vendor: Oracle Corporation Java home: /usr/lib/jvm/java-1.7.0-openjdk-1.7.0.75.x86_64/jre Default locale: en_US, platform encoding: ANSI_X3.4-1968 OS name: "linux", version: "3.14.27-25.47.amzn1.x86_64", arch: "amd64", family: "unix" ```  and get this diff  ``` [ec2-user@ip-172-30-0-142 wildfly-camel]$ git diff diff --git a/modules/etc/generated/wildfly/modules/system/layers/fuse/org/apache/activemq/main/module.xml b/modules/etc/generated/wildfly/modules/system/layers/fuse/org/apache/activemq/main/module.xml index bb2f1f7..dd1a046 100644 --- a/modules/etc/generated/wildfly/modules/system/layers/fuse/org/apache/activemq/main/module.xml +++ b/modules/etc/generated/wildfly/modules/system/layers/fuse/org/apache/activemq/main/module.xml @@ -21,7 +21,6 @@      &lt;module name="javax.jms.api" /&gt;      &lt;module name="javax.management.j2ee.api" /&gt;      &lt;module name="org.apache.camel.component.mqtt" /&gt; -    &lt;module name="org.apache.commons.net" /&gt;      &lt;module name="org.apache.commons.pool" /&gt;      &lt;module name="org.apache.log4j" /&gt;      &lt;module name="org.apache.qpid.proton-jms" /&gt; diff --git a/modules/etc/generated/wildfly/modules/system/layers/fuse/org/apache/cxf/3.0/module.xml b/modules/etc/generated/wildfly/modules/system/layers/fuse/org/apache/cxf/3.0/module.xml index e15fe69..6bc2f37 100644 --- a/modules/etc/generated/wildfly/modules/system/layers/fuse/org/apache/cxf/3.0/module.xml +++ b/modules/etc/generated/wildfly/modules/system/layers/fuse/org/apache/cxf/3.0/module.xml @@ -43,14 +43,15 @@      &lt;module name="javax.wsdl4j.api" /&gt;      &lt;module name="javax.xml.bind.api" /&gt;      &lt;module name="net.oauth.core.oauth-provider" /&gt; -    &lt;module name="net.sf.ehcache" /&gt;      &lt;module name="org.apache.commons.lang" /&gt;      &lt;module name="org.apache.mina.core" /&gt;      &lt;module name="org.apache.neethi" /&gt;      &lt;module name="org.apache.ws.security" slot="2.0" /&gt;      &lt;module name="org.apache.ws.xmlschema" /&gt; +    &lt;module name="org.apache.xml-resolver" /&gt;      &lt;module name="org.bouncycastle" /&gt;      &lt;module name="org.codehaus.woodstox" /&gt; +    &lt;module name="org.springframework.context" /&gt;    &lt;/dependencies&gt;    &lt;exports&gt;      &lt;exclude path="OSGI-INF/blueprint" /&gt; diff --git a/modules/etc/generated/wildfly/modules/system/layers/fuse/org/apache/ws/security/2.0/module.xml b/modules/etc/generated/wildfly/modules/system/layers/fuse/org/apache/ws/security/2.0/module.xml index a26b966..4dbb3ec 100644 --- a/modules/etc/generated/wildfly/modules/system/layers/fuse/org/apache/ws/security/2.0/module.xml +++ b/modules/etc/generated/wildfly/modules/system/layers/fuse/org/apache/ws/security/2.0/module.xml @@ -11,7 +11,6 @@    &lt;dependencies&gt;      &lt;module name="javax.api" /&gt;      &lt;module name="javax.mail.api" /&gt; -    &lt;module name="net.sf.ehcache" /&gt;      &lt;module name="org.apache.neethi" /&gt;      &lt;module name="org.apache.santuario.xmlsec" slot="2.0" /&gt;      &lt;module name="org.apache.xalan" /&gt; ```  As a result, the published docker image contains a different set of module definitions as the released patch </body>
		<created>2015-03-26 16:03:57</created>
		<closed>2015-04-15 10:33:55</closed>
	</bug>
	<bug>
		<id>503</id>
		<title>wildfly-camel-modules pom.xml has duplicate camel-soap dependency</title>
		<body></body>
		<created>2015-03-26 14:52:27</created>
		<closed>2015-03-26 15:06:25</closed>
	</bug>
	<bug>
		<id>502</id>
		<title>Project does not build successfully on Windows</title>
		<body>Issues building on Windows are: - Module checker script outputs Windows path format (E.g with "\") to module baseline file which then gives the impression that every module dependency has changed. - Log4J surefire property in the itest module should start with file:/ (and not file://) else it leads to an exception being thrown.  ``` log4j:ERROR Could not read configuration file from URL [file://C:/Users/james/projects/wildfly-camel/itests/standalone/src/test/resources/logging.properties]. java.net.UnknownHostException: C         at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:178)         at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:157)         at java.net.Socket.connect(Socket.java:579)         at java.net.Socket.connect(Socket.java:528)         at sun.net.ftp.impl.FtpClient.doConnect(FtpClient.java:943)         at sun.net.ftp.impl.FtpClient.tryConnect(FtpClient.java:903) ``` - JAXB / SOAP integration test assertions fail during XML string comparison. Probably because of conversions of line endings (depends on how the git client or .gitattributes is configured).  </body>
		<created>2015-03-26 14:48:45</created>
		<closed>2015-03-26 16:27:11</closed>
	</bug>
	<bug>
		<id>490</id>
		<title>Usage of camel-xmlbeans depends on TCCL</title>
		<body>Upstream cross ref: https://issues.apache.org/jira/browse/CAMEL-8547 </body>
		<created>2015-03-26 08:02:34</created>
		<closed>2015-04-13 10:19:41</closed>
	</bug>
	<bug>
		<id>467</id>
		<title>Docker domain unit tests fail on environments with SELinux enabled</title>
		<body>From the last few builds we have the following output by one of the containers:  **Path /opt/volume/wildfly-camel-itests-docker-domain-2.2.0-SNAPSHOT.war doesn't exist.**  This is because of:  ``` ls -lZ itests/docker/domain/ -rw-rw-r--. james james unconfined_u:object_r:user_home_t:s0 pom.xml drwxrwxr-x. james james unconfined_u:object_r:user_home_t:s0 src drwxrwxr-x. james james unconfined_u:object_r:user_home_t:s0 target ```  If volume mounting is to work with SELinux enabled, then the target directory needs to be labelled with `svirt_sandbox_file_t`. </body>
		<created>2015-03-20 16:41:33</created>
		<closed>2015-03-20 17:17:27</closed>
	</bug>
	<bug>
		<id>464</id>
		<title>Object may get marshalled to wrong CSV order</title>
		<body>``` org.junit.ComparisonFailure: expected:&lt;[John,Doe]&gt; but was:&lt;[Doe,John]&gt;     at org.junit.Assert.assertEquals(Assert.java:115)     at org.junit.Assert.assertEquals(Assert.java:144)     at org.wildfly.camel.test.csv.CSVIntegrationTest.testMarshal(CSVIntegrationTest.java:74) ``` </body>
		<created>2015-03-20 12:39:06</created>
		<closed>2015-03-23 09:01:47</closed>
	</bug>
	<bug>
		<id>439</id>
		<title>Unable to configure CXF producer endpoints in Spring XML contexts </title>
		<body>Consider a simple Camel XML route with a CXF producer endpoint.  ``` &lt;camelContext id="cxf-context"&gt;     &lt;route&gt;         &lt;from uri="direct:start"/&gt;         &lt;to uri="cxf://http://localhost:8080/example-camel-cxf-soap/greeting?serviceClass=org.wildfly.camel.examples.cxf.GreetingService" /&gt;     &lt;/route&gt; &lt;/camelContext&gt; ```  The result is missing dependencies related to Spring. These can be easily added to the CXF module dependency list. I also think the CXF module needs to export META-INF and META-INF/cxf so that we can support the various CXF namespaces. </body>
		<created>2015-03-18 15:22:55</created>
		<closed>2015-03-19 15:02:21</closed>
	</bug>
	<bug>
		<id>410</id>
		<title>Cannot load mina type converter</title>
		<body>``` [0m[0m11:10:02,132 INFO  [org.jboss.as.arquillian] (MSC service thread 1-3) Arquillian deployment detected: ArquillianConfig[service=jboss.arquillian.config."simple.war",unit=simple.war,tests=[org.wildfly.camel.test.cxf.ws.SecureWebServiceProducerIntegrationTest]] [0m[0m11:10:02,134 INFO  [org.jboss.as.webservices] (MSC service thread 1-2) JBAS015539: Starting service jboss.ws.endpoint."simple.war".SecureEndpointImpl [0m[0m11:10:02,152 INFO  [org.jboss.web] (ServerService Thread Pool -- 7) JBAS018210: Register web context: /simple [0m[0m11:10:02,205 INFO  [org.jboss.as.server] (management-handler-thread - 2) JBAS015859: Deployed "simple.war" (runtime-name : "simple.war") [0m2015-03-12 11:10:02 WARN  [org.apache.camel.impl.converter.AnnotationTypeConverterLoader] (main) - Ignoring converter type: org.apache.camel.component.mina.MinaConverter as a dependent class could not be found: java.lang.NoClassDefFoundError: org/apache/mina/common/ByteBuffer java.lang.NoClassDefFoundError: org/apache/mina/common/ByteBuffer     at java.lang.Class.getDeclaredMethods0(Native Method)     at java.lang.Class.privateGetDeclaredMethods(Class.java:2615)     at java.lang.Class.getDeclaredMethods(Class.java:1860)     at org.apache.camel.impl.converter.AnnotationTypeConverterLoader.loadConverterMethods(AnnotationTypeConverterLoader.java:262)     at org.apache.camel.impl.converter.AnnotationTypeConverterLoader.load(AnnotationTypeConverterLoader.java:130)     at org.apache.camel.impl.converter.BaseTypeConverterRegistry.loadTypeConverters(BaseTypeConverterRegistry.java:544)     at org.apache.camel.impl.converter.DefaultTypeConverter.doStart(DefaultTypeConverter.java:53)     at org.apache.camel.support.ServiceSupport.start(ServiceSupport.java:61)     at org.apache.camel.impl.DefaultCamelContext.startService(DefaultCamelContext.java:2869)     at org.apache.camel.impl.DefaultCamelContext.doAddService(DefaultCamelContext.java:1097)     at org.apache.camel.impl.DefaultCamelContext.addService(DefaultCamelContext.java:1058)     at org.apache.camel.impl.DefaultCamelContext.addService(DefaultCamelContext.java:1054)     at org.apache.camel.impl.DefaultCamelContext.getTypeConverter(DefaultCamelContext.java:1977)     at org.apache.camel.impl.DefaultCamelContext.getTypeConverterRegistry(DefaultCamelContext.java:2000)     at org.apache.camel.impl.DefaultCamelContext.forceLazyInitialization(DefaultCamelContext.java:3220)     at org.apache.camel.impl.DefaultCamelContext.doStartCamel(DefaultCamelContext.java:2579)     at org.apache.camel.impl.DefaultCamelContext.access$000(DefaultCamelContext.java:167)     at org.apache.camel.impl.DefaultCamelContext$2.call(DefaultCamelContext.java:2467)     at org.apache.camel.impl.DefaultCamelContext$2.call(DefaultCamelContext.java:2463)     at org.apache.camel.impl.DefaultCamelContext.doWithDefinedClassLoader(DefaultCamelContext.java:2486)     at org.apache.camel.impl.DefaultCamelContext.doStart(DefaultCamelContext.java:2463)     at org.apache.camel.support.ServiceSupport.start(ServiceSupport.java:61)     at org.apache.camel.impl.DefaultCamelContext.start(DefaultCamelContext.java:2432)     at org.wildfly.camel.test.cxf.ws.SecureWebServiceProducerIntegrationTest.testEndpointRouteWithValidCredentials(SecureWebServiceProducerIntegrationTest.java:108) ``` </body>
		<created>2015-03-12 11:11:21</created>
		<closed>2015-03-12 12:56:22</closed>
	</bug>
	<bug>
		<id>402</id>
		<title>CamelEmailIntegrationTest cannot connect</title>
		<body>This currently prevents PR processing  ``` Caused by: com.sun.mail.util.MailConnectException: Couldn't connect to host, port: localhost, 10025; timeout 30000;   nested exception is:     java.net.ConnectException: Connection refused     at com.sun.mail.smtp.SMTPTransport.openServer(SMTPTransport.java:1984)     at com.sun.mail.smtp.SMTPTransport.protocolConnect(SMTPTransport.java:656)     at javax.mail.Service.connect(Service.java:345)     at org.apache.camel.component.mail.DefaultJavaMailSender.send(DefaultJavaMailSender.java:112)     at org.apache.camel.component.mail.MailProducer.process(MailProducer.java:63)     at org.apache.camel.util.AsyncProcessorConverterHelper$ProcessorToAsyncProcessorBridge.process(AsyncProcessorConverterHelper.java:61)     at org.apache.camel.processor.SendProcessor$2.doInAsyncProducer(SendProcessor.java:157)     at org.apache.camel.impl.ProducerCache.doInAsyncProducer(ProducerCache.java:304)     at org.apache.camel.processor.SendProcessor.process(SendProcessor.java:152)     at org.apache.camel.management.InstrumentationProcessor.process(InstrumentationProcessor.java:77)     at org.apache.camel.processor.RedeliveryErrorHandler.process(RedeliveryErrorHandler.java:448)     at org.apache.camel.processor.CamelInternalProcessor.process(CamelInternalProcessor.java:191)     at org.apache.camel.processor.CamelInternalProcessor.process(CamelInternalProcessor.java:191)     at org.apache.camel.component.direct.DirectProducer.process(DirectProducer.java:51)     at org.apache.camel.processor.CamelInternalProcessor.process(CamelInternalProcessor.java:191)     at org.apache.camel.util.AsyncProcessorHelper.process(AsyncProcessorHelper.java:109)     at org.apache.camel.processor.UnitOfWorkProducer.process(UnitOfWorkProducer.java:68)     at org.apache.camel.impl.ProducerCache$2.doInProducer(ProducerCache.java:375)     at org.apache.camel.impl.ProducerCache$2.doInProducer(ProducerCache.java:343)     at org.apache.camel.impl.ProducerCache.doInProducer(ProducerCache.java:233)     at org.apache.camel.impl.ProducerCache.sendExchange(ProducerCache.java:343)     at org.apache.camel.impl.ProducerCache.send(ProducerCache.java:184)     at org.apache.camel.impl.DefaultProducerTemplate.send(DefaultProducerTemplate.java:124)     at org.apache.camel.impl.DefaultProducerTemplate.sendBodyAndHeaders(DefaultProducerTemplate.java:233)     ... 30 more Caused by: java.net.ConnectException: Connection refused     at java.net.PlainSocketImpl.socketConnect(Native Method)     at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:345)     at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)     at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)     at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)     at java.net.Socket.connect(Socket.java:589)     at com.sun.mail.util.SocketFetcher.createSocket(SocketFetcher.java:299)     at com.sun.mail.util.SocketFetcher.getSocket(SocketFetcher.java:229)     at com.sun.mail.smtp.SMTPTransport.openServer(SMTPTransport.java:1950)     ... 53 more ``` </body>
		<created>2015-03-11 14:35:20</created>
		<closed>2015-03-11 19:56:05</closed>
	</bug>
	<bug>
		<id>399</id>
		<title>Fix missing plugin versions</title>
		<body>`````` [WARNING] 'build.plugins.plugin.version' for org.apache.maven.plugins:maven-resources-plugin is missing. @ org.wildfly.camel:wildfly-camel-distro:[unknown-version], /mnt/jenkins/workspace/wildfly-camel-2.2-redhat/distro/pom.xml, line 102, column 21 [WARNING] 'build.plugins.plugin.version' for org.apache.maven.plugins:maven-deploy-plugin is missing. @ org.wildfly.camel:wildfly-camel-distro:[unknown-version], /mnt/jenkins/workspace/wildfly-camel-2.2-redhat/distro/pom.xml, line 144, column 21``` `````` </body>
		<created>2015-03-11 12:25:27</created>
		<closed>2015-03-11 15:35:19</closed>
	</bug>
	<bug>
		<id>391</id>
		<title>Cannot obtain DOMImplementationRegistry instance</title>
		<body>``` Caused by: java.lang.ClassNotFoundException: com.sun.org.apache.xerces.internal.dom.DOMXSImplementationSourceImpl from [Module "deployment.hl7-tests:main" from Service Module Loader]     at org.jboss.modules.ModuleClassLoader.findClass(ModuleClassLoader.java:213) [jboss-modules.jar:1.3.3.Final]     at org.jboss.modules.ConcurrentClassLoader.performLoadClassUnchecked(ConcurrentClassLoader.java:459) [jboss-modules.jar:1.3.3.Final]     at org.jboss.modules.ConcurrentClassLoader.performLoadClassChecked(ConcurrentClassLoader.java:408) [jboss-modules.jar:1.3.3.Final]     at org.jboss.modules.ConcurrentClassLoader.performLoadClass(ConcurrentClassLoader.java:389) [jboss-modules.jar:1.3.3.Final]     at org.jboss.modules.ConcurrentClassLoader.loadClass(ConcurrentClassLoader.java:134) [jboss-modules.jar:1.3.3.Final]     at org.w3c.dom.bootstrap.DOMImplementationRegistry.newInstance(DOMImplementationRegistry.java:182) [rt.jar:1.8.0_31]     at ca.uhn.hl7v2.util.XMLUtils.getDOMImpl(XMLUtils.java:52) [hapi-base-2.2.jar:] ```  CrossRef: https://issues.jboss.org/browse/WFLY-4416 </body>
		<created>2015-03-10 10:31:55</created>
		<closed>2015-03-25 09:01:15</closed>
	</bug>
	<bug>
		<id>387</id>
		<title>Usage of camel-xstream depends on TCCL</title>
		<body>CrossRef: https://issues.apache.org/jira/browse/CAMEL-8468 </body>
		<created>2015-03-09 17:37:05</created>
		<closed>2015-04-13 08:23:45</closed>
	</bug>
	<bug>
		<id>381</id>
		<title>Unable to configure ActiveMQ resource adapter</title>
		<body>Wildfly Version: 8.2.0.Final Wildfly-Camel Version: 2.1.0  I am attempting to configure a resource adapter for ActiveMQ as per the recommendation in the Wildfly-Camel documentation  &gt; For Wildfly / EAP container managed connection pools and XA-Transaction support, the ActiveMQ Resource Adapter can be configured into the container configuration file.  Below is the configuration I have used as per https://developer.jboss.org/wiki/HowToUseOutOfProcessActiveMQWithWildFly  ``` &lt;subsystem xmlns="urn:jboss:domain:resource-adapters:2.0"&gt;     &lt;resource-adapters&gt;         &lt;resource-adapter id="activemq-rar"&gt;             &lt;module id="org.apache.activemq"/&gt;             &lt;transaction-support&gt;XATransaction&lt;/transaction-support&gt;             &lt;config-property name="UseInboundSession"&gt;false&lt;/config-property&gt;             &lt;config-property name="ServerUrl"&gt;tcp://localhost:61616?jms.rmIdFromConnectionId=true&lt;/config-property&gt;             &lt;connection-definitions&gt;                 &lt;connection-definition class-name="org.apache.activemq.ra.ActiveMQManagedConnectionFactory" jndi-name="java:/AMQConnectionFactory" enabled="true" pool-name="ConnectionFactory"&gt;                     &lt;xa-pool&gt;                         &lt;min-pool-size&gt;1&lt;/min-pool-size&gt;                         &lt;max-pool-size&gt;20&lt;/max-pool-size&gt;                         &lt;prefill&gt;false&lt;/prefill&gt;                         &lt;is-same-rm-override&gt;false&lt;/is-same-rm-override&gt;                     &lt;/xa-pool&gt;                 &lt;/connection-definition&gt;             &lt;/connection-definitions&gt;         &lt;/resource-adapter&gt;     &lt;/resource-adapters&gt; &lt;/subsystem&gt; ```  I currently get the following error:  &gt; 13:44:32,048 ERROR [org.jboss.as.controller.management-operation](ServerService Thread Pool -- 47) JBAS014613: Operation ("add") failed - address: ([ &gt;     ("subsystem" =&gt; "resource-adapters"), &gt;     ("resource-adapter" =&gt; "activemq-rar") &gt; ]) - failure description: "JBAS010473: Failed to load module for RA [org.apache.activemq]"  I believe this may be caused by the active-mq module bundling the unexploded RAR file instead of an exploded RAR file. </body>
		<created>2015-03-07 21:54:46</created>
		<closed>2015-03-17 14:41:49</closed>
	</bug>
	<bug>
		<id>380</id>
		<title>Unable to use the wildfly-maven-plugin run goal to execute WildFly Camel examples  </title>
		<body>The purpose of the [examples](https://github.com/wildfly-extras/wildfly-camel/tree/master/examples) is to help folks get started with the WildFly Camel subsystem. Therefore, it makes sense that some of the examples are interactive and not just basic integration tests.   At a minimum I'd expect a user to be able clone the project source, change into their desired example directory and deploy it to WildFly with `mvn wildfly:run`.   The current Maven project structure in this area prohibits this and needs rethinking. Having sub modules depend on resources located higher up in the directory tree (I.e usage of ../ in paths) is a terrible practice IMO. </body>
		<created>2015-03-06 13:47:57</created>
		<closed>2015-03-09 20:38:54</closed>
	</bug>
	<bug>
		<id>378</id>
		<title>Intermittent failures of JMS integration tests</title>
		<body>The consumer should probably be started before the test JMS messages are sent to queues.  Error detail:  ``` [0m[31m04:24:35,309 ERROR [org.apache.camel.processor.DefaultErrorHandler] (Camel (camel-41) thread #35 - JmsConsumer[camel-jms-queue]) Failed delivery for (MessageId: ID:9aa8b468-c3e2-11e4-b6bf-6db3692a7ab9 on ExchangeId: ID-fabric8-slave01-60904-1425633811891-40-1). Exhausted after delivery attempt: 1 caught: org.apache.camel.component.direct.DirectConsumerNotAvailableException: No consumers available on endpoint: Endpoint[direct://end]. Exchange[Message: Hello Kermit]  Message History --------------------------------------------------------------------------------------------------------------------------------------- RouteId              ProcessorId          Processor                                                                        Elapsed (ms) [route33           ] [route33           ] [jms://queue:camel-jms-queue?connectionFactory=ConnectionFactory               ] [         2] [route33           ] [transform11       ] [transform[{prepend(body, Hello )}]                                            ] [         0] [route33           ] [to21              ] [direct:end                                                                    ] [         2]  Exchange --------------------------------------------------------------------------------------------------------------------------------------- Exchange[     ExchangePattern     InOnly     Headers             {breadcrumbId=ID:9aa8b468-c3e2-11e4-b6bf-6db3692a7ab9, CamelRedelivered=false, CamelRedeliveryCounter=0, JMSCorrelationID=null, JMSDeliveryMode=2, JMSDestination=HornetQQueue[camel-jms-queue], JMSExpiration=0, JMSMessageID=ID:9aa8b468-c3e2-11e4-b6bf-6db3692a7ab9, JMSPriority=4, JMSRedelivered=false, JMSReplyTo=null, JMSTimestamp=1425633875273, JMSType=null, JMSXDeliveryCount=1, JMSXGroupID=null, JMSXUserID=null}     BodyType            String     Body                Hello Kermit ]  Stacktrace ---------------------------------------------------------------------------------------------------------------------------------------: org.apache.camel.component.direct.DirectConsumerNotAvailableException: No consumers available on endpoint: Endpoint[direct://end]. Exchange[Message: Hello Kermit]     at org.apache.camel.component.direct.DirectProducer.process(DirectProducer.java:47)     at org.apache.camel.processor.SendProcessor.process(SendProcessor.java:120)     at org.apache.camel.management.InstrumentationProcessor.process(InstrumentationProcessor.java:72)     at org.apache.camel.processor.RedeliveryErrorHandler.process(RedeliveryErrorHandler.java:416)     at org.apache.camel.processor.CamelInternalProcessor.process(CamelInternalProcessor.java:191)     at org.apache.camel.processor.Pipeline.process(Pipeline.java:118)     at org.apache.camel.processor.Pipeline.process(Pipeline.java:80)     at org.apache.camel.processor.CamelInternalProcessor.process(CamelInternalProcessor.java:191)     at org.apache.camel.util.AsyncProcessorHelper.process(AsyncProcessorHelper.java:105)     at org.apache.camel.processor.DelegateAsyncProcessor.process(DelegateAsyncProcessor.java:87)     at org.apache.camel.component.jms.EndpointMessageListener.onMessage(EndpointMessageListener.java:103)     at org.springframework.jms.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:562)     at org.springframework.jms.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:500)     at org.springframework.jms.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:468)     at org.springframework.jms.listener.AbstractPollingMessageListenerContainer.doReceiveAndExecute(AbstractPollingMessageListenerContainer.java:325)     at org.springframework.jms.listener.AbstractPollingMessageListenerContainer.receiveAndExecute(AbstractPollingMessageListenerContainer.java:263)     at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.invokeListener(DefaultMessageListenerContainer.java:1101)     at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.executeOngoingLoop(DefaultMessageListenerContainer.java:1093)     at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.run(DefaultMessageListenerContainer.java:990)     at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [rt.jar:1.8.0_25]     at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [rt.jar:1.8.0_25]     at java.lang.Thread.run(Thread.java:745) [rt.jar:1.8.0_25] ``` </body>
		<created>2015-03-06 09:42:18</created>
		<closed>2015-03-06 10:07:47</closed>
	</bug>
	<bug>
		<id>376</id>
		<title>Camel atom component requires exported paths for abdera core </title>
		<body>Regression from the optional dependency tidying.  The camel atom component should export path org/apache/abdera/\* from abdera core. </body>
		<created>2015-03-06 09:03:48</created>
		<closed>2015-03-06 09:48:13</closed>
	</bug>
	<bug>
		<id>361</id>
		<title>Dependency on lucene defined twice</title>
		<body>``` xml &lt;module xmlns="urn:jboss:module:1.1" name="org.apache.camel.component.lucene"&gt;   &lt;resources&gt;     &lt;resource-root path="camel-lucene-2.14.1.jar" /&gt;   &lt;/resources&gt;   &lt;dependencies&gt;     &lt;module name="org.apache.lucene" slot="4.6" /&gt;     &lt;module name="org.apache.camel.core" /&gt;     &lt;module name="org.apache.lucene" slot="4.6" /&gt;   &lt;/dependencies&gt; &lt;/module&gt; ``` </body>
		<created>2015-03-04 16:19:06</created>
		<closed>2015-03-04 16:35:42</closed>
	</bug>
	<bug>
		<id>357</id>
		<title>ActiveMQIntegrationTest bundles all ActiveMQ jars</title>
		<body>A deployment should reference and not embed camel 3rd party libraries </body>
		<created>2015-03-04 15:10:12</created>
		<closed>2015-03-04 15:21:53</closed>
	</bug>
	<bug>
		<id>354</id>
		<title>Distro module attaches tar archive artifact multiple times</title>
		<body>``` [INFO] --- maven-install-plugin:2.4:install (default-install) @ wildfly-camel-distro --- [INFO] Installing /mnt/hudson_workspace/workspace/wildfly-camel/distro/target/wildfly-camel-distro-2.2.0-SNAPSHOT.tar to /home/slave/.m2/repository/org/wildfly/camel/wildfly-camel-distro/2.2.0-SNAPSHOT/wildfly-camel-distro-2.2.0-SNAPSHOT.tar [INFO] Installing /mnt/hudson_workspace/workspace/wildfly-camel/distro/target/wildfly-camel-distro-2.2.0-SNAPSHOT.tar to /home/slave/.m2/repository/org/wildfly/camel/wildfly-camel-distro/2.2.0-SNAPSHOT/wildfly-camel-distro-2.2.0-SNAPSHOT.tar ```  I don't think there's any need for the `build-helper-maven-plugin` execution as the `maven-assembly-plugin` single goal will attach whatever artifact it generated. </body>
		<created>2015-03-03 16:59:07</created>
		<closed>2015-03-04 07:22:59</closed>
	</bug>
	<bug>
		<id>347</id>
		<title>Generated module definitions contain optional dependencies</title>
		<body>The gerated wildfly modules hierarchy should not contain optional dependencies </body>
		<created>2015-03-02 14:36:52</created>
		<closed>2015-03-05 19:43:25</closed>
	</bug>
	<bug>
		<id>345</id>
		<title>xnio-file-watcher exception</title>
		<body>``` 12:15:37,413 INFO  [org.wildfly.extension.undertow] (MSC service thread 1-7) JBAS017535: Unregistered web context: /camel-lucene-tests 12:15:37,418 ERROR [stderr] (xnio-file-watcher[Watcher for /Users/tdiesler/git/wildfly-camel/itests/standalone/target/wildfly-8.2.0.Final/standalone/tmp/vfs/temp/tempba30efa92c23d7f8/content-b18aaf1b4173a8fb/]-0) Exception in thread "xnio-file-watcher[Watcher for /Users/tdiesler/git/wildfly-camel/itests/standalone/target/wildfly-8.2.0.Final/standalone/tmp/vfs/temp/tempba30efa92c23d7f8/content-b18aaf1b4173a8fb/]-0" java.nio.file.ClosedWatchServiceException 12:15:37,418 ERROR [stderr] (xnio-file-watcher[Watcher for /Users/tdiesler/git/wildfly-camel/itests/standalone/target/wildfly-8.2.0.Final/standalone/tmp/vfs/temp/tempba30efa92c23d7f8/content-b18aaf1b4173a8fb/]-0)    at sun.nio.fs.AbstractWatchService.checkOpen(AbstractWatchService.java:80) 12:15:37,418 ERROR [stderr] (xnio-file-watcher[Watcher for /Users/tdiesler/git/wildfly-camel/itests/standalone/target/wildfly-8.2.0.Final/standalone/tmp/vfs/temp/tempba30efa92c23d7f8/content-b18aaf1b4173a8fb/]-0)    at sun.nio.fs.AbstractWatchService.checkKey(AbstractWatchService.java:92) 12:15:37,418 ERROR [stderr] (xnio-file-watcher[Watcher for /Users/tdiesler/git/wildfly-camel/itests/standalone/target/wildfly-8.2.0.Final/standalone/tmp/vfs/temp/tempba30efa92c23d7f8/content-b18aaf1b4173a8fb/]-0)    at sun.nio.fs.AbstractWatchService.take(AbstractWatchService.java:119) 12:15:37,419 ERROR [stderr] (xnio-file-watcher[Watcher for /Users/tdiesler/git/wildfly-camel/itests/standalone/target/wildfly-8.2.0.Final/standalone/tmp/vfs/temp/tempba30efa92c23d7f8/content-b18aaf1b4173a8fb/]-0)    at org.xnio.nio.WatchServiceFileSystemWatcher.run(WatchServiceFileSystemWatcher.java:85) 12:15:37,419 ERROR [stderr] (xnio-file-watcher[Watcher for /Users/tdiesler/git/wildfly-camel/itests/standalone/target/wildfly-8.2.0.Final/standalone/tmp/vfs/temp/tempba30efa92c23d7f8/content-b18aaf1b4173a8fb/]-0)    at java.lang.Thread.run(Thread.java:745) ``` </body>
		<created>2015-03-02 11:18:53</created>
		<closed>2015-09-09 11:35:02</closed>
	</bug>
	<bug>
		<id>343</id>
		<title>Examples can no longer run standalone </title>
		<body>``` [INFO] --- wildfly-maven-plugin:1.0.2.Final:start (wildfly-start) @ example-camel-rest --- [INFO] JAVA_HOME=/Library/Java/JavaVirtualMachines/jdk1.8.0_31.jdk/Contents/Home/jre [INFO] JBOSS_HOME=/Users/tdiesler/git/wildfly-camel/examples/camel-rest/target/wildfly-8.2.0.Final  [INFO] Server is starting up. Mar 02, 2015 9:41:02 AM org.xnio.Xnio &lt;clinit&gt; INFO: XNIO version 3.2.2.Final Listening for transport dt_socket at address: 8787 Mar 02, 2015 9:41:02 AM org.xnio.nio.NioXnio &lt;clinit&gt; INFO: XNIO NIO Implementation Version 3.2.2.Final Mar 02, 2015 9:41:03 AM org.jboss.remoting3.EndpointImpl &lt;clinit&gt; INFO: JBoss Remoting version 4.0.3.Final 09:41:03,322 INFO  [org.jboss.modules] (main) JBoss Modules version 1.3.3.Final java.lang.IllegalStateException: JBAS014805: Could not get main file: standalone-examples.xml. Specified files must be relative to the configuration dir: /Users/tdiesler/git/wildfly-camel/examples/camel-rest/target/wildfly-8.2.0.Final/standalone/configuration     at org.jboss.as.controller.persistence.ConfigurationFile.determineMainFile(ConfigurationFile.java:167)     at org.jboss.as.controller.persistence.ConfigurationFile.&lt;init&gt;(ConfigurationFile.java:94)     at org.jboss.as.server.ServerEnvironment.&lt;init&gt;(ServerEnvironment.java:394)     at org.jboss.as.server.Main.determineEnvironment(Main.java:262)     at org.jboss.as.server.Main.main(Main.java:92)     at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)     at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)     at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)     at java.lang.reflect.Method.invoke(Method.java:483)     at org.jboss.modules.Module.run(Module.java:312)     at org.jboss.modules.Main.main(Main.java:460) ``` </body>
		<created>2015-03-02 08:41:32</created>
		<closed>2015-03-02 10:05:23</closed>
	</bug>
	<bug>
		<id>319</id>
		<title>Unable to locate Spring JEE Namespace Handler </title>
		<body>[JNDI lookups](http://docs.spring.io/spring/docs/current/spring-framework-reference/html/xsd-config.html#xsd-config-body-schemas-jee) from Camel Spring XML contexts do not work. For example:  ``` &lt;jee:jndi-lookup id="connectionFactory" jndi-name="java:jboss/DefaultJMSConnectionFactory" /&gt; ```  This results in:  ``` Caused by: org.springframework.beans.factory.parsing.BeanDefinitionParsingException: Configuration problem: Unable to locate Spring NamespaceHandler for XML schema namespace [http://www.springframework.org/schema/jee] Offending resource: URL [vfs:/content/camel-spring-tests/META-INF/jboss-camel-context.xml]      at org.springframework.beans.factory.parsing.FailFastProblemReporter.error(FailFastProblemReporter.java:68)     at org.springframework.beans.factory.parsing.ReaderContext.error(ReaderContext.java:85)     at org.springframework.beans.factory.parsing.ReaderContext.error(ReaderContext.java:80)     at org.springframework.beans.factory.xml.BeanDefinitionParserDelegate.error(BeanDefinitionParserDelegate.java:318)     at org.springframework.beans.factory.xml.BeanDefinitionParserDelegate.parseCustomElement(BeanDefinitionParserDelegate.java:1435)     at org.springframework.beans.factory.xml.BeanDefinitionParserDelegate.parseCustomElement(BeanDefinitionParserDelegate.java:1428)     at org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.parseBeanDefinitions(DefaultBeanDefinitionDocumentReader.java:195)     at org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.doRegisterBeanDefinitions(DefaultBeanDefinitionDocumentReader.java:139)     at org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.registerBeanDefinitions(DefaultBeanDefinitionDocumentReader.java:108)     at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.registerBeanDefinitions(XmlBeanDefinitionReader.java:493)     at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:390)     at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:334)     at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:302)     at org.wildfly.extension.camel.SpringCamelContextFactory.createSpringCamelContext(SpringCamelContextFactory.java:98)     at org.wildfly.extension.camel.SpringCamelContextFactory.createSpringCamelContext(SpringCamelContextFactory.java:60)     at org.wildfly.extension.camel.deployment.CamelContextCreateProcessor.deploy(CamelContextCreateProcessor.java:73) ```  I haven't tested them all yet but we potentially have issues with most of the other Spring namespaces (see document at the link above for a list). </body>
		<created>2015-02-20 18:10:34</created>
		<closed>2015-02-24 12:16:39</closed>
	</bug>
	<bug>
		<id>316</id>
		<title>Conflict between camel-http / camel-http4 components </title>
		<body></body>
		<created>2015-02-20 10:10:06</created>
		<closed>2015-02-20 16:37:36</closed>
	</bug>
	<bug>
		<id>300</id>
		<title>Usage of SpringCamelContextFactory depends on TCCL</title>
		<body></body>
		<created>2015-02-11 16:20:40</created>
		<closed>2015-02-12 08:22:05</closed>
	</bug>
	<bug>
		<id>299</id>
		<title>Usage of camel-script depends on TCCL</title>
		<body>ScriptBuilder uses javax.script.ScriptEngineManager default ctor, which does   ``` java     public ScriptEngineManager() {         ClassLoader ctxtLoader = Thread.currentThread().getContextClassLoader();         init(ctxtLoader);     } ```  This means we can only discover script engines that are visible on the TCCL  Tracked by: https://issues.apache.org/jira/browse/CAMEL-8338 </body>
		<created>2015-02-11 16:18:03</created>
		<closed>2015-02-12 16:33:31</closed>
	</bug>
	<bug>
		<id>292</id>
		<title>Camel endpoint discovery depends on TCCL</title>
		<body></body>
		<created>2015-02-09 12:37:58</created>
		<closed>2015-03-09 15:43:59</closed>
	</bug>
	<bug>
		<id>291</id>
		<title>Usage of camel-mina2 depends on TCCL</title>
		<body></body>
		<created>2015-02-09 12:36:40</created>
		<closed>2015-02-11 15:24:15</closed>
	</bug>
	<bug>
		<id>290</id>
		<title>Usage of camel-mail depends on TCCL</title>
		<body>javax.mail.Session uses TCCL to load resources  ``` Thread.getContextClassLoader() line: 1432 [local variables unavailable]  Session$3.run() line: 1199   AccessController.doPrivileged(PrivilegedAction&lt;T&gt;) line: not available [native method]   Session.getContextClassLoader() line: 1194   Session.loadAllResources(String, Class, StreamLoader) line: 1137     Session.loadProviders(Class) line: 917   Session.&lt;init&gt;(Properties, Authenticator) line: 216  Session.getInstance(Properties, Authenticator) line: 242     MailConfiguration.createJavaMailSender() line: 175   MailEndpoint.createProducer() line: 71   ``` </body>
		<created>2015-02-09 12:35:11</created>
		<closed>2015-03-09 15:43:59</closed>
	</bug>
	<bug>
		<id>289</id>
		<title>Usage of camel-lucene depends on TCCL</title>
		<body></body>
		<created>2015-02-09 12:32:55</created>
		<closed>2015-02-11 15:24:15</closed>
	</bug>
	<bug>
		<id>288</id>
		<title>Usage of camel-jms depends on TCCL</title>
		<body></body>
		<created>2015-02-09 12:31:20</created>
		<closed>2015-02-11 15:24:15</closed>
	</bug>
	<bug>
		<id>287</id>
		<title>Usage of camel-jaxb depends on TCCL</title>
		<body></body>
		<created>2015-02-09 12:29:33</created>
		<closed>2015-02-12 07:28:50</closed>
	</bug>
	<bug>
		<id>286</id>
		<title>Usage of camel-http depends on TCCL</title>
		<body></body>
		<created>2015-02-09 12:27:24</created>
		<closed>2015-02-11 15:24:15</closed>
	</bug>
	<bug>
		<id>285</id>
		<title>Usage of camel-hl7 depends on TCCL</title>
		<body></body>
		<created>2015-02-09 12:25:40</created>
		<closed>2015-02-11 15:24:15</closed>
	</bug>
	<bug>
		<id>284</id>
		<title>Usage of camel-ftp depends on TCCL</title>
		<body></body>
		<created>2015-02-09 12:22:35</created>
		<closed>2015-02-11 15:15:39</closed>
	</bug>
	<bug>
		<id>283</id>
		<title>Usage of camel-cxf depends on TCCL</title>
		<body></body>
		<created>2015-02-09 12:10:00</created>
		<closed>2015-03-09 15:43:59</closed>
	</bug>
	<bug>
		<id>282</id>
		<title>Usage of camel-atom depends on TCCL</title>
		<body></body>
		<created>2015-02-09 12:00:44</created>
		<closed>2015-02-11 13:53:15</closed>
	</bug>
	<bug>
		<id>278</id>
		<title>Intermittent failures of Docker domain mode tests</title>
		<body>This seems to be a fairly regular occurrence now. Kicking off another build tends to get around the problem eventually. We should track down and fix the root cause if possible.  ``` -------------------------------------------------------  T E S T S ------------------------------------------------------- Running org.wildfly.camel.test.docker.domain.DockerDomainTest DOCKER&gt; docker run --rm --entrypoint=/opt/jboss/wildfly/bin/jboss-cli.sh -v /mnt/hudson_workspace/workspace/wildfly-camel/itests/docker/domain/target:/opt/volume wildflyext/wildfly-camel -c -u=admin -p=admin --controller=172.17.0.104:9990 deploy /opt/volume/wildfly-camel-itests-docker-domain-2.2.0-SNAPSHOT.war --name=domain-endpoint.war --all-server-groups  domain-master&gt; [Host Controller] [0m[0m10:07:22,284 INFO  [org.jboss.as.domain] (Host Controller Service Threads - 11) JBAS010918: Registered remote slave host "6a9961814ca2", WildFly 8.2.0.Final "Tweek"[0m domain-slave&gt; [Host Controller] [33m[0m[0m10:07:22,287 INFO  [org.jboss.as.host.controller] (Controller Boot Thread) JBAS016582: Connected to master host controller at remote://172.17.0.104:9999[0m domain-slave&gt; [Host Controller] [0m[0m10:07:22,405 INFO  [org.jboss.as.host.controller] (Controller Boot Thread) JBAS010922: Starting server server-one[0m domain-slave&gt; [0m10:07:22,466 INFO  [org.jboss.as.process.Server:server-one.status] (ProcessController-threads - 3) JBAS012017: Starting process 'Server:server-one' domain-slave&gt; [0m[Server:server-one] [0m10:07:23,208 INFO  [org.jboss.modules] (main) JBoss Modules version 1.3.3.Final[0m domain-slave&gt; [Server:server-one] [0m[0m10:07:23,560 INFO  [org.jboss.msc] (main) JBoss MSC version 1.2.2.Final[0m domain-slave&gt; [Server:server-one] [0m[0m10:07:23,658 INFO  [org.jboss.as] (MSC service thread 1-4) JBAS015899: WildFly 8.2.0.Final "Tweek" starting[0m domain-slave&gt; [Server:server-one] [0m[0m10:07:23,790 INFO  [org.xnio] (MSC service thread 1-1) XNIO version 3.3.0.Final[0m domain-slave&gt; [Server:server-one] [0m[0m10:07:23,799 INFO  [org.xnio.nio] (MSC service thread 1-1) XNIO NIO Implementation Version 3.3.0.Final[0m domain-slave&gt; [Server:server-one] [0m[0m10:07:23,827 INFO  [org.jboss.remoting] (MSC service thread 1-1) JBoss Remoting version 4.0.6.Final[0m domain-master&gt; [Host Controller] [0m[0m10:07:24,210 INFO  [org.jboss.as.repository] (management-handler-thread - 2) JBAS014900: Content added at location /opt/jboss/wildfly/domain/data/content/d5/7340d2c6faf46e557e5b3c70034b3dac03aaf6/content[0m domain-slave&gt; [Host Controller] [0m[0m10:07:24,515 INFO  [org.jboss.as.domain.controller.mgmt] (Remoting "6a9961814ca2:MANAGEMENT" task-7) JBAS010920: Server [Server:server-one] connected using connection [Channel ID 46fc22ab (inbound) of Remoting connection 08a897ef to /172.17.0.105:52202][0m domain-slave&gt; [Host Controller] [0m[0m10:07:24,791 INFO  [org.jboss.as.host.controller] (server-registration-threads - 1) JBAS010919: Registering server server-one[0m domain-slave&gt; [Host Controller] [0m[0m10:07:24,814 INFO  [org.jboss.as] (Controller Boot Thread) JBAS015961: Http management interface listening on http://0.0.0.0:9990/management[0m domain-slave&gt; [Host Controller] [0m[0m10:07:24,815 INFO  [org.jboss.as] (Controller Boot Thread) JBAS015954: Admin console is not enabled[0m domain-slave&gt; [Host Controller] [0m[0m10:07:24,815 INFO  [org.jboss.as] (Controller Boot Thread) JBAS015874: WildFly 8.2.0.Final "Tweek" (Host Controller) started in 14815ms - Started 44 of 45 services (13 services are lazy, passive or on-demand)[0m DOCKER&gt; docker ps -aq  DOCKER&gt; docker rm -f 6a9961814ca2  domain-slave&gt; [Server:server-one] [0m[31m10:07:26,410 ERROR [org.jboss.as.controller.management-operation] (Controller Boot Thread) JBAS014613: Operation ("add") failed - address: ([("interface" =&gt; "unsecure")]) - failure description: "JBAS014740: No interface criteria was provided"[0m domain-master&gt; [Host Controller] [0m[33m10:07:26,464 WARN  [org.jboss.as.domain] (Remoting "0ef33fc017ce:MANAGEMENT" I/O-1) JBAS010929: Connection to remote host "6a9961814ca2" closed unexpectedly[0m domain-master&gt; [Host Controller] [33m[0m[0m10:07:26,468 INFO  [org.jboss.as.domain] (Remoting "0ef33fc017ce:MANAGEMENT" I/O-1) JBAS010925: Unregistered remote slave host "6a9961814ca2"[0m DOCKER&gt; docker rm -f 0ef33fc017ce  Tests run: 1, Failures: 0, Errors: 1, Skipped: 0, Time elapsed: 8.319 sec &lt;&lt;&lt; FAILURE! - in org.wildfly.camel.test.docker.domain.DockerDomainTest testEndpoint(org.wildfly.camel.test.docker.domain.DockerDomainTest)  Time elapsed: 4.992 sec  &lt;&lt;&lt; ERROR! java.io.IOException: java.util.concurrent.ExecutionException: java.net.SocketException: Unexpected end of file from server     at java.util.concurrent.FutureTask.report(FutureTask.java:122)     at java.util.concurrent.FutureTask.get(FutureTask.java:202)     at org.wildfly.camel.test.common.HttpRequest.execute(HttpRequest.java:74)     at org.wildfly.camel.test.common.HttpRequest.get(HttpRequest.java:52)     at org.wildfly.camel.test.docker.domain.DockerDomainTest.testEndpoint(DockerDomainTest.java:80) Caused by: java.net.SocketException: Unexpected end of file from server     at sun.net.www.http.HttpClient.parseHTTPHeader(HttpClient.java:772)     at sun.net.www.http.HttpClient.parseHTTP(HttpClient.java:633)     at sun.net.www.http.HttpClient.parseHTTPHeader(HttpClient.java:769)     at sun.net.www.http.HttpClient.parseHTTP(HttpClient.java:633)     at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1323)     at java.net.HttpURLConnection.getResponseCode(HttpURLConnection.java:468)     at org.wildfly.camel.test.common.HttpRequest.processResponse(HttpRequest.java:115)     at org.wildfly.camel.test.common.HttpRequest.access$000(HttpRequest.java:40)     at org.wildfly.camel.test.common.HttpRequest$1.call(HttpRequest.java:49)     at org.wildfly.camel.test.common.HttpRequest$1.call(HttpRequest.java:44)     at java.util.concurrent.FutureTask.run(FutureTask.java:262)     at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)     at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)     at java.lang.Thread.run(Thread.java:745)   Results :  Tests in error:    DockerDomainTest.testEndpoint:80 » IO java.util.concurrent.ExecutionException:... ``` </body>
		<created>2015-02-09 10:21:15</created>
		<closed>2015-03-03 14:46:50</closed>
	</bug>
	<bug>
		<id>274</id>
		<title>Module camel-core exposes org.springframework</title>
		<body>Module org.apache.camel.core incorrectly exports org.springframework packages. These should be an implementation detail of camel-core </body>
		<created>2015-02-06 08:36:50</created>
		<closed>2015-02-06 12:41:14</closed>
	</bug>
	<bug>
		<id>272</id>
		<title>Module camel-rss exposes com.sun.syndication</title>
		<body>Module org.apache.camel.component.rss incorrectly exports com.sun.syndication packages. These should be an implementation detail of camel-rss </body>
		<created>2015-02-06 08:30:44</created>
		<closed>2015-03-09 15:43:59</closed>
	</bug>
	<bug>
		<id>271</id>
		<title>Module camel-script exposes bsh</title>
		<body>Module `org.apache.camel.component.script` incorrectly exports bsh packages. These should be an implementation detail of camel-script </body>
		<created>2015-02-06 08:26:06</created>
		<closed>2015-03-09 15:43:59</closed>
	</bug>
	<bug>
		<id>265</id>
		<title>Server bootstrap hangs in Hawtio remote Git access</title>
		<body>``` 09:41:25,471 INFO  [io.hawt.git.GitFacade] (MSC service thread 1-1) Performing a pull in git repository /Users/tdiesler/.hawtio/config on remote URL: https://github.com/hawtio/hawtio-config.git. Subsequent pull attempts will use debug logging ```  hawtio should not access git ay all  Tracked by [hawtio #1894](https://github.com/hawtio/hawtio/issues/1894) </body>
		<created>2015-02-05 08:42:56</created>
		<closed>2015-02-06 12:06:57</closed>
	</bug>
	<bug>
		<id>258</id>
		<title>Incorrect version of spring-core is being packaged with the subsystem</title>
		<body>Seems that we have been using spring-core-3.2.8.RELEASE for some time and this has gone unnoticed. The version of all our Spring dependencies should be 3.2.11.RELEASE. </body>
		<created>2015-02-04 09:37:06</created>
		<closed>2015-02-09 10:00:09</closed>
	</bug>
	<bug>
		<id>255</id>
		<title>Unable to load properties file from classpath</title>
		<body>It is now not possible to load propertyPlaceholder file from classpath  ``` xml &lt;propertyPlaceholder location="classpath:test.properties" prefixToken="{$" suffixToken="}" id="properties"/&gt; ```  Tracked by [ENTESB-2272](https://issues.jboss.org/browse/ENTESB-2272) </body>
		<created>2015-02-03 15:46:34</created>
		<closed>2015-02-12 14:28:42</closed>
	</bug>
	<bug>
		<id>254</id>
		<title>Unable to load custom exception in load balancer</title>
		<body>It is not possible to load custom exception in load balancer from classpath.  ``` xml &lt;route&gt;     &lt;from uri="direct:failover" /&gt;     &lt;loadBalance&gt;         &lt;failover&gt;             &lt;exception&gt;org.jboss.soa.qa.camel.MyCamelException&lt;/exception&gt;         &lt;/failover&gt;         &lt;to uri="mock:failover" /&gt;         &lt;to uri="jms:queue:failover1?username=admin&amp;amp;password=admin" /&gt;     &lt;/loadBalance&gt; &lt;/route&gt; ```  Tracked by [ENTESB-2297](https://issues.jboss.org/browse/ENTESB-2297) </body>
		<created>2015-02-03 15:44:19</created>
		<closed>2015-02-12 14:48:15</closed>
	</bug>
	<bug>
		<id>246</id>
		<title>Cannot load components defined in system contexts</title>
		<body></body>
		<created>2015-01-28 13:05:38</created>
		<closed>2015-01-28 13:15:16</closed>
	</bug>
	<bug>
		<id>229</id>
		<title>Unwanted module XML definition is being generated for org.wildfly.camel:wildfly-camel-modules</title>
		<body>Search the module tar.gz file and notice that it bundles an unwanted module definition for wildfly-camel-modules:wildfly-camel-modules  ```  tar tvfz /home/james/.m2/repository/org/wildfly/camel/wildfly-camel-modules/2.1.0-SNAPSHOT/wildfly-camel-modules-2.1.0-SNAPSHOT.tar.gz | grep wildfly drwxr-xr-x 0/0               0 2015-01-22 15:14 modules/system/layers/fuse/org/wildfly/ drwxr-xr-x 0/0               0 2015-01-22 15:14 modules/system/layers/fuse/org/wildfly/camel/ drwxr-xr-x 0/0               0 2015-01-22 15:14 modules/system/layers/fuse/org/wildfly/camel/wildfly-camel-modules/ drwxr-xr-x 0/0               0 2015-01-22 15:14 modules/system/layers/fuse/org/wildfly/camel/wildfly-camel-modules/main/ -rw-r--r-- 0/0            1875 2015-01-22 15:14 modules/system/layers/fuse/org/wildfly/camel/wildfly-camel-modules/main/module.xml ``` </body>
		<created>2015-01-22 15:13:01</created>
		<closed>2015-01-22 15:56:12</closed>
	</bug>
	<bug>
		<id>225</id>
		<title>Components not being loaded on XML Context definitions</title>
		<body>Define an XML Camel context within either standalone.xml or a jboss-camel-context.xml file which uses any of the non Camel core endpoints and you'll be presented with a message like the following when the app server starts up:  ``` No component found with scheme: netty4 ``` </body>
		<created>2015-01-20 10:57:29</created>
		<closed>2015-01-22 13:00:17</closed>
	</bug>
	<bug>
		<id>217</id>
		<title>Test security domain should not be present in standalone-camel.xml</title>
		<body>My bad. This was added for one of the integration tests.  It needs removing and the test case will need to configure the domain programmatically. </body>
		<created>2015-01-13 10:56:05</created>
		<closed>2015-01-15 13:30:32</closed>
	</bug>
	<bug>
		<id>194</id>
		<title>camel-lucene component is not compatible with the WildFly Lucene module</title>
		<body>When the component is loaded against the WildFly Lucene module, it results in:  ``` java.lang.NoSuchFieldError: LUCENE_46     at org.apache.camel.component.lucene.LuceneConfiguration.&lt;init&gt;(LuceneConfiguration.java:38)     at org.apache.camel.component.lucene.LuceneComponent.&lt;init&gt;(LuceneComponent.java:30)     at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)     at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57)     at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)     at java.lang.reflect.Constructor.newInstance(Constructor.java:526)     at java.lang.Class.newInstance(Class.java:379) ```  Not surprising as WildFly Lucene 3.6.2 has no handle on org.apache.lucene.util.Version.LUCENE_46.  The problem code is [here](https://github.com/apache/camel/blob/master/components/camel-lucene/src/main/java/org/apache/camel/component/lucene/LuceneConfiguration.java#L38).   Maybe the version can be made to be configurable, but then there's no guarantee that any of the other component code will work properly. 3.6.2 to 4.6 is quite a large jump. </body>
		<created>2014-12-17 10:17:35</created>
		<closed>2015-01-14 12:09:55</closed>
	</bug>
	<bug>
		<id>192</id>
		<title>Cannot build on openjdk</title>
		<body>``` [INFO] ------------------------------------------------------------------------ [INFO] Reactor Summary: [INFO]  [INFO] Wildfly Camel ...................................... SUCCESS [02:48 min] [INFO] Wildfly Camel :: Subsystem ......................... FAILURE [01:42 min] [INFO] Wildfly Camel :: Enricher .......................... SKIPPED [INFO] Wildfly Camel :: Modules ........................... SKIPPED [INFO] Wildfly Camel :: Patch ............................. SKIPPED [INFO] Wildfly Camel :: Testsuite ......................... SKIPPED [INFO] Wildfly Camel :: Testsuite :: Common ............... SKIPPED [INFO] Wildfly Camel :: Testsuite :: Standalone ........... SKIPPED [INFO] ------------------------------------------------------------------------ [INFO] BUILD FAILURE [INFO] ------------------------------------------------------------------------ [INFO] Total time: 04:32 min [INFO] Finished at: 2014-12-15T11:17:32+00:00 [INFO] Final Memory: 21M/86M [INFO] ------------------------------------------------------------------------ [ERROR] Failed to execute goal on project wildfly-camel-subsystem: Could not resolve dependencies for project org.wildfly.camel:wildfly-camel-subsystem:jar:2.1.0-SNAPSHOT: Could not find artifact sun.jdk:jconsole:jar:jdk at specified path /usr/lib/jvm/java-1.7.0-openjdk-1.7.0.71.x86_64/jre/../lib/jconsole.jar -&gt; [Help 1] ``` </body>
		<created>2014-12-15 11:31:06</created>
		<closed>2014-12-15 11:40:27</closed>
	</bug>
	<bug>
		<id>185</id>
		<title>docker:stop cannot reliably stop/kill containers</title>
		<body>Stopping a container through the docker-maven-plugin may fail for a variety of reasons. The default command line behaviour is that the container is killed following an unsuccessful stop.  The maven build should not fail when a container cannot be stopped  ``` [INFO] --- docker-maven-plugin:0.10.5:stop (stop-containers) @ wildfly-camel-itests-docker-domain --- domain-master&gt; [Host Controller] 08:59:37,303 WARN  [org.jboss.as.domain] (Remoting "7cb7c30e92e5:MANAGEMENT" I/O-1) JBAS010929: Connection to remote host "c9acd85e4135" closed unexpectedly domain-master&gt; [Host Controller] 08:59:37,304 INFO  [org.jboss.as.domain] (Remoting "7cb7c30e92e5:MANAGEMENT" I/O-1) JBAS010925: Unregistered remote slave host "c9acd85e4135" [INFO] ------------------------------------------------------------------------ [INFO] BUILD FAILURE [INFO] ------------------------------------------------------------------------ [INFO] Total time: 44.838 s [INFO] Finished at: 2014-12-12T08:59:48+00:00 [INFO] Final Memory: 34M/330M [INFO] ------------------------------------------------------------------------ [ERROR] Failed to execute goal org.jolokia:docker-maven-plugin:0.10.5:stop (stop-containers) on project wildfly-camel-itests-docker-domain: Cannot shutdown: Error while calling docker: Stopping container with id c9acd85e4135f1734d8f3dc9475e3416eb5569ea912f88418b190ec8dc5eb25d (code: 500) -&gt; [Help 1] ```  The root cause is likely an open file handle in wildfly that keeps the devicemapper busy. </body>
		<created>2014-12-12 08:32:06</created>
		<closed>2015-02-26 13:36:42</closed>
	</bug>
	<bug>
		<id>184</id>
		<title>smartics generator includes redundant module definitions</title>
		<body>Currently there is no mechanism that guarantees the correct wiring to existing wildfly modules. As a result, redundant/incorrect module definitions are being generated.  org/apache/logging for example  ``` [tdiesler@macbook modules]$ tar tzf target/wildfly-camel-modules-2.1.0-SNAPSHOT.tar.gz | grep jar | sort modules/ca/uhn/hapi/base/main/hapi-base-2.2.jar modules/com/jcraft/jsch/main/jsch-0.1.50.jar modules/io/github/rometools/rome/main/rome-1.0.jar modules/io/netty/netty-buffer/main/netty-buffer-4.0.23.Final.jar modules/io/netty/netty-codec/main/netty-codec-4.0.23.Final.jar modules/io/netty/netty-common/main/netty-common-4.0.23.Final.jar modules/io/netty/netty-handler/main/netty-handler-4.0.23.Final.jar modules/io/netty/netty-transport/main/netty-transport-4.0.23.Final.jar modules/net/sf/saxon/he/main/Saxon-HE-9.5.1-5.jar modules/org/apache/abdera/core/main/abdera-core-1.1.3.jar modules/org/apache/abdera/i18n/main/abdera-i18n-1.1.3.jar modules/org/apache/abdera/parser/main/abdera-parser-1.1.3.jar modules/org/apache/activemq/camel/main/activemq-camel-5.10.0.jar modules/org/apache/activemq/main/activemq-broker-5.10.0.jar modules/org/apache/activemq/main/activemq-client-5.10.0.jar modules/org/apache/activemq/main/activemq-jms-pool-5.10.0.jar modules/org/apache/activemq/main/activemq-kahadb-store-5.10.0.jar modules/org/apache/activemq/main/activemq-openwire-legacy-5.10.0.jar modules/org/apache/activemq/main/activemq-pool-5.10.0.jar modules/org/apache/activemq/main/activemq-protobuf-1.1.jar modules/org/apache/activemq/main/activemq-ra-5.10.0.jar modules/org/apache/activemq/main/activemq-spring-5.10.0.jar modules/org/apache/camel/component/atom/main/camel-atom-2.14.0.jar modules/org/apache/camel/component/bindy/main/camel-bindy-2.14.0.jar modules/org/apache/camel/component/cdi/main/camel-cdi-2.14.0.jar modules/org/apache/camel/component/cxf/main/camel-cxf-2.14.0.jar modules/org/apache/camel/component/cxf/main/camel-cxf-transport-2.14.0.jar modules/org/apache/camel/component/ftp/main/camel-ftp-2.14.0.jar modules/org/apache/camel/component/hl7/main/camel-hl7-2.14.0.jar modules/org/apache/camel/component/jaxb/main/camel-jaxb-2.14.0.jar modules/org/apache/camel/component/jms/main/camel-jms-2.14.0.jar modules/org/apache/camel/component/jmx/main/camel-jmx-2.14.0.jar modules/org/apache/camel/component/jpa/main/camel-jpa-2.14.0.jar modules/org/apache/camel/component/lucene/main/camel-lucene-2.14.0.jar modules/org/apache/camel/component/mail/main/camel-mail-2.14.0.jar modules/org/apache/camel/component/mina2/main/camel-mina2-2.14.0.jar modules/org/apache/camel/component/mqtt/main/camel-mqtt-2.14.0.jar modules/org/apache/camel/component/mvel/main/camel-mvel-2.14.0.jar modules/org/apache/camel/component/netty4/main/camel-netty4-2.14.0.jar modules/org/apache/camel/component/ognl/main/camel-ognl-2.14.0.jar modules/org/apache/camel/component/quartz/main/camel-quartz-2.14.0.jar modules/org/apache/camel/component/rss/main/camel-rss-2.14.0.jar modules/org/apache/camel/component/saxon/main/camel-saxon-2.14.0.jar modules/org/apache/camel/component/script/main/camel-script-2.14.0.jar modules/org/apache/camel/component/soap/main/camel-soap-2.14.0.jar modules/org/apache/camel/component/sql/main/camel-sql-2.14.0.jar modules/org/apache/camel/component/weather/main/camel-weather-2.14.0.jar modules/org/apache/camel/core/main/camel-core-2.14.0.jar modules/org/apache/camel/core/xml/main/camel-core-xml-2.14.0.jar modules/org/apache/camel/spring/main/camel-spring-2.14.0.jar modules/org/apache/commons/codec/main/commons-codec-1.9.jar modules/org/apache/commons/logging/main/commons-logging-1.0.3.jar modules/org/apache/commons/net/main/commons-net-3.3.jar modules/org/apache/commons/pool/main/commons-pool-1.6.jar modules/org/apache/deltaspike/cdictrl/api/main/deltaspike-cdictrl-api-1.0.2.jar modules/org/apache/deltaspike/core/api/main/deltaspike-core-api-1.0.2.jar modules/org/apache/deltaspike/core/impl/main/deltaspike-core-impl-1.0.2.jar modules/org/apache/geronimo/specs/geronimo-javamail_1/4_spec/main/geronimo-javamail_1.4_spec-1.7.1.jar modules/org/apache/geronimo/specs/geronimo-osgi-locator/main/geronimo-osgi-locator-1.0.jar modules/org/apache/geronimo/specs/geronimo-osgi-registry/main/geronimo-osgi-registry-1.0.jar modules/org/apache/jakarta/regexp/main/jakarta-regexp-1.4.jar modules/org/apache/james/apache-mime4j-core/main/apache-mime4j-core-0.7.2.jar modules/org/apache/lucene/analyzers-common/main/lucene-analyzers-common-4.6.1.jar modules/org/apache/lucene/core/main/lucene-core-4.6.1.jar modules/org/apache/lucene/queries/main/lucene-queries-4.6.1.jar modules/org/apache/lucene/queryparser/main/lucene-queryparser-4.6.1.jar modules/org/apache/lucene/sandbox/main/lucene-sandbox-4.6.1.jar modules/org/apache/mina/core/main/mina-core-2.0.7.jar modules/org/apache/servicemix/bundles/javassist/main/org.apache.servicemix.bundles.javassist-3.12.1.GA_3.jar modules/org/apache/servicemix/bundles/ognl/main/org.apache.servicemix.bundles.ognl-3.0.8_1.jar modules/org/apache/ws/commons/axiom/axiom-api/main/axiom-api-1.2.14.jar modules/org/apache/ws/commons/axiom/axiom-impl/main/axiom-impl-1.2.14.jar modules/org/apache/xbean/spring/main/xbean-spring-3.16.jar modules/org/codehaus/jackson/jackson-core-asl/main/jackson-core-asl-1.9.12.jar modules/org/codehaus/jackson/jackson-mapper-asl/main/jackson-mapper-asl-1.9.12.jar modules/org/codehaus/woodstox/stax2-api/main/stax2-api-3.1.1.jar modules/org/codehaus/woodstox/woodstox-core-asl/main/woodstox-core-asl-4.1.4.jar modules/org/fusesource/hawtbuf/main/hawtbuf-1.10.jar modules/org/fusesource/hawtdispatch/main/hawtdispatch-1.21.jar modules/org/fusesource/hawtdispatch/transport/main/hawtdispatch-transport-1.21.jar modules/org/fusesource/mqtt-client/main/mqtt-client-1.10.jar modules/org/jaxen/main/jaxen-1.1.1.jar modules/org/jboss/gravia/main/gravia-provision-1.1.0.Beta44.jar modules/org/jboss/gravia/main/gravia-repository-1.1.0.Beta44.jar modules/org/jboss/gravia/main/gravia-resolver-1.1.0.Beta44.jar modules/org/jboss/gravia/main/gravia-resource-1.1.0.Beta44.jar modules/org/jboss/gravia/main/gravia-runtime-api-1.1.0.Beta44.jar modules/org/jboss/gravia/main/gravia-runtime-embedded-1.1.0.Beta44.jar modules/org/jboss/gravia/main/org.apache.felix.configadmin-1.8.0.jar modules/org/jboss/gravia/main/org.apache.felix.http.bridge-2.2.1.jar modules/org/jboss/gravia/main/org.apache.felix.log-1.0.1.jar modules/org/jboss/gravia/main/org.apache.felix.metatype-1.0.8.jar modules/org/jboss/gravia/main/org.apache.felix.scr-1.6.2.jar modules/org/mvel/mvel2/main/mvel2-2.2.1.Final.jar modules/org/osgi/core/main/org.osgi.core-4.3.1.jar modules/org/osgi/enterprise/main/org.osgi.enterprise-5.0.0.jar modules/org/quartz-scheduler/quartz/main/quartz-1.8.6.jar modules/org/springframework/aop/main/aopalliance-1.0.jar modules/org/springframework/aop/main/spring-aop-3.2.11.RELEASE.jar modules/org/springframework/beans/main/spring-beans-3.2.11.RELEASE.jar modules/org/springframework/context/main/spring-context-3.2.11.RELEASE.jar modules/org/springframework/core/main/spring-core-3.2.8.RELEASE.jar modules/org/springframework/expression/main/spring-expression-3.2.11.RELEASE.jar modules/org/springframework/jdbc/main/spring-jdbc-3.2.11.RELEASE.jar modules/org/springframework/jms/main/spring-jms-3.2.11.RELEASE.jar modules/org/springframework/orm/main/spring-orm-3.2.11.RELEASE.jar modules/org/springframework/transaction/main/spring-tx-3.2.11.RELEASE.jar ```  We support every module we ship. Therefore, its important that we only ship what we can support ;-) - Duplicate module definitions (possibly with multiple versions) must be avoided - License constraints must be applied  If this cannot be automated, we may need to use smartics to generate the next module definition "suggestion" and have an additional review + copy step.  An alternative may be to maintain an list like above in scm and make sure that every change to the list must manually be endorsed. </body>
		<created>2014-12-12 08:12:33</created>
		<closed>2015-01-09 08:44:57</closed>
	</bug>
	<bug>
		<id>167</id>
		<title>example-camel-rest generates orphan image</title>
		<body></body>
		<created>2014-12-10 14:14:11</created>
		<closed>2014-12-10 14:23:36</closed>
	</bug>
	<bug>
		<id>165</id>
		<title>WeatherTest may fail with 511</title>
		<body>[511](http://en.wikipedia.org/wiki/List_of_HTTP_status_codes#5xx_Server_Error) Network Authentication Required  ``` Caused by: java.io.IOException: Server returned HTTP response code: 511 for URL: http://api.openweathermap.org/data/2.5/forecast/daily?q=Madrid,Spain&amp;cnt=7     at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1626) [rt.jar:1.7.0_67]     at java.net.URL.openStream(URL.java:1037) [rt.jar:1.7.0_67]     at org.apache.camel.converter.IOConverter.toInputStream(IOConverter.java:69) [camel-core-2.14.0.jar:2.14.0]     at org.apache.camel.converter.IOConverter.toString(IOConverter.java:280) [camel-core-2.14.0.jar:2.14.0]     at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) [rt.jar:1.7.0_67]     at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57) [rt.jar:1.7.0_67]     at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) [rt.jar:1.7.0_67]     at java.lang.reflect.Method.invoke(Method.java:606) [rt.jar:1.7.0_67]     at org.apache.camel.util.ObjectHelper.invokeMethod(ObjectHelper.java:1002) [camel-core-2.14.0.jar:2.14.0] ``` </body>
		<created>2014-12-10 13:47:12</created>
		<closed>2014-12-12 14:37:41</closed>
	</bug>
	<bug>
		<id>130</id>
		<title>Error while attempting to retrieve a connection from the pool (on shutdown)</title>
		<body>On shutdown we often (almost always) get  ``` 08:46:27,463 ERROR [org.apache.camel.component.jms.DefaultJmsMessageListenerContainer] (Camel (amq-cdi-context) thread #2 - JmsConsumer[testQueue]) Could not refresh JMS Connection for destination 'testQueue' - retrying in 5000 ms. Cause: Error while attempting to retrieve a connection from the pool; nested exception is javax.jms.JMSException: Could not create Transport. Reason: java.lang.IllegalStateException: Shutdown in progress: javax.jms.JMSException: Error while attempting to retrieve a connection from the pool     at org.apache.activemq.jms.pool.PooledConnectionFactory.createJmsException(PooledConnectionFactory.java:247)     at org.apache.activemq.jms.pool.PooledConnectionFactory.createConnection(PooledConnectionFactory.java:230)     at org.apache.activemq.jms.pool.PooledConnectionFactory.createConnection(PooledConnectionFactory.java:181)     at org.springframework.jms.support.JmsAccessor.createConnection(JmsAccessor.java:184)     at org.springframework.jms.listener.AbstractJmsListeningContainer.createSharedConnection(AbstractJmsListeningContainer.java:405)     at org.springframework.jms.listener.AbstractJmsListeningContainer.refreshSharedConnection(AbstractJmsListeningContainer.java:390)     at org.springframework.jms.listener.DefaultMessageListenerContainer.refreshConnectionUntilSuccessful(DefaultMessageListenerContainer.java:885)     at org.springframework.jms.listener.DefaultMessageListenerContainer.recoverAfterListenerSetupFailure(DefaultMessageListenerContainer.java:861)     at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.run(DefaultMessageListenerContainer.java:1012)     at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145) [rt.jar:1.7.0_67]     at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615) [rt.jar:1.7.0_67]     at java.lang.Thread.run(Thread.java:745) [rt.jar:1.7.0_67] Caused by: javax.jms.JMSException: Could not create Transport. Reason: java.lang.IllegalStateException: Shutdown in progress     at org.apache.activemq.util.JMSExceptionSupport.create(JMSExceptionSupport.java:36)     at org.apache.activemq.ActiveMQConnectionFactory.createTransport(ActiveMQConnectionFactory.java:317) [activemq-client-5.10.0.jar:5.10.0]     at org.apache.activemq.ActiveMQConnectionFactory.createActiveMQConnection(ActiveMQConnectionFactory.java:330) [activemq-client-5.10.0.jar:5.10.0]     at org.apache.activemq.ActiveMQConnectionFactory.createActiveMQConnection(ActiveMQConnectionFactory.java:303) [activemq-client-5.10.0.jar:5.10.0]     at org.apache.activemq.ActiveMQConnectionFactory.createConnection(ActiveMQConnectionFactory.java:243) [activemq-client-5.10.0.jar:5.10.0]     at org.apache.activemq.jms.pool.PooledConnectionFactory.createConnection(PooledConnectionFactory.java:255)     at org.apache.activemq.jms.pool.PooledConnectionFactory$1.makeObject(PooledConnectionFactory.java:99)     at org.apache.activemq.jms.pool.PooledConnectionFactory$1.makeObject(PooledConnectionFactory.java:79)     at org.apache.commons.pool.impl.GenericKeyedObjectPool.borrowObject(GenericKeyedObjectPool.java:1220)     at org.apache.activemq.jms.pool.PooledConnectionFactory.createConnection(PooledConnectionFactory.java:217)     ... 10 more Caused by: java.lang.IllegalStateException: Shutdown in progress     at java.lang.ApplicationShutdownHooks.add(ApplicationShutdownHooks.java:66) [rt.jar:1.7.0_67]     at java.lang.Runtime.addShutdownHook(Runtime.java:211) [rt.jar:1.7.0_67]     at org.apache.activemq.broker.BrokerService.addShutdownHook(BrokerService.java:2351)     at org.apache.activemq.broker.BrokerService.doStartBroker(BrokerService.java:668)     at org.apache.activemq.broker.BrokerService.startBroker(BrokerService.java:659)     at org.apache.activemq.broker.BrokerService.start(BrokerService.java:595)     at org.apache.activemq.transport.vm.VMTransportFactory.doCompositeConnect(VMTransportFactory.java:124)     at org.apache.activemq.transport.vm.VMTransportFactory.doConnect(VMTransportFactory.java:54)     at org.apache.activemq.transport.TransportFactory.connect(TransportFactory.java:64)     at org.apache.activemq.ActiveMQConnectionFactory.createTransport(ActiveMQConnectionFactory.java:315) [activemq-client-5.10.0.jar:5.10.0]     ... 18 more ```  Please take a look to get the ball rolling. </body>
		<created>2014-12-05 07:54:30</created>
		<closed>2014-12-05 08:27:56</closed>
	</bug>
	<bug>
		<id>96</id>
		<title>CXF SOAP Example does not trigger any Camel route to run</title>
		<body>Although the integration test passes, there is no interaction with Camel in this example. I.e. none of the camel routes are being triggered.  </body>
		<created>2014-11-24 09:07:05</created>
		<closed>2014-11-24 11:40:24</closed>
	</bug>
	<bug>
		<id>83</id>
		<title>ActiveMQ integration test fails intermittently</title>
		<body>The ActiveMQ integration test fails from time-to-time with  ``` [0m[31m16:34:37,062 ERROR [org.apache.camel.processor.DefaultErrorHandler] (Camel (camel-14) thread #6 - JmsConsumer[testQueue]) Failed delivery for (MessageId: ID:ip-10-45-21-139-55900-1415982850494-5:1:1:1:1 on ExchangeId: ID-ip-10-45-21-139-36662-1415982847872-13-1).   Exhausted after delivery attempt: 1 caught: org.apache.camel.component.direct.DirectConsumerNotAvailableException: No consumers available on endpoint: Endpoint[direct://end]. Exchange[Message: Hello Kermit] ``` </body>
		<created>2014-11-17 13:47:35</created>
		<closed>2014-11-18 10:00:16</closed>
	</bug>
	<bug>
		<id>79</id>
		<title>ActiveMQ module should not be creating a broker</title>
		<body>I'm not sure we should be providing a ActiveMQ broker as part of the camel subsystem.  Perhaps we should leave that to a ActiveMQ subsystem. </body>
		<created>2014-11-14 13:13:53</created>
		<closed>2014-12-03 12:04:29</closed>
	</bug>
	<bug>
		<id>56</id>
		<title>JPA example leaves untracked files behind</title>
		<body>``` [tdiesler@macbook wildfly-camel]$ git status On branch master Your branch is up-to-date with 'upstream/master'.  Untracked files:   (use "git add &lt;file&gt;..." to include in what will be committed)      input/  nothing added to commit but untracked files present (use "git add" to track) ``` </body>
		<created>2014-11-07 11:39:13</created>
		<closed>2014-11-07 13:17:46</closed>
	</bug>
	<bug>
		<id>54</id>
		<title>Examples run starts multiple wildfly instances</title>
		<body></body>
		<created>2014-11-07 11:09:55</created>
		<closed>2014-11-07 13:49:15</closed>
	</bug>
	<bug>
		<id>15</id>
		<title>Remove need to embed camel-cdi, deltaspike</title>
		<body>Currently, there is a [webapp](https://github.com/tdiesler/wildfly-camel/blob/master/webapp/pom.xml#L41) deployed as part of the subsystem that contains  - camel-cdi  - deltaspike-core-api  - deltaspike-core-impl  - deltaspike-cdictrl-api  Same is true for the the [CDIIntegrationTest](https://github.com/tdiesler/wildfly-camel/blob/master/itests/src/test/java/org/wildfly/camel/test/cdi/CDIIntegrationTest.java#L97).  In both cases I would like to replace these embedded jars with references to the already existing modules.  WildFly Issue: https://issues.jboss.org/browse/WFLY-4009 </body>
		<created>2014-10-22 11:48:05</created>
		<closed>2014-10-23 07:26:28</closed>
	</bug>
</bugs>
