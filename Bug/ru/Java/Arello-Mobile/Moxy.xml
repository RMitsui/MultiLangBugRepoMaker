<?xml version="1.0" encoding="ISO-8859-1"?>

<bugs>
	<bug>
		<id>203</id>
		<title>Broken generation for parameterized view.</title>
		<body>Broken generation if view interface is parameterized of any. Example: `@StateStrategyType(SingleStateStrategy.class) public interface CommonView&lt;T&gt; extends MvpView {     void showParametrizedData(T any); }` `@StateStrategyType(SingleStateStrategy.class) public interface MainView extends CommonView&lt;String&gt; {     void showNotParametrizedData(String any); }`  # Gradle log: :app:javaPreCompileDebug /home/valdzx/Workspace/github/MoxyTesting/app/build/generated/source/apt/debug/ua/com/vald_zx/moxyissuesample/mvp/main/view/MainView$$State.java:27: error: cannot find symbol public void showParametrizedData(T any) {                                  ^   symbol:   class T   location: class MainView$$State /home/valdzx/Workspace/github/MoxyTesting/app/build/generated/source/apt/debug/ua/com/vald_zx/moxyissuesample/mvp/main/view/MainView$$State.java:58: error: cannot find symbol public final T any;              ^   symbol:   class T   location: class MainView$$State.ShowParametrizedDataCommand /home/valdzx/Workspace/github/MoxyTesting/app/build/generated/source/apt/debug/ua/com/vald_zx/moxyissuesample/mvp/main/view/MainView$$State.java:60: error: cannot find symbol ShowParametrizedDataCommand(T any) {                             ^   symbol:   class T   location: class MainView$$State.ShowParametrizedDataCommand 3 errors  &gt; Bug actual for version **Moxy 1.5.5** &gt; On 1.5.3 works fine.  ## Sample https://github.com/ValdZX/MoxyTesting</body>
		<created>2018-06-06 14:32:44</created>
		<closed>2019-04-14 17:42:56</closed>
	</bug>
	<bug>
		<id>114</id>
		<title>Баг сохранения текста EditText в 1.5.0 версии </title>
		<body>После обновления с 1.4.6 до 1.5.0 появилось странное поведение `MvpAppCompatActivity` ![Bug](http://savepic.ru/13516345.gif)</body>
		<created>2017-04-13 23:27:45</created>
		<closed>2017-04-14 07:36:19</closed>
	</bug>
	<bug>
		<id>110</id>
		<title>Проблема при использовании MOXY в адаптерах</title>
		<body>Большой вопрос по использованию MOXY в адаптерах. Хотя чисто теоретически такая проблема может возникнуть и без адаптера при неаккуратном использовании механизма родительских/дочерних делегатов.  Рассмотрим пример: https://github.com/Arello-Mobile/Moxy/blob/master/sample-github/src/main/java/com/arellomobile/mvp/sample/github/ui/adapters/RepositoriesAdapter.java  Я добавил в методы ```SignInActivity#onStart()``` и ```HomeActivity#onStart()``` логирование презентеров в ```PresenterStore```: ```java public void logPresenters() { for (Map.Entry&lt;Key, MvpPresenter&gt; currentEntry : mPresenters.entrySet()) { Log.d("PresenterStore", currentEntry.getKey().mPresenterTag + " - " + currentEntry.getValue()); } } ``` Теперь рассмотрим кейс:  1. Открыть сэмпл ``` 04-07 10:33:09.800 3789-3789/? D/PresenterStore: com.arellomobile.mvp.sample.github.ui.activities.SignInActivity$MvpDelegate@db7f1c6$mSignInPresenterBinder - com.arellomobile.mvp.sample.github.mvp.presenters.SignInPresenter@1a92baa 04-07 10:33:09.800 3789-3789/? D/PresenterStore: com.arellomobile.mvp.sample.github.ui.activities.SplashActivity$MvpDelegate@f8c3ffd$mSplashPresenterBinder - com.arellomobile.mvp.sample.github.mvp.presenters.SplashPresenter@1178af0 ``` 2. Залогиниться ``` 04-07 10:36:32.723 3789-3789/com.arellomobile.mvp.sample.github D/PresenterStore: RepositoryLikesPresenter - com.arellomobile.mvp.sample.github.mvp.presenters.RepositoryLikesPresenter@e27891c 04-07 10:36:32.723 3789-3789/com.arellomobile.mvp.sample.github D/PresenterStore: com.arellomobile.mvp.sample.github.ui.activities.HomeActivity$MvpDelegate@25d46a7$mRepositoriesPresenterBinder - com.arellomobile.mvp.sample.github.mvp.presenters.RepositoriesPresenter@c4c86fd 04-07 10:36:32.723 3789-3789/com.arellomobile.mvp.sample.github D/PresenterStore: com.arellomobile.mvp.sample.github.ui.activities.SignInActivity$MvpDelegate@db7f1c6$mSignInPresenterBinder - com.arellomobile.mvp.sample.github.mvp.presenters.SignInPresenter@1a92baa 04-07 10:36:32.723 3789-3789/com.arellomobile.mvp.sample.github D/PresenterStore: com.arellomobile.mvp.sample.github.ui.activities.SplashActivity$MvpDelegate@acf8253$mSplashPresenterBinder - com.arellomobile.mvp.sample.github.mvp.presenters.SplashPresenter@341f790 04-07 10:36:32.724 3789-3789/com.arellomobile.mvp.sample.github D/PresenterStore: com.arellomobile.mvp.sample.github.ui.activities.HomeActivity$MvpDelegate@25d46a7$mHomePresenterBinder - com.arellomobile.mvp.sample.github.mvp.presenters.HomePresenter@264bff2 04-07 10:36:32.724 3789-3789/com.arellomobile.mvp.sample.github D/PresenterStore: com.arellomobile.mvp.sample.github.ui.activities.HomeActivity$MvpDelegate@25d46a7$mSignOutPresenterBinder - com.arellomobile.mvp.sample.github.mvp.presenters.SignOutPresenter@9682754 ``` 3. Повернуть экран ``` 04-07 10:37:26.785 3789-3789/com.arellomobile.mvp.sample.github D/PresenterStore: RepositoryLikesPresenter - com.arellomobile.mvp.sample.github.mvp.presenters.RepositoryLikesPresenter@e27891c 04-07 10:37:26.785 3789-3789/com.arellomobile.mvp.sample.github D/PresenterStore: com.arellomobile.mvp.sample.github.ui.adapters.RepositoriesAdapter$RepositoryHolder$MvpDelegate@8b8786b$mRepositoryPresenterBinder - com.arellomobile.mvp.sample.github.mvp.presenters.RepositoryPresenter@8fe0fc8 04-07 10:37:26.785 3789-3789/com.arellomobile.mvp.sample.github D/PresenterStore: com.arellomobile.mvp.sample.github.ui.adapters.RepositoriesAdapter$RepositoryHolder$MvpDelegate@c353df3$mRepositoryPresenterBinder - com.arellomobile.mvp.sample.github.mvp.presenters.RepositoryPresenter@87d9ab0 04-07 10:37:26.785 3789-3789/com.arellomobile.mvp.sample.github D/PresenterStore: com.arellomobile.mvp.sample.github.ui.adapters.RepositoriesAdapter$RepositoryHolder$MvpDelegate@72989e3$mRepositoryPresenterBinder - com.arellomobile.mvp.sample.github.mvp.presenters.RepositoryPresenter@d450fe0 04-07 10:37:26.785 3789-3789/com.arellomobile.mvp.sample.github D/PresenterStore: com.arellomobile.mvp.sample.github.ui.activities.HomeActivity$MvpDelegate@25d46a7$mRepositoriesPresenterBinder - com.arellomobile.mvp.sample.github.mvp.presenters.RepositoriesPresenter@c4c86fd 04-07 10:37:26.785 3789-3789/com.arellomobile.mvp.sample.github D/PresenterStore: com.arellomobile.mvp.sample.github.ui.adapters.RepositoriesAdapter$RepositoryHolder$MvpDelegate@3c1c357$mRepositoryPresenterBinder - com.arellomobile.mvp.sample.github.mvp.presenters.RepositoryPresenter@f4ede44 04-07 10:37:26.785 3789-3789/com.arellomobile.mvp.sample.github D/PresenterStore: com.arellomobile.mvp.sample.github.ui.adapters.RepositoriesAdapter$RepositoryHolder$MvpDelegate@2b3b937$mRepositoryPresenterBinder - com.arellomobile.mvp.sample.github.mvp.presenters.RepositoryPresenter@7ecea4 04-07 10:37:26.785 3789-3789/com.arellomobile.mvp.sample.github D/PresenterStore: com.arellomobile.mvp.sample.github.ui.adapters.RepositoriesAdapter$RepositoryHolder$MvpDelegate@3b7fa7b$mRepositoryPresenterBinder - com.arellomobile.mvp.sample.github.mvp.presenters.RepositoryPresenter@9c95098 04-07 10:37:26.785 3789-3789/com.arellomobile.mvp.sample.github D/PresenterStore: com.arellomobile.mvp.sample.github.ui.adapters.RepositoriesAdapter$RepositoryHolder$MvpDelegate@21a982f$mRepositoryPresenterBinder - com.arellomobile.mvp.sample.github.mvp.presenters.RepositoryPresenter@30b4e3c 04-07 10:37:26.785 3789-3789/com.arellomobile.mvp.sample.github D/PresenterStore: com.arellomobile.mvp.sample.github.ui.adapters.RepositoriesAdapter$RepositoryHolder$MvpDelegate@680b1d3$mRepositoryPresenterBinder - com.arellomobile.mvp.sample.github.mvp.presenters.RepositoryPresenter@72c3110 04-07 10:37:26.785 3789-3789/com.arellomobile.mvp.sample.github D/PresenterStore: com.arellomobile.mvp.sample.github.ui.adapters.RepositoriesAdapter$RepositoryHolder$MvpDelegate@e0e13f$mRepositoryPresenterBinder - com.arellomobile.mvp.sample.github.mvp.presenters.RepositoryPresenter@a1b4a0c 04-07 10:37:26.786 3789-3789/com.arellomobile.mvp.sample.github D/PresenterStore: com.arellomobile.mvp.sample.github.ui.adapters.RepositoriesAdapter$RepositoryHolder$MvpDelegate@78d7267$mRepositoryPresenterBinder - com.arellomobile.mvp.sample.github.mvp.presenters.RepositoryPresenter@2bf4814 04-07 10:37:26.786 3789-3789/com.arellomobile.mvp.sample.github D/PresenterStore: com.arellomobile.mvp.sample.github.ui.adapters.RepositoriesAdapter$RepositoryHolder$MvpDelegate@e8c525b$mRepositoryPresenterBinder - com.arellomobile.mvp.sample.github.mvp.presenters.RepositoryPresenter@38faf8 04-07 10:37:26.786 3789-3789/com.arellomobile.mvp.sample.github D/PresenterStore: com.arellomobile.mvp.sample.github.ui.activities.HomeActivity$MvpDelegate@25d46a7$mHomePresenterBinder - com.arellomobile.mvp.sample.github.mvp.presenters.HomePresenter@264bff2 04-07 10:37:26.786 3789-3789/com.arellomobile.mvp.sample.github D/PresenterStore: com.arellomobile.mvp.sample.github.ui.activities.HomeActivity$MvpDelegate@25d46a7$mSignOutPresenterBinder - com.arellomobile.mvp.sample.github.mvp.presenters.SignOutPresenter@9682754 04-07 10:37:26.786 3789-3789/com.arellomobile.mvp.sample.github D/PresenterStore: com.arellomobile.mvp.sample.github.ui.adapters.RepositoriesAdapter$RepositoryHolder$MvpDelegate@d5bc64f$mRepositoryPresenterBinder - com.arellomobile.mvp.sample.github.mvp.presenters.RepositoryPresenter@699b1dc 04-07 10:37:26.786 3789-3789/com.arellomobile.mvp.sample.github D/PresenterStore: com.arellomobile.mvp.sample.github.ui.adapters.RepositoriesAdapter$RepositoryHolder$MvpDelegate@8ec475f$mRepositoryPresenterBinder - com.arellomobile.mvp.sample.github.mvp.presenters.RepositoryPresenter@cd385ac 04-07 10:37:26.786 3789-3789/com.arellomobile.mvp.sample.github D/PresenterStore: com.arellomobile.mvp.sample.github.ui.adapters.RepositoriesAdapter$RepositoryHolder$MvpDelegate@ae43047$mRepositoryPresenterBinder - com.arellomobile.mvp.sample.github.mvp.presenters.RepositoryPresenter@7c86074 04-07 10:37:26.786 3789-3789/com.arellomobile.mvp.sample.github D/PresenterStore: com.arellomobile.mvp.sample.github.ui.adapters.RepositoriesAdapter$RepositoryHolder$MvpDelegate@2f4ce03$mRepositoryPresenterBinder - com.arellomobile.mvp.sample.github.mvp.presenters.RepositoryPresenter@252d180 ``` 4. Разлогиниться ``` 04-07 10:38:51.934 3789-3789/com.arellomobile.mvp.sample.github D/PresenterStore: com.arellomobile.mvp.sample.github.ui.adapters.RepositoriesAdapter$RepositoryHolder$MvpDelegate@2b3b937$mRepositoryPresenterBinder - com.arellomobile.mvp.sample.github.mvp.presenters.RepositoryPresenter@7ecea4 04-07 10:38:51.934 3789-3789/com.arellomobile.mvp.sample.github D/PresenterStore: com.arellomobile.mvp.sample.github.ui.activities.SignInActivity$MvpDelegate@1cb25cd$mSignInPresenterBinder - com.arellomobile.mvp.sample.github.mvp.presenters.SignInPresenter@291be82 04-07 10:38:51.934 3789-3789/com.arellomobile.mvp.sample.github D/PresenterStore: com.arellomobile.mvp.sample.github.ui.adapters.RepositoriesAdapter$RepositoryHolder$MvpDelegate@21a982f$mRepositoryPresenterBinder - com.arellomobile.mvp.sample.github.mvp.presenters.RepositoryPresenter@30b4e3c 04-07 10:38:51.934 3789-3789/com.arellomobile.mvp.sample.github D/PresenterStore: com.arellomobile.mvp.sample.github.ui.adapters.RepositoriesAdapter$RepositoryHolder$MvpDelegate@680b1d3$mRepositoryPresenterBinder - com.arellomobile.mvp.sample.github.mvp.presenters.RepositoryPresenter@72c3110 04-07 10:38:51.934 3789-3789/com.arellomobile.mvp.sample.github D/PresenterStore: com.arellomobile.mvp.sample.github.ui.adapters.RepositoriesAdapter$RepositoryHolder$MvpDelegate@e8c525b$mRepositoryPresenterBinder - com.arellomobile.mvp.sample.github.mvp.presenters.RepositoryPresenter@38faf8 ``` Мы видим, что утекли несколько презентеров, созданных вьюхами из адаптера, хотя при уничтожении родительского делегата должны были удалиться все дочерние делегаты.  Это происходит по двум причинам: 1.  Родительский делегат не пробрасывает ключи из старого ```Bundle``` в новый, вместо этого при сохранении состояния просто опрашиваются дочерние делегаты, которых после поворота экрана может быть меньше чем было до этого. Я говорю об этом методе ```MvpDelegate```: ```java public void onSaveInstanceState(Bundle outState) { outState.putAll(mChildKeyTagsBundle); outState.putString(mKeyTag, mDelegateTag);  for (MvpDelegate childDelegate : mChildDelegates) { childDelegate.onSaveInstanceState(outState); } } ``` Мне кажется следует добавить сюда сохранение ключей из предыдущего состояния: ```java public void onSaveInstanceState(Bundle outState) {         outState.putAll(mBundle); outState.putAll(mChildKeyTagsBundle); outState.putString(mKeyTag, mDelegateTag);  for (MvpDelegate childDelegate : mChildDelegates) { childDelegate.onSaveInstanceState(outState); } } ```  2. В ```MvpDelegate#onDestroy()``` не подчищаются презентеры дочерних делегатов: ```java public void onDestroy() { PresentersCounter presentersCounter = MvpFacade.getInstance().getPresentersCounter(); PresenterStore presenterStore = MvpFacade.getInstance().getPresenterStore();  for (MvpPresenter&lt;?&gt; presenter : mPresenters) { boolean isRejected = presentersCounter.rejectPresenter(presenter, mDelegateTag); if (isRejected &amp;&amp; presenter.getPresenterType() != PresenterType.GLOBAL) { presenterStore.remove(presenter.getPresenterType(), presenter.getTag(), presenter.getPresenterClass()); presenter.onDestroy(); } }  for (MvpDelegate&lt;?&gt; childDelegate : mChildDelegates) { childDelegate.onDestroy(); } } ``` Та же проблема. Что если после поворота экрана у нас создалось меньше делегатов, чем было до этого? Тогда презентеры, для которых не создались делегаты останутся висеть в памяти потенциально вечно. В качестве решения предлагаю ключи дочерних делегатов сохранять отдельно и в методе ```onDestroy()``` дополнительно удалять все презентеры, соответствующие ключам из этого списка: ```java public void onDestroy() { PresentersCounter presentersCounter = MvpFacade.getInstance().getPresentersCounter(); PresenterStore presenterStore = MvpFacade.getInstance().getPresenterStore();  for (MvpPresenter&lt;?&gt; presenter : mPresenters) { boolean isRejected = presentersCounter.rejectPresenter(presenter, mDelegateTag); if (isRejected &amp;&amp; presenter.getPresenterType() != PresenterType.GLOBAL) { presenterStore.remove(presenter.getPresenterType(), presenter.getTag(), presenter.getPresenterClass()); presenter.onDestroy(); } }  for (MvpDelegate&lt;?&gt; childDelegate : mChildDelegates) { childDelegate.onDestroy(); }  for (String currentChildKey : mChildKeyTagsBundle.keySet()) { String presenterTag = mChildKeyTagsBundle.getString(currentChildKey); // Remove presenter somehow } } ```</body>
		<created>2017-04-07 11:02:09</created>
		<closed>2017-04-13 13:29:06</closed>
	</bug>
	<bug>
		<id>74</id>
		<title>MvpFragment need to set mIsStateSaved = false in onStart(), not in onResume()</title>
		<body>You need to set ```mIsStateSaved = false``` in ```onStart()```, because it is possible that after state saved fragment will be *started* and then immediately *stopped* and *destroyed*.   **Without** entering **resume** state. And we will **leak the presenter**.  It can be reproduced by adding following in the activity: ```java private int counter = 0; @Override public void onStart() {     Timber.d("onStart()");     if (counter == 1) {         finish();     }     counter++;     super.onStart(); } ``` And then turning off and on the screen by clicking on the power button.   In logs of the fragment you will see the following: ```java D/MainActivity: onStart() D/Presenter: Created presenter D/MainFragment: onStart() D/MainFragment: onResume() D/MainFragment: onPause() D/MainFragment: onSaveInstanceState() D/MainFragment: onStop() // Here screen turned off // Then switched on D/MainActivity: onStart() D/MainFragment: onStart() // Main activity decided to kill itself D/MainFragment: onStop() D/MainFragment: onDestroyView() D/MainFragment: onDestroy() // No logged D/Presenter: Destroyed presenter, because isSavedState still true. ```</body>
		<created>2017-01-14 11:01:35</created>
		<closed>2017-01-16 06:32:44</closed>
	</bug>
	<bug>
		<id>60</id>
		<title>NullPointerException в генерируемом коде после обновления до 1.3.2</title>
		<body>View interface: ```java public interface CloseableView extends MvpView {     @StateStrategyType(SkipStrategy.class)     void close(); } ```  View implementation (Fragment): ```java @Override public void close() {     if (getActivity() != null) getActivity().onBackPressed(); } ```  Presenter: ```java public void apply() {     localBroadcastManager.sendBroadcast(intent);     getViewState().close(); } ```  По нажатию на кнопку во вью вызывается метод `apply` презентера. В `close` текущий фрагмент выкидывается из backstack'a, и на его место встает предыдущий. В итоге во `CloseableView$$State` в методе `close` выкидывается `NullPointerException` т.к. `getCurrentState` теперь возвращает `null`: ```java @Override public  void close() {     CloseCommand closeCommand = new CloseCommand();     mViewCommands.beforeApply(closeCommand);      if (mViews == null || mViews.isEmpty()) {         return;     }      for(CloseableView view : mViews) {         view.close();         getCurrentState(view).add(closeCommand);     }      mViewCommands.afterApply(closeCommand); } ```</body>
		<created>2016-12-06 07:10:15</created>
		<closed>2016-12-07 05:53:51</closed>
	</bug>
	<bug>
		<id>52</id>
		<title>jack and annotationProcessor</title>
		<body>I try use jack, java8 and annotationProcessor. But I get error ``` java.lang.StringIndexOutOfBoundsException: String index out of range: -1         at java.lang.String.substring(String.java:1931)         at com.arellomobile.mvp.compiler.Util.getFullClassName(Util.java:105)         at com.arellomobile.mvp.compiler.Util.getFullClassName(Util.java:97)         at com.arellomobile.mvp.compiler.PresenterInjectorRules.checkEnvironment(PresenterInjectorRules.java:70)         at com.arellomobile.mvp.compiler.PresenterInjectorRules.checkAnnotation(PresenterInjectorRules.java:44)         at com.arellomobile.mvp.compiler.MvpCompiler.checkInjectors(MvpCompiler.java:115)         at com.arellomobile.mvp.compiler.MvpCompiler.throwableProcess(MvpCompiler.java:96)         at com.arellomobile.mvp.compiler.MvpCompiler.process(MvpCompiler.java:84) ```  To reproduce modify build.gradle of sample-github like this  ``` apply plugin: 'com.android.application'  android {     compileOptions {         sourceCompatibility JavaVersion.VERSION_1_8         targetCompatibility JavaVersion.VERSION_1_8     }      compileSdkVersion 25     buildToolsVersion "25.0.0"      defaultConfig {         applicationId "com.arellomobile.mvp.sample.github"         minSdkVersion 14         targetSdkVersion 25         versionCode 1         versionName "1.0"         testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"          jackOptions {             enabled true         }     }      buildTypes {         release {             minifyEnabled false             proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'         }     }      lintOptions {         abortOnError false     } }  def support = '25.0.0' def retrofit = '2.1.0' def dagger = '2.7' def butterKnife = "8.4.0"  dependencies {     testCompile "junit:junit:4.12"     compile "com.android.support:appcompat-v7:$support"     compile "com.android.support:design:$support"      compile "com.j256.ormlite:ormlite-core:4.48"     compile "com.j256.ormlite:ormlite-android:4.48"      compile "com.google.code.gson:gson:2.5"      compile "com.jakewharton:butterknife:$butterKnife"      compile "com.squareup.retrofit2:retrofit:$retrofit"     compile "com.squareup.retrofit2:converter-gson:$retrofit"     compile "com.squareup.retrofit2:adapter-rxjava:$retrofit"     compile "com.squareup.picasso:picasso:2.5.2"     compile "com.squareup:otto:1.3.8"      compile "io.reactivex:rxjava:1.1.0"     compile "io.reactivex:rxandroid:1.1.0"      compile "com.google.dagger:dagger:$dagger"     provided "org.glassfish:javax.annotation:10.0-b28"      annotationProcessor "com.jakewharton:butterknife-compiler:$butterKnife"     annotationProcessor "com.google.dagger:dagger-compiler:$dagger"      testCompile "junit:junit:4.12"     testCompile "org.mockito:mockito-all:1.10.19"     testCompile "org.hamcrest:hamcrest-all:1.3"     testCompile "org.robolectric:robolectric:3.1-rc1"      compile 'com.arello-mobile:moxy:1.2.0'     annotationProcessor 'com.arello-mobile:moxy-compiler:1.2.0' } ```  </body>
		<created>2016-11-15 08:54:11</created>
		<closed>2016-11-15 21:20:49</closed>
	</bug>
	<bug>
		<id>39</id>
		<title>Moxy failed at screen rotation</title>
		<body>Можно по-русски, да? Здрасьте. Как-то при повороте экрана [не очень сохраняется state](https://youtu.be/VKKA1sevdZM) как на эмуляторе (API-24), так и на зверьке (API-17). Все на видео. Причем в ланшафтном режиме кнопка "далее" тоже не переводит к следующему полю. В чем может быть дело? С уважением, ВВК</body>
		<created>2016-11-02 14:03:20</created>
		<closed>2016-11-02 16:32:35</closed>
	</bug>
	<bug>
		<id>27</id>
		<title> java.lang.NoSuchMethodError when call MvpAppCompatFragment.onDestroy()</title>
		<body> java.lang.NoSuchMethodError: No virtual method getActivity()Landroid/app/Activity; in class Lcom/arellomobile/mvp/MvpAppCompatFragment; or its super classes (declaration of 'com.arellomobile.mvp.MvpAppCompatFragment' appears in ...)                                                                                  at com.arellomobile.mvp.MvpAppCompatFragment.onDestroy(MvpAppCompatFragment.java:40)                                                                                  at android.support.v4.app.Fragment.performDestroy(Fragment.java:2322)                                                                                  at android.support.v4.app.FragmentManagerImpl.moveToState(FragmentManager.java:1240)                                                                                  at android.support.v4.app.FragmentManagerImpl.moveToState(FragmentManager.java:1290)                                                                                  at android.support.v4.app.FragmentManagerImpl.moveToState(FragmentManager.java:1272)                                                                                  at android.support.v4.app.FragmentManagerImpl.dispatchDestroy(FragmentManager.java:2186)                                                                                  at android.support.v4.app.FragmentController.dispatchDestroy(FragmentController.java:271)                                                                                  at android.support.v4.app.FragmentActivity.onDestroy(FragmentActivity.java:388)                                                                                  at android.support.v7.app.AppCompatActivity.onDestroy(AppCompatActivity.java:209)                                                                                  at com.arellomobile.mvp.MvpAppCompatActivity.onDestroy(MvpAppCompatActivity.java:26)                                                                                  at android.app.Activity.performDestroy(Activity.java:6169)                                                                                  at android.app.Instrumentation.callActivityOnDestroy(Instrumentation.java:1141)                                                                                  at android.app.ActivityThread.performDestroyActivity(ActivityThread.java:3693)                                                                                  at android.app.ActivityThread.handleDestroyActivity(ActivityThread.java:3724)                                                                                  at android.app.ActivityThread.access$1400(ActivityThread.java:151)                                                                                  at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1357)                                                                                  at android.os.Handler.dispatchMessage(Handler.java:102)                                                                                  at android.os.Looper.loop(Looper.java:135)                                                                                  at android.app.ActivityThread.main(ActivityThread.java:5254)                                                                                  at java.lang.reflect.Method.invoke(Native Method)                                                                                  at java.lang.reflect.Method.invoke(Method.java:372)                                                                                  at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:903)                                                                                  at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:698) </body>
		<created>2016-10-11 13:08:18</created>
		<closed>2016-10-11 18:35:21</closed>
	</bug>
	<bug>
		<id>24</id>
		<title>Nested fragment leak when replace</title>
		<body>I have fragment with view pager with fragments. Each of them contains presenter. When this fragment is replaced with another one, only fragment's presenter that contains view pager is destroyed, but nested fragment's presenters not.  [Demonstration of leak with possible fix](https://github.com/CherryPerry/Moxy-nested-leak) </body>
		<created>2016-10-06 13:48:33</created>
		<closed>2016-10-11 18:34:54</closed>
	</bug>
	<bug>
		<id>22</id>
		<title>Некорректный app-compat fragment</title>
		<body>В обычном фрагменте есть [фикс](https://github.com/Arello-Mobile/Moxy/commit/ab2dc2352de74d4b6c614486896852411a7436ef) на закрытие активности:  ``` java if (isRemoving() || getActivity().isFinishing()) {     getMvpDelegate().onDestroy(); } ```  В саппортовском фрагменте этого фикса нет:  ``` java if (isRemoving()) {     getMvpDelegate().onDestroy(); } ``` </body>
		<created>2016-10-05 05:59:27</created>
		<closed>2016-10-05 17:08:53</closed>
	</bug>
	<bug>
		<id>20</id>
		<title>MvpView with parameter "command"</title>
		<body>Code generation makes wrong code if some method of MvpView contains parameter named "command". Code generation should be fixed. </body>
		<created>2016-09-27 10:41:26</created>
		<closed>2016-09-30 02:26:08</closed>
	</bug>
</bugs>
