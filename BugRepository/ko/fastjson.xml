<?xml version="1.0" encoding="ISO-8859-1"?>

<bugrepository name="fastjson">
	<bug id="1763" opendate="2018-03-13 11:46:11" fixdate="2018-03-15 11:14:14">
		<buginformation>
			<summary>多级泛型的里层无法正常解析</summary>
			<description>class：BaseResult ``` public class BaseResult&lt;T&gt;  ``` class：InteractiveOrderMaterielQueryResult ```java public class InteractiveOrderMaterielQueryResult&lt;T extends InteractiveOrderMaterielModel&gt; extends BasePageQueryResult&lt;T&gt; ``` method： queryProcurementOrderList ```java BaseResult&lt;InteractiveProcurementOrderList&gt; queryProcurementOrderList(InteractiveOrderBatchQueryCloudParam param); ```  调用queryProcurementOrderList的返回结果调用JSON.parseObject() ，里层的InteractiveOrderMaterielModel无法正常解析，测试代码如下：  ```java String s = "{\"result\":{\"modelList\":[{\"sourceId\":\"81900002\",\"categoryNames\":[\"一级类目A\",\"二级类目A1\",\"三级类目a2\"],\"materielCode\":\"wanhuacaigou095\",\"categoryIds\":[10001158,10001159,10001161],\"systemName\":\"framework\",\"unitName\":\"个\",\"materielName\":\"wanhuacaigou095\",\"class\":\"com.alibaba.procurement.api.interactive.model.InteractiveOrderMaterielModel\",\"materielItemId\":\"10172\"},{\"sourceId\":\"81900002\",\"categoryNames\":[\"一级类目A\",\"二级类目A1\",\"三级类目a2\"],\"materielCode\":\"wanhuacaigou096\",\"categoryIds\":[10001158,10001159,10001161],\"systemName\":\"framework\",\"unitName\":\"个\",\"materielName\":\"wanhuacaigou096\",\"class\":\"com.alibaba.procurement.api.interactive.model.InteractiveOrderMaterielModel\",\"materielItemId\":\"10173\"},{\"sourceId\":\"81892012\",\"categoryNames\":[],\"materielCode\":\"80005351\",\"categoryIds\":[],\"systemName\":\"framework\",\"unitName\":\"PC\",\"materielName\":\"法兰 CL150 DN25 SO-RF HG20615(Ib) 20#\",\"class\":\"com.alibaba.procurement.api.interactive.model.InteractiveOrderMaterielModel\",\"materielItemId\":\"10167\"},{\"sourceId\":\"2062014\",\"categoryNames\":[],\"materielCode\":\"80005350\",\"categoryIds\":[],\"systemName\":\"framework\",\"unitName\":\"PC\",\"materielName\":\"法兰CL150DN200SO-RFHG2061520\",\"class\":\"com.alibaba.procurement.api.interactive.model.InteractiveOrderMaterielModel\",\"materielItemId\":\"10022\"},{\"sourceId\":\"2082007\",\"categoryNames\":[],\"materielCode\":\"xpommm114\",\"categoryIds\":[],\"systemName\":\"framework\",\"unitName\":\"1\",\"materielName\":\"xpommm114\",\"class\":\"com.alibaba.procurement.api.interactive.model.InteractiveOrderMaterielModel\",\"materielItemId\":\"10145\"},{\"sourceId\":\"2082007\",\"categoryNames\":[],\"materielCode\":\"xpommm115\",\"categoryIds\":[],\"systemName\":\"framework\",\"unitName\":\"个\",\"materielName\":\"xpommm115\",\"class\":\"com.alibaba.procurement.api.interactive.model.InteractiveOrderMaterielModel\",\"materielItemId\":\"10146\"},{\"sourceId\":\"2082007\",\"categoryNames\":[],\"materielCode\":\"xpommm109\",\"categoryIds\":[],\"systemName\":\"framework\",\"unitName\":\"个\",\"materielName\":\"xpommm109\",\"class\":\"com.alibaba.procurement.api.interactive.model.InteractiveOrderMaterielModel\",\"materielItemId\":\"10147\"}],\"totalCount\":52,\"class\":\"com.alibaba.procurement.api.interactive.result.InteractiveOrderMaterielQueryResult\"},\"class\":\"com.alibaba.procurement.api.base.result.BaseResult\",\"isSuccess\":true}";          Method method = null;         Method[] ms = ProcurementOrderInteractiveServiceForCloud.class.getMethods();         for(Method m : ms){             if(m.getName().equals("queryOrderMateriel")){                 method = m;             }         }         Type type = method.getGenericReturnType();         BaseResult&lt;InteractiveOrderMaterielQueryResult&gt; o = JSON.parseObject(s,  type); ``` ![123](https://user-images.githubusercontent.com/5425784/37339891-21b93d12-26f7-11e8-8c50-d6512c3297c9.png) </description>
		</buginformation>
		<fixedfiles>
			<file>src/test/java/com/alibaba/json/bvt/issue_1700/Issue1763.java</file>
			<file>src/main/java/com/alibaba/fastjson/parser/ListTypeFieldDeserializer.java</file>
		</fixedfiles>
	</bug>
	<bug id="1482" opendate="2017-09-19 02:51:50" fixdate="2017-10-03 18:15:42">
		<buginformation>
			<summary>序列化 "2017-06-28T07:20:05.000+05:30" 报错</summary>
			<description>https://github.com/alibaba/fastjson/blob/0818ecf14649b2893b486441f685ed8eb2ffd510/src/main/java/com/alibaba/fastjson/parser/JSONScanner.java#L583</description>
		</buginformation>
		<fixedfiles>
			<file>src/main/java/com/alibaba/fastjson/parser/JSONScanner.java</file>
			<file>src/test/java/com/alibaba/json/bvt/issue_1400/Issue1482.java</file>
		</fixedfiles>
	</bug>
	<bug id="1420" opendate="2017-08-18 09:37:56" fixdate="2017-08-21 02:53:28">
		<buginformation>
			<summary>更新到1.2.37版本后，原本正常的kotlin类无法被正确解析</summary>
			<description>```kotlin import com.alibaba.fastjson.JSON import org.junit.Assert import org.junit.Test  class A {     var id: Long = 0     var name: String = "" }  class Test {     @Test     fun test() {         val s = "{\"id\":1,\"name\":\"a\"}"         val o = JSON.parseObject(s, A::class.java)          Assert.assertEquals(1, o.id) // 失败         Assert.assertEquals("a", o.name) // 失败     } } ```  1.2.36版本正常，kotlin 1.1.4</description>
		</buginformation>
		<fixedfiles>
			<file>src/main/java/com/alibaba/fastjson/parser/JavaBeanInfo.java</file>
			<file>src/main/java/com/alibaba/fastjson/util/JavaBeanInfo.java</file>
			<file>src/test/java/com/alibaba/json/bvt/kotlin/Issue1420.java</file>
		</fixedfiles>
	</bug>
	<bug id="1120" opendate="2017-04-01 08:49:10" fixdate="2017-04-03 08:05:01">
		<buginformation>
			<summary>如果字段字母大写 @JSONField不起作用 </summary>
			<description>@JSONField(name="REQ_NO") private String ReqNo;  字段字母大写 输出结果为"reqNo"</description>
		</buginformation>
		<fixedfiles>
			<file>src/main/java/com/alibaba/fastjson/parser/ParserConfig.java</file>
			<file>src/test/java/com/alibaba/json/bvt/issue_1100/Issue1120.java</file>
		</fixedfiles>
	</bug>
	<bug id="912" opendate="2016-11-21 06:58:19" fixdate="2016-12-10 07:05:00">
		<buginformation>
			<summary>多层嵌套基本类型数组反序列化时报空指针异常</summary>
			<description>数据结构如下： JsonBean下面有一个List&lt;SCFMethod&gt;,  SCFMethod对象中又有一个List&lt;SCFParameter&gt;对象 SCFParameter中有一个Class&lt;?&gt; clazz clazz为一个基本类型数组，如int[], float[], short[],double[],long[],byte[],char[] 反序列化时报错： java.lang.reflect.InvocationTargetException at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:606) at com.wf.mvc.invoke.ActionInvoker.invoke(ActionInvoker.java:76) at com.wf.mvc.MvcDispatcher.service(MvcDispatcher.java:121) at com.wf.mvc.MvcFilter.doFilter(MvcFilter.java:67) at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1482) at org.jasig.cas.client.util.AssertionThreadLocalFilter.doFilter(AssertionThreadLocalFilter.java:50) at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1482) at org.jasig.cas.client.util.HttpServletRequestWrapperFilter.doFilter(HttpServletRequestWrapperFilter.java:71) at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1482) at com.sso.client.AbstractTicketValidationFilter.doFilter(AbstractTicketValidationFilter.java:258) at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1482) at com.sso.client.AuthenticationFilter.doFilter(AuthenticationFilter.java:161) at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1482) at com.sso.client.SingleSignOutFilter.doFilter(SingleSignOutFilter.java:89) at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1482) at com.sso.client.CharacterEncodingFilter.doFilter(CharacterEncodingFilter.java:37) at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1482) at com.sso.session.servlet.filter.session.CacheSessionFilter.doFilter(CacheSessionFilter.java:94) at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1474) at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:499) at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:137) at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:557) at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:231) at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1086) at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:428) at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:193) at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1020) at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:135) at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:255) at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:154) at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:116) at org.eclipse.jetty.server.Server.handle(Server.java:370) at org.eclipse.jetty.server.AbstractHttpConnection.handleRequest(AbstractHttpConnection.java:489) at org.eclipse.jetty.server.AbstractHttpConnection.content(AbstractHttpConnection.java:960) at org.eclipse.jetty.server.AbstractHttpConnection$RequestHandler.content(AbstractHttpConnection.java:1021) at org.eclipse.jetty.http.HttpParser.parseNext(HttpParser.java:865) at org.eclipse.jetty.http.HttpParser.parseAvailable(HttpParser.java:240) at org.eclipse.jetty.server.AsyncHttpConnection.handle(AsyncHttpConnection.java:82) at org.eclipse.jetty.io.nio.SelectChannelEndPoint.handle(SelectChannelEndPoint.java:668) at org.eclipse.jetty.io.nio.SelectChannelEndPoint$1.run(SelectChannelEndPoint.java:52) at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:608) at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:543) at java.lang.Thread.run(Thread.java:745) Caused by: com.alibaba.fastjson.JSONException at com.alibaba.fastjson.parser.DefaultJSONParser.parseObject(DefaultJSONParser.java:625) at com.alibaba.fastjson.parser.DefaultJSONParser.parseObject(DefaultJSONParser.java:593) at com.alibaba.fastjson.parser.deserializer.JavaBeanDeserializer.deserialzeArrayMapping(JavaBeanDeserializer.java:244) at com.alibaba.fastjson.parser.deserializer.JavaBeanDeserializer.deserialze(JavaBeanDeserializer.java:308) at com.alibaba.fastjson.parser.deserializer.JavaBeanDeserializer.deserialze(JavaBeanDeserializer.java:189) at com.alibaba.fastjson.parser.deserializer.JavaBeanDeserializer.deserialze(JavaBeanDeserializer.java:185) at com.alibaba.fastjson.parser.deserializer.JavaBeanDeserializer.parseArray(JavaBeanDeserializer.java:895) at com.alibaba.fastjson.parser.deserializer.FastjsonASMDeserializer_2_SCFMethod.deserialzeArrayMapping(Unknown Source) at com.alibaba.fastjson.parser.deserializer.FastjsonASMDeserializer_2_SCFMethod.deserialze(Unknown Source) at com.alibaba.fastjson.parser.deserializer.JavaBeanDeserializer.deserialze(JavaBeanDeserializer.java:185) at com.alibaba.fastjson.parser.deserializer.JavaBeanDeserializer.parseArray(JavaBeanDeserializer.java:895) at com.alibaba.fastjson.parser.deserializer.FastjsonASMDeserializer_1_JsonBean.deserialzeArrayMapping(Unknown Source) at com.alibaba.fastjson.parser.deserializer.FastjsonASMDeserializer_1_JsonBean.deserialze(Unknown Source) at com.alibaba.fastjson.parser.deserializer.JavaBeanDeserializer.deserialze(JavaBeanDeserializer.java:185) at com.alibaba.fastjson.parser.DefaultJSONParser.parseObject(DefaultJSONParser.java:621) at com.alibaba.fastjson.JSON.parseObject(JSON.java:339) at com.alibaba.fastjson.JSON.parseObject(JSON.java:243) at com.tfci.interfaceInfo.GetInterfaceImpl.getJsonData(GetInterfaceImpl.java:378) at com.tfci.controllers.CallJarServiceController.getMethods(CallJarServiceController.java:153) ... 46 more Caused by: java.lang.NullPointerException at java.lang.reflect.Array.newArray(Native Method) at java.lang.reflect.Array.newInstance(Array.java:70) at com.alibaba.fastjson.util.TypeUtils.loadClass(TypeUtils.java:994) at com.alibaba.fastjson.serializer.MiscCodec.deserialze(MiscCodec.java:295) at com.alibaba.fastjson.parser.DefaultJSONParser.parseObject(DefaultJSONParser.java:621) ... 64 more  经过分析： 如果是int[]数组，转换成class对象是"[I"，在TypeUtils.java中993行 Class&lt;?&gt; componentType = loadClass(className.substring(1), classLoader); 执行完className.substring(1)后为"I", 从而loadClass("I",classLoader)方法时执行到1028行： clazz = Class.forName(className);时由于找不到“I”类而抛了异常，导致反序列化失败； `在源码992行的if中 增加判断if (className.charAt(0) == '[') {         String cls = className.substring(1);         Class&lt;?&gt; componentType;         if(cls.equals("I")){         componentType = loadClass("int", classLoader);         }else if(cls.equals("F")){         componentType = loadClass("float", classLoader);         }else if(cls.equals("S")){         componentType = loadClass("short", classLoader);         }else if(cls.equals("D")){         componentType = loadClass("double", classLoader);         }else if(cls.equals("J")){         componentType = loadClass("long", classLoader);         }else if(cls.equals("B")){         componentType = loadClass("byte", classLoader);         }else if(cls.equals("C")){         componentType = loadClass("char", classLoader);         }else{         componentType = loadClass(className.substring(1), classLoader);         }             return Array.newInstance(componentType, 0).getClass();         }` 反序列化正常通过。 版本：1.2.21 反序列化的字符串为： {"mList":[{"className":"com.qa.scftemplate.contract.ISCFServiceForDyjAction","methodName":"getEntity","parameterSize":1,"parameters":[{"clazz":"java.util.List","clsList":null,"isGenericity":false,"value":""}],"returnType":"com.qa.scftemplate.entity.Entity","url":"tcp://SCFServiceForDyj/SCFServiceForDyjActionService"},{"className":"com.qa.scftemplate.contract.ISCFServiceForDyjAction","methodName":"getMapEntity","parameterSize":2,"parameters":[{"clazz":"java.util.Map","clsList":null,"isGenericity":false,"value":""},{"clazz":"int","clsList":null,"isGenericity":false,"value":""}],"returnType":"java.lang.String","url":"tcp://SCFServiceForDyj/SCFServiceForDyjActionService"},{"className":"com.qa.scftemplate.contract.ISCFServiceForDyjAction","methodName":"getTextString","parameterSize":2,"parameters":[{"clazz":"java.util.List","clsList":null,"isGenericity":false,"value":""},{"clazz":"java.lang.String","clsList":null,"isGenericity":false,"value":""}],"returnType":"java.lang.String","url":"tcp://SCFServiceForDyj/SCFServiceForDyjActionService"},{"className":"com.qa.scftemplate.contract.ISCFServiceForDyjAction","methodName":"getArrayInt","parameterSize":1,"parameters":[{"clazz":"[I","clsList":null,"isGenericity":false,"value":""}],"returnType":"[I","url":"tcp://SCFServiceForDyj/SCFServiceForDyjActionService"},{"className":"com.qa.scftemplate.contract.ISCFServiceForDyjAction","methodName":"getArrayInt","parameterSize":1,"parameters":[{"clazz":"[Ljava.lang.Integer;","clsList":null,"isGenericity":false,"value":""}],"returnType":"[Ljava.lang.Integer;","url":"tcp://SCFServiceForDyj/SCFServiceForDyjActionService"},{"className":"com.qa.scftemplate.contract.ISCFServiceForDyjAction","methodName":"getSetEntity","parameterSize":2,"parameters":[{"clazz":"java.util.Set","clsList":null,"isGenericity":false,"value":""},{"clazz":"int","clsList":null,"isGenericity":false,"value":""}],"returnType":"java.lang.String","url":"tcp://SCFServiceForDyj/SCFServiceForDyjActionService"},{"className":"com.qa.scftemplate.contract.ISCFServiceForDyjAction","methodName":"returnJsonString","parameterSize":1,"parameters":[{"clazz":"com.qa.scftemplate.entity.Entity","clsList":null,"isGenericity":false,"value":""}],"returnType":"java.lang.String","url":"tcp://SCFServiceForDyj/SCFServiceForDyjActionService"},{"className":"com.qa.scftemplate.contract.ISCFServiceForDyjAction","methodName":"getEntityString","parameterSize":1,"parameters":[{"clazz":"java.util.List","clsList":null,"isGenericity":false,"value":""}],"returnType":"java.lang.String","url":"tcp://SCFServiceForDyj/SCFServiceForDyjActionService"},{"className":"com.qa.scftemplate.contract.ISCFServiceForDyjAction","methodName":"getArrayEntity","parameterSize":2,"parameters":[{"clazz":"[Lcom.qa.scftemplate.entity.Entity;","clsList":null,"isGenericity":false,"value":""},{"clazz":"int","clsList":null,"isGenericity":false,"value":""}],"returnType":"[Lcom.qa.scftemplate.entity.Entity;","url":"tcp://SCFServiceForDyj/SCFServiceForDyjActionService"},{"className":"com.qa.scftemplate.contract.ISCFServiceForDyjAction","methodName":"getArrayString","parameterSize":1,"parameters":[{"clazz":"[Ljava.lang.String;","clsList":null,"isGenericity":false,"value":""}],"returnType":"[Ljava.lang.String;","url":"tcp://SCFServiceForDyj/SCFServiceForDyjActionService"},{"className":"com.qa.scftemplate.contract.ISCFServiceForDyjAction","methodName":"getArrayPrimative","parameterSize":7,"parameters":[{"clazz":"[I","clsList":null,"isGenericity":false,"value":""},{"clazz":"[F","clsList":null,"isGenericity":false,"value":""},{"clazz":"[S","clsList":null,"isGenericity":false,"value":""},{"clazz":"[D","clsList":null,"isGenericity":false,"value":""},{"clazz":"[J","clsList":null,"isGenericity":false,"value":""},{"clazz":"[B","clsList":null,"isGenericity":false,"value":""},{"clazz":"[C","clsList":null,"isGenericity":false,"value":""}],"returnType":"[Ljava.lang.String;","url":"tcp://SCFServiceForDyj/SCFServiceForDyjActionService"}]} 请问是不是fastJson中的bug或是我反序列化时需要加什么参数？</description>
		</buginformation>
		<fixedfiles>
			<file>src/main/java/com/alibaba/fastjson/util/TypeUtils.java</file>
			<file>src/test/java/com/alibaba/json/bvt/bug/Issue912.java</file>
		</fixedfiles>
	</bug>
<bugrepository>
