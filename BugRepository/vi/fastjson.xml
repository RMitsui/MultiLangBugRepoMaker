<?xml version="1.0" encoding="ISO-8859-1"?>

<bugrepository name="fastjson">
	<bug id="1300" opendate="2017-06-30 05:57:04" fixdate="2017-07-15 04:09:36">
		<buginformation>
			<summary>使用@JSONCreator注解，当JSON字段与构造方法参数不匹配时报错</summary>
			<description>```java public class City implements Parcelable {     public final int code;     public final String name;     public final String pinyin;      @JSONCreator     public City(@JSONField(name = "code") int code,                 @JSONField(name = "name") String name,                 @JSONField(name = "pinyin") String pinyin) {         this.code = code;         this.name = name;         this.pinyin = pinyin;     } } ``` ```java      @Test     public void testFullJSON() {         JSONObject data = new JSONObject();         data.put("name", "string");         data.put("code", 1);         data.put("pinyin", "pinyin");         City object = TypeUtils.castToJavaBean(data, City.class);         Assert.assertEquals("string", object.name);         Assert.assertEquals(1, object.code);         Assert.assertEquals("pinyin", object.pinyin);     }      @Test     public void testEmptyJSON() {         City object = TypeUtils.castToJavaBean(new JSONObject(), City.class);         Assert.assertEquals(null, object.name);         Assert.assertEquals(0, object.code);     } ``` 在第二个测试用例中，由于json里面缺少City构造方法中的参数所对应的字段，导致报错： ``` Caused by: com.alibaba.fastjson.JSONException: default constructor not found. class com.parkingwang.api.service.city.objects.City at com.alibaba.fastjson.util.JavaBeanInfo.build(JavaBeanInfo.java:213) at com.alibaba.fastjson.parser.ParserConfig.createJavaBeanDeserializer(ParserConfig.java:522) at com.alibaba.fastjson.parser.ParserConfig.getDeserializer(ParserConfig.java:457) at com.alibaba.fastjson.parser.ParserConfig.getDeserializer(ParserConfig.java:312) at com.alibaba.fastjson.util.TypeUtils.castToJavaBean(TypeUtils.java:911) ... 30 more ``` 1.1.58.android / 1.2.33</description>
		</buginformation>
		<fixedfiles>
			<file>src/main/java/com/alibaba/fastjson/parser/deserializer/JavaBeanDeserializer.java</file>
			<file>src/main/java/com/alibaba/fastjson/parser/JavaBeanDeserializer.java</file>
			<file>src/test/java/com/alibaba/json/bvt/issue_1300/Issue1300.java</file>
		</fixedfiles>
	</bug>
	<bug id="1222" opendate="2017-05-23 16:17:16" fixdate="2017-06-11 17:40:26">
		<buginformation>
			<summary>enum实现JSONAware的时候，没有调到JSONAware里面去</summary>
			<description>定义一个enum，并且实现JSONAware接口。  期望能够使用JSONAware的toJSONString输出，但实际走的是enum的name()。  版本号1.2.27和1.2.32都试过了  在我的工程里可以稳定重现，但目前还未能构造一个精简的case，所有把这段代码摘出来的测试都可以走到JSONAware里面去。  类结构大致如下：  ![image](https://cloud.githubusercontent.com/assets/1854156/26364096/b162cc2c-4015-11e7-8c66-7303b28b78c4.png)  在调用 type的get方法时的堆栈如下：  ![image](https://cloud.githubusercontent.com/assets/1854156/26364214/212cc45e-4016-11e7-86fd-051ec17ff4a4.png)   希望这个堆栈信息能够有所帮助 </description>
		</buginformation>
		<fixedfiles>
			<file>src/main/java/com/alibaba/fastjson/util/FieldInfo.java</file>
			<file>src/test/java/com/alibaba/json/bvt/issue_1200/Issue1222.java</file>
		</fixedfiles>
	</bug>
	<bug id="1161" opendate="2017-04-23 06:54:59" fixdate="2017-05-02 15:21:31">
		<buginformation>
			<summary>JSONCreator 参数不匹配导致反序列化失败</summary>
			<description>见#802。 Android版本一直没有修复。</description>
		</buginformation>
		<fixedfiles>
			<file>src/test/java/com/alibaba/json/bvt/parser/JSONCreatorTest_default_byte.java</file>
			<file>src/main/java/com/alibaba/fastjson/parser/JavaBeanDeserializer.java</file>
			<file>src/test/java/com/alibaba/json/bvt/parser/JSONCreatorTest_default_float.java</file>
			<file>src/test/java/com/alibaba/json/bvt/parser/JSONCreatorTest_default_short.java</file>
			<file>src/test/java/com/alibaba/json/bvt/parser/JSONCreatorTest_default_boolean.java</file>
			<file>src/test/java/com/alibaba/json/bvt/parser/JSONCreatorTest_default_double.java</file>
			<file>src/test/java/com/alibaba/json/bvt/parser/JSONCreatorTest_default_long.java</file>
			<file>src/test/java/com/alibaba/json/bvt/parser/JSONCreatorTest_default_int.java</file>
		</fixedfiles>
	</bug>
	<bug id="1160" opendate="2017-04-23 06:54:54" fixdate="2017-05-02 15:21:08">
		<buginformation>
			<summary>JSONCreator 参数不匹配导致反序列化失败</summary>
			<description>见#802。 Android版本一直没有修复。</description>
		</buginformation>
		<fixedfiles>
			<file>src/test/java/com/alibaba/json/bvt/parser/JSONCreatorTest_default_byte.java</file>
			<file>src/main/java/com/alibaba/fastjson/parser/JavaBeanDeserializer.java</file>
			<file>src/test/java/com/alibaba/json/bvt/parser/JSONCreatorTest_default_float.java</file>
			<file>src/test/java/com/alibaba/json/bvt/parser/JSONCreatorTest_default_short.java</file>
			<file>src/test/java/com/alibaba/json/bvt/parser/JSONCreatorTest_default_boolean.java</file>
			<file>src/test/java/com/alibaba/json/bvt/parser/JSONCreatorTest_default_double.java</file>
			<file>src/test/java/com/alibaba/json/bvt/parser/JSONCreatorTest_default_long.java</file>
			<file>src/test/java/com/alibaba/json/bvt/parser/JSONCreatorTest_default_int.java</file>
		</fixedfiles>
	</bug>
	<bug id="1053" opendate="2017-03-06 05:55:37" fixdate="2017-05-02 15:21:50">
		<buginformation>
			<summary>android 版本 循环引用没有被正确处理</summary>
			<description>我的request 在新的1.1.56.android中tojson没有被正确处理，json string如下：  remote request {"indexPhrase":[["确定","确认","是的","好的","没错","可以","对的","行的"],["别了","停止","取消","不对","不行","不好","不是","算了","不要"]],"jsonObject":{"sel_index_phrase":[{"$ref":"$.indexPhrase"},{"$ref":"$.indexPhrase"}]},"paramType":"TYPE_MULTI_SELECTION"}  在1.2.24正式版中，如下：  remote request {"indexPhrase":[["确定","确认","是的","好的","没错","可以","对的","行的"],["别了","停止","取消","不对","不行","不好","不是","算了","不要"]],"jsonObject":{"sel_index_phrase":[{"$ref":"$.indexPhrase[0]"},{"$ref":"$.indexPhrase[1]"}]},"paramType":"TYPE_MULTI_SELECTION"}  显然android版本的循环引用逻辑出了问题，json 没有被正确的序列化。  相关测试code如下：  ```java public class FastJsonTest {     private static final String TAG = "FastJsonTest";      @Test     public void testParseJson() throws InterruptedException {         List&lt;String&gt; a = Arrays.asList("确定", "确认", "是的", "好的", "没错", "可以", "对的", "行的");         List&lt;String&gt; b = Arrays.asList("别了", "停止", "取消", "不对", "不行", "不好", "不是", "算了", "不要");         List&lt;List&gt; c = new ArrayList&lt;&gt;();         c.add(a);         c.add(b);         Request e = new Request("TYPE_MULTI_SELECTION", c);         String request = JSON.toJSONString(e);         Log.e(TAG, " remote request " + request);         Request request1 = null;         try {             request1 = JSON.parseObject(request, Request.class);         } catch (Exception ex) {             Log.e(TAG, "error  :  ", ex);         }         Log.e(TAG, "request1 = " + JSON.toJSONString(request1));     }      public static class Request implements Serializable {          public String paramType;         public JSONObject jsonObject = new JSONObject();          public Request(){          }          public Request(String paramType, List&lt;? extends List&gt; list) {             this.paramType = paramType;             if (null != list) {                 jsonObject.put("sel_index_phrase", list);             }         }          public List&lt;? extends List&gt; getIndexPhrase() {             Object phrases = jsonObject.get("sel_index_phrase");             if (null != phrases) {                 return (List&lt;? extends List&gt;) phrases;             } else {                 return new ArrayList&lt;&gt;();             }         }     } } ```</description>
		</buginformation>
		<fixedfiles>
			<file>src/test/java/com/alibaba/json/bvt/issue_1000/Issue1053.java</file>
			<file>src/main/java/com/alibaba/fastjson/serializer/ListSerializer.java</file>
		</fixedfiles>
	</bug>
	<bug id="939" opendate="2016-12-07 09:52:33" fixdate="2016-12-20 02:06:43">
		<buginformation>
			<summary>带注释的json反序列化失败</summary>
			<description>```java { "isDebug":true/*调试状态*/ } ``` github星号显示不出来</description>
		</buginformation>
		<fixedfiles>
			<file>src/test/java/com/alibaba/json/bvt/bug/Issue939.java</file>
			<file>src/main/java/com/alibaba/fastjson/parser/JSONLexerBase.java</file>
		</fixedfiles>
	</bug>
<bugrepository>
