<?xml version="1.0" encoding="ISO-8859-1"?>

<bugrepository name="druid">
	<bug id="3080" opendate="2019-02-19 07:42:45" fixdate="2019-02-27 04:12:09">
		<buginformation>
			<summary>CAST函数与负号一起解析错误</summary>
			<description>SELECT CAST(10 AS decimal(10, 2)) 可以解析 SELECT -CAST(10 AS decimal(10, 2)) 报错：ParserException: TODO : pos 12, line 1, column 9, token CAST 版本 1.1.4</description>
		</buginformation>
		<fixedfiles>
			<file>src/main/java/com/alibaba/druid/sql/parser/SQLExprParser.java</file>
			<file>src/test/java/com/alibaba/druid/bvt/sql/mysql/select/MySqlSelectTest_246.java</file>
		</fixedfiles>
	</bug>
	<bug id="3018" opendate="2019-01-10 03:08:07" fixdate="2019-01-31 02:09:00">
		<buginformation>
			<summary>解析含有复杂数据结构的hql时报错</summary>
			<description>麻烦请教， 含有复杂数据类型的sql解析报错，请问是目前不支持么？还是我的代码有问题 hql： select       field['id'].string_type as banner_id            ,field['index'].string_type as banner_index       ,field['pageName'].string_type as pageName      from  bdm_book.midu_xcx_web_main_log where day = '2019-01-09' and eventid = '151' and cmd in ('26002','26003') group by  field['id'].string_type       ,field['index'].string_type       ,field['pageName'].string_type ;   java 代码： HiveStatementParser parser = new HiveStatementParser(hql);  List&lt;SQLStatement&gt; stmtList = parser.parseStatementList();  第二行java代码抛异常： com.alibaba.druid.sql.parser.ParserException: syntax error, error in :'    field['id'].string_type as ban', expect LBRACKET, actual LBRACKET pos 20, line 2, column 12, token LBRACKET   </description>
		</buginformation>
		<fixedfiles>
			<file>src/test/java/com/alibaba/druid/bvt/sql/hive/HiveSelectTest_41.java</file>
			<file>src/main/java/com/alibaba/druid/sql/dialect/hive/parser/HiveExprParser.java</file>
		</fixedfiles>
	</bug>
	<bug id="2548" opendate="2018-05-03 06:27:22" fixdate="2018-05-27 13:29:02">
		<buginformation>
			<summary>使用SQL拦截和解析遇见的一些问题</summary>
			<description>SQL拦截 配置项 : AlterTableAllow 是否允许执行Alter Table语句    Mysql 语句可以过 拦截生效  db2 语法解析未通过TODO pos 58, line 1, column 54, token IDENTIFIER data   SQL语句: alter table audit.SQLHIS alter column  EXPLAINMSG set data type VARCHAR(255)  配置项 : ReplaceAllow 是否允许执行REPLACE语句 语法解析通过  拦截不生效 SQL语句: select replace(name,'li','lili') from a.test;  配置项 :   SelectWhereAlwayTrueCheck  UpdateWhereAlayTrueCheck    拦截WHERE为永真条件         语法解析通过  拦截不生效 SQL语句: select * from A where 1 = 1 ; update audit.USER2 SET  TEL='110' WHERE 100=100;  配置项 :     SelectUnionCheck检测SELECT UNION 语法解析通过  拦截不生效 select name from china_employees union select name from usa_employees;  配置项 :SelectMinusCheck检测SELECT MINUS 语法解析通过  拦截不生效 SQL语句:SELECT Date FROM Store_Information MINUS SELECT Date FROM Internet_Sales;  配置项 :SelectExceptCheck检测SELECT EXCEPT         语法解析通过  拦截不生效 SQL语句:select * from a except select * form b;  配置项 :SelectIntersectCheck检测SELECT INTERSECT         语法解析通过  拦截不生效 SQL语句:SELECT Txn_Date FROM Store_Information INTERSECT SELECT Txn_Date FROM Internet_Sales;  配置项 :ConditionDoubleConstAllow查询条件中是否允许连续两个常量运算表达式         语法解析通过  拦截不生效 SQL语句:SELECT FID = 3 - 1，ID = 3 - 1 from A;  (下列  疑问   具体怎么使用) NoneBaseStatementAllow是否允许非以上基本语句的其他语句，缺省关闭，通过这个选项就能够屏蔽DDL。 CommitAllow是否允许执行commit操作 RollbackAllow是否允许执行roll back操作 ConditionOpBitwseAllow查询条件中是否允许有'&amp;'、'~'、'|'、'^'运算符。  SQL解析 语句 SQL merge intoSQL解析GG MERGE INTO EMPLOYE AS EM   USING MANAGER AS MA  ON EM.EMPLOYEID=MA.MANAGERID  WHEN MATCHED AND EM.SALARY&lt;MA.SALARY THEN UPDATE SET EM.SALARY=MA.SALARY  WHEN MATCHED AND EM.SALARY&gt;MA.SALARY THEN SIGNAL SQLSTATE '70001' SET MESSAGE_TEXT = 'EM.SALARY&gt;MA.SALARY' WHEN NOT MATCHED THEN INSERT VALUES (MA.MANAGERID,MA.NAME,MA.SALARY)  ELSE IGNORE;  语句 SQL limitSQL解析GG select * from Customer LIMIT 10;</description>
		</buginformation>
		<fixedfiles>
			<file>src/main/java/com/alibaba/druid/sql/visitor/SQLASTOutputVisitor.java</file>
			<file>src/test/java/com/alibaba/druid/bvt/sql/db2/DB2AlterTableTest_2.java</file>
			<file>src/main/java/com/alibaba/druid/sql/ast/statement/SQLAlterTableAlterColumn.java</file>
			<file>src/main/java/com/alibaba/druid/sql/ast/SQLStatement.java</file>
			<file>src/main/java/com/alibaba/druid/sql/dialect/db2/parser/DB2StatementParser.java</file>
			<file>src/main/java/com/alibaba/druid/sql/ast/statement/SQLInsertStatement.java</file>
		</fixedfiles>
	</bug>
	<bug id="2424" opendate="2018-03-22 08:13:51" fixdate="2018-04-02 07:15:29">
		<buginformation>
			<summary>DB2驱动名问题</summary>
			<description>com.alibaba.druid.util.JdbcConstants.DB2_DRIVER="COM.ibm.db2.jdbc.app.DB2Driver";  应该改成：com.ibm.db2.jcc.DB2Driver 谢谢！</description>
		</buginformation>
		<fixedfiles>
			<file>src/main/java/com/alibaba/druid/util/JdbcConstants.java</file>
		</fixedfiles>
	</bug>
	<bug id="2340" opendate="2018-02-12 08:11:20" fixdate="2018-03-11 14:45:26">
		<buginformation>
			<summary>1.1.7后，sql解析仍然存在一些问题</summary>
			<description>#2262 中的sql仍然报错：  sql: ``` CREATE DEFINER=`root`@`%` FUNCTION `hello`(s CHAR(20)) RETURNS char(50) CHARSET big5     DETERMINISTIC RETURN CONCAT('Hello, ',s,'!') ```  exception: ``` com.alibaba.druid.sql.parser.ParserException: syntax error, error in :'@`%` FUNCTION `hello`(s CHAR(20)) R', expect PROCEDURE, actual FUNCTION pos 34, line 1, column 26, token FUNCTION at com.alibaba.druid.sql.parser.SQLParser.printError(SQLParser.java:284) at com.alibaba.druid.sql.parser.SQLParser.accept(SQLParser.java:292) at com.alibaba.druid.sql.dialect.mysql.parser.MySqlStatementParser.parseCreateProcedure(MySqlStatementParser.java:4354) at com.alibaba.druid.sql.dialect.mysql.parser.MySqlStatementParser.parseCreate(MySqlStatementParser.java:323) at com.alibaba.druid.sql.parser.SQLStatementParser.parseStatementList(SQLStatementParser.java:161) at com.alibaba.druid.sql.parser.SQLStatementParser.parseStatementList(SQLStatementParser.java:72) at com.alibaba.druid.sql.SQLUtils.parseStatements(SQLUtils.java:464) at name.jacktang.JsqlparserTest.parse(JsqlparserTest.java:31) at name.jacktang.JsqlparserTest.access$000(JsqlparserTest.java:17) at name.jacktang.JsqlparserTest$1.load(JsqlparserTest.java:24) at name.jacktang.JsqlparserTest$1.load(JsqlparserTest.java:21) at com.google.common.cache.LocalCache$LoadingValueReference.loadFuture(LocalCache.java:3522) at com.google.common.cache.LocalCache$Segment.loadSync(LocalCache.java:2315) at com.google.common.cache.LocalCache$Segment.lockedGetOrLoad(LocalCache.java:2278) at com.google.common.cache.LocalCache$Segment.get(LocalCache.java:2193) ... 5 more ```  #2267 中的sql仍然报错:  sql: ``` CREATE TABLE IF NOT EXISTS srcTable (   `id` BIGINT(20) NOT NULL,   `queue_id` BIGINT(20) NOT NULL DEFAULT '-1',   `status` TINYINT(4) NOT NULL DEFAULT '1',   PRIMARY KEY (`id`) ) ENGINE=INNODB AUTO_INCREMENT 10 AVG_ROW_LENGTH 10 DEFAULT CHARACTER SET=utf8 DEFAULT COLLATE = utf8_general_ci CHECKSUM=0 COMPRESSION='NONE' CONNECTION = 'connect_string'  DELAY_KEY_WRITE = 0 ENCRYPTION 'N' INSERT_METHOD FIRST MAX_ROWS 1000 MIN_ROWS=10 PACK_KEYS DEFAULT PASSWORD '12345678' STATS_AUTO_RECALC 0 STATS_PERSISTENT 0  STATS_SAMPLE_PAGES 10 ```  exception: ``` com.alibaba.druid.sql.parser.ParserException: syntax error, error in :'UM=0 COMPRESSION='NONE' CONNECTION ', expect IDENTIFIER, actual IDENTIFIER pos 313, line 8, column 24, token IDENTIFIER COMPRESSION at com.alibaba.druid.sql.parser.SQLParser.printError(SQLParser.java:284) at com.alibaba.druid.sql.parser.SQLStatementParser.parseStatementList(SQLStatementParser.java:423) at com.alibaba.druid.sql.parser.SQLStatementParser.parseStatementList(SQLStatementParser.java:72) at com.alibaba.druid.sql.SQLUtils.parseStatements(SQLUtils.java:464) at name.jacktang.JsqlparserTest.parse(JsqlparserTest.java:31) at name.jacktang.JsqlparserTest.access$000(JsqlparserTest.java:17) at name.jacktang.JsqlparserTest$1.load(JsqlparserTest.java:24) at name.jacktang.JsqlparserTest$1.load(JsqlparserTest.java:21) at com.google.common.cache.LocalCache$LoadingValueReference.loadFuture(LocalCache.java:3522) at com.google.common.cache.LocalCache$Segment.loadSync(LocalCache.java:2315) at com.google.common.cache.LocalCache$Segment.lockedGetOrLoad(LocalCache.java:2278) at com.google.common.cache.LocalCache$Segment.get(LocalCache.java:2193) ... 5 more ```  sql: ``` CREATE TABLE IF NOT EXISTS ttable ( `id` BIGINT(20) NOT NULL AUTO_INCREMENT, `queue_id` varchar(20) NOT NULL DEFAULT '-1', `status` TINYINT(4) NOT NULL DEFAULT '1', `geometry` geometry not null, CONSTRAINT PRIMARY KEY (`id`), CONSTRAINT UNIQUE KEY `uk_queue_id` USING BTREE (`queue_id`) KEY_BLOCK_SIZE=10, FULLTEXT KEY `ft_status` (`queue_id`), spatial index `spatial` (`geometry`), CONSTRAINT FOREIGN KEY `fk_test`(`queue_id`) REFERENCES `test`(`id`) ) ENGINE=INNODB ```  exception: ``` com.alibaba.druid.sql.parser.ParserException: syntax error, error in :'id`) KEY_BLOCK_SIZE=10, FULLTEXT KE', expect RPAREN, actual IDENTIFIER pos 301, line 8, column 62, token IDENTIFIER KEY_BLOCK_SIZE at com.alibaba.druid.sql.parser.SQLParser.printError(SQLParser.java:284) at com.alibaba.druid.sql.parser.SQLParser.accept(SQLParser.java:292) at com.alibaba.druid.sql.dialect.mysql.parser.MySqlCreateTableParser.parseCreateTable(MySqlCreateTableParser.java:217) at com.alibaba.druid.sql.dialect.mysql.parser.MySqlStatementParser.parseCreate(MySqlStatementParser.java:243) at com.alibaba.druid.sql.parser.SQLStatementParser.parseStatementList(SQLStatementParser.java:161) at com.alibaba.druid.sql.parser.SQLStatementParser.parseStatementList(SQLStatementParser.java:72) at com.alibaba.druid.sql.SQLUtils.parseStatements(SQLUtils.java:464) at name.jacktang.JsqlparserTest.parse(JsqlparserTest.java:31) at name.jacktang.JsqlparserTest.access$000(JsqlparserTest.java:17) at name.jacktang.JsqlparserTest$1.load(JsqlparserTest.java:24) at name.jacktang.JsqlparserTest$1.load(JsqlparserTest.java:21) at com.google.common.cache.LocalCache$LoadingValueReference.loadFuture(LocalCache.java:3522) at com.google.common.cache.LocalCache$Segment.loadSync(LocalCache.java:2315) at com.google.common.cache.LocalCache$Segment.lockedGetOrLoad(LocalCache.java:2278) at com.google.common.cache.LocalCache$Segment.get(LocalCache.java:2193) ... 5 more ```</description>
		</buginformation>
		<fixedfiles>
			<file>src/main/java/com/alibaba/druid/sql/parser/SQLStatementParser.java</file>
			<file>src/main/java/com/alibaba/druid/sql/dialect/mysql/parser/MySqlCreateTableParser.java</file>
			<file>src/main/java/com/alibaba/druid/util/FnvHash.java</file>
			<file>src/test/java/com/alibaba/druid/bvt/sql/mysql/createTable/MySqlCreateTableTest100.java</file>
			<file>src/main/java/com/alibaba/druid/sql/dialect/mysql/parser/MySqlExprParser.java</file>
			<file>src/test/java/com/alibaba/druid/bvt/sql/mysql/alter/MySqlAlterTableAlterColumnTest.java</file>
			<file>src/main/java/com/alibaba/druid/sql/dialect/mysql/visitor/MySqlOutputVisitor.java</file>
			<file>src/main/java/com/alibaba/druid/sql/dialect/mysql/ast/MySqlKey.java</file>
			<file>src/test/java/com/alibaba/druid/bvt/sql/mysql/createTable/MySqlCreateTableTest60.java</file>
			<file>src/main/java/com/alibaba/druid/sql/parser/SQLExprParser.java</file>
			<file>src/test/java/com/alibaba/druid/bvt/sql/mysql/createTable/MySqlCreateTableTest99.java</file>
			<file>src/test/java/com/alibaba/druid/bvt/sql/mysql/create_function/MySql_Create_Function_1.java</file>
			<file>src/main/java/com/alibaba/druid/sql/dialect/mysql/parser/MySqlStatementParser.java</file>
		</fixedfiles>
	</bug>
	<bug id="2337" opendate="2018-02-12 01:37:53" fixdate="2018-03-11 14:45:10">
		<buginformation>
			<summary>REVOKE语句输出出错</summary>
			<description>输出为ROVOKE了</description>
		</buginformation>
		<fixedfiles>
			<file>src/main/java/com/alibaba/druid/sql/visitor/SQLASTOutputVisitor.java</file>
			<file>src/test/java/com/alibaba/druid/bvt/sql/mysql/MySqlRevokeTest.java</file>
		</fixedfiles>
	</bug>
	<bug id="2313" opendate="2018-02-02 12:20:48" fixdate="2018-02-04 07:46:10">
		<buginformation>
			<summary>H2 分页错误</summary>
			<description>H2 分页的时候报错，SQL 语句的解析应该有点问题，在解析 H2 SQL 的时候并没有把 SQLSelectQueryBlock 解析为 MySqlSelectQueryBlock。 测试了 1.1.4 - 1.1.6，都有这个问题。  ` PagerUtils.limit("SELECT * FROM test", JdbcUtils.H2, 0, 10); `  报类型转换错误  ``` java.lang.ClassCastException: com.alibaba.druid.sql.ast.statement.SQLSelectQueryBlock cannot be cast to com.alibaba.druid.sql.dialect.mysql.ast.statement.MySqlSelectQueryBlock at com.alibaba.druid.sql.PagerUtils.limitQueryBlock(PagerUtils.java:108) at com.alibaba.druid.sql.PagerUtils.limit(PagerUtils.java:97) at com.alibaba.druid.sql.PagerUtils.limit(PagerUtils.java:76) at com.alibaba.druid.sql.PagerUtils.limit(PagerUtils.java:72) ```</description>
		</buginformation>
		<fixedfiles>
			<file>src/test/java/com/alibaba/druid/bvt/sql/PagerUtilsTest_Limit_h2_0.java</file>
			<file>src/main/java/com/alibaba/druid/sql/PagerUtils.java</file>
		</fixedfiles>
	</bug>
	<bug id="2303" opendate="2018-01-31 08:00:15" fixdate="2018-02-04 05:59:25">
		<buginformation>
			<summary>MYSQL反引号的小问题</summary>
			<description>最新版本druid 1.1.6 一个带SCHEMA名和反引号的简单的查询：select * from \`db1\`.\`travelrecord\` a where a.id=1; 解析的表 : {db1\`.\`travelrecord=Select} 这个反引号没处理好呀，只要 schema名字带上"\`"和带上"\`"的表名同时出现,就会解析如上所示问题</description>
		</buginformation>
		<fixedfiles>
			<file>src/main/java/com/alibaba/druid/sql/SQLUtils.java</file>
			<file>src/test/java/com/alibaba/druid/bvt/sql/mysql/select/MySqlSelectTest_108_alias.java</file>
		</fixedfiles>
	</bug>
	<bug id="2183" opendate="2017-12-12 06:12:39" fixdate="2018-02-04 08:14:00">
		<buginformation>
			<summary>建触发器语句报错</summary>
			<description>错误信息是：【Exception in thread "main" com.alibaba.druid.sql.parser.ParserException: syntax error, error in :'_app`@`%` TRIGGER `xxxxx', expect TRIGGER, actual VARIANT pos 30, line 1, column 27, token VARIANT】 是不是不支持DEFINER子句?</description>
		</buginformation>
		<fixedfiles>
			<file>src/main/java/com/alibaba/druid/sql/parser/SQLStatementParser.java</file>
			<file>src/test/java/com/alibaba/druid/bvt/sql/mysql/create/MySqlCreateTriggerTest5.java</file>
		</fixedfiles>
	</bug>
	<bug id="2151" opendate="2017-12-01 09:30:39" fixdate="2017-12-01 13:08:34">
		<buginformation>
			<summary>SQLExternalRecordFormat未找到</summary>
			<description>为什么源码中没有这个类</description>
		</buginformation>
		<fixedfiles>
			<file>src/main/java/com/alibaba/druid/sql/ast/statement/SQLExternalRecordFormat.java</file>
		</fixedfiles>
	</bug>
	<bug id="2057" opendate="2017-10-20 12:42:26" fixdate="2017-10-27 15:25:13">
		<buginformation>
			<summary>UPDATE 中有两个INNER JOIN 时报错</summary>
			<description>1.1.4版本 UPDATE 中有两个INNER JOIN 时报错，SQL大概如下： UPDATE t1 INNER JOIN t2 ON t1.id = t2.id INNER JOIN t3 cm ON  t3.id2= t1.id2  SET t1.name=..............  错误信息如下： Caused by: java.lang.NullPointerException at com.alibaba.druid.wall.spi.WallVisitorUtils.checkUpdate(WallVisitorUtils.java:849)  看了下代码：   public SQLName getTableName() {        if (tableSource instanceof SQLExprTableSource) {             return ((SQLExprTableSource) tableSource).getName();         }          if (tableSource instanceof SQLJoinTableSource) {             SQLTableSource left = ((SQLJoinTableSource) tableSource).getLeft();             if (left instanceof SQLExprTableSource) {                 return ((SQLExprTableSource) left).getName();             }         }         return null; }  这里的left其实还是SQLJoinTableSource，所以此方法直接return null 导致出现NullPointerException</description>
		</buginformation>
		<fixedfiles>
			<file>src/test/java/com/alibaba/druid/bvt/sql/mysql/update/MySqlUpdateTest_12.java</file>
		</fixedfiles>
	</bug>
	<bug id="1941" opendate="2017-09-01 11:54:17" fixdate="2017-10-03 10:44:24">
		<buginformation>
			<summary>H2数据库创建触发器SQL解析异常</summary>
			<description>2017-09-01 19:39:22 DEBUG [org.springframework.jdbc.core.JdbcTemplate] org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:417)- Executing SQL statement [create trigger employee_trigger after insert,update,delete on employee for each row call "test.redisson.h2cluster.trigger.ClusterTrigger"] 2017-09-01 19:39:22 DEBUG [org.springframework.jdbc.datasource.DataSourceUtils] org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110)- Fetching JDBC Connection from DataSource 2017-09-01 19:39:22 ERROR [com.alibaba.druid.filter.stat.StatFilter] com.alibaba.druid.filter.stat.StatFilter.mergeSql(StatFilter.java:148)- merge sql error, dbType h2, sql : **create trigger employee_trigger after insert,update,delete on employee for each row call "test.redisson.h2cluster.trigger.ClusterTrigger"** com.alibaba.druid.sql.parser.ParserException: syntax error, error in :'fter insert,update,delete on employ',expect ON, actual COMMA pos 45, line 1, column 45, token COMMA at com.alibaba.druid.sql.parser.SQLParser.printError(SQLParser.java:280) at com.alibaba.druid.sql.parser.SQLParser.accept(SQLParser.java:288) at com.alibaba.druid.sql.parser.SQLStatementParser.parseCreateTrigger(SQLStatementParser.java:1992) at com.alibaba.druid.sql.dialect.mysql.parser.MySqlStatementParser.parseCreate(MySqlStatementParser.java:348) at com.alibaba.druid.sql.parser.SQLStatementParser.parseStatementList(SQLStatementParser.java:155) at com.alibaba.druid.sql.parser.SQLStatementParser.parseStatementList(SQLStatementParser.java:78) at com.alibaba.druid.sql.visitor.ParameterizedOutputVisitorUtils.parameterize(ParameterizedOutputVisitorUtils.java:43) at com.alibaba.druid.filter.stat.StatFilter.mergeSql(StatFilter.java:146) at com.alibaba.druid.filter.stat.StatFilter.createSqlStat(StatFilter.java:634) at com.alibaba.druid.filter.stat.StatFilter.internalBeforeStatementExecute(StatFilter.java:402) at com.alibaba.druid.filter.stat.StatFilter.statementExecuteBefore(StatFilter.java:350) at com.alibaba.druid.filter.FilterEventAdapter.statement_execute(FilterEventAdapter.java:185) at com.alibaba.druid.filter.FilterChainImpl.statement_execute(FilterChainImpl.java:2598) at com.alibaba.druid.proxy.jdbc.StatementProxyImpl.execute(StatementProxyImpl.java:153) at com.alibaba.druid.pool.DruidPooledStatement.execute(DruidPooledStatement.java:497) at org.springframework.jdbc.core.JdbcTemplate$1ExecuteStatementCallback.doInStatement(JdbcTemplate.java:421) at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:396) at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:428) at test.redisson.h2cluster.H2Manager.initTable(H2Manager.java:64) at test.redisson.h2cluster.H2Manager.&lt;init&gt;(H2Manager.java:52) at test.redisson.h2cluster.H2Manager.&lt;clinit&gt;(H2Manager.java:35) at test.redisson.h2cluster.H2DBService.&lt;init&gt;(H2DBService.java:32) at test.redisson.h2cluster.H2DBService.&lt;clinit&gt;(H2DBService.java:31) at test.redisson.h2cluster.H2ClusterManager.main(H2ClusterManager.java:33)</description>
		</buginformation>
		<fixedfiles>
			<file>src/test/java/com/alibaba/druid/bvt/sql/h2/H2_CreateTriggerTest_0.java</file>
			<file>src/main/java/com/alibaba/druid/sql/visitor/SQLASTOutputVisitor.java</file>
			<file>src/main/java/com/alibaba/druid/sql/ast/expr/SQLInListExpr.java</file>
			<file>src/test/java/com/alibaba/druid/bvt/sql/h2/H2_MergeTest_0.java</file>
			<file>src/main/java/com/alibaba/druid/sql/ast/expr/SQLAllExpr.java</file>
			<file>src/main/java/com/alibaba/druid/sql/ast/expr/SQLIdentifierExpr.java</file>
			<file>src/main/java/com/alibaba/druid/sql/SQLUtils.java</file>
			<file>src/main/java/com/alibaba/druid/sql/ast/expr/SQLAllColumnExpr.java</file>
			<file>src/main/java/com/alibaba/druid/sql/ast/expr/SQLExistsExpr.java</file>
			<file>src/main/java/com/alibaba/druid/wall/spi/WallVisitorUtils.java</file>
			<file>src/test/java/com/alibaba/druid/bvt/sql/oracle/create/OracleCreateTriggerTest3.java</file>
			<file>src/main/java/com/alibaba/druid/sql/dialect/h2/visitor/H2SchemaStatVisitor.java</file>
			<file>src/main/java/com/alibaba/druid/sql/dialect/mysql/visitor/MySqlSchemaStatVisitor.java</file>
			<file>src/main/java/com/alibaba/druid/sql/ast/SQLKeep.java</file>
			<file>src/main/java/com/alibaba/druid/sql/dialect/oracle/visitor/OracleOutputVisitor.java</file>
			<file>src/main/java/com/alibaba/druid/sql/parser/SQLParserUtils.java</file>
			<file>src/main/java/com/alibaba/druid/sql/ast/SQLParameter.java</file>
			<file>src/main/java/com/alibaba/druid/sql/ast/expr/SQLSomeExpr.java</file>
			<file>src/main/java/com/alibaba/druid/sql/dialect/mysql/visitor/MySqlASTVisitor.java</file>
			<file>src/main/java/com/alibaba/druid/sql/visitor/SQLASTVisitorAdapter.java</file>
			<file>src/main/java/com/alibaba/druid/sql/dialect/mysql/visitor/MySqlASTVisitorAdapter.java</file>
			<file>src/test/java/com/alibaba/druid/bvt/sql/mysql/MySqlASTVisitorAdapterTest.java</file>
			<file>src/test/java/com/alibaba/druid/benckmark/sql/StatementConverter.java</file>
			<file>src/main/java/com/alibaba/druid/sql/dialect/h2/parser/H2SelectParser.java</file>
			<file>src/main/java/com/alibaba/druid/sql/dialect/h2/visitor/H2ASTVisitor.java</file>
			<file>src/main/java/com/alibaba/druid/sql/repository/SchemaResolveVisitorFactory.java</file>
			<file>src/main/java/com/alibaba/druid/sql/dialect/h2/parser/H2ExprParser.java</file>
			<file>src/main/java/com/alibaba/druid/sql/ast/SQLLimit.java</file>
			<file>src/test/java/com/alibaba/druid/bvt/sql/oracle/create/OracleCreateTriggerTest2.java</file>
			<file>src/main/java/com/alibaba/druid/sql/dialect/h2/ast/H2MergeStatement.java</file>
			<file>src/main/java/com/alibaba/druid/sql/ast/expr/SQLNotExpr.java</file>
			<file>src/main/java/com/alibaba/druid/sql/dialect/h2/visitor/H2OutputVisitor.java</file>
			<file>src/main/java/com/alibaba/druid/sql/visitor/SchemaStatVisitor.java</file>
			<file>src/test/java/com/alibaba/druid/bvt/sql/mysql/param/ParseUtil.java</file>
			<file>src/main/java/com/alibaba/druid/sql/ast/statement/SQLCreateTriggerStatement.java</file>
			<file>src/main/java/com/alibaba/druid/sql/dialect/mysql/visitor/MySqlOutputVisitor.java</file>
			<file>src/test/java/com/alibaba/druid/bvt/sql/oracle/create/OracleCreateTriggerTest.java</file>
			<file>src/main/java/com/alibaba/druid/sql/dialect/h2/visitor/H2ASTVisitorAdapter.java</file>
			<file>src/main/java/com/alibaba/druid/sql/visitor/SQLASTVisitor.java</file>
			<file>src/main/java/com/alibaba/druid/sql/ast/expr/SQLBooleanExpr.java</file>
			<file>src/main/java/com/alibaba/druid/sql/ast/SQLOrderBy.java</file>
			<file>src/main/java/com/alibaba/druid/sql/parser/SQLStatementParser.java</file>
			<file>src/test/java/com/alibaba/druid/bvt/sql/oracle/select/OracleSelectTest82_wmsysconcat.java</file>
			<file>src/main/java/com/alibaba/druid/sql/ast/expr/SQLPropertyExpr.java</file>
			<file>src/main/java/com/alibaba/druid/sql/ast/statement/SQLSelectOrderByItem.java</file>
			<file>src/main/java/com/alibaba/druid/sql/dialect/h2/parser/H2Lexer.java</file>
			<file>src/main/java/com/alibaba/druid/sql/ast/expr/SQLNullExpr.java</file>
			<file>src/main/java/com/alibaba/druid/wall/spi/MySqlWallVisitor.java</file>
			<file>src/main/java/com/alibaba/druid/sql/dialect/h2/visitor/H2EvalVisitor.java</file>
			<file>src/main/java/com/alibaba/druid/sql/dialect/h2/parser/H2StatementParser.java</file>
			<file>src/main/java/com/alibaba/druid/sql/dialect/mysql/parser/MySqlStatementParser.java</file>
		</fixedfiles>
	</bug>
	<bug id="1880" opendate="2017-08-04 01:50:19" fixdate="2017-10-03 11:04:19">
		<buginformation>
			<summary>MSSQL 2012的一些语法解析异常</summary>
			<description>SQL监控中，解析OFFSET FETCH语法时失败(类似于  SELECT First Name + ' ' + Last Name FROM Employees ORDER BY First Name OFFSET 10 ROWS FETCH NEXT 5 ROWS ONLY;  这种语句)，是因为现在的版本还没支持到MSSQL 2012吗？</description>
		</buginformation>
		<fixedfiles>
			<file>src/test/java/com/alibaba/druid/bvt/sql/sqlserver/SQLServerSelectTest30.java</file>
		</fixedfiles>
	</bug>
	<bug id="1773" opendate="2017-06-08 07:33:17" fixdate="2017-06-25 13:27:13">
		<buginformation>
			<summary>数据库连接回滚数统计有误?</summary>
			<description>StatFilter.java中public void connection_rollback(FilterChain chain, ConnectionProxy connection) throws SQLException重复调用两次dataSourceStat.getConnectionStat().incrementConnectionRollbackCount();？</description>
		</buginformation>
		<fixedfiles>
			<file>src/main/java/com/alibaba/druid/filter/stat/StatFilter.java</file>
		</fixedfiles>
	</bug>
	<bug id="1498" opendate="2016-11-21 02:14:07" fixdate="2016-11-26 08:15:14">
		<buginformation>
			<summary>调用Informix数据库存储过程, 当存储过程抛出异常后, 再次调用此存储过程一直报错</summary>
			<description>最近项目中后台使用Informix数据库, 某次测试发现, 当存储过程抛出异常后, 再次调用此存储过程一直报错.  此存储过程参数中有一个String类型参数, 在过程内, 会将此参数转为Int类型.  在反向测试的时候, 故意输入了一些字母, 强制转换int后, 存储过程会抛出异常.   ``` java.sql.SQLException: A character to numeric conversion process failed ```  此时在正向测试, 输入参数正确的情况下, 继续抛出异常: ``` java.sql.SQLException: Invalid cursor received by sqlexec. ``` 此时不论怎么调用此存储过程都会报错. 但调用其他存储过程不会报错.   开始以为是自己代码错误, 排查后不是, 直接使用JDBC连接调用, 一切正常, 使用DBCP数据源测试, 也正常. 不知道到问题出在duird的哪里.  debug: 报错点一直在: DruidPooledPreparedStatement类的227行: ResultSet rs = stmt.executeQuery();  框架使用的是Spirng4.3.2版本  dao层调用大致代码如下: ```java     // 开始是用JDBCTemplate对象, 排查错误的时候, 直接使用dataSource了     @Autowired     @Qualifier("dataSource")     private DataSource dataSource;       /**      * 调用存储过程 获取存储过程返回值,      *      * @param name   存储过程名称      * @param params 存储过程参数      * @param &lt;T&gt;    参数类型泛型      *      * @return 存储过程返回值: 返回值为Map集合, key为行号, 从数字1开始, value是列的Map集合, 其中key为列号, 从数字1开始. value为列对应的值,      * 这里统一封装为String类型.      */     @Override     public &lt;T&gt; Optional&lt;Map&lt;Integer, Map&lt;Integer, String&gt;&gt;&gt; procedure(String name, Collection&lt;T&gt; params) {          if (name == null) return Optional.empty();         if (params == null) return Optional.empty();         final String sql = getSql(name, params.size());         logger.debug(() -&gt; "informix procedure sql : " + sql);          try (Connection conn = this.dataSource.getConnection();              CallableStatement cs = conn.prepareCall(sql)         ) {             Object[] paramsArray = params.toArray();             IntStream.range(0, params.size()).forEach(index -&gt; {                 logger.debug(() -&gt; "Informix procedure sql param: " + (index + 1) + " = " + paramsArray[index]);                 try {                     cs.setObject(index + 1, paramsArray[index]);                 } catch (SQLException e) {                     logger.error(LogUtil.expInfoToString(e));                     throw new RuntimeException(e);                 }             });             // debug时发现此处在调用: DruidPooledPreparedStatement类217行executeQuery方法, 然后一直在此方法的 ResultSet rs = stmt.executeQuery(); 会一直报错.             try (ResultSet rs = cs.executeQuery()) {                 ImmutableMap.Builder&lt;Integer, Map&lt;Integer, String&gt;&gt; builder = ImmutableMap.builder();                 while (rs.next()) {                     ImmutableMap.Builder&lt;Integer, String&gt; columns = ImmutableMap.builder();                     IntStream.range(1, rs.getMetaData().getColumnCount() + 1).forEach(index -&gt; {                         try {                             columns.put(index, Strings.nullToEmpty(rs.getString(index)));                         } catch (SQLException e) {                             logger.error(LogUtil.expInfoToString(e));                             throw new RuntimeException(e);                         }                     });                      builder.put(rs.getRow(), columns.build());                 }                 return Optional.of(builder.build());             } catch (SQLException sqlExp) {                 logger.error(LogUtil.expInfoToString(sqlExp));                 throw new RuntimeException(sqlExp);             }         } catch (SQLException e) {             logger.error(LogUtil.expInfoToString(e));             throw new RuntimeException(e);         }     } ```  </description>
		</buginformation>
		<fixedfiles>
			<file>src/main/java/com/alibaba/druid/pool/PreparedStatementPool.java</file>
			<file>src/main/java/com/alibaba/druid/pool/DruidPooledConnection.java</file>
		</fixedfiles>
	</bug>
	<bug id="1486" opendate="2016-11-17 03:54:06" fixdate="2016-11-26 08:15:36">
		<buginformation>
			<summary>调用存储过程后LogFilter出现空指针异常，问题原因分析并且找到</summary>
			<description>存储过程如下： ``` {#{FLAG,mode=OUT,jdbcType=DECIMAL} = call pkg_ly.f_ly                     (#{P_LYDD,mode=IN,jdbcType=CLOB},                     #{P_KHDH,mode=OUT,jdbcType=VARCHAR},                     #{P_ERROR,mode=OUT,jdbcType=VARCHAR})} ``` 出现问题的代码如下： LogFilter类的下面这段代码有问题，请看加粗标记的地方   ``` private void logExecutableSql(StatementProxy statement, String sql) {         if(this.isStatementExecutableSqlLogEnable()) {             int parametersSize = statement.getParametersSize();             if(parametersSize == 0) {                 this.statementLog("{conn-" + statement.getConnectionProxy().getId() + ", " + this.stmtId(statement) + "} executed. \n" + sql);             } else {                 ArrayList parameters = new ArrayList(parametersSize);                 for(int dbType = 0; dbType &lt; parametersSize; ++dbType) {                     JdbcParameter formattedSql = statement.getParameter(dbType);                     **//下面这行报错，formattedSql空指针异常**                     parameters.add(formattedSql.getValue());                 }                 String var7 = statement.getConnectionProxy().getDirectDataSource().getDbType();                 String var8 = SQLUtils.format(sql, var7, parameters);                 this.statementLog("{conn-" + statement.getConnectionProxy().getId() + ", " + this.stmtId(statement) + "} executed. \n" + var8);             }         }     }  ``` 分析： 实际上入参只有1个，但是parametersSize等于2,原因如下： PreparedStatementProxyImpl这个类的setParameter这个方法 ```  void setParameter(int jdbcIndex, JdbcParameter parameter) {         int index = jdbcIndex - 1;         if(jdbcIndex &gt; this.parametersSize) {             this.parametersSize = jdbcIndex;         }          if(this.parametersSize &gt;= this.parameters.length) {             this.parameters = (JdbcParameter[])Arrays.copyOf(this.parameters, this.parametersSize + 16);         }          this.parameters[index] = parameter;         if(this.paramMap != null) {             this.paramMap = null;         }      } ``` 由于入参是在第二个位置，所以jdbcIndex的值为2，最后parameterSize的值就为2，正常情况如果不是存储过程那么jdbcIndex是没有问题的。目前我在重写了logfilter类，解决，但是真正要解决的是在调用这个类的时候PreparedStatementProxyImpl要考虑存储过程的情况</description>
		</buginformation>
		<fixedfiles>
			<file>src/main/java/com/alibaba/druid/filter/logging/LogFilter.java</file>
		</fixedfiles>
	</bug>
	<bug id="1484" opendate="2016-11-16 06:18:52" fixdate="2016-11-26 08:15:23">
		<buginformation>
			<summary>对于含有in的sql文本，解析的参数和模板有问题，匹配不上</summary>
			<description></description>
		</buginformation>
		<fixedfiles>
			<file>src/main/java/com/alibaba/druid/sql/visitor/SQLASTOutputVisitor.java</file>
			<file>src/main/java/com/alibaba/druid/sql/visitor/ParameterizedOutputVisitorUtils.java</file>
			<file>src/main/java/com/alibaba/druid/sql/visitor/ExportParameterVisitor.java</file>
			<file>src/main/java/com/alibaba/druid/sql/dialect/mysql/visitor/MySqlOutputVisitor.java</file>
			<file>src/main/java/com/alibaba/druid/sql/dialect/oracle/visitor/OracleParameterizedOutputVisitor.java</file>
			<file>src/test/java/com/alibaba/druid/bvt/sql/ExportParameterInTest.java</file>
		</fixedfiles>
	</bug>
	<bug id="1359" opendate="2016-08-08 02:35:24" fixdate="2016-08-10 08:26:03">
		<buginformation>
			<summary>注释解析错误</summary>
			<description>Version：  1.0.20 SQL： truncate table city_list-- test  无法将-- test 正确解析为注释，一定要在“--”前增加一个空格才可以正确解析为注释。 </description>
		</buginformation>
		<fixedfiles>
			<file>src/test/java/com/alibaba/druid/bvt/sql/mysql/MySqlTruncateTest_1.java</file>
			<file>src/main/java/com/alibaba/druid/sql/dialect/mysql/parser/MySqlLexer.java</file>
		</fixedfiles>
	</bug>
<bugrepository>
