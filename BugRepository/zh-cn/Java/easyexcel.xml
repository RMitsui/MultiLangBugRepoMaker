<?xml version="1.0" encoding="ISO-8859-1"?>

<bugrepository name="easyexcel">
	<bug id="1324" opendate="2020-05-19 08:32:15" fixdate="2020-06-09 14:46:40">
		<buginformation>
			<summary>xls公式的值获取在同一行前序所有单元格无其他内容时无法获取</summary>
			<description> xls公式的值获取在同一行前序所有单元格无其他内容时无法获取  xls数据  ![image](https://user-images.githubusercontent.com/7499201/82303662-d64eaa80-99ed-11ea-831e-c4499b81052f.png) 这种情况下无法获取红框标志的公式的值  {0=null, 1=null, 2=null, 3=null, 4=null, 5=3} {0=null, 1=null, 2=null, 3=2} {0=null, 1=21, 2=1, 3=null, 4=3} {0=null, 1=null, 2=null, 3=null, 4=null, 5=4} {0=null, 1=12, 2=2} {0=null, 1=12}  如果前序增加任何一个值 ![image](https://user-images.githubusercontent.com/7499201/82303772-fda57780-99ed-11ea-8c02-8e6ebd2efeb0.png) 此时读取正常  {0=null, 1=12, 2=1} {0=null, 1=null, 2=null, 3=null, 4=null, 5=3} {0=null, 1=null, 2=null, 3=2} {0=null, 1=21, 2=1, 3=null, 4=3} {0=null, 1=null, 2=null, 3=null, 4=null, 5=4} {0=null, 1=12, 2=2} {0=null, 1=12} {0=str, 1=57, 2=4, 3=2, 4=3, 5=7}  </description>
		</buginformation>
		<fixedfiles>
			<file>src/test/java/com/alibaba/easyexcel/test/temp/Lock2Test.java</file>
			<file>src/main/java/com/alibaba/excel/analysis/v03/handlers/FormulaRecordHandler.java</file>
		</fixedfiles>
	</bug>
	<bug id="1274" opendate="2020-04-27 08:13:43" fixdate="2020-04-27 11:24:18">
		<buginformation>
			<summary>当数据列表里面有值为空的时候使用会触发空指针异常</summary>
			<description>**触发场景描述** 当数据列表里面有值为空的时候使用会触发空指针异常 版本2.2.2  **触发Bug的代码** 将[com.alibaba.easyexcel.test.demo.fill.FillTest#data中的`// fillData.setName("张三");`](https://github.com/alibaba/easyexcel/blob/master/src/test/java/com/alibaba/easyexcel/test/demo/fill/FillTest.java#220)注释掉 单元测试[com.alibaba.easyexcel.test.demo.fill.FillTest#compositeFill](https://github.com/alibaba/easyexcel/blob/master/src/test/java/com/alibaba/easyexcel/test/demo/fill/FillTest.java#189)会触发bug,下面是我使用时触发的代码  ``` BiConsumer&lt;ExcelWriter, WriteSheet&gt; doFill = (writer, sheet) -&gt; {             FillConfig fillConfig = FillConfig.builder().forceNewRow(Boolean.TRUE).build();             writer.fill(new FillWrapper("a", register.getUnRegisterList()), sheet);             writer.finish();         }; ```  **提示的异常或者没有达到的效果** ``` java.lang.NullPointerException at com.alibaba.excel.converters.ConverterKeyBuild.buildKey(ConverterKeyBuild.java:29) at com.alibaba.excel.write.executor.AbstractExcelWriteExecutor.doConvert(AbstractExcelWriteExecutor.java:103) at com.alibaba.excel.write.executor.AbstractExcelWriteExecutor.convert(AbstractExcelWriteExecutor.java:93) at com.alibaba.excel.write.executor.AbstractExcelWriteExecutor.converterAndSet(AbstractExcelWriteExecutor.java:41) at com.alibaba.excel.write.executor.ExcelWriteFillExecutor.doFill(ExcelWriteFillExecutor.java:202) at com.alibaba.excel.write.executor.ExcelWriteFillExecutor.fill(ExcelWriteFillExecutor.java:118) at com.alibaba.excel.write.ExcelBuilderImpl.fill(ExcelBuilderImpl.java:78) at com.alibaba.excel.ExcelWriter.fill(ExcelWriter.java:185) at com.alibaba.easyexcel.test.demo.fill.FillTest.compositeFill(FillTest.java:200) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:497) at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) at org.junit.runners.ParentRunner.run(ParentRunner.java:363) at org.junit.runner.JUnitCore.run(JUnitCore.java:137) at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:33) at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:230) at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:58) ``` 将com.alibaba.excel.write.executor.AbstractExcelWriteExecutor#doConvert的 ``` if (value == null &amp;&amp; !(converter instanceof NullableObjectConverter)) {             return new CellData(CellDataTypeEnum.EMPTY); ```         }提到最前放面做判断不会触发错误 ``` private CellData doConvert(WriteHolder currentWriteHolder, Class clazz, Cell cell, Object value,         ExcelContentProperty excelContentProperty) {         Converter converter = null;         if (excelContentProperty != null) {             converter = excelContentProperty.getConverter();         }         if (value == null &amp;&amp; !(converter instanceof NullableObjectConverter)) {             return new CellData(CellDataTypeEnum.EMPTY);         }         if (converter == null) {             converter = currentWriteHolder.converterMap().get(ConverterKeyBuild.buildKey(clazz));         }         if (converter == null) {             throw new ExcelDataConvertException(cell.getRow().getRowNum(), cell.getColumnIndex(),                 new CellData(CellDataTypeEnum.EMPTY), excelContentProperty,                 "Can not find 'Converter' support class " + clazz.getSimpleName() + ".");         }         CellData cellData;         try {             cellData =                 converter.convertToExcelData(value, excelContentProperty, currentWriteHolder.globalConfiguration());         } catch (Exception e) {             throw new ExcelDataConvertException(cell.getRow().getRowNum(), cell.getColumnIndex(),                 new CellData(CellDataTypeEnum.EMPTY), excelContentProperty,                 "Convert data:" + value + " error,at row:" + cell.getRow().getRowNum(), e);         }         if (cellData == null || cellData.getType() == null) {             throw new ExcelDataConvertException(cell.getRow().getRowNum(), cell.getColumnIndex(),                 new CellData(CellDataTypeEnum.EMPTY), excelContentProperty,                 "Convert data:" + value + " return null,at row:" + cell.getRow().getRowNum());         }         return cellData;     } ``` </description>
		</buginformation>
		<fixedfiles>
			<file>src/test/java/com/alibaba/easyexcel/test/core/fill/FillDataTest.java</file>
			<file>src/main/java/com/alibaba/excel/write/executor/AbstractExcelWriteExecutor.java</file>
		</fixedfiles>
	</bug>
<bugrepository>
